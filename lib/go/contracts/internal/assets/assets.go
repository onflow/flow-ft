// Code generated by go-bindata. DO NOT EDIT.
// sources:
// ../../../contracts/ExampleToken-v2.cdc (9.087kB)
// ../../../contracts/ExampleToken.cdc (7.845kB)
// ../../../contracts/FungibleToken-v2-ContractInterface.cdc (454B)
// ../../../contracts/FungibleToken-v2.cdc (7.342kB)
// ../../../contracts/FungibleToken.cdc (7.27kB)
// ../../../contracts/utilityContracts/PrivateReceiverForwarder.cdc (2.601kB)
// ../../../contracts/utilityContracts/TokenForwarding.cdc (2.353kB)

package assets

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	clErr := gz.Close()
	if clErr != nil {
		return nil, clErr
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _exampletokenV2Cdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x5a\xcd\x6e\x1b\x39\x12\xbe\xe7\x29\x2a\x3e\xec\x48\x18\x5b\xce\x2e\x16\x7b\x30\xec\x64\x9c\x4c\xb2\xc8\x61\x07\x41\x92\xcd\x1c\x82\x00\xa1\xba\x4b\x12\x37\x2d\xb2\x41\xb2\x25\x6b\x0c\xbf\xfb\xa2\x8a\x64\x37\xd9\x3f\x8a\xe2\xc1\xe4\x32\x56\x37\xab\x58\xac\x9f\x8f\x5f\x55\x8f\xdc\xd6\xda\x38\x78\xd3\xa8\xb5\x5c\x56\xf8\x51\x7f\x43\x05\x2b\xa3\xb7\x70\xb6\xb8\xcc\x9e\x5e\xec\xfe\xb1\x28\xca\xe2\xec\xc9\x98\xc8\x5b\xe5\xd0\xac\x44\x81\x93\xb2\x17\xaf\xb4\x72\x46\x14\xae\x5d\xea\xb5\x3d\xa9\x9b\x25\x14\xe1\x1d\xbc\xbe\x13\xdb\x3a\x08\x5d\x4d\x6d\x71\xff\xe4\x09\x00\xc0\xe5\xe5\x25\x7c\xd4\x4e\x54\x60\x9b\xba\xae\x0e\xa0\x57\x99\xbc\x05\xa9\x00\xef\xa4\x75\xa8\x0a\x64\x11\xda\x6b\x27\x0c\x38\x12\xfb\xc0\x52\x57\x70\xff\xf1\x50\xe3\x15\xfc\xf7\x8d\xbc\xfb\xd7\x3f\x1f\x3a\xdd\xb7\xe5\x56\x2a\x78\x27\xdc\xa6\x95\xad\xd0\xf9\xc7\x1f\x9c\x36\x62\x8d\xf4\xf2\x0a\x92\x1f\x9d\xf4\xeb\x4f\xaf\x7f\xfb\xf8\xa1\xfb\xfd\x3b\xc2\x5e\x37\x55\x09\x95\xfc\x86\xe0\x34\x2c\x11\xc4\xb2\xe2\x3f\x4b\x5c\x49\x85\x80\x3b\x54\x8e\xad\x76\x1b\x04\x83\x56\x37\xa6\xc0\xf4\xb0\x74\xaa\xdf\xa5\xdb\x94\x46\xec\x55\x7c\xde\xbd\xdf\x04\x1d\xe0\x36\xc2\x81\xb4\x80\x5b\xe9\x1c\x96\xb0\xdf\xa0\x02\xe7\x9d\x22\x0c\xc2\x3e\xea\xf0\xe1\x12\xf0\x49\x34\x95\x6b\x8f\xe9\x95\xf4\xb6\x9b\x89\xad\x6e\x94\x8b\x8e\x3a\x67\xd1\x2b\xb8\x2d\x4b\x83\xd6\xbe\x38\x07\xc7\x6e\x24\x67\xce\xfb\x36\xff\x8a\xb5\xb6\xd2\x61\xf9\x27\x6c\x2e\xa3\x0e\xf2\xd8\x31\x8b\xdb\xcd\x06\x16\x3b\x7d\xa2\xbd\xff\x91\xea\x11\xc6\x2a\xdc\xa7\x06\x6f\x3b\x25\x7d\x13\xbd\xfe\xa1\x7d\xd3\x16\xbd\x6c\x8c\xfa\x93\xee\xb3\xce\xe8\xc3\x84\x41\x5e\xfd\x69\x06\xb1\xf1\xe6\x95\x41\xf1\x08\x1f\x09\xf6\x12\xbb\xc6\xb4\x29\x4e\xab\x8a\x44\x5f\x67\x5d\xb6\xd7\x4c\x54\x95\xde\x63\x79\x7b\x8a\x95\x6f\x1a\x55\x38\xa9\xc9\x07\x60\xd0\x35\xc6\x57\x15\xad\xb5\xde\x34\xfa\xd9\x02\x8f\x24\xd8\xd8\x52\xfd\xb5\x16\xac\x1a\x05\x6b\x74\x9c\x68\xa4\xdc\xce\xe6\x2d\x58\x64\xc8\xb4\xe0\x25\x6f\xd5\x4a\x3f\xc0\x3d\x8b\xd3\x3f\xc2\x0a\xda\xed\x57\xc9\x76\x08\x73\xf8\xbe\xf4\x0d\xdc\x07\x00\x8a\x1a\x76\xf4\x12\xae\x2f\x82\x7f\x7c\xda\xcf\x96\xa2\x12\xaa\xc0\x2b\x78\xb6\x78\x36\xef\x04\xf2\xed\x3e\xb3\xec\x62\x8d\x6c\xfd\x6c\xfe\x05\x6e\xa0\x7d\xd4\x6e\x3a\x4b\xe4\x43\x8e\xf8\x55\xed\xd3\xf6\x8f\xe8\xc6\x6c\x17\x7e\x9b\xa0\x66\x57\x97\x69\x56\xbc\x16\xc5\x06\x1a\x8b\x06\xac\xd3\x06\x2d\x08\x05\x52\x59\x47\xa7\x20\xdc\xd6\xaa\x3a\x70\x40\x58\x3c\x40\xa0\xf4\xab\xc5\x1a\xb3\xec\x5a\x85\xc8\xb6\x48\xe9\x65\x84\x2a\x61\xad\x77\x48\x89\x0c\x4b\xaf\xad\x36\xc8\xcf\x6b\x6d\x1d\xc5\xba\x94\x2c\xd8\xaa\x93\xaa\x77\xf3\xf9\xaa\xd9\xe0\x81\x6b\xa6\x10\x55\x85\xe5\x22\xdb\xbd\xd8\x60\xf1\xcd\xc2\x46\xd4\x35\xa5\xb3\x03\xd3\x28\x27\xb7\xc8\xa2\xb8\x43\x03\xa2\xb5\x90\xf3\x3a\xd7\xd1\xea\x7a\x1f\x72\x9f\x56\x28\x7f\xfe\x25\xc6\x2a\x88\x27\xa3\xf4\xc4\x3b\x47\x1e\xca\xb2\x35\xe6\xef\xa1\x55\xe7\x4b\x9c\xae\x11\x12\x3e\x07\xab\xe9\xbd\xe1\xd2\x52\x1a\xf6\xe2\x00\x2b\x4d\xb6\x6d\x45\x25\x0b\xa9\x1b\xeb\xc3\xe1\x74\x96\x59\x9d\x6b\x74\x13\xb6\x95\x0a\x84\x34\x0b\xb8\x05\x5b\x63\x21\x45\x15\x8a\xb2\xab\x5e\x85\x58\xda\x70\xa5\x45\x1b\x9c\xe6\x22\x6f\xd5\x75\xd8\x98\xbb\x82\x0a\xad\x55\xc4\x26\x8c\x96\xc7\x79\xef\xe1\x3b\xa3\x77\xb2\x44\xd3\x7f\xfe\xd1\x08\x65\x57\x68\xe8\x66\xed\xbf\x7b\x8f\x05\xca\xdd\x50\xe6\xa5\x2f\xa6\x48\x2b\xa2\xc5\xe1\x56\xe7\xfc\x79\xd7\x2c\x2b\x59\x30\x17\xb0\xed\xa2\x48\x08\xd8\xc0\x49\x42\xd0\x5f\x1d\xad\xf0\x2a\xfd\xfa\xee\xef\xc1\xf2\x60\xdc\xc4\xea\xcc\x60\xca\x4e\x26\x36\x10\xe0\x21\xc4\xcf\xf6\xea\x39\x92\xa0\x16\x44\x3c\x8e\xa6\xca\x40\x2a\xe9\xa4\xa8\xe4\x1f\xc8\x89\x17\x15\x52\xba\xc7\x60\x71\xda\x30\xc0\xca\x2d\xb6\xb2\x24\x38\xeb\x69\x9e\x27\xa8\x48\xff\x2c\x56\xab\x45\x54\x79\x13\x95\x0f\x97\xf4\x1d\x0b\x37\x70\x19\x00\xe1\x12\x13\xa2\xf7\x29\x3b\x5e\x2b\x3e\xf4\x34\x29\xa8\xf9\x57\x26\x1f\x17\x0e\x55\x0c\xbc\x3f\xa1\xe1\x65\xef\x08\x0f\x43\xf0\xf4\x35\xcf\x00\x2a\xd5\x4a\x9b\xad\x77\x9e\x58\x52\xa1\x91\x8f\x39\x48\x3f\x59\x86\x57\x0f\x5a\x83\x6c\x4b\x6f\x24\x8f\xdd\x93\x77\x49\xcf\xe5\x01\xba\x27\x16\xcf\xfc\x0d\xca\x47\x6e\xaf\x8b\xf3\x91\xc4\x1e\x0d\xcb\xf9\x68\x4e\x4f\x84\xe0\x7c\x2c\xa3\xc7\x7d\x3d\x4f\xdc\x99\xb9\xf1\xdf\xe8\xb2\xac\x0c\xe8\x38\xcc\xf2\xe0\xaf\xa0\x99\xbc\xe5\x13\x72\xdc\x39\x69\x5a\x4e\x6d\x1d\x89\x73\xfa\x30\x5b\xd0\xd1\x0e\x86\x68\xf1\xcd\xdf\x75\x9e\x58\x81\xf0\x3f\xcc\xba\x21\xaa\x91\x09\x52\xc4\xa3\xf6\x40\x50\x82\x10\x53\xf4\xf6\x9e\x5b\x4c\x6e\xfd\xd6\x05\x28\xb7\x81\x65\x39\xa4\x4e\x4d\x98\x43\xb8\x21\x23\x21\x6b\xac\x07\xe8\x8d\xae\xca\x4c\x03\x13\x24\x4f\x19\xbd\x01\x06\x61\x89\x52\xad\xc1\x05\x5c\x35\x58\x2e\x68\x23\xef\x32\xcb\x12\x0a\xf7\xd5\x21\xd3\x13\x6f\xb1\xb0\xad\xce\xee\x32\xd6\xec\x6f\x45\xba\xa5\xa4\xe3\x0b\x70\x99\x10\xfc\x4c\x17\x56\x16\xf7\x74\x93\x8d\x1f\x3c\x86\x39\xba\xae\x47\x61\xe7\x57\xf0\x4b\xda\x13\xfa\xe4\xbd\x1f\xa9\x83\x87\xe3\x20\x95\xfd\xbc\x08\xa1\xc9\x04\x88\xe6\x4e\xf6\x4c\xfe\xbf\xb1\x67\x62\x65\x7a\xaf\xd0\xbc\x58\x08\xdf\x8f\x44\x16\x9b\xd7\xe0\x7c\x2c\x4f\xaf\x2f\xc6\xb9\xa0\xdf\x63\xb2\x6a\xd6\xe8\x6e\x8b\x02\x6b\x87\x25\xb3\x59\xd0\x35\x53\xb8\xaa\x3a\xb4\xe1\x14\x50\x49\xcb\xf7\xbe\xe7\x9d\x19\x5b\x96\x16\x4c\xa8\x67\x10\xac\x69\x14\x9d\xb2\x4d\xa8\xe6\x3e\xd3\x5f\x5f\x5e\xf4\xfc\x1b\xe9\xf1\xad\x31\xe2\x10\x17\xc1\x0d\x7c\xfe\x92\x2d\x6b\x97\x2c\x98\x70\x95\x33\x5a\x77\x3d\x12\xd3\xe7\x13\xde\x6a\x15\x4c\xf9\x25\xa4\xdd\x8f\x55\x74\x48\x6d\xbd\xfc\x1f\x16\xfd\xb2\xe6\x52\x16\x65\x69\x33\x35\xd2\xd9\x16\xb0\x42\x45\xf4\xf0\x8b\x13\xc2\x9e\x50\xe5\xd2\x42\xe8\x84\xfc\xf0\xc0\x93\x76\x52\x61\x69\x7b\x6f\xda\x12\x0b\xd1\x58\xec\x80\x23\xc7\x31\x32\x39\x01\x08\x82\x02\x34\xd1\x92\x40\xd4\x98\x51\x7c\x0a\xd7\x52\x34\x76\x23\xf2\x73\x2d\x11\x15\xd5\xb6\x6d\xb6\x58\xf2\xd1\x99\x77\xae\x34\xf3\xe7\x50\xd8\xa1\xf5\x3c\x5e\xc2\x21\x10\x33\x5f\x23\xbf\xdc\xaa\x43\xe4\xc8\xa3\xf5\xda\x67\x15\x59\xb7\xe4\xc7\x1a\xf6\xe9\x58\xf5\x9f\x5c\xe6\x3f\x87\x76\x69\x8c\xa0\x24\xd5\x3e\x9c\x37\x64\x62\x7e\xec\xf0\xc8\x92\xcf\x34\xc1\x0d\xf5\x7b\xd9\xfb\xf1\x8e\x2d\xc9\xf0\xe8\xdc\x08\xe0\x83\x16\xdf\x60\x21\x6b\x89\xf4\x28\x8c\x46\xc6\x1c\x1b\xc5\x3f\x45\x07\xb3\xd1\x03\xd0\x8d\x10\x94\xc9\x27\x37\x76\xbb\xd9\x4f\x16\x3c\x8d\x22\x24\xe1\x5b\xce\x97\xd2\x60\xe3\x56\x02\x6e\x02\xb8\xd0\xea\x59\xfb\x78\x7c\x2f\x01\x06\x57\x68\x30\x29\xb6\x74\xeb\x51\xc2\x17\x76\xe3\x17\xef\x71\x05\x37\x9d\x08\x45\xe7\x95\xa8\xc5\x52\x56\xd2\x1d\x66\x13\xd4\x26\x8f\x1c\xfd\x5b\x2c\xb5\x31\x7a\x7f\xfd\xb7\xfb\xf1\x4e\xe4\xe1\xf9\x6c\x28\xf4\xe2\x05\xd4\x42\xc9\x62\x76\xf6\x8a\xe7\x85\x4a\x3b\xf0\x7a\x3a\xf8\x3d\x7a\x3a\x8e\xd1\xd9\xd0\x31\x21\x4f\x79\x7d\x37\x00\x74\xed\xa8\xb4\xaf\xc7\x8c\x79\x29\xf1\xd0\x22\x2f\xd8\xeb\x8b\x2c\x49\x26\xef\x21\x7f\x79\xbd\xde\xd6\xee\x30\xc0\xa5\x23\xc0\x9b\x53\x1b\x9f\x87\x74\x0a\x10\x29\x8e\xfe\x81\x46\x0f\x68\x55\xbc\xdd\x64\xc7\x45\x44\x55\x11\xad\x09\x9c\x84\x9a\x5b\xee\x86\xb7\x8d\xf5\xdc\xc4\x5f\x77\xb1\x8f\x1f\x68\xe4\x21\x46\x70\x98\xe3\xd1\xd9\xc4\xe0\x82\x1e\x68\x53\xfa\x46\x9b\x41\xdb\xbf\xcf\x35\x86\x12\xc8\x87\xc2\xc1\xd3\x11\x16\x6d\xdb\xcd\x71\xc4\x18\x3b\x8e\xe3\x69\xdf\xd1\xb3\xc7\x93\xa1\xef\x30\x0f\x9e\x42\x8d\x84\x3b\xa0\xd3\xac\x8f\x28\x99\x11\xc9\x2c\xfe\x73\x0e\x85\x44\x07\x4e\x5d\xfa\x14\x2e\xa6\x08\x7c\x62\x54\x36\x6d\xe0\x41\xbe\xb4\xce\x08\xa7\x4d\xbf\xfb\xf7\x07\xfd\x0d\xf7\x7e\xd8\xf1\xa3\x49\x9a\x64\xdd\xe8\xc4\xf3\x84\xc0\xb5\x7b\x8f\x8f\x3d\x29\x98\x61\x10\x73\x3f\xbc\x99\x8e\xce\x4d\xb3\x9f\x8f\x21\x9e\xe3\x76\x65\x3f\xe7\xe3\x01\xe8\xe6\xc7\x93\x03\xb1\x48\xaa\x3c\xdd\xe2\x5c\x17\xfc\x25\x26\x94\x89\x1f\x98\x11\x61\x89\x43\xa6\xd3\x86\x4b\xad\xb3\x06\x43\x93\xd0\x67\x51\x7d\x25\xcd\x0f\x55\x77\x88\x5a\x4e\xb8\xda\xb9\x16\x24\xc3\x94\xd1\x18\xe5\x5b\x91\x9c\x67\x0c\x27\x66\x13\x09\xd8\xe4\x70\xe7\xcc\x2a\xc9\xb0\x6d\x04\x32\x97\x7c\xff\x3a\x9f\x04\xbe\x54\xa2\x0f\x7d\x47\x33\xb1\x33\xf9\xa4\xbe\xaa\x97\x89\xb5\xc1\xde\x13\xfa\x17\xbc\xfd\x9c\x50\xe3\x0a\xce\xbc\xc7\xc2\xc7\x12\x0f\xc0\x4b\x84\x35\x27\x9a\x21\x3f\x28\x06\xf5\xb3\x29\x3d\xd7\x81\xb4\xf5\x02\x30\xa1\xb7\x42\x6b\xbd\x52\xf2\x45\x0c\xaa\x57\x95\x6f\xf1\xf0\xd7\x23\xd6\xcf\x63\x6d\xe4\xf0\x30\x30\x76\xc2\xef\xf6\xa0\xbd\x4f\x4c\xe2\xd1\xc5\x7e\x7a\x97\xc9\xb3\xbf\x71\xb0\x1a\x6b\xae\xfb\x87\xcc\x7e\x8f\xc3\x07\xef\x90\x2a\x63\x45\x89\x93\xfd\x17\x94\xa9\xb7\x9f\x8f\x34\x8f\x14\xba\xbf\x3f\x7b\x46\x04\x3b\x97\xef\x7f\xef\x9d\x9a\x42\xfa\xcf\xc5\xd9\x14\xd5\xe3\x6f\xf2\x8d\x82\x09\x4b\xbf\x6e\x13\xe0\x61\x6e\x21\x76\x48\x54\x45\xaa\xec\xeb\x87\x57\xd9\xfe\x79\xc2\xb7\xa1\x1f\x3a\xfd\xd3\x79\xfe\xdd\xc9\x66\x07\xf6\x6d\x48\x7f\xf0\x97\x09\x44\x62\x98\x49\x0c\x49\x72\x26\x13\x4c\xcd\x44\x06\x63\xc0\x5e\x38\xc2\x2d\xb0\x20\x37\xcd\xae\x2f\x76\xfe\xeb\x00\xb7\x58\x9d\x65\xf3\xb1\x30\x88\xd8\x72\x14\x2d\x95\x8f\xa0\xc8\x7c\xae\x4c\xc7\x64\xfc\x41\x06\xef\x6a\x6d\x31\x85\x6b\x5e\xfd\x35\x50\xb2\xaf\xb0\x45\xb7\xd1\xd4\xf1\x1a\xdd\xac\x7d\x64\xbf\xc6\x33\x7f\x05\x19\xff\x8f\x85\xb1\x00\x66\x87\xa9\xa4\xfa\x76\xac\x4b\x18\xa5\xe0\x3c\x4e\xcd\x87\x25\xc2\xac\xd1\x65\x9e\x68\xdf\xff\xc5\x2e\x09\xa1\xfc\x0a\x2b\x89\x55\xcf\x23\x2f\xe3\xbb\x1f\x75\xc8\x77\xc9\x6a\xd0\xdc\xf7\x50\x92\x57\x8f\x72\x10\xe5\xa6\xe7\x1c\x5d\x71\x65\x6c\x31\x69\xdb\xc6\x92\x92\x65\x93\xbe\xbf\x0f\x21\xf3\x80\x69\x0f\x4f\xfe\x1f\x00\x00\xff\xff\x57\xbf\x2b\x3a\x7f\x23\x00\x00"

func exampletokenV2CdcBytes() ([]byte, error) {
	return bindataRead(
		_exampletokenV2Cdc,
		"ExampleToken-v2.cdc",
	)
}

func exampletokenV2Cdc() (*asset, error) {
	bytes, err := exampletokenV2CdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ExampleToken-v2.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x28, 0x3e, 0x46, 0xcb, 0xbf, 0x19, 0x61, 0xd9, 0xdb, 0x76, 0x73, 0xe6, 0x12, 0x2, 0x7, 0x89, 0x71, 0xf1, 0xae, 0xbf, 0x14, 0x18, 0xd2, 0x27, 0xf2, 0x91, 0xd8, 0x81, 0x32, 0x9e, 0x8b, 0x57}}
	return a, nil
}

var _exampletokenCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x59\x51\x6f\xe4\xb6\x11\x7e\xf7\xaf\x98\xde\x43\xbb\x46\xec\xb5\x0b\x14\x7d\x30\x7c\xc9\xdd\xb5\x77\x40\x1e\x1a\x1c\x92\xb4\x7d\x35\x25\xcd\x7a\xd9\x93\xc8\x05\x49\xed\x7a\x63\xf8\xbf\x17\x33\x24\x25\x92\x92\xd6\x76\x8c\xdc\xcb\x79\x25\xce\x70\x38\xfc\xe6\x9b\x8f\x94\xec\x76\xda\x38\xf8\xd2\xab\x7b\x59\xb5\xf8\xab\xfe\x86\x0a\x36\x46\x77\xf0\x6e\x7d\x95\x3d\x5d\xd7\x4d\xfd\xee\xec\x6c\xd7\x57\x50\x6b\xe5\x8c\xa8\x1d\x7c\x7e\x10\xdd\x2e\xbc\xbf\x29\x9c\x3c\x9e\x9d\x01\x00\x5c\x5d\x5d\xc1\xaf\xda\x89\x16\x6c\xbf\xdb\xb5\x47\xd0\x9b\xcc\xcc\x82\x54\x80\x0f\xd2\x3a\x54\x35\xb2\x09\x4d\xb1\x17\x06\x1c\x99\xfd\xc2\x56\x37\xf0\xef\x2f\xf2\xe1\xef\x7f\x1b\x7d\xfe\xe2\xb4\x11\xf7\x08\x42\x35\xf0\xb5\xaf\x5a\x59\xc3\x57\xe1\xb6\x76\xf0\xd0\xa2\x83\xff\x88\xbe\x75\x61\x24\xbd\xbd\x81\xe4\x47\x36\xf2\x67\xac\x51\xee\xd1\x78\x57\x7e\xec\xf8\x77\x36\xf4\x93\x68\x85\xaa\xf1\x05\x23\x3f\x36\x9d\x54\x8b\xd3\x27\xe9\xa1\x3c\xfc\xa8\xa4\x93\xa2\x95\xbf\x61\x13\xdf\x8c\x23\xb6\x08\xb8\x47\xe5\xc0\x6d\x85\x03\x69\x01\x3b\xe9\x1c\x36\x70\xd8\xa2\x02\xb7\xc5\x71\x4f\xa4\x85\xda\xa0\x70\xc1\x0d\xc5\xe2\x4d\x27\xd3\xac\xa4\xff\x3b\x4f\xf1\x79\x19\xd8\x7f\xa5\xdb\x36\x46\x1c\xd4\xab\xc3\xf2\xfb\x2b\x0c\xc2\x21\xfa\xf0\xd8\x12\x7e\x67\x66\x03\x1c\xa6\x5b\x89\x4e\xf7\xca\xc5\xb8\x2e\xd8\xf4\x06\x3e\x36\x8d\x41\x6b\x7f\x98\xc4\xf9\x4f\xdc\x69\x2b\xdd\xef\x48\xdf\x18\x67\x13\x7d\x80\xd3\x27\xa3\x1c\x26\x9b\x44\xe9\xf4\x89\x18\xff\x25\xd5\xef\x08\x50\xe1\x21\x0d\xb2\x1b\x9d\x94\x61\x79\xff\x45\x4c\x93\x28\x3e\xf5\x46\xbd\x31\x4d\xd6\x19\x7d\x5c\x08\xc2\xbb\x5f\x0e\x82\x83\x34\xff\x48\x40\xfa\x8a\x28\x04\x67\x83\x53\x60\xc0\xa0\xd5\xbd\xa9\x71\x19\xf4\xd9\x5c\x2b\xd1\xb6\xfa\x80\xcd\xc7\xa5\xc8\x38\xf2\xb7\x45\x56\xb1\x8b\x17\x44\x96\xcd\xb5\x4a\x82\x18\x41\x97\x4e\xfe\x59\xd4\x5b\xe8\x2d\x1a\xb0\x4e\x1b\xb4\x20\x14\x48\x65\x1d\x51\x11\x71\xaa\x56\xed\x91\x89\x80\xcd\x89\x54\xdd\x16\xa5\x1f\x2d\xee\x31\x5b\xc4\xa6\x57\xb5\x93\xda\x73\xef\x68\x43\x54\x7a\xaf\xf7\x48\xbb\x07\x95\xf7\xb6\x33\x9e\x62\x77\xda\x3a\xe2\x98\x46\xb2\xe1\xe0\x4e\xaa\x82\xf6\x23\x21\x1d\x19\x28\xb5\x68\x5b\x6c\xd6\xd9\xec\xf5\x16\xeb\x6f\x16\xb6\x62\xb7\xa3\xac\x39\x30\xbd\x72\xb2\x43\x36\xc5\x3d\x1a\x10\x43\x84\x9c\xbe\xdc\xc7\xe0\xeb\xe7\x90\x62\x1a\xa1\xfc\xfa\x2b\x8c\xc9\x8e\x2b\x23\x5a\xc4\x07\x47\x19\xca\x58\x92\x77\x90\xc2\x1c\xdc\x79\x5c\x6f\xa4\x62\xe3\x0b\xb0\x9a\xde\x1b\xde\x41\xa5\xe1\x20\x8e\xb0\xd1\x14\x5b\x27\x5a\x59\x4b\xdd\x5b\xbf\x1d\x4e\x87\x39\x7d\x16\xc7\xd4\xe8\x3e\x4c\x2b\x15\x08\x69\xd6\xf0\x11\xec\x0e\x6b\x29\xda\x80\xca\x11\x24\x0a\xb1\xb1\xe4\xa9\x1a\x63\x70\x9a\x51\x3e\xb8\x1b\x49\x20\x4f\x05\x21\x6a\x70\xc4\x21\x14\x9d\x78\xfd\xd5\xe8\xbd\x6c\xd0\x5c\x14\xcf\x63\xcf\x2b\x9f\x87\x06\x17\x3b\x78\xba\x77\xdc\x92\xa1\x0a\x03\xfc\xea\x2c\xec\x07\xc4\xa6\xed\x3b\x8c\xca\x5b\xb7\x77\x06\x72\xe8\x42\xbc\x2d\xd1\x21\x81\x21\x2e\x85\x93\x4a\x10\x20\x6c\x0c\xb6\x64\xb8\x2a\x3c\x9f\xc3\xe3\xf0\x9e\xfe\x59\x6c\x37\xeb\xe8\xf2\x7d\x74\x3e\x0c\x79\xca\x97\x15\x5b\x53\xfa\x30\x1b\xf0\x25\x62\xd1\x63\x46\x7c\xf3\xc5\xe7\xe9\x0d\x84\xff\x61\xee\xfb\x0e\x95\xcb\x0c\xa9\x6e\xa2\x77\xeb\xad\x83\x11\x37\xc1\xa1\xf0\xd6\x8b\x53\xff\xe8\x02\xb6\x6c\x60\x17\x87\xa4\xd7\x84\x39\x86\x92\x8d\x44\xd4\x5b\x8f\x98\xad\x6e\x9b\xcc\x03\x4d\xd2\x69\x85\xc7\x61\x68\x85\x52\xdd\x83\x33\x42\xd9\x0d\x1a\x83\xcd\x9a\xa6\x31\xe8\x7a\xa3\x2c\x8f\x57\x78\x68\x8f\x99\x97\x58\x54\x61\x52\x9d\x95\x16\x3b\xf6\x45\x4a\x45\x23\x1d\xd7\x63\x95\x34\xd3\xcc\x17\xb6\x16\x0f\x54\x58\xf3\xcb\x26\xf4\x6c\x7a\x35\x24\xae\x6c\x23\x37\xf0\x21\x47\xab\x8f\xe9\x24\x02\xb2\x9f\x97\x61\x13\x32\x03\x22\xf2\x45\xfd\xe1\xff\x8f\xfa\x83\x9d\xe9\x83\x42\xf3\xc3\x5a\xf8\x3e\x7f\x9e\xf9\xf2\xa9\x84\xdb\xcb\x94\x16\x46\xcc\x7a\x6f\xe7\x4b\x70\x0c\x49\x7b\x1d\x1a\xc3\xc6\xe8\xea\x7f\x58\x97\x90\x64\x18\x8a\xa6\xb1\x99\x1b\xe9\xec\x50\x75\x61\x3f\xb3\xaa\x46\xe0\x25\xda\x17\x20\x54\x5a\x08\x7d\x95\x3c\x05\x69\xc0\x2e\x2c\x4d\xef\x43\xab\xb0\x16\xbd\xc5\x11\xf4\x79\x0d\x52\xc8\x09\xb8\x09\xc6\x68\x62\x24\x81\xf5\x98\x80\xd8\xf6\x2f\x63\xec\x5b\x91\xaf\xab\x42\x54\x84\x4c\xdb\x77\xd8\xf0\xd2\x99\xc4\x37\x9a\x9b\x51\x80\x65\x10\x2f\xa7\x01\x18\x36\x62\xe5\x77\x7d\x0e\x74\x25\xef\x90\xe4\x67\x2a\x84\xdb\xcb\xa0\x73\xed\x9f\xe0\x43\x7a\xda\x59\xe7\x6b\x7f\x0e\xab\xdf\x79\x7f\xeb\x92\xc2\x0a\xc8\x4e\xc5\x68\x66\xe6\x35\xe9\xb3\xb8\xcd\x6c\xe0\x3d\x5c\xaf\xaf\xb3\xf7\x71\x67\x73\xb6\x4f\xe0\x1b\x06\xac\xca\xbc\x64\x09\x48\x0e\x75\xf0\x7e\xf9\xd5\x65\x96\x88\x64\xb6\x64\xce\x91\x99\x3e\x77\x3b\x77\x9c\xd7\x4d\x79\xbd\xe4\x6c\xea\xa1\x49\x4c\x03\x22\x85\xff\x6f\x68\xf4\xa8\x0b\x54\x33\xb0\xa3\x1c\xc9\x4f\xb4\x2d\xf1\x68\x20\x41\x6a\xee\xac\x06\xba\xde\x7a\x32\xf4\x9d\x31\xea\x98\xcc\x1b\x0b\x38\xf6\xe2\xfd\x0e\xc4\x5a\x8a\x36\x7a\xa0\x4d\xe3\x45\x06\xd7\x98\x7f\x3f\x7a\xab\x6b\xee\x27\x5e\x39\x88\xaa\xe5\x62\x36\xbe\xaf\x47\x04\xdb\xa1\x4f\x73\x21\x81\x3b\xee\x70\x2a\x21\x08\xf2\x65\x32\x57\xc4\xb6\x25\xbf\x3e\x43\x6f\xd7\xeb\xeb\xf3\x74\x93\x32\x79\xc2\x07\x62\x69\x9d\x11\x4e\x9b\x52\x5f\x78\x7f\x3f\xe1\xc1\xab\xa3\x17\x32\xe0\xb0\xa3\xc9\x36\xcd\x9e\x11\x4e\x16\x7b\x31\xf7\xc2\x41\xe1\x06\x3e\x04\xe5\xf6\x38\x2d\xc5\x93\x27\x8d\xec\xe7\xe9\x76\x31\x1f\xc1\x82\x83\xa7\x85\x14\xfa\xc3\xc5\x9b\x53\x58\x1c\x66\x5e\x96\x42\x3f\x37\x63\xc7\xff\x39\x97\xad\xf2\xf4\x73\x2a\x23\xd1\xe1\x32\x0b\x24\x88\x99\x3b\x21\xc4\xc6\xe8\x5b\x26\x17\x81\x20\x24\xc6\xfa\xf1\x27\x08\x6a\x3a\x51\x75\xbf\x4c\x6d\x0f\x60\x98\xe8\xe4\xa0\xf3\xa8\xf0\xfc\xa9\x39\x9e\x37\x22\x2a\xf3\xa6\x39\x08\x7d\x48\xf4\xf3\x2c\x06\xf3\xa9\xc8\xce\xb7\x80\x17\x6e\x35\x19\xd8\x64\x71\x17\xac\x0c\x28\xb0\x2e\x32\x9b\x4b\x2e\xeb\x2e\x26\x7a\x36\xd1\x89\xdd\x12\x17\x9e\x84\xc9\x18\xf2\x8c\xb2\x9b\xb6\xca\x02\x3b\x74\x1c\xcd\x9f\xd0\xbf\x90\xed\xef\x89\x7c\x6e\xe0\x9d\xcf\x58\xb8\x26\xf1\x8c\x5c\x21\xdc\x33\x98\x0c\xe5\x41\x31\xc3\xbf\x5b\xf2\x73\x1b\xba\x70\xb1\x01\x0b\x7e\x5b\xb4\xd6\x3b\xa5\x5c\xc4\x4d\xf5\xae\xf2\x29\x9e\xde\xdc\x15\xbf\x9b\xd3\xae\xd3\x58\x61\x6e\x01\xcf\x0a\xdf\xe2\xee\xa8\xd4\xa9\xf0\x26\x69\xcb\xe7\xb6\x79\x56\x9d\xd3\xee\xe5\x72\xb2\xdf\xcb\x3c\x90\xd0\xde\xdb\x79\x80\xc8\xef\x79\x0e\x18\x28\x2e\x97\xa1\xbd\x51\xaf\x2a\xcc\xa0\x9d\x46\x2d\x1f\xef\x76\x2e\x00\x37\x1b\xac\x9d\xdc\x63\x7b\x64\xbf\x7c\x7c\x1b\x65\xf1\xe2\x04\x3f\x69\x87\x37\x5e\xd9\x7b\x91\x91\x5c\xe0\x89\xde\xe9\x4e\x38\x49\xa5\x7b\x04\xdb\x57\x7c\x2b\x82\xcd\x70\x32\xcd\x0f\x91\xe9\xfd\x7d\x76\x65\xc4\x61\xf7\xb5\xd3\xe6\x74\xd5\x8f\xf9\xf8\xc3\xf5\x34\x59\x89\x88\x9b\x65\xf9\x3c\xaf\x66\x8b\x92\x28\x6e\x32\xa7\xf8\x4e\xf0\xc7\x08\x4f\x97\xc0\x40\xce\x0b\xfb\xaf\xd7\xd7\xa4\xaa\xf3\x21\xe5\x47\x0a\x78\x0f\x57\x41\x00\x5e\x61\xb2\xd6\x7c\xa9\x6c\x3a\xfd\x6a\x41\xc6\x3b\xfe\x95\xd9\xc6\x81\xb9\xf9\xe4\x4b\xc6\x82\xf5\xa7\x22\x7f\x6c\x5c\x7e\xdc\x58\x0a\x9b\xc7\x65\x97\x3f\xbe\xeb\x27\x28\x62\x05\x5e\xf6\x9e\xa4\x79\xb2\x68\x16\x7b\x24\xfd\x2d\x55\x76\xa5\xe9\x5d\x9e\xcd\x42\x66\x9e\xa4\xca\x6d\x39\xcf\x97\x15\xa8\x60\x4d\xf3\xad\x6e\x2f\xd9\x59\x72\x80\x2a\x37\xeb\x7c\x6e\x65\x02\x7c\x12\xa1\x16\x3b\x51\xc9\x56\xba\x63\xec\x95\xac\xfd\x9b\xf4\xf6\x86\x2f\x2e\xf1\x61\xa7\x2d\xa6\x64\xc1\xa3\xef\x82\x84\xbf\x83\x0e\xdd\x56\xd3\x61\xd6\xe8\xfe\xde\x27\xeb\x2e\x6e\xea\x1d\xb0\xa6\xd8\x88\x7a\x36\x27\xd9\xb2\x5a\xa9\xbe\xdd\xfe\xf9\x71\xfe\x22\xf0\xe9\xfb\xd5\x94\x8a\xa7\x18\xbb\xc8\x06\x39\x61\xee\xd1\x2d\xa4\x67\x18\xf9\x07\xe7\x29\xec\xee\x1d\x6c\x24\xb6\x45\x9a\x3e\xc5\x77\xaf\xcd\xd2\x94\x68\x1e\x67\x2f\x4a\x67\xd3\x36\xa9\xad\x37\x66\x8d\x69\x8d\x9b\xd5\x88\xec\xec\x38\xb5\x3a\x0d\x64\xb6\x4d\x80\x5c\x96\x6f\xbe\x41\x9f\x89\x03\x85\x4a\x3f\x77\xd8\xad\x3e\x24\x3a\x76\xb8\x49\x3f\x08\x9b\x5c\xe7\x36\x73\xb9\x4d\x18\xf5\xc4\xe7\xc7\xf9\xc2\x7c\x3a\x7b\x3a\xfb\x7f\x00\x00\x00\xff\xff\xc4\x0a\xc4\xd0\xa5\x1e\x00\x00"

func exampletokenCdcBytes() ([]byte, error) {
	return bindataRead(
		_exampletokenCdc,
		"ExampleToken.cdc",
	)
}

func exampletokenCdc() (*asset, error) {
	bytes, err := exampletokenCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ExampleToken.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x42, 0x18, 0x5e, 0xb6, 0x6f, 0x51, 0x80, 0xef, 0x9f, 0x39, 0xa7, 0x95, 0xbc, 0x9a, 0xfc, 0xcc, 0x39, 0xfa, 0xac, 0xb3, 0xaa, 0xce, 0xe2, 0x5f, 0x92, 0x2a, 0xa1, 0xc2, 0x14, 0x1c, 0x21, 0x58}}
	return a, nil
}

var _fungibletokenV2ContractinterfaceCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x90\x31\x4f\xfb\x30\x10\xc5\xf7\x7c\x8a\xa7\x4c\xff\xff\x40\x82\x10\x62\xe8\xc0\x82\x54\xa9\x03\x13\x85\xdd\x75\xcf\xad\x85\x73\xb6\xec\x73\xa1\xaa\xf2\xdd\x91\x1d\x94\x90\x0c\x91\xee\xe9\xdd\xfb\xbd\xb3\x1d\x82\x8f\x82\x6d\xe6\x93\x3d\x38\xda\xfb\x4f\x62\x98\xe8\x07\xb4\x5d\xbf\x52\xef\x2e\x0f\x9d\x3e\xea\xb6\x69\x42\x3e\x40\x7b\x96\xa8\xb4\xc0\xb2\x50\x34\x4a\xd3\x3a\x63\x37\xcb\xb7\xa6\x01\x80\xbe\xef\xf1\xe2\x59\x94\xe5\x04\x39\x13\xc4\x8b\x72\x48\x39\x04\x77\x85\x37\x55\x33\xbf\x11\x90\x92\x51\xf7\x0a\xec\xa2\xe2\x64\x7f\xab\xee\x0d\x6e\xfb\x6b\xa0\x0d\xde\xb7\xf6\xfb\xe9\x71\x5c\x00\xdb\xcc\x5a\xac\x67\x88\x47\x24\xc9\x91\x27\xd4\x35\x50\x81\x2a\xa9\xe3\xd2\x7d\x08\x8e\x06\x62\x49\x33\xca\x64\xc6\x89\xe4\x43\x65\x27\x05\x92\xfe\xfd\x9f\x71\xab\x03\xbb\x6a\xd9\xb1\xf1\x23\x6e\x75\xbd\x46\xf8\x24\x7f\xc6\xf2\x45\x4a\xd9\x49\xe7\x88\x4f\x72\xc6\x33\xee\x37\x68\x5f\x73\x2a\x2f\x77\xb4\x5a\x09\xe1\xab\x14\x5b\x9f\x3e\x57\xb6\x69\xa9\x7b\x24\x63\x99\x52\x3b\xc7\x8f\xcd\xf4\x1f\x7f\x02\x00\x00\xff\xff\x18\x49\x1b\xf7\xc6\x01\x00\x00"

func fungibletokenV2ContractinterfaceCdcBytes() ([]byte, error) {
	return bindataRead(
		_fungibletokenV2ContractinterfaceCdc,
		"FungibleToken-v2-ContractInterface.cdc",
	)
}

func fungibletokenV2ContractinterfaceCdc() (*asset, error) {
	bytes, err := fungibletokenV2ContractinterfaceCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "FungibleToken-v2-ContractInterface.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe7, 0xd7, 0xc2, 0xef, 0x52, 0x43, 0xe3, 0xa1, 0xb, 0xc, 0xf, 0x29, 0xdd, 0xc1, 0x56, 0x55, 0xa5, 0xd6, 0x18, 0xfa, 0xe4, 0xc4, 0x91, 0x1f, 0x8a, 0x29, 0xd5, 0x61, 0xb5, 0x64, 0x57, 0x3d}}
	return a, nil
}

var _fungibletokenV2Cdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x59\xcd\x8e\x1b\xb9\x11\xbe\xf7\x53\x14\xec\x83\x67\x1c\xad\xb4\x87\x20\x87\x01\x26\x89\x13\xec\x04\x3e\x24\x30\x9c\x89\xf7\x10\x04\x10\xc5\xae\x96\x88\xa1\xc8\x5e\x92\x2d\x8d\x32\xf0\xbb\x07\x55\xfc\x69\x75\xb7\x46\x92\x77\x13\x04\xbb\x87\x85\xdc\x64\x55\x7d\xf5\x5f\xc5\x59\xbc\x7f\x5f\x55\x6f\xe1\x71\x83\xf0\xa0\xed\x1e\x1e\x3a\xb3\x56\x2b\x8d\xf0\x68\x9f\xd0\x80\x0f\xc2\xd4\xc2\xd5\x55\xf5\xf6\x2d\x2c\xf3\x21\x9f\x2d\x41\x5a\x13\x9c\x90\xa1\xaa\x98\xfc\x34\x25\x28\x0f\xc6\x82\xb6\x66\x8d\x0e\x84\x01\x65\x02\xba\x46\x48\xac\xc2\x46\x04\x10\x5a\x43\x93\x49\x03\x93\x66\xbe\x1e\xf6\xb6\xd3\x35\x6c\xc4\x8e\x8e\xe8\x7b\x63\xdd\x16\x82\x9d\x57\xd5\xc7\x06\x04\x74\x1e\x9d\x87\xbd\x30\xc1\xd3\x85\x1a\x5b\x6d\x0f\x20\xc0\xe0\x7e\xc4\x6b\x06\x61\x83\xca\xf5\x98\x6b\x8b\x04\x2c\x80\x41\xac\x89\x58\x6d\x5b\x8d\x5b\x34\x81\x6e\xc2\x40\xd5\x1e\xf3\x0c\x56\x5d\x48\xac\x58\x80\xaf\x6a\xfb\x0a\x8b\x42\xe4\xa1\xc6\x46\x19\xac\x41\x19\x08\x1b\xe5\x0b\x8a\x79\xb4\xeb\x17\xd1\xe9\xb0\x04\x87\xde\x76\x4e\x1e\x51\x56\xd5\x0f\x42\x6e\xc6\xf6\x29\xf7\xc2\xa1\x45\x16\xee\xa7\xd2\x5f\x67\x9a\x84\x7e\x72\x76\xa7\x6a\x74\xcb\x19\x2c\x3f\xa3\x44\xb5\xe3\xdf\xc2\xd4\xb0\xfc\x93\xd0\xc2\x48\x3c\x45\xed\xd9\xdb\x7e\xa4\x9e\xd4\xc2\x21\xb4\x0e\xbf\x93\xd6\xd4\x2a\x28\x6b\x3c\xb3\x6a\xad\x0f\xc7\xdf\xd8\xe7\x0e\x7d\x70\x4a\x86\x8a\x80\xe2\x33\xca\x8e\x0e\xc1\x36\x8c\xbc\xe9\x8c\x8c\x97\xd9\x5c\x08\xac\xc9\x9c\xe5\x1e\x80\xe4\x78\x6c\x85\x13\x01\x61\x85\x52\x74\x84\x25\xc0\x5a\xed\xd0\xf3\x75\x0a\x0a\xfe\x21\x56\x4a\xab\x70\x20\xdb\xf8\x8d\x70\x58\x09\x70\xd8\xa0\x43\x23\x39\x9e\xa2\x1b\x99\x7b\xc4\x65\x8d\x3e\x00\x3e\xb7\xd6\x27\x56\x8d\x42\x5d\xfb\x1e\x51\xa5\x0c\x58\x83\x60\x1d\x6c\xad\xc3\x8c\xb8\x37\x05\x05\x26\xc5\xb4\xb7\x09\x50\x8c\xd0\x11\x9a\xad\x78\x42\x90\x9d\x0f\x76\x5b\x2c\x9c\x4c\x53\x9c\x48\xb6\x19\x5a\x99\x02\xdc\xc2\x4e\x38\x65\x3b\xba\xad\xcc\xda\xc3\x5e\x85\x0d\xb3\x8f\xd1\x38\xaf\x1e\xac\x03\x7c\x16\xc4\x66\x06\x02\x1a\xd1\x49\x0c\x20\x85\x81\x15\xf6\xdc\xb1\x86\xd5\x21\x27\x94\x32\xeb\x2a\x9a\x03\x72\x50\x0c\xa2\xe5\xfd\xa2\xaa\x16\x8b\xc5\x30\x27\xe8\x4b\xd5\x76\xab\x12\xcb\xa3\x94\x79\xa9\x2a\x00\x00\xa2\xcb\x4c\xf3\x87\x72\xf0\x78\x6c\xbb\xa8\x3f\x12\x22\x99\xcc\xef\xf0\xa7\x4e\x39\x06\xec\xa1\xb1\x8e\xb5\xad\x9d\xd8\x13\xe2\xcc\x24\x2a\x0e\x8d\xb3\xdb\xe8\x8c\xac\xa3\x32\x6b\xce\x90\xf9\x44\xee\xc7\x00\x25\xfd\x93\xc0\xa1\x2c\x6b\x60\xb9\xca\x39\xb0\x41\x87\xb3\x42\x7b\x14\x72\x1a\x05\xb9\xd8\xb6\x18\xe3\xb4\xb5\xde\xab\xe4\x65\xdb\x80\x74\x28\x18\x44\xf2\x74\x9b\xcc\xe0\x7b\xe8\xa4\x31\xd5\x0f\x2e\x43\x12\xbd\x17\x4e\xe9\x43\xaa\x27\x1c\x9d\x76\x6f\x20\x21\x19\xea\x41\xa6\x9f\x66\x67\xef\xc0\x64\xff\x2c\x2a\x5b\x0e\x7c\xb7\x4a\xc5\x75\x6c\x38\xbb\x37\xe8\xde\xf9\x98\x10\x03\x62\x4a\x64\x87\xa1\x73\x94\xd4\x29\x61\x4a\xe0\x39\xdc\xda\x1d\xd7\xbf\x18\x80\x47\x84\x03\x26\x8f\x47\xa9\xfd\xce\x83\x90\xa4\x2f\x68\xdc\xa1\xa6\x1e\xd1\x76\x2b\xad\x64\xae\xaf\xca\xc7\xbe\x11\x40\x90\xdd\x56\x1a\xb7\x03\x66\xd9\x0b\x9c\xb1\x05\x3c\xf8\x60\x1d\xbb\x9d\x71\x15\xe3\x24\x5b\x0a\x29\x6d\x67\x86\xaa\x49\xee\x48\x2a\x28\xa1\xf5\x01\x24\x75\x23\x96\x9e\x91\x9e\xd7\x27\x4a\xdd\x8a\x03\xac\x9d\x30\x01\x6c\xd8\x60\x91\x53\x74\xa4\x4c\xcb\xb1\x40\xea\xa8\x9d\x08\x38\x42\xd1\x96\xf2\x90\x9a\xa2\xdd\x7b\xf0\x2d\x4a\xd5\x28\x99\xf8\xa6\x5a\x62\x13\xdf\x01\x07\x8e\xbf\xec\xfb\xbe\x41\x6c\x9c\xed\xd6\x1b\x38\x2a\x7c\xd7\x2a\x14\x6b\x18\x6b\x45\x46\xb9\xa0\x13\x3b\xef\x1a\x95\x88\xd7\x48\x8f\x01\xf6\x01\x8f\x6f\xd7\x83\xb2\xa2\xe9\x4c\x09\xf7\x1b\xb1\x25\xd8\x77\xf0\x8f\x07\xf5\xfc\xbb\xdf\xde\xde\xc1\x1f\x3f\x98\xc3\xe7\xc4\xf7\x85\x43\xf9\x2b\xbc\x14\x7a\xe6\x61\x7d\x18\x7d\x8a\x62\x60\xe9\xd0\xa7\xa6\xda\x24\x15\x62\xa4\x51\x6a\xc0\x4e\xe8\x0e\x27\x64\x91\x64\xbe\xc6\x90\x9a\xea\xcd\x2d\xdc\xdf\x43\xc2\x35\xb9\x4e\xff\xbd\xf9\x31\xa1\x17\x3a\xdd\x83\x6d\xe7\x03\x15\x70\x12\xe7\xc5\x16\x41\x44\xb3\xa5\xd2\x90\x1b\x51\x56\xdb\xc4\x24\x7d\x33\x60\xff\xb5\x1a\xfe\x8a\xff\x3f\x57\x4c\x1e\x9d\x30\xbe\x41\x27\x68\xf6\x78\x19\xb8\xe6\x21\xe5\x07\x97\x65\x01\xb5\x72\x28\x03\x84\x44\x00\xca\xf8\x80\xa2\x26\x5c\x1b\xb1\xe3\x94\xe4\xee\x25\x68\x46\xb3\x5e\x05\xae\x29\xfb\xa2\xe7\x59\x67\x66\xae\x23\x67\xce\xc0\xa1\x54\xad\x42\xfa\xf4\xa1\xae\x1d\x7a\x7f\x9b\x34\x2b\x25\x36\x4f\x36\xbf\xbc\xf7\x24\xe0\x27\x5a\x8f\x32\x29\x10\xae\x68\x3d\x3f\x62\x2e\xf8\xca\x48\xdd\xd5\x08\x02\xca\x78\x14\x61\xc8\x0d\xca\xa7\xa1\x7b\x53\xb9\x2b\x5c\xf6\xc8\x43\x2f\x19\x95\xc6\x8c\x6b\xa6\x8c\x68\x86\x38\x65\x54\x70\x54\xfd\x6a\x9b\x2f\x9d\x1e\x29\x66\xa0\xd5\x13\x82\x6f\xb5\xe2\xc9\x72\x0b\x5d\x4b\xde\x2b\x4c\x3c\x9a\x3a\x1e\x90\x8f\x55\xc3\x09\x1a\xa0\xd5\x71\x20\x82\xcb\x4d\x2b\x3b\x69\xdc\xb4\x72\xac\x04\xf1\x84\x7d\xe7\xa1\xc8\x49\x27\x9e\xda\xf0\x69\xf3\x0f\x86\xe4\xb3\xe1\x95\x78\xdd\x50\x23\x3c\x59\x1f\x6e\x87\xa8\xd6\x18\x3e\x48\x89\x6d\xc0\xfa\xf1\xd0\xf2\x00\x40\xce\xe3\x06\xd2\x77\x49\xad\x7c\xa0\xf0\xdf\xc5\xf1\x92\x2f\xb2\x7b\xb9\xbd\x64\x7f\x70\x09\x6c\x83\x9f\x80\x1a\x0b\xb9\xb9\xbd\x83\x7f\xd2\xaf\x7f\xfd\x61\x1c\xe2\xa9\xae\x5c\x63\xe8\x74\x75\x6c\xe7\xbf\x62\xd8\x58\xde\x60\xd6\x18\x8e\x03\x6f\xd2\x1f\x72\x40\x4a\x5e\xcc\x56\xc8\x09\xed\x14\xf5\x7f\x9e\x95\x67\x03\x0a\xcf\x7e\x71\x98\x76\xc0\xbc\x26\xa5\xd4\xa2\x65\x10\x9f\x5b\xad\xa4\x0a\x91\xfa\x94\x15\x4a\xd5\xcc\x69\x3f\xcd\xf0\xd6\xa1\xe7\x34\x5d\xa3\x41\xa7\x24\x28\x1e\x6b\x05\xa7\x94\x58\xd9\x8e\xa6\x08\xf6\xc3\x68\x13\xc3\x7e\x1d\xcc\xdc\x62\x66\x4e\xc9\x4b\x2b\xde\x95\xe9\xe8\xd8\xd6\x3e\xb8\x4e\x86\x18\xa0\x1f\x4d\x63\xc7\x16\x26\xdb\xf1\xb6\x96\x0a\x75\x8c\x0a\x97\xa1\xe3\x50\x75\x8d\x31\x62\xee\x80\x3c\x3e\xe4\xf4\xf7\x60\x9d\x58\x23\x67\xc1\x27\x6e\xbb\xf0\x49\x84\x8d\x9f\x30\x60\x2c\xe9\x36\xdd\xb8\x83\xa3\x7f\x4c\x6e\xe7\x14\x8c\x2c\xe3\xfd\xfe\xf7\xe4\x7a\xf2\xca\x2b\xb7\xcb\x75\x9a\xac\x6e\x7a\x4d\x66\xe7\x41\xcd\x2e\xa0\x98\x9d\x17\x7b\x3b\x6a\xda\x1e\x75\x33\x67\xa3\xdf\x0f\x8b\x40\x39\x1c\xa3\x81\xfb\x09\xc0\x29\xd1\x14\x23\xdc\x9f\x00\x3e\x25\x9c\x80\x87\xfb\xa9\x42\x93\x1e\x5d\x22\xf3\xcb\x24\xf0\x78\x95\xa9\x91\x0a\xcf\x2c\xcd\xcc\x25\xd3\xe3\xcb\x09\x0f\x71\xfd\xb3\x49\x81\x59\x2c\x39\x1b\xf4\xf8\xb8\xfd\xe7\x15\xe2\x68\xe7\xe9\xd2\x82\x9c\x66\x72\xdf\xb5\xad\x75\xb4\x44\x1e\x70\x9a\x0b\x27\xea\x4e\x2c\xdc\x2f\xb0\x58\xdc\x5d\xc6\xf0\xda\x0a\xf3\xab\x8a\x7c\x02\xfc\x97\x61\x31\x1d\xe4\xfe\x75\xa5\x6e\xc0\xee\x73\x1c\x33\xa7\xd5\xa9\x30\x7d\xe7\x63\x91\xe1\x87\x97\x89\x69\x92\x94\x52\xa3\x48\xce\x60\x67\x9f\x97\xa3\x8b\xbb\xe3\x32\x8e\x62\xcb\x7e\x7b\xfc\x92\x00\x9c\xea\x1c\xc3\xfd\xd1\xe0\x7e\xbc\x43\x66\xc6\x58\x9f\xa2\xff\xef\x4e\xf7\x0e\x4f\x0c\xf7\x9c\xa0\x83\x19\xfd\xf7\x17\x66\xf4\x0f\x71\x30\xef\x27\xee\x3c\xa2\xeb\xb8\xd2\x08\x03\xd6\x01\xfe\xd4\x09\x1d\xff\x75\x22\x12\xce\x0e\xe9\x70\x76\x15\xa1\xe5\x97\x2d\x47\x7d\x49\xe8\xb2\xaf\xc2\x72\x85\x8d\x75\xb8\x3c\xee\xe6\xbc\x99\x64\xa1\xfd\xc3\xc6\xb0\xe7\x1e\x31\x17\x29\x6e\x71\xad\x8c\xa1\x61\x6a\xf4\x32\xd7\xbf\xd9\x9d\xa0\xbe\xc2\xb6\xf7\xf7\x10\x51\xde\x4c\xce\x6e\xe1\xbb\xf3\x76\xff\x5b\x89\x9e\x6c\xcc\xe3\xdd\x28\x8f\x9f\xbd\x8d\x5b\x87\x3b\x7e\x30\xcb\xd7\x45\x9c\x56\xc7\xbb\x52\x3e\x7f\x7d\x67\xba\x72\x34\x15\x75\x4d\x63\x69\x2f\x30\x4d\xa7\x03\xdf\xab\x13\xcf\x2c\xdf\x32\x98\x9e\xc8\xdb\xaf\xe3\xfe\xb7\x58\xc0\x07\xef\xd1\x85\x3c\x77\xf2\xb8\x23\x1d\x86\xe1\x2c\x92\xc4\x60\x9d\xa6\x12\xe5\xcb\x9a\x39\xe6\x97\xb6\xce\x5d\xff\x64\xaa\x7c\x1a\x61\xf3\xb3\x4b\xe2\x76\x45\xce\x91\x5a\x73\xe5\x3f\x1a\x1f\xd8\xf7\x39\x16\x68\x52\xb8\xb9\xbd\xbd\x83\xd3\x01\xf0\x67\x61\xa8\x07\xf5\x7b\x24\x6d\x52\x76\xdb\x8a\x70\xf4\x44\x4e\xfa\xfd\x8c\xc4\xfa\xc6\x50\xfd\x4d\x3e\x63\x55\x06\x67\x3f\x2b\x7a\x7d\xb7\xbd\x18\xb6\xbd\xb7\x2e\xac\xf8\xbf\x8a\x75\xfd\xba\xa7\x97\xff\x75\x05\x29\x4d\x8c\x56\x59\x74\xff\x9f\x8a\xc2\xcf\x69\xf8\xc3\xb6\x0d\x87\x54\x4c\xd2\x8b\x99\x39\xa4\x3f\x69\xd8\x74\x67\xd0\x43\x39\x0b\x37\x82\x6a\xd0\xbf\xd1\xd9\xab\xfa\xe7\x58\xd4\xcd\x2f\x79\x17\x7b\xe5\x81\xeb\xfb\xf9\xf7\x77\xf0\x86\xf6\x1e\x83\x7b\x9d\x5e\x0b\x73\xd4\x46\x0b\xf3\xdf\xf5\x8e\x41\x5f\x7a\xaf\xfa\xfa\x9f\x00\x00\x00\xff\xff\x2c\xe2\x91\x8d\xae\x1c\x00\x00"

func fungibletokenV2CdcBytes() ([]byte, error) {
	return bindataRead(
		_fungibletokenV2Cdc,
		"FungibleToken-v2.cdc",
	)
}

func fungibletokenV2Cdc() (*asset, error) {
	bytes, err := fungibletokenV2CdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "FungibleToken-v2.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x7e, 0x5f, 0xc7, 0x9a, 0xf7, 0xd7, 0x9a, 0x49, 0xc9, 0x89, 0x18, 0x69, 0x52, 0x11, 0x13, 0x4d, 0x3, 0x77, 0x74, 0x74, 0x58, 0x22, 0x61, 0xcd, 0xa5, 0xa1, 0xe2, 0x41, 0x3f, 0xdf, 0xdf, 0xab}}
	return a, nil
}

var _fungibletokenCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x59\x4d\x73\xdb\xba\xd5\xde\xf3\x57\x9c\x49\x16\xb1\xf3\x2a\xf2\x5d\xbc\xd3\x85\x67\x6e\xdb\xdc\xf6\x66\x26\x9b\x4e\xa7\x75\x7b\xb7\x82\xc8\x43\x09\x63\x10\xe0\x05\x40\xc9\xcc\x9d\xfc\xf7\xce\x39\xf8\x22\x29\xda\x56\x12\x6f\x2c\x91\xc0\x83\xf3\xf9\xe0\x01\x74\xf7\xfe\x7d\x55\xbd\x85\x87\x23\xc2\x27\x65\xce\xf0\x69\xd0\x07\xb9\x57\x08\x0f\xe6\x11\x35\x38\x2f\x74\x23\x6c\x53\x55\x6f\xdf\xc2\x2e\xbd\xe4\x77\x3b\xa8\x8d\xf6\x56\xd4\x1e\xa4\xf6\x68\x5b\x51\x63\x55\x11\x50\xfe\x0a\xfe\x28\x3c\x08\xa5\x96\xb0\x69\xa6\x83\xb3\x19\x54\x03\x47\x71\x42\xf0\x86\x9e\xb7\xc6\x76\xe0\xcd\xb6\xfa\xdc\x82\x80\xc1\xa1\x75\x70\x16\xda\x3b\x7a\xdf\x60\xaf\xcc\x08\x02\x34\x9e\xc1\xcf\xa0\x36\xe0\x8f\x28\x6d\xfe\x5e\x05\x64\x8d\xd8\xd0\x4c\xd9\xf5\x0a\x3b\xd4\x9e\x86\xc1\xcc\x91\x62\xef\x96\xed\x9f\x80\x2c\xcc\x6b\x8d\xa2\x18\x91\x43\x84\x62\x07\x85\x0e\x84\x6e\x40\x8b\x4e\xea\x43\xc5\xee\xfa\x59\x04\x5c\x8f\xb5\x6c\x25\xba\x6d\x08\xe1\x7f\xc5\xa0\xfc\x0e\x2c\x3a\x33\x58\x0a\xd8\xaf\xa2\x3e\x82\xa8\x6b\x33\xb0\x6d\xc2\x83\x39\x6b\x17\x9c\x4b\xe1\x49\x4e\xb0\x1d\x82\x0c\xa6\xbc\xd4\x58\x99\x96\x97\x63\xd0\x8c\x09\xce\x1b\x8b\x0d\x48\x1d\x43\x92\xd0\xe9\xb9\x38\x44\x2f\x97\x93\x8e\xc2\x41\x87\xfe\x68\x1a\x07\xd9\x0f\x73\xd6\x68\xd9\x43\xe3\x8f\x68\x63\x3a\x6a\xa1\xa1\x16\x4a\x45\x97\xfe\x69\xcd\x49\x36\x68\x77\x1b\xd8\xfd\x0b\x6b\x94\x27\xfe\x4c\xb3\x76\xbf\x08\x45\x86\x16\x87\x4b\x68\x1c\x9b\xe1\xa6\x4f\xa0\xc1\x5a\x09\x8b\xd0\x5b\xfc\x50\x1b\xdd\x48\x2f\x8d\x0e\x21\xee\x8d\xf3\xd3\x67\x6c\xa3\x45\xe7\xad\xac\x7d\x45\xc6\xe2\x13\xd6\x03\xbd\x84\x18\x96\x76\xd0\x75\x18\x1c\x42\x11\x5c\x0e\xee\x8f\x40\xeb\x38\xec\x85\x15\x1e\x61\x8f\xb5\x18\xc8\x16\x0f\x07\x79\x42\xc7\xc3\xc9\x5b\xfe\x20\xf6\x52\x49\x3f\x52\x0a\xdc\x51\x58\xac\x04\x58\x6c\xd1\xa2\xae\xb9\x2e\x42\x98\x43\x40\x43\x0a\xb5\x1a\x01\x9f\x7a\xe3\x22\x54\x2b\x51\x35\xae\x58\x54\x49\x0d\x46\x23\x18\x0b\x9d\xb1\x98\x2c\x2e\xa1\xd8\x56\xd5\x67\x6a\x1d\x67\xa2\x41\x21\xf4\x0b\x6b\x3a\xf1\x88\x50\x0f\xce\x9b\x2e\x47\x38\x86\x26\x17\x3c\xc5\x66\x1e\x65\x6a\x24\x03\x27\x61\xa5\x19\x68\xb4\xd4\x07\x07\x67\xe9\x8f\x0c\x1f\x2a\x6f\x5b\x7d\x32\x16\xf0\x49\x10\xcc\x06\x04\xb4\x62\xa8\xd1\x73\xee\xf7\x58\xd0\xb1\x81\xfd\x98\xfa\x96\x7b\x80\xc3\x01\xa9\x28\x66\xcd\xf5\xcb\x08\x83\x93\xfa\x30\xb1\x95\x52\x5b\x4c\xdb\x44\x37\x4d\xfb\x2c\x63\x54\x64\x81\x43\xdd\xf0\x54\x1b\xea\x2d\xb5\x4b\x8f\x68\x3f\x78\xf3\x81\xfe\x6f\xd8\x25\x33\x78\x6a\x1b\x5a\x94\x58\x80\x56\x62\x72\x20\x6f\x05\xd4\x48\xa8\x0a\x14\x36\x07\xb4\xe0\x3a\x61\x7d\x5e\x6a\x0b\x0f\x26\xac\x14\xd1\xbd\x01\xa1\x4b\x23\x6c\xaa\xc0\x4f\xb1\x49\x1d\xc5\x64\xe4\x45\x1b\x2b\xce\x93\x58\x42\x6b\x4d\x37\x2d\x12\xe6\xaa\xd0\x43\x5c\xb9\x0d\xf6\xc6\x49\x9f\xcb\x03\x8c\x9e\xad\xf4\xce\xa5\xe2\x22\x8a\xa4\xd0\x7b\x0c\xf8\x56\x68\xd7\xa2\xdd\x56\xd5\xfb\xbb\xaa\xba\xbb\xbb\x9b\x53\x1b\x3d\xe1\xa7\x2b\xb4\xfc\x2c\x25\xe7\xdc\x6e\x79\x7a\x3f\xec\x57\x98\x7e\x41\xa1\x7f\x54\x15\x00\x40\x5a\xca\x1b\x2f\x14\xe8\xa1\xdb\xa3\xe5\xda\x0e\x71\x90\x1a\xf0\x49\x3a\x4f\x7d\xb3\xcd\x13\x3e\x7b\x90\x0e\x86\x3e\x76\xd2\xa4\xb6\x2c\x3d\x42\xed\x06\x8b\x85\x93\x02\xb6\x1b\xfa\x5e\x8d\x19\xc3\x79\x31\x3a\x22\xba\x81\xdb\x99\x4a\x23\x00\x36\xc2\x63\x1a\xc5\xff\xc9\x9d\x93\xb0\x01\xe6\xdf\x8c\x72\x0f\xff\xf9\x24\x9f\xfe\xf4\xff\x13\x1f\xd8\xde\xcf\x5a\x7a\x29\x94\xfc\x82\xcd\x0c\x22\x79\x89\x27\x4c\x9c\x2d\x1d\x60\x27\x3d\xb5\xc3\x99\x52\x4b\x86\x96\xa0\x39\xa8\x2d\x0a\xbf\x80\x21\x4b\x02\xc4\xc5\x72\x37\x32\x7c\x9e\xdb\x77\xbb\x34\xf0\xb7\x58\x6b\xfa\x9b\xcd\x0b\xf9\x20\x0a\x4c\xf5\xaa\x43\x95\x8a\x50\x69\x2f\x1a\x9a\x97\xbd\x11\x1d\x6d\x2c\xc9\xbe\x0d\x43\xdc\xc3\xc7\xa6\xb1\xe8\xdc\x5f\x2e\xec\xfd\x7b\xa8\xf3\xef\x08\x67\xb1\xb7\x49\x18\x54\x8b\xe6\x2a\x7b\xf3\xb2\x17\xf6\x7a\xb3\x6a\x6d\x22\xaf\x55\x33\x17\x6d\x84\xc4\x7c\x75\xa4\x79\x8b\xbf\x0f\xd2\x72\xf1\x3a\x68\x8d\xcd\xd1\x25\x66\x4c\x20\x0b\x52\x28\xf5\xce\x24\x35\xf6\xa5\x35\xa6\x2d\xd2\x18\x74\xa0\x4d\x5e\x70\xbe\x96\xd1\xb0\xdb\xa7\xbd\xf6\x88\x16\x37\x79\xee\x64\x6b\x53\x28\x68\x2b\x31\x7d\xac\xd0\xde\x38\x27\xe3\x6e\x62\xda\x50\xa4\x64\x44\xdc\x51\xfa\x18\x06\x57\x4c\x27\x8f\x1b\xc3\x76\x68\xac\xd1\x39\x61\xa5\x1a\xa3\x40\x61\x82\x33\x67\x0d\xd1\x92\xed\x45\x56\x2e\x55\x40\xd9\x28\x22\x85\xa4\xa5\x32\x8f\xba\x61\x1f\x89\x69\x19\x38\x56\x27\x89\x1b\x67\x93\xc3\xd6\xe0\x07\x4b\x45\x13\xb9\x33\x6f\x70\x16\x3b\x73\xc2\x26\x6f\x74\x93\x89\x33\x90\x87\x89\x84\x78\xc7\xe4\x82\xce\x81\xc2\x13\x2a\x2a\xd0\x7e\xd8\x2b\x59\x6f\x60\x3f\x50\xd1\x4a\x47\xcf\x28\x2e\x82\xe2\xb6\x57\xd8\xcd\xc0\x52\x16\x58\x19\x14\x69\x45\x92\x8c\xd3\xce\x76\xe5\xe0\xcc\x85\xdb\x0c\xa8\x66\xfd\xc7\xec\xa0\x46\xde\x42\xc2\xea\xc9\xd2\x97\xfd\x09\xab\x76\x62\x84\x83\x15\xda\x47\x59\x17\xd7\xc9\x3e\xd2\x8e\x9e\x6a\x81\xdc\x91\xa7\xc4\xa2\xc5\x8a\x3e\xcb\x90\xa8\xf1\xcd\xd9\x25\xb5\x5b\xcf\xe4\x22\x75\x29\xe3\xce\x10\xb8\xfe\x52\xee\xb3\xeb\xfe\x68\xcd\x70\xa0\xad\x39\x0b\xac\x6b\x1d\x0a\x5a\x89\xbd\xa2\xa0\xbc\xe2\x13\x27\xef\x1a\x97\x08\x6b\xe1\xc7\xcc\xf6\x19\xc6\xb7\xfb\x41\x5d\xd1\x0e\x3a\x97\xfb\x82\xa2\x6e\xef\xe1\xaf\xa1\x7c\xff\xc8\x53\x78\x9a\x71\xcb\x47\x01\x19\x76\x16\x5d\x3c\x62\xb4\xd1\xea\x50\x5c\xd4\x0d\x70\x12\x6a\xc0\x8b\x69\x61\xca\x36\xb6\x2d\xfc\xfc\x33\x44\x2b\x2e\x46\xd2\xdf\x9b\xc4\xff\x42\xc5\x71\xd0\x0d\xce\x93\x2c\xa4\x95\x9c\xe8\x10\x44\x08\x52\x42\x8c\xf2\xb6\xec\x35\xec\xd3\x9b\x19\xfc\xd7\x6a\xfe\xe9\x6b\xe1\xe3\x74\xaa\xf8\x71\x3e\x8e\xbb\xc7\x0a\x1d\xf3\x6e\x72\x25\x1d\xff\x86\x89\x04\xa5\xae\xd5\xd0\x20\x49\xc9\x74\x34\x09\x66\xd4\x47\xac\x1f\xe7\x41\x88\x14\x90\x51\xce\xc8\x07\x5b\xca\x10\x49\xfc\x6b\x14\x7e\x08\x43\x50\xf8\xd5\x94\x11\x1a\x93\x06\xad\xcb\xf9\x0d\x28\xf9\x48\xa7\x51\x25\x59\x45\x75\x24\x8f\x84\x6e\x8a\x80\x62\x9d\x4b\x2f\x48\x34\xc9\x96\x8b\xd6\x43\xaf\xc2\x61\x04\x5e\x27\xf2\x94\xa4\x25\x91\x27\x71\xeb\xc5\x23\x16\x36\x26\x86\x8e\x6f\x1c\x6d\x4d\xeb\xe1\x2f\xfd\x34\xf6\xf8\x62\xff\x44\xac\x9b\xa0\x40\x42\xcf\xdc\x2e\xeb\x28\x9e\x46\xaf\x29\x23\x12\x6f\x42\xea\x90\x8f\xb2\xb5\xf2\x39\x0e\xa6\xc7\xee\x0c\x42\x1e\x4d\x8a\x4f\xf8\x20\x5d\x34\x9e\xc3\xc0\x20\x5f\xa2\x10\xdc\x4c\x2b\x23\x43\xd0\x26\x52\x44\x20\xd4\xc6\x5a\xac\xbd\x1a\xaf\x8a\x7f\x74\x6e\x19\xfe\x22\xc7\x27\xcd\x28\xe0\xb4\xdc\x33\x67\x11\x25\x81\x1c\x87\xcf\xc5\x31\xfd\x91\x89\x37\x8b\xb7\xb7\xd7\xf1\x93\x43\xd5\x4e\x69\x26\xa1\xac\xf3\x4c\xf2\x28\xb1\xcb\x34\x36\xa9\x5a\xc2\xa3\x04\x74\x35\xa3\x5c\x8a\xc6\x14\xab\x09\x85\x2f\xcb\xa0\xdc\x27\x78\xf3\xdc\x11\xf4\x85\x54\xf1\x9a\xf7\x59\xf0\x6c\x72\xc7\x6c\xd6\x73\xc7\xe6\x84\x1b\x11\x91\xae\x35\x98\x67\x6a\xcb\xe7\xbf\xb1\x67\xa9\x20\xd6\x4e\x67\x1d\x0a\x3d\xa1\x89\x08\x88\x27\xb4\xe3\x73\x07\xbf\xc5\xb5\x81\x7b\xe9\xa2\x6c\x0a\xca\xd9\x69\xb0\x95\x1a\xa7\xe6\x2d\x6f\xba\x72\x3c\x5b\x63\xbb\xbc\x2d\x3d\x73\x79\x34\xc5\x9f\xdf\x23\x4d\xef\x0a\x02\x87\xf0\x8d\x91\x8b\x8a\x29\x12\x7e\x93\x2e\x5c\x68\x48\xb9\x74\x79\xbd\x31\xc8\xa6\x1f\x68\x8d\x08\x5b\xae\x43\x42\x96\x62\x88\xc2\xdd\x56\xd1\x6f\xf2\xcb\x4c\x3e\xcc\x64\x47\x6f\x25\x05\x26\x69\xc3\x45\x9d\x5f\x32\x50\x80\x78\xb9\x47\x5f\x15\xd8\xbb\xb0\x9d\xef\x8a\xc4\xe6\x05\xde\xb9\x19\x53\xc1\xaa\xc8\xce\x3c\x57\xb6\x9e\x04\x8c\xcd\xda\xfc\x1f\x96\x40\x16\x5f\x63\x98\x3f\xbf\x22\x64\x3e\x06\xf5\x52\x64\x49\x62\x1a\x15\x54\x9e\xd0\x60\x2c\xe0\xef\x83\x50\xe1\xdb\x8a\xa6\x79\x51\xc9\xc0\x8b\x52\x8d\xce\x03\x1c\x27\x52\xcd\x42\x95\xeb\x9f\xdd\x1e\x5b\x63\x71\xc7\xd2\x00\x7d\xac\x4a\x35\xe4\x45\x17\x1b\xd2\x1a\x78\xbc\x2d\xd9\xe3\x41\x6a\x4d\x65\xb4\xb8\x14\x2d\xd7\xa5\x2b\xb3\x5f\x27\x6e\x36\xf0\x66\xfa\xf8\x16\x3e\xbc\x1c\xed\x7f\xe4\x0a\xd9\x2f\x88\x9d\xef\xc0\xa2\xe6\x28\x91\xed\x2d\x9e\xf8\x86\x32\x0d\x17\x41\xa2\x5c\x2f\x23\xaf\xd4\x21\xa2\x69\x48\x83\x94\x85\x22\x39\xcd\x32\x2d\x57\xce\x99\xd7\xa9\x90\x45\xf2\xef\xee\xe0\xa3\x73\x68\x7d\xb9\xd2\x9a\x73\x7a\x74\xbf\x5c\x74\x30\x21\x91\x38\x48\xf2\x7a\x89\x17\xd5\xf6\xa9\x5c\x40\xcb\x70\xee\xe9\x7d\x22\x90\x88\x76\x45\x07\x91\xed\x5b\xe9\x3e\xc7\xdf\x18\x42\x8e\x0f\xe8\x1f\xc6\x1e\x6f\x6e\x6f\xef\x61\x3d\xbb\x7f\x13\x9a\x04\x71\x8a\x32\xb3\x5c\x6d\xba\x5e\x78\xde\x6b\xc2\x8f\x35\xe4\xdf\x77\xf4\xca\x55\xd5\xf7\x7f\xe9\x31\x3b\x90\x1e\x7f\x57\x2d\xba\xa1\x7b\xb5\x08\x4b\x7a\xbe\xed\x2c\x13\x04\xe0\xaf\x5d\xef\xc7\x58\x81\xf1\x9c\xa9\xc7\xf8\x83\x83\x89\x63\x66\xa4\xca\x59\x3d\x0a\x2a\xdc\x2f\x68\xcd\x52\x3a\x56\xd3\x2a\x5c\x2e\x71\xb3\x46\xa1\x2b\xa1\xbe\x3c\x06\xfe\xb4\xfd\xe9\x1e\xde\xd0\x96\xa6\xf1\xac\xc6\xa4\x5e\xa3\x4d\x1c\x32\xfe\x4d\x6a\x6a\xd2\x9b\x0b\xdf\xbf\x56\xff\x0b\x00\x00\xff\xff\xe7\x1a\xc5\x29\x66\x1c\x00\x00"

func fungibletokenCdcBytes() ([]byte, error) {
	return bindataRead(
		_fungibletokenCdc,
		"FungibleToken.cdc",
	)
}

func fungibletokenCdc() (*asset, error) {
	bytes, err := fungibletokenCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "FungibleToken.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x25, 0x9c, 0x1d, 0xaf, 0x56, 0xca, 0x66, 0xdd, 0xbe, 0x5, 0x14, 0x40, 0xee, 0xae, 0xd1, 0xf3, 0x63, 0x1d, 0x6a, 0x32, 0x37, 0x36, 0x8a, 0x96, 0xd1, 0x8, 0x7c, 0x53, 0x4, 0xab, 0xf0, 0xbb}}
	return a, nil
}

var _utilitycontractsPrivatereceiverforwarderCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x56\xc1\x8e\xdb\x36\x10\xbd\xeb\x2b\x26\x2e\xd0\x4a\xc1\x46\xbe\x14\x3d\x18\xeb\x6c\x83\x6d\xf7\x58\x2c\x92\xb4\xd7\x62\x44\x8d\x2d\x36\x32\x29\x90\x23\xab\x8b\x85\xff\x3d\x20\x25\x51\xa2\x64\x07\xd8\xbd\xac\x28\x71\x66\xde\x7b\x7c\x33\xf4\xf6\x7d\x92\xfc\x04\x4f\xad\x3a\xca\xa2\x26\xf8\xaa\xbf\x91\x82\x67\x23\xcf\xc8\x04\x9f\x49\x90\x3c\x93\x81\x47\xad\xd8\xa0\xe0\x24\xf9\x5a\x49\x0b\x62\x58\x82\x3c\x35\x35\x9d\x48\xb1\x05\x04\xdb\x90\x90\x58\x83\x21\xab\x5b\x23\x08\x50\x95\x60\xc6\x14\x52\x31\x99\x03\x0a\x82\xa4\xab\xb4\x25\x28\xa9\xd1\x56\x32\x1c\x5a\x25\x58\x6a\x05\xd2\x82\x56\xf5\x0b\x08\xac\x6b\x74\x60\x8a\x17\x40\x05\x58\x9e\xa4\x02\xae\x8c\x6e\x8f\x15\x20\x34\x6d\x51\x4b\x01\x02\x1b\x2c\x64\x2d\xf9\x25\x4f\x92\xf7\xdb\x24\x91\xa7\x46\x1b\x0e\x54\x7a\x26\x07\xa3\x4f\xb0\xc9\xb7\x79\xbe\x8d\x3e\xe4\xa2\x14\x9b\x24\x69\xda\x62\x22\x33\xb0\x1e\x49\x3f\x69\xd3\xa1\x29\xc9\xc0\x6b\x92\x00\x00\x6c\xb7\xf0\xe7\x99\x14\x03\x57\xc8\x0e\x2d\x9d\x24\x33\x95\xd0\x55\xa4\x80\x5d\x5a\x0b\x68\x02\x33\x2a\x81\x35\x70\x45\xc0\x68\x8e\xc4\x41\x0b\x9f\xcd\x95\x26\x9f\x6e\xa8\xfb\x47\x1f\x95\xe2\x49\xb7\x8a\x77\xf0\xf7\x93\xfc\xff\xb7\x5f\xef\x80\xf5\x0e\x3e\x95\xa5\x21\x6b\x1f\xb2\x24\xc4\xd6\xc4\xf0\x85\x54\x49\xe6\x0b\x6b\x83\x47\x7a\x46\xae\x76\x30\x5b\xc4\x7b\x17\xec\x6e\x06\xfd\x20\xe6\xd9\x2b\xdf\x87\x4c\xcf\x53\x99\x70\xf0\x2b\xe9\x06\xf9\xbc\x79\xa4\x75\x82\x19\xf2\xca\xcc\xa5\xf2\xfa\x75\xb2\xae\xa1\x20\xb0\xa4\x38\x8f\x63\x09\xf8\xa5\x21\x90\xaa\x94\x02\x99\xec\x70\x0e\xfe\x28\x10\x0c\x1d\xc8\x90\x12\xe4\x44\xc7\x58\xeb\x3e\x45\x78\x44\x21\xc8\xda\xd4\x52\x7d\xc8\xe0\x8c\xc6\x6d\x96\x8d\x24\xa7\xfa\x63\xb0\xd5\xfd\xcf\xaf\xb1\x65\x46\x19\x2e\x1f\x23\x52\x03\x85\x6b\x85\xb6\x5b\x67\xc7\xde\xdd\x1e\x2c\xe3\x37\x72\x60\xff\xc1\xb6\x66\xd0\xc5\x7f\x24\x18\xd0\x7a\x9b\x9b\x63\xeb\x3a\xc9\x77\xcd\xa1\x17\xd0\xce\x33\x49\x1e\xed\x14\xe0\xfe\x62\x87\x4c\xad\x95\xea\xe8\xbf\x59\xd6\x86\xca\x49\x8d\x1f\xf0\x1f\x8d\x9f\xb9\x16\x1c\x69\xa4\xae\x63\x76\xf0\x7b\x4c\xdd\x57\xc9\xe0\x35\xa4\x70\x7f\xf5\xcc\xd2\x9f\xe9\x00\x7b\x70\x8a\xe6\x01\x5d\x5e\x68\x63\x74\x97\x66\xef\x92\x55\x5c\x81\x35\xba\xb3\xda\xfb\x0e\xcd\x87\x65\xbc\x6f\x96\x3b\x8f\xd1\xdd\x7f\x70\xff\xb3\x78\xbb\xeb\xc6\x5b\xbd\x34\xe4\xef\x9b\xc9\xa3\xd4\x9d\x22\xf3\x90\x63\xdf\x58\x59\xc8\x74\x99\x92\x4a\x25\x39\x7d\xab\x35\x96\x22\x35\x86\x16\x6f\x06\x6a\x0b\x8d\xe0\xdd\x1e\x94\xac\x77\xb0\x79\xd4\x6d\x5d\x82\xd2\x0c\xfd\xb7\x69\x0a\x4f\x16\xf7\x63\xcd\x1d\xf7\x84\x69\x13\x15\xb9\x44\xab\xf8\x5c\x60\x3f\xd5\x4f\xe2\x80\x4b\x98\x74\xc2\x10\x32\xfd\x45\xdd\xd4\xcb\xfd\x2b\x67\x5f\x45\xdd\xac\xc7\x27\x58\x9d\xe4\xca\xc3\x6a\x8c\x3e\xcb\xd2\xfb\x70\x5e\x68\xf0\xa0\x9b\x15\xce\x72\xeb\x1a\x6f\x97\xdb\x59\x75\x36\x6d\x26\x81\xb9\x35\x0a\xee\x3f\xf4\x35\xe0\x6a\x85\xf0\x98\x8d\xe4\xd7\xa3\xac\x1f\xb1\xb3\xcc\x23\x78\x4b\xaa\x1c\xdc\xe6\x41\xd9\xf4\x5f\x18\xdc\x14\xe6\xf5\xdd\x30\xd5\x6e\xf7\xd3\xaa\x31\x50\x08\x67\x59\xd8\xc3\x91\xf8\x53\xbf\x48\x83\x4b\x57\xdb\x9b\x78\x42\xc3\x7e\x4c\x90\x1f\x89\xe7\x0a\xde\xba\xdc\xf2\xf0\xf4\x31\xbd\xb9\xe7\xe6\x3d\x90\xad\x9c\x3d\x19\xfa\xe1\x01\x1a\x54\x52\xa4\x6b\x47\x47\xb3\x7a\xa0\x30\xce\x3c\x32\x9b\x05\xcf\x05\xc7\xd5\x2c\xe8\x35\x8e\xa1\x5c\xf7\xb5\xef\x68\xeb\x4f\x74\x75\xf1\xdd\xf9\xd1\x79\xed\x4a\xbc\x1b\x7e\x72\x2c\x2f\xbe\xe8\xfc\x7c\x8b\xad\xee\x63\x3f\x13\xc7\x72\x8b\xcd\xb7\x2f\x64\x17\xb5\xb8\x91\x6f\x45\x4d\x68\x60\x3f\x83\xb9\x28\x35\x7a\xc2\xe2\x99\xd2\xd0\x13\x3d\xda\x34\x9b\x4d\xc5\x15\x81\xe1\x28\x2e\xc9\xe5\x7b\x00\x00\x00\xff\xff\x76\x9e\xa6\x51\x29\x0a\x00\x00"

func utilitycontractsPrivatereceiverforwarderCdcBytes() ([]byte, error) {
	return bindataRead(
		_utilitycontractsPrivatereceiverforwarderCdc,
		"utilityContracts/PrivateReceiverForwarder.cdc",
	)
}

func utilitycontractsPrivatereceiverforwarderCdc() (*asset, error) {
	bytes, err := utilitycontractsPrivatereceiverforwarderCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "utilityContracts/PrivateReceiverForwarder.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x87, 0xce, 0x6b, 0x90, 0x12, 0x2c, 0xaf, 0xe4, 0x8c, 0xfe, 0x69, 0x5c, 0x8e, 0x67, 0x97, 0x7c, 0xc2, 0xf4, 0x5d, 0x33, 0x3c, 0xd2, 0x77, 0x98, 0x6b, 0xd, 0xbf, 0xe2, 0xef, 0x17, 0x95, 0x7c}}
	return a, nil
}

var _utilitycontractsTokenforwardingCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x55\xc1\x6e\xe3\x36\x14\xbc\xf3\x2b\x66\x53\xa0\x6b\x07\x59\xf9\x52\xf4\x10\x24\xdd\x16\x69\x73\xec\x21\xd8\xb6\xc7\x82\x26\x9f\x2c\x6e\x64\x52\x20\x9f\xac\x06\x81\xff\xbd\x20\x45\xd1\x52\xe2\x14\xe9\x65\x7d\xb1\x25\xf3\xcd\x9b\x79\x33\x24\x37\x97\x97\x42\x7c\x87\xfb\xde\xee\xcc\xb6\x25\x7c\x71\x8f\x64\x71\xef\xfc\x20\xbd\x36\x76\x87\x3b\x67\xd9\x4b\xc5\x42\x7c\x69\x4c\x80\xca\x8f\x08\x8d\x1b\x02\x1a\x37\x40\x5a\x48\xa5\x5c\x6f\x19\xca\xf5\xad\x46\x20\x46\xdf\x41\x42\xf5\x81\xdd\xbe\x80\x8f\xd8\x0f\xa4\xc8\x1c\xc8\x0b\x76\x90\x6d\xeb\x06\x70\x43\x7b\xb0\x43\x3d\x76\x05\xc7\x75\x21\xbe\x91\xd0\xa6\xae\xc9\x93\xe5\xd2\x63\x68\xc8\xd2\x81\x7c\x2c\x7b\x82\x1f\xd1\x72\x4d\x15\x59\xd2\x13\x94\xb4\xe8\xfa\x6d\x6b\x42\x03\x8e\xb4\xb3\x20\xf2\xf0\x14\x5c\xef\x15\x41\x06\xc8\x42\x06\x4a\x76\x72\x6b\x5a\xc3\x4f\xf8\xda\x07\x46\x6b\x1e\x09\x12\x7f\xca\xbe\xe5\x2b\x21\xad\x8e\xed\x10\xc8\x46\x0c\xed\x28\xd8\x8f\x0c\x3a\x90\x85\x25\x8a\x94\xf1\x68\xdd\x00\xc3\x30\xe1\x44\xba\x12\xe2\xaf\x86\xec\x7c\x44\x83\xb4\x9c\xb4\x29\x4f\x92\x63\x8f\xc2\xed\x6a\x94\xa4\x64\xdb\xa6\x6e\xe3\x8a\xdf\x69\x28\x2b\x44\xdd\x5b\xc5\xc6\x45\x44\x8d\xce\xbb\x83\xd1\x14\x9b\x0e\x86\x9b\x54\x53\x04\x79\x4a\x14\x14\x81\x1b\xc9\x23\x72\xec\x3d\x1b\xb4\xe0\x86\x8c\x3f\x8d\xbb\x12\xe2\x72\x23\x84\xd9\x77\xce\xf3\x0b\xd7\x6a\xef\xf6\xb8\xa8\x36\x55\xb5\x59\xfc\x51\x29\xad\x2e\x84\xe8\xfa\xed\x29\x1a\xe9\x8f\x59\x84\x9e\x85\x00\x80\xcd\x06\xbf\x1d\xa2\x93\x89\x90\x09\xa0\xbd\x61\x26\x9d\x1c\x9d\x58\x48\x4f\xd0\xd4\xb9\x60\x78\x1c\x6b\x14\xc5\xd2\xef\x88\x27\xaf\x7d\x42\x8b\x1d\x29\xc1\x4d\xd3\xd1\xbf\x8e\x75\x2b\xb9\x8f\x93\xbe\xc6\x1f\xf7\xe6\x9f\x1f\x7f\xb8\x4a\xdc\xaf\xf1\x8b\xd6\x9e\x42\xf8\xbc\x16\xa5\xbe\x64\xa1\x0c\xf8\x7a\x29\xbb\x2a\xe3\xcc\x1a\xb2\x8e\xb4\x15\x4c\x88\xcc\x3d\x25\x8a\x73\xce\x49\xc8\x60\xda\x16\xdb\x14\x19\xae\x96\xb5\x04\x7e\xea\x08\xc6\x6a\xa3\x24\x53\xc8\x03\x49\x33\x91\x73\xe3\x5c\x7a\x9c\x89\x1e\x21\xca\x4f\xa9\x14\x85\xb0\x0a\xd4\xd6\x6b\x1c\x64\x34\x5d\x99\xce\x50\x14\x7f\x57\x02\xbd\x60\x9e\x79\x9e\x43\xdb\x6c\xa2\xf8\x31\x5e\x63\x66\xe4\x23\x85\x69\x13\xc0\x6d\xbf\x92\xe2\xb4\x6d\x2c\xa4\xdf\xf5\xfb\xb4\x2b\xad\x9e\xe2\x14\xe6\x48\x86\x27\xf3\x0a\xa7\x8f\x21\x23\xf5\x21\xa6\x22\xed\x27\x76\x9e\xf4\x49\xf2\x39\x5a\xd1\xa8\xba\xb7\x13\xf3\xd5\xe8\xe6\xcf\x4b\x9f\x12\xf0\x1a\xcf\xa5\x2a\x7e\xda\x59\x66\x1e\xa8\xc6\x2d\xe2\xa4\xaa\x42\xa8\xda\x3a\xef\xdd\x70\xf3\xfd\xf3\x79\xd3\x8f\x3f\xad\xd6\x1f\xc4\x2b\xc8\xad\x6c\x65\xb4\xe7\x36\x05\xab\xca\x8f\xcb\x75\xb3\xb6\xd5\x92\xf8\xcd\xa7\xf8\xbd\x5e\x2e\x8f\x3b\xe1\xed\x1c\xe7\x0e\x53\x90\x93\x08\x37\x58\xf2\x9f\x2b\x39\x86\x7a\x5d\xd0\x8e\x0b\xb7\x55\x23\xed\x8e\x1e\x26\xc1\xf9\x39\x2c\x7d\x81\xab\xd3\x8b\xba\x9c\x91\xd9\xb9\x7c\xbe\xe8\xd3\xd2\xff\xf2\xe7\x45\xaf\xd5\xdf\xb0\x34\x3c\x9c\x0b\xe4\x4b\x9f\x3a\x4f\x2f\xde\xc4\xcf\xbc\xfa\x3d\x4e\xe1\xc3\x2d\xac\x69\xaf\x71\x71\x97\x6e\x21\xeb\x18\x63\xd9\xb9\x43\x31\x9d\x67\x51\xe4\x89\xd6\xc5\x82\xc2\x71\xf1\xb4\x0c\x0e\x6e\x17\xec\xce\x0d\xdf\x58\xc3\xab\xb3\xdb\xf1\x7d\xea\xff\x57\x48\xbf\xad\xf4\xd7\x69\x18\x0b\x8e\xe5\x98\x7f\x7d\x71\xe5\x57\xf1\x34\xb1\x34\x2c\xae\xe3\x89\x56\xb9\xc2\xde\x88\x5d\x8e\x5c\x89\xdb\xab\x1e\x6f\x8c\x3b\x9e\x15\xa5\xdd\x69\xd0\x9e\xb8\xf7\x16\x37\x9f\xf2\x3d\x7c\x16\xa6\xfc\x5c\x67\x85\x47\xf1\x6f\x00\x00\x00\xff\xff\x91\x6b\x10\x08\x31\x09\x00\x00"

func utilitycontractsTokenforwardingCdcBytes() ([]byte, error) {
	return bindataRead(
		_utilitycontractsTokenforwardingCdc,
		"utilityContracts/TokenForwarding.cdc",
	)
}

func utilitycontractsTokenforwardingCdc() (*asset, error) {
	bytes, err := utilitycontractsTokenforwardingCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "utilityContracts/TokenForwarding.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x1f, 0x32, 0x22, 0x16, 0x73, 0xff, 0x5a, 0xd6, 0xef, 0x6d, 0xa2, 0x31, 0x18, 0xf, 0xab, 0x51, 0xc0, 0xbf, 0xd4, 0xf6, 0x9e, 0xb8, 0xfb, 0x33, 0xe3, 0x24, 0xac, 0xb, 0xe5, 0xfb, 0xa4, 0x33}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"ExampleToken-v2.cdc":                           exampletokenV2Cdc,
	"ExampleToken.cdc":                              exampletokenCdc,
	"FungibleToken-v2-ContractInterface.cdc":        fungibletokenV2ContractinterfaceCdc,
	"FungibleToken-v2.cdc":                          fungibletokenV2Cdc,
	"FungibleToken.cdc":                             fungibletokenCdc,
	"utilityContracts/PrivateReceiverForwarder.cdc": utilitycontractsPrivatereceiverforwarderCdc,
	"utilityContracts/TokenForwarding.cdc":          utilitycontractsTokenforwardingCdc,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"ExampleToken-v2.cdc": {exampletokenV2Cdc, map[string]*bintree{}},
	"ExampleToken.cdc": {exampletokenCdc, map[string]*bintree{}},
	"FungibleToken-v2-ContractInterface.cdc": {fungibletokenV2ContractinterfaceCdc, map[string]*bintree{}},
	"FungibleToken-v2.cdc": {fungibletokenV2Cdc, map[string]*bintree{}},
	"FungibleToken.cdc": {fungibletokenCdc, map[string]*bintree{}},
	"utilityContracts": {nil, map[string]*bintree{
		"PrivateReceiverForwarder.cdc": {utilitycontractsPrivatereceiverforwarderCdc, map[string]*bintree{}},
		"TokenForwarding.cdc": {utilitycontractsTokenforwardingCdc, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
