// Code generated by go-bindata. DO NOT EDIT.
// sources:
// ../../../transactions/burn_tokens.cdc (1.375kB)
// ../../../transactions/create_forwarder.cdc (2.261kB)
// ../../../transactions/generic_transfer.cdc (1.197kB)
// ../../../transactions/metadata/setup_account_from_vault_reference.cdc (1.751kB)
// ../../../transactions/mint_tokens.cdc (1.67kB)
// ../../../transactions/privateForwarder/create_account_private_forwarder.cdc (1.361kB)
// ../../../transactions/privateForwarder/create_private_forwarder.cdc (894B)
// ../../../transactions/privateForwarder/deploy_forwarder_contract.cdc (403B)
// ../../../transactions/privateForwarder/setup_and_create_forwarder.cdc (1.753kB)
// ../../../transactions/privateForwarder/transfer_private_many_accounts.cdc (1.077kB)
// ../../../transactions/safe_generic_transfer.cdc (1.812kB)
// ../../../transactions/scripts/get_balance.cdc (428B)
// ../../../transactions/scripts/get_supply.cdc (211B)
// ../../../transactions/scripts/get_supported_vault_types.cdc (952B)
// ../../../transactions/scripts/metadata/get_token_metadata.cdc (464B)
// ../../../transactions/scripts/metadata/get_vault_data.cdc (524B)
// ../../../transactions/scripts/metadata/get_vault_display.cdc (518B)
// ../../../transactions/scripts/switchboard/check_receiver_by_type.cdc (514B)
// ../../../transactions/scripts/switchboard/get_vault_types.cdc (641B)
// ../../../transactions/scripts/switchboard/get_vault_types_and_address.cdc (672B)
// ../../../transactions/scripts/tokenForwarder/is_recipient_valid.cdc (415B)
// ../../../transactions/setup_account.cdc (1.269kB)
// ../../../transactions/switchboard/add_vault_capability.cdc (1.348kB)
// ../../../transactions/switchboard/add_vault_wrapper_capability.cdc (1.376kB)
// ../../../transactions/switchboard/batch_add_vault_capabilities.cdc (1.292kB)
// ../../../transactions/switchboard/batch_add_vault_wrapper_capabilities.cdc (1.543kB)
// ../../../transactions/switchboard/remove_vault_capability.cdc (1.117kB)
// ../../../transactions/switchboard/safe_deposit_to_lnf.cdc (4.396kB)
// ../../../transactions/switchboard/safe_transfer_tokens.cdc (2.02kB)
// ../../../transactions/switchboard/safe_transfer_tokens_v2.cdc (1.799kB)
// ../../../transactions/switchboard/setup_account.cdc (1.636kB)
// ../../../transactions/switchboard/setup_royalty_account.cdc (5.804kB)
// ../../../transactions/switchboard/setup_royalty_account_by_paths.cdc (5.879kB)
// ../../../transactions/switchboard/transfer_tokens.cdc (1.481kB)
// ../../../transactions/transfer_many_accounts.cdc (1.313kB)
// ../../../transactions/transfer_tokens.cdc (1.349kB)

package assets

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	clErr := gz.Close()
	if clErr != nil {
		return nil, clErr
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _burn_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x54\x4d\x6f\xd3\x4c\x10\xbe\xfb\x57\x3c\x6f\x0e\xaf\xd2\x43\x6d\x90\x10\x87\xa8\xa1\xb4\x15\x3d\x22\x44\x0b\x9c\xd7\xf6\x24\x5e\xb0\x77\xad\xd9\x31\x69\x55\xf5\xbf\xa3\x9d\x8d\x5d\x9b\xb6\xf8\x10\x2b\xbb\x33\xcf\xc7\x7c\xb8\x28\x70\xdb\xd8\x00\x61\xe3\x82\xa9\xc4\x7a\x07\x1b\x60\x20\xd4\xf5\xad\x11\xc2\xce\x73\xfc\x3b\xbb\x97\xc6\x48\x56\x14\xa8\xfc\xd0\xd6\x28\x09\x43\xa0\x1a\xe5\x3d\xa4\x21\x98\xba\xb3\x0e\xa6\xaa\xfc\xe0\x04\xe2\x51\x0e\xec\x20\xfe\x17\xb9\x10\x93\x76\xec\xbb\x18\x68\x19\x41\x3c\x53\x8d\xef\x66\x68\x23\x5e\xa6\x5a\x48\x13\xac\xdb\xc3\x74\x0a\x71\x18\x59\x0c\x7a\xc3\xa6\x23\x21\x8e\xb8\x91\x6c\xa6\x2a\xcb\x6c\xd7\x7b\x16\xac\xae\x07\xb7\xb7\x65\x4b\xb7\x91\x73\x35\x1d\x7f\xba\x33\x5d\x3f\x9d\x66\xb3\xd4\x75\x62\xda\xe0\xdb\xb5\xbd\x7b\xff\xee\x04\x0f\x59\x06\x00\x45\x51\x24\x71\x60\x0a\x7e\xe0\x8a\xd4\x3a\x1a\xdf\xd6\x21\xf1\xab\xad\x74\x6a\x98\x50\x52\x14\x1e\x0d\x50\xad\x10\x2d\x09\x7e\x47\x88\x0d\x3e\x2e\x74\xe5\xc9\xf5\xc4\xf3\x95\x76\xc4\xe4\x22\x45\xb2\x36\x97\x8b\x0b\x2d\xaa\x2f\x7f\x52\x25\x13\xae\x56\x7a\x83\xff\xe7\x91\xb9\x46\xda\x20\x6c\xc4\xf3\x13\xfc\xad\x8a\x15\xd3\x22\x0c\x7d\xdf\xde\xc3\xef\x46\xf1\x25\xed\x3c\x93\x72\x46\xe1\x13\x7c\x0a\xbc\xd4\xdb\xb1\x34\x09\xb0\x67\xea\x0d\xd3\x3a\xd8\xbd\x23\xde\xe0\x62\x90\xe6\x22\x35\x7c\xaa\x5d\x7c\x02\xb5\xbb\x7c\x0e\x83\xed\xc2\x56\xae\x8a\x6e\x34\xe0\x29\xab\x28\xf0\xc3\x4a\x53\xb3\x39\xe0\xed\x9b\x51\xe5\x38\x36\xc7\xf9\xd2\x9a\xc2\x3a\x9d\x21\xb3\xa7\x25\x67\xba\x3d\x3b\x45\x52\x98\x97\x9e\xd9\x1f\xce\x96\x95\xd2\x06\x7c\x58\x47\xe0\x0d\x9e\xdf\xdc\x24\xe0\x2f\x46\x9a\x93\xff\x26\xf8\xf8\xe4\x87\xa3\xbc\x69\x6e\xd2\xfb\x64\xe1\xe1\x8a\x29\x6e\x8f\x01\xff\xdd\xd9\xe3\x86\xe8\xef\x34\x58\xaf\x59\x49\x61\xdb\x7f\x3a\x59\xf4\xfc\x45\x47\x1a\x31\x77\xb4\x30\x74\x7e\x8e\xde\x38\x5b\xad\x57\x57\xba\x6b\xce\x0b\x12\xd1\xeb\xf2\x47\xe1\xab\x04\xf5\x98\xbc\xd3\x1d\x55\x83\x10\x1e\x26\xfc\x38\x49\xba\x0f\xac\xfd\x98\x2c\xe5\x95\xd6\xe7\x33\x1d\x2e\xf5\x76\x3d\xab\x5e\x8a\xcf\xe3\x4b\xe5\x87\xa3\xa5\xb3\xd3\xa7\xee\xce\xc2\x6b\x0a\xc2\xfe\xfe\x98\x36\x97\xd3\xfb\x20\x33\x2d\xaf\xcd\x1e\xb6\xdb\x17\x66\xf5\x14\x63\x7b\x57\xcf\xb6\xa7\x1b\x82\xc4\x4f\x52\x4d\xd1\xc6\xfc\xeb\xa7\x29\xab\xa3\x88\xc7\xec\x4f\x00\x00\x00\xff\xff\x4f\x23\xcd\x79\x5f\x05\x00\x00"

func burn_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_burn_tokensCdc,
		"burn_tokens.cdc",
	)
}

func burn_tokensCdc() (*asset, error) {
	bytes, err := burn_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "burn_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe4, 0x53, 0xad, 0x5d, 0x1c, 0x84, 0x4, 0x1b, 0xbd, 0x5a, 0x9c, 0x45, 0x2, 0xa, 0x28, 0xf7, 0x64, 0x9e, 0x44, 0x9e, 0x6e, 0x0, 0x8e, 0x47, 0x7, 0x27, 0x21, 0xf9, 0xd3, 0x25, 0xdf, 0x6a}}
	return a, nil
}

var _create_forwarderCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x54\x4d\x8f\x23\x35\x10\xbd\xfb\x57\x94\xf6\x00\x99\x51\xa6\x23\xbe\x2e\xd1\x80\x34\x5a\x18\x84\x84\xd0\x0a\x06\xae\x6c\xc5\xae\xc4\x66\xba\xed\x96\x5d\x9d\xde\x68\x35\xff\x1d\xd9\xee\x76\xdc\xd9\x65\x72\x20\xa7\xb4\x5d\x1f\xef\xd5\x7b\xe5\xcd\xed\xad\x10\x4f\xda\x04\x60\x8f\x36\xa0\x64\xe3\x2c\x98\x00\x08\x4c\x5d\xdf\x22\x13\xec\x9d\x8f\x9f\xd5\x3d\x6b\x64\x90\x6e\x68\x15\xec\x08\x86\x40\x4a\xb0\x83\x40\x0c\x43\x0f\x68\x01\xa5\x74\x83\x65\x60\x17\x93\x47\xf4\x0a\x14\xf5\x2e\x18\x26\x05\xec\x9e\xc9\x86\x78\x87\xd6\xb1\x26\x0f\x9e\x24\x99\x23\xf9\x46\x88\x5f\xf6\x80\xf6\xe4\x2c\x41\x20\xab\x42\x1d\x1c\xfb\xf8\x2f\x03\x3c\xe6\x8a\xe4\xe1\xf7\x29\x6f\x2d\x58\x53\xf9\x82\xd1\xb4\x2d\xfc\x33\x04\x2e\xcd\x59\xbb\x40\x55\xad\x18\xfe\x17\x0e\x2d\x67\x26\x1a\x03\xec\x88\xac\x88\x0c\x30\xa4\x6b\x4f\xd2\xf4\x86\x2c\x03\x5a\x05\xd4\x99\xf8\x07\xe8\x18\x4f\x52\x92\xb1\xca\x48\x64\x0a\x62\xd4\x46\xea\x84\x6e\x6e\x18\x59\xea\xb9\x61\x33\x0d\x78\xc4\xd3\x1a\x4c\xe4\x07\x6e\xbf\xbf\x93\x1a\x8d\x85\x40\xfe\x68\x24\xc1\x88\x96\x13\xb4\xce\x59\xc3\xce\xc3\xa8\x5d\x94\x61\x2a\x68\xec\x41\x9c\xe1\x1b\x5e\x83\x61\x90\x68\x61\x44\x96\x3a\xc3\x4a\x57\x81\x08\x46\x4d\x9e\x2a\x00\x20\xb1\x23\xd8\x7b\xd7\x35\x42\xfc\xc1\xd4\x4f\x91\x59\xad\x2c\x55\x80\xd1\xb0\xce\x09\x85\x85\xdf\x0a\xf1\x55\x03\x4f\x9a\xe0\x71\xb0\x07\xb3\x6b\x09\x9e\x52\x84\x74\x96\x3d\xca\x38\x05\x26\xbf\x47\x49\x10\x74\xf2\x03\xb6\x9e\x50\x9d\xa2\x2f\x14\xf5\xad\x3b\x91\x82\xe0\x3a\x4a\xa0\xc4\xd7\xb9\x1a\xf6\x7d\x6b\x24\xc6\x7a\xbc\xac\x37\x55\xa9\xb2\x1b\xf1\x4d\x4e\xaa\x14\x99\xec\x35\x05\x6b\x3c\x12\xe0\x24\x68\x34\x2b\x27\x3f\xe7\xc2\x9e\x90\x49\x09\x00\x48\x42\x06\x76\x9e\x14\x18\x0b\x86\x43\xfa\xc2\x03\x65\xee\x08\xfd\xb0\x6b\x4d\xd0\xa4\x8a\x97\xc4\xb7\x0d\xfc\x98\x80\xa4\x79\xbe\x4f\xec\x1f\x8b\x26\x8d\x54\xf2\xfd\x19\x7c\x72\xa9\x32\xfb\x3d\xf9\x0a\xa6\xf8\xae\x89\x9e\x05\x04\x4b\x23\x3c\xe4\xc3\x2d\xbc\x4d\xc8\x52\xd9\x99\x8f\x75\xbe\xc3\xb6\x3d\xad\x13\x5c\xd6\x64\xc1\x0f\x36\x77\xce\x44\xfe\x2e\xd2\xe4\xd6\xd5\x52\xe6\xa4\x03\x31\x1b\x7b\x80\xc5\x42\x44\xe9\x17\x8d\xb2\x81\x2f\x8c\xde\x88\xdb\x8d\x10\xa6\xeb\x9d\x67\x78\x33\x0b\x9e\x18\xbf\x29\xc7\x3f\x7d\xc0\xae\xff\xe4\xf4\x62\x2c\x6f\x84\xa8\x80\xad\xe6\xf5\xde\xc2\x83\x52\x9e\x42\xb8\x81\x8f\x22\xa1\xed\x3d\xf5\xe8\x69\x85\x52\xf2\x16\x1e\x06\xd6\xd3\x78\x4a\x44\xfc\x6d\x36\xf0\x33\xf1\x0c\x36\x53\x92\xd8\xe3\xce\xb4\x86\x4f\x93\xe2\x67\x72\x3b\x8a\x03\xa8\x36\xd1\x95\x4a\x2d\x71\x65\xa3\xef\xe3\xb4\xa6\x86\x05\xe4\x4d\x09\x8e\xbf\xe6\x40\xfc\xb6\xb4\xba\xff\xe2\xe3\x62\x2c\xcd\x3c\xe1\x97\x1f\x56\xf5\x60\xca\xf9\xbb\x68\x28\xf9\x0e\x59\xdf\x2c\xe8\x54\xda\x17\x41\xb3\x3d\xa3\x95\x0d\xcf\x6f\xd4\xa5\x5e\xca\xcd\xda\x56\xef\x42\x4d\xee\x98\x76\xe0\xfe\x0e\x3e\x31\x6a\xea\xf8\x1b\x8d\xe5\xf5\x5c\x95\x41\x6c\xcf\x33\x39\xb3\x8f\x92\x34\x11\xce\xea\xfe\x2e\x55\x5d\x03\xbb\x2d\x6c\xa6\x95\xd9\x50\xc5\xb7\xd4\x5c\xb2\xfc\xd3\xb6\xc6\x3e\x27\xb8\xf4\xc1\x84\xe4\xcb\xcf\x08\x58\x52\xe2\xdb\x18\xbb\x2e\x66\x7e\x75\xb0\x8d\xd4\x24\x9f\x5f\x93\x26\x9a\xa9\x16\x35\x35\x19\x12\xb8\xeb\xb2\xcd\x49\x2f\x0b\x6a\xbf\xce\xc4\xe2\x4a\x9f\xb5\x78\x95\x5e\x6a\x1b\x9b\xbe\x86\x75\x01\xf4\x0a\xb8\xf5\x22\x98\xd1\x1f\x88\xaf\x29\x54\x52\x6e\xfe\x9b\x4f\x09\xce\xad\xae\x71\xb9\xb4\xda\x45\xfa\x25\xa9\x4d\x7a\x65\xe5\xe7\xe1\xfd\x4f\x4a\x59\xa8\x97\x7f\x03\x00\x00\xff\xff\x07\x9c\xb4\xb1\xd5\x08\x00\x00"

func create_forwarderCdcBytes() ([]byte, error) {
	return bindataRead(
		_create_forwarderCdc,
		"create_forwarder.cdc",
	)
}

func create_forwarderCdc() (*asset, error) {
	bytes, err := create_forwarderCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "create_forwarder.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xcc, 0xae, 0x8a, 0xcd, 0xfe, 0xd4, 0x90, 0x21, 0x85, 0x31, 0xd9, 0xb5, 0xdb, 0xa8, 0xf6, 0xe8, 0x2f, 0x3a, 0xb7, 0x40, 0x56, 0x9e, 0x4f, 0xa0, 0x47, 0xd4, 0xb3, 0xe6, 0x88, 0x7, 0xae, 0x1}}
	return a, nil
}

var _generic_transferCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x54\x4d\x6f\xe3\x38\x0c\x3d\x37\xbf\x82\xcd\x61\xd7\x01\x52\xf7\xb2\xd8\x43\xd0\x8f\x0d\x0a\x74\xaf\x45\xa7\x33\x77\x46\xa2\x6d\x4d\x15\xc9\xa0\xa8\xb8\x41\x91\xff\x3e\x90\xe4\x38\xc9\x14\x93\x8b\x14\x86\x7c\x7c\xef\x91\x8a\xd9\xf6\x9e\x05\xe6\xcf\xd1\xb5\x66\x63\xe9\xcd\xbf\x93\x9b\xcf\x66\xb7\xb7\xb7\xf0\x84\x0e\x7a\x0c\x01\x8c\x03\x74\x7b\x08\xe2\x19\x5b\x82\x1e\xa5\x03\x74\x1a\x98\x14\x99\x1d\x71\x89\x18\x17\x84\x50\x83\x6f\xe0\x67\x0c\x02\xd2\x11\x68\x6a\x30\x5a\xa9\x33\xde\x5b\x67\x02\x58\x92\x00\x7b\x1f\x41\x75\xde\x07\xca\x59\x92\x9a\xe6\xe0\x80\x4e\x40\x3c\x04\x72\x1a\x30\xc0\x40\xd6\xe6\x14\x85\x3d\x6e\x8c\x35\xb2\xff\x9a\x67\xd2\x35\xb7\xc8\x6d\xd6\x6e\x3f\x22\x66\x5a\x0a\x1d\x6c\x28\x0b\xa1\x8c\x89\x0e\x90\xdb\xb8\x25\x27\xd0\x11\xd3\x12\x82\x87\x01\x6d\x66\x16\x3a\x1f\xad\xce\x38\xe5\x0a\xaa\x23\xf5\x7e\xaa\xd8\xa1\x8d\x14\x52\xef\x2d\xbe\x13\x84\xc8\x45\x83\x71\x42\x4e\x93\x3e\x6f\x6d\xc2\xb1\xad\x71\x99\x9e\x30\xba\x80\x4a\x8c\x77\x15\x6e\x7d\x74\xb2\x82\xef\xcf\xe6\xe3\xdf\x7f\x96\x20\x7e\x05\x6b\xad\x99\x42\x58\x66\x5d\xc4\x2f\x28\xdd\x0a\xbe\x15\xdb\xd3\x97\xe5\x64\x79\xf9\xe9\x25\x6e\xac\x51\xe9\xbe\x80\xcf\xd9\x0c\x00\x20\xfb\x4c\xf0\x23\xd9\x0e\x4c\xc1\x47\x56\x89\x21\x0a\x74\xde\xea\x70\x32\x3c\x94\x28\x32\xc1\x86\x8c\x6b\x21\xb3\x6b\x88\x99\x74\x86\xb2\x24\x20\xb4\xed\x33\xd6\x0a\xfe\xbb\xd8\x91\x3a\x47\x4b\xcf\x9e\xa9\x47\xa6\x2a\x98\xd6\x11\xaf\x60\x1d\xa5\x5b\x2b\x95\xf4\x4d\xbc\x46\x6e\xff\x93\x00\x02\x53\x43\x4c\x2e\x11\xf3\x99\x50\xa9\xfc\x3b\xe4\x1d\x23\x0d\xbb\x0c\x7e\xac\x4b\x44\x72\xe4\x95\x1a\xb8\x1f\x93\xeb\x8d\x67\xf6\xc3\xdd\x5f\x9f\x97\xbc\x5e\xd8\xef\x8c\x26\x3e\x3c\x54\x0d\xfb\xed\xea\xcc\xcb\xc5\xec\xea\xea\xea\xf1\x11\x7a\x74\x46\x55\xf3\xa7\x3c\x5f\xe7\x05\x0a\xd4\x57\x5a\x7e\x28\xac\xb2\xd6\xeb\xf9\xe2\x24\x25\x90\x6d\xea\xc9\x1c\xb8\xbb\x99\x08\xd6\x83\x91\x4e\x33\x0e\xd3\x84\xcb\x39\x16\x1f\xca\x41\x1f\xa4\xa2\xd0\xb9\x3b\x49\x25\x93\x32\xbd\x49\x7b\x76\x0f\x2d\xc9\x68\x62\x25\x7e\xf1\x7b\x5a\xde\x82\xe2\xc7\x54\x54\xb7\x24\x4f\xd3\x43\xf9\xe2\xcc\xeb\x58\x75\x78\xa8\xce\xd7\xe8\x04\x9d\x3e\xa3\xad\xd5\xe2\xfa\x62\x6e\x6f\xe3\x6e\x1c\x57\x27\x59\xfb\xe7\xc9\x1d\xfd\x9b\xfe\x20\x4e\xcf\x77\x02\x3d\xd3\x50\x6b\xea\x7d\x30\x32\x0e\xec\xee\xe6\xd2\xdd\xc5\x68\xdc\xe1\x57\x00\x00\x00\xff\xff\x25\xef\xe5\x82\xad\x04\x00\x00"

func generic_transferCdcBytes() ([]byte, error) {
	return bindataRead(
		_generic_transferCdc,
		"generic_transfer.cdc",
	)
}

func generic_transferCdc() (*asset, error) {
	bytes, err := generic_transferCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generic_transfer.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x94, 0x93, 0xae, 0x4d, 0x39, 0xc0, 0xe4, 0x50, 0x34, 0x55, 0xf6, 0xba, 0x2c, 0xf, 0x81, 0xe5, 0x41, 0xee, 0x22, 0x7f, 0x12, 0xf1, 0x88, 0xc5, 0x6e, 0x23, 0x19, 0x77, 0xfe, 0x30, 0xfc, 0xdb}}
	return a, nil
}

var _metadataSetup_account_from_vault_referenceCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x94\xcf\x6e\xdb\x30\x0c\xc6\xef\x7e\x0a\x22\x87\xce\x05\x52\xe7\x1e\xa4\x2d\xda\x6e\xdd\x69\x40\xd1\x65\xbb\x33\x36\x6d\x0b\xb5\x25\x43\xa2\xe3\x15\x41\xde\x7d\x90\x64\xcb\x7f\xd0\x60\x03\x36\x1f\x02\x83\x21\xa9\x1f\x3f\x7d\xb4\xa8\x1b\xa5\x19\x56\xcf\xad\x2c\xc4\xa1\xa2\xbd\x7a\x23\xb9\x8a\x3e\x0c\x7f\x23\xc6\x0c\x19\x7f\x0a\xea\xcc\x98\xb3\x08\x47\x9b\xcd\x06\xf6\xa5\x30\xc0\x1a\xa5\xc1\x94\x85\x92\x20\x0c\x74\x25\x32\xa0\x04\x4c\x53\xd5\x4a\x86\x4e\xb5\x55\x06\xba\x95\xae\x82\x15\x18\x62\x10\x6c\xa8\xca\xa1\x6d\x6c\xa0\x46\x89\x05\x41\xde\x43\x00\x5b\x0a\x93\xf8\xee\x79\x2b\x5d\x6b\x57\xdd\x1a\x32\x70\xb4\x00\xb6\xee\x4d\xaa\x0e\xba\x92\x34\x0d\x6d\x6d\xbf\x92\xe0\x88\x6d\xc5\xae\x40\x48\x30\xac\xb4\x6d\x8f\x32\xb3\x69\xa9\x26\x64\x72\x69\x54\x37\xfc\xee\x93\x93\x28\x9a\x8c\x11\x63\x96\x69\x32\x66\x0b\x0f\xfe\x65\x0d\x4d\x7b\xa8\x44\xfa\x82\x5c\x6e\xe1\x25\xbc\x5f\xc3\x29\x8a\x00\x00\x1a\x4d\x0d\x6a\x8a\x8d\x28\x24\xe9\x2d\x3c\xb4\x5c\x3e\x78\x01\x6c\x0e\xf4\xcf\x66\x03\x8f\x4a\x6b\xd5\x01\x82\xa6\x9c\x34\xc9\xd4\xc1\x07\x6a\x87\x4b\x19\x28\xe9\x62\x0d\x1a\x43\x59\xd0\x12\x79\x1a\x1d\x99\xc2\x01\x15\x31\x68\x32\xaa\x3a\x92\x7e\xa5\x1c\x6e\xa1\x20\xee\x41\x86\xa9\xae\x43\xb6\x7d\x92\x82\xf8\x09\x1b\x3c\x88\x4a\xf0\x7b\x3c\xf6\x5c\xa4\x1d\x1c\xf7\xee\xea\x34\xf3\x41\xf2\xda\x1f\x76\xbe\x8b\xe7\x05\xf7\xf7\xd0\xa0\x14\x69\xbc\x7a\x72\x06\x90\x8a\xe1\xf0\x87\xd9\xed\xcd\x06\x7c\x58\x5d\x47\x53\xe1\x7e\x18\x7b\x6b\xc8\xf3\x62\x4d\xac\x05\x1d\xfd\x85\x3e\xef\x2d\x14\xcc\xd4\xc8\xd9\xc5\x6e\xe1\xb2\xc7\xad\x04\xbe\x34\xb6\x04\xc3\x48\xdb\xa9\x92\x73\x96\xaf\xc4\xc3\x81\x16\xfc\x33\x32\x7a\xf8\x5c\xab\xda\xff\x8c\x3c\x4b\x9c\x50\x71\xdb\xc3\x25\xd3\xe0\xa0\x1b\xc4\xab\x7d\x49\x83\x1d\xbc\x3e\x99\xc8\xe4\x27\x06\x51\x37\x15\xd5\x24\x79\x22\x5d\x36\x20\x2c\x54\x7b\xf2\x76\x47\x90\xd4\x4d\x0d\x0f\xad\x11\xb2\x70\x0d\xfc\x46\x7c\xb1\xff\x39\x8c\xb0\x72\x20\xa4\x11\x19\x2d\x27\x9d\xcd\x43\x63\xd9\xee\x66\x32\x47\xb2\xec\x1a\xcf\xb9\xbe\xe3\x91\x40\xf0\x70\xff\xbd\xc1\x43\x86\xdf\xa3\xc4\xe0\x91\xe2\xdd\xcd\x78\xc8\x1a\x58\x6d\xa7\x22\x26\xfd\x7a\x7b\xc7\x7e\x38\xb9\xb7\x34\xa4\xc1\xe4\x90\x2b\x3d\x91\x8e\x7e\x35\x2a\x88\xa1\x29\x25\x61\xdd\x27\x24\x93\xce\x31\xa5\x25\x53\x25\xe4\xdb\xee\xea\x34\xb3\x53\xf2\xda\x97\x9d\xef\xe2\xd9\x16\x4c\x49\x87\xd6\x16\x75\x3d\xcb\x62\xd4\x05\xf1\xc5\xb9\x42\xee\xff\x18\xf0\x80\x15\xda\xdd\xb1\x9f\xc3\xb0\x6a\x61\x58\xf3\x57\xd3\x3e\xfa\x1e\x6b\xb8\xf8\x2d\xb8\x28\x42\xdd\x57\xfc\xb3\x08\xe7\xe8\x1c\xc1\xef\x00\x00\x00\xff\xff\xc5\x40\xec\xcb\xd7\x06\x00\x00"

func metadataSetup_account_from_vault_referenceCdcBytes() ([]byte, error) {
	return bindataRead(
		_metadataSetup_account_from_vault_referenceCdc,
		"metadata/setup_account_from_vault_reference.cdc",
	)
}

func metadataSetup_account_from_vault_referenceCdc() (*asset, error) {
	bytes, err := metadataSetup_account_from_vault_referenceCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metadata/setup_account_from_vault_reference.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xea, 0x85, 0x28, 0xa9, 0xc4, 0xff, 0x4d, 0x88, 0x4f, 0x66, 0x59, 0xa5, 0x3b, 0x9a, 0xd6, 0x13, 0xbc, 0x4b, 0xdc, 0x0, 0x7, 0xb5, 0x9c, 0x14, 0x2c, 0x2d, 0xea, 0x5e, 0xaf, 0x30, 0xdd, 0x10}}
	return a, nil
}

var _mint_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x54\x4d\x6f\xdb\x30\x0c\xbd\xfb\x57\x10\x3e\x14\x0e\xd6\x3a\x97\x61\x87\xa0\x69\x91\x76\xeb\x4e\x1b\x8a\x7e\xec\x2e\xdb\x74\xa2\xcd\x96\x0c\x89\x6e\x1a\x14\xfd\xef\x83\x28\xc9\xb1\x93\xa6\xb9\x04\x90\x1f\xdf\x23\x1f\x3f\x64\xdb\x69\x43\x90\xde\xf5\x6a\x2d\x8b\x06\x9f\xf4\x3f\x54\x69\x12\x9f\x7f\xbc\x8a\xb6\x1b\x5e\x93\xf9\x7c\x0e\x4f\x1b\x69\x81\x8c\x50\x56\x94\x24\xb5\x02\x69\x61\xbb\x11\x04\xb4\x41\x68\xa5\x22\x34\xb0\x2a\x4b\xdd\x2b\x82\xde\xa2\x05\xd2\xfc\x0c\x0a\xb7\x40\x8e\xc8\x06\x1e\xdc\x41\x67\xf4\x8b\xac\x90\x63\x0d\x96\xb2\x93\xa8\x08\x44\x55\x19\xb4\x16\x84\xaa\x40\xb4\xcc\x14\x48\xce\xf9\xcd\xa1\x47\x4c\xc2\xa0\x4f\xa8\x46\x63\xb0\x72\x58\x87\x18\x58\x6a\x97\x92\x8b\x96\x6a\x9d\x24\xa3\xd4\xb3\x41\x72\x01\x2b\x8f\x3e\x0f\x82\x0b\x78\xbe\x93\xaf\xdf\xbe\xce\xe0\x2d\x49\x00\x00\x9c\xd0\x03\xd6\x68\x50\x95\x18\x25\x82\x3d\xc0\xfe\xc0\xaa\x6a\xa5\x82\x07\xb4\xba\x37\x25\x82\x2e\xfe\x62\x49\x1c\xdc\x20\xf9\x84\x19\xb2\x80\xb3\xb1\xaf\x39\x3f\x4a\x4b\x46\x90\x36\x9f\xa8\xc5\x1e\x05\xb9\x07\x2c\x51\xbe\xa0\x01\x5d\x4f\xfd\x9b\x4a\x46\xd8\x02\xce\xde\x26\x5d\xce\xe3\x97\xf7\xbd\xe6\x13\x3b\x4b\xa2\x01\xdb\x77\x5d\xb3\x63\x6e\x76\x1a\x0a\xac\xb5\xf1\x9d\x2a\x7a\xa3\x06\x11\x0f\xbc\xe1\xaf\xd1\x35\x4f\xd8\x19\xec\x84\xc1\xcc\xca\xb5\x72\xfa\xab\x9e\x36\x61\x32\x9c\xad\x10\x7e\x16\x9b\x3a\x1f\xb3\xc0\x12\x26\xfe\x70\x42\x8f\x0c\x48\x86\xa8\xf9\x1c\x6e\xb4\x31\x7a\x0b\x02\xcc\xa1\x53\x82\x3b\x31\x6a\xc0\xa0\xb3\xef\x02\x2c\xc1\x27\x96\x17\xcc\x73\xf9\x49\x53\xae\xb2\xda\xe8\x76\x01\xc7\x88\x47\xd2\x46\xac\xf1\x5e\xd0\x66\x36\x28\xb9\xdf\xf5\x35\x74\x42\xc9\x32\x4b\x1f\x59\xc5\xad\x89\xd2\xb4\x9f\x5d\x9f\x64\x3a\x9b\x94\xf4\x13\x3d\x42\x84\x05\x3a\x6c\x2d\x8f\x7f\x71\xaa\x6e\x69\x1c\x92\x7b\xfa\x41\xd5\xc3\xbc\x2c\x61\x8d\x14\x1a\xb1\x5f\x81\x69\xfa\xf9\x1a\xe9\x56\x74\xa2\x90\x8d\xa4\x5d\x36\x29\x3c\x12\xdd\xf7\x45\x23\xcb\xe3\xd2\x07\x43\x4f\xcd\xdb\x55\x76\xca\xab\x67\x25\xdc\x80\x93\x8e\x45\xc6\x7a\xf6\xb5\xa6\x3e\x36\x0c\x2d\xbe\x62\xd9\x13\xc6\x2d\x0d\x36\xde\x1a\x14\x84\x20\xe2\x3d\x72\xae\xf1\x0d\x0a\x57\x23\x42\xdd\xfc\x06\xc8\xe5\xc5\xe1\x80\xe4\x25\xb3\xfc\xc6\xed\x2f\x86\x64\xa2\x69\xf4\x16\xab\x55\x38\x10\xfe\x50\xcc\x8e\xc9\xaa\x3f\xa2\x6f\xc8\x31\x7a\xee\xdc\xfd\xb1\x05\x36\x13\x07\xc1\xe3\xac\xbf\x63\xa7\xad\xe4\x01\x68\xe3\x24\x73\xfd\xf8\x79\x43\xf3\xca\x07\x86\x21\xbd\xbc\x18\x65\x31\x52\xa8\xd0\x92\xd1\xbb\x90\xd4\xd8\xc4\x4e\x5b\x1a\x2d\xe4\xa9\xe5\x83\xe5\xf2\x83\x65\xfd\x32\x5c\xcc\xf4\xe8\x7a\xb4\xbd\x25\x28\x10\xa4\x72\x5e\x5a\xac\xa0\xd8\xf9\xf9\xe6\x90\x34\x24\xf1\xfe\x3f\x00\x00\xff\xff\xf7\x30\x9b\xe7\x86\x06\x00\x00"

func mint_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_mint_tokensCdc,
		"mint_tokens.cdc",
	)
}

func mint_tokensCdc() (*asset, error) {
	bytes, err := mint_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "mint_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa, 0xf8, 0x66, 0xb9, 0xdb, 0x63, 0xfc, 0x14, 0x70, 0xa9, 0xb2, 0xb6, 0x70, 0x5, 0x7c, 0x3d, 0x4a, 0xfe, 0x5c, 0x17, 0x4c, 0xb6, 0x2d, 0x66, 0xad, 0xbe, 0x55, 0x48, 0x3c, 0x24, 0x61, 0xf4}}
	return a, nil
}

var _privateforwarderCreate_account_private_forwarderCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x53\xcd\x6e\xa3\x4c\x10\xbc\xf3\x14\xfd\xf9\xf0\x2d\x48\x89\xb9\x47\xce\x4a\x51\x14\x9f\x56\x91\xb5\xc9\xee\xbd\x8d\x3b\x66\xe4\x31\x33\x6a\x1a\x88\x65\xf9\xdd\x57\xc3\xcf\x84\x81\x58\x1b\x2d\x17\x9b\xa6\xbb\xa6\xaa\xba\x46\x1d\xad\x61\x81\xc5\xba\x2a\xf6\x6a\xab\xe9\xd5\x1c\xa8\x58\x44\x43\xf9\xe9\x1d\x8f\x76\x56\xdd\xb0\xaa\x51\xe8\x27\x65\xa4\x6a\xe2\xb5\xe1\x06\x79\x47\xbc\x88\xa2\x34\x4d\xe1\x35\x57\x25\x08\x63\x51\x62\x26\xca\x14\xa0\x4a\xa8\x4a\xda\x81\x18\xc8\x98\x50\x08\xd0\x15\xf8\x5b\x09\x6b\x6d\x1a\xc0\x2c\x33\x55\x21\xd0\x28\xc9\x01\xc1\x76\xf0\xf0\x36\xe0\x46\xd1\x18\xed\x1c\x45\x00\x00\xee\xa4\x67\x6a\xe0\xa1\x1f\x96\x1c\x1d\x82\xd6\x90\x1b\xbd\x03\xc9\xc7\x00\x6e\x40\x93\x40\x41\x4d\xdf\x7f\x07\x0f\x95\xe4\xfd\x4b\x87\x68\x99\x2c\x32\xc5\x16\x4f\xc4\xc1\xf7\x04\xce\x6d\x87\x7b\x4a\xd2\x6f\xcb\x0f\x1c\xb8\x1f\x37\x0e\xb3\xed\x4f\xd2\xce\x5c\x3a\x70\x7a\xa7\xac\x12\x1a\xd8\x77\x0a\xe0\x05\x6b\x67\x06\xd3\xbe\xd2\xc8\x50\x63\xa5\xc5\xd9\xe4\xd8\x17\xe4\x9d\xb9\x76\xf8\xb2\xc4\x9a\xe2\xd5\xed\x78\x4d\xcb\xce\xe2\xa7\xa3\x95\xd3\x6f\x87\x17\x27\x37\x7e\xde\x3d\x62\xee\x20\x18\x68\xbb\x5e\xc4\x30\xee\x69\x83\x92\xfb\xee\x24\xe0\xfa\x38\xac\x6e\xd8\x0f\xf7\xfb\xf7\x4d\xce\xe1\xa1\xf8\x88\x16\xb7\x4a\x2b\x39\xc1\xfd\x8c\xb6\x56\xc5\x61\xf5\xff\x39\x08\xdd\x72\x88\xd3\xe5\x7b\x1c\xf0\x4d\xfb\xf3\x52\x1a\x91\x1e\x9a\x27\xd2\x90\xf7\x24\x5f\x96\xf7\x5f\xa0\xef\x57\x49\xad\xef\x53\x79\x41\x6c\xe7\xd9\x1c\x8b\xf7\x55\x58\xdd\xc2\xb5\x5b\xd2\x2f\xe8\x99\x1a\x5f\x8a\x99\x32\x65\x15\xb9\x58\xce\x0d\x4c\xe6\x91\x19\xf3\xfc\x38\x54\x8c\xbf\x4a\x65\xa7\xf7\x6f\xc1\xf1\xb3\x37\x6d\x2c\xae\x52\x9e\x7c\x18\xb9\x19\x92\xfb\xa1\x8a\x43\x78\xf5\x5a\x52\x9e\xab\x1d\xfb\xff\x79\x2a\xae\x72\xf0\xff\x26\xf9\xf8\x2a\xe9\x4d\xb5\xd5\x2a\x73\x9c\x3f\x0f\xcd\x3f\x88\x9f\xde\x94\x4b\x74\xf9\x13\x00\x00\xff\xff\x42\xc6\x37\xa6\x51\x05\x00\x00"

func privateforwarderCreate_account_private_forwarderCdcBytes() ([]byte, error) {
	return bindataRead(
		_privateforwarderCreate_account_private_forwarderCdc,
		"privateForwarder/create_account_private_forwarder.cdc",
	)
}

func privateforwarderCreate_account_private_forwarderCdc() (*asset, error) {
	bytes, err := privateforwarderCreate_account_private_forwarderCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "privateForwarder/create_account_private_forwarder.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x24, 0x2a, 0xbc, 0x90, 0x5d, 0xc4, 0x2b, 0x60, 0x58, 0x8f, 0xf0, 0x6, 0xa3, 0xd, 0xb9, 0xdb, 0x7c, 0x6e, 0x78, 0xf3, 0xa7, 0xd0, 0x8e, 0x15, 0xcb, 0x99, 0x55, 0x45, 0x87, 0xc2, 0xba, 0x2c}}
	return a, nil
}

var _privateforwarderCreate_private_forwarderCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x52\x4f\x6b\xab\x40\x10\xbf\xef\xa7\x18\x72\x78\xcf\x40\xa2\x77\xc9\x7b\x10\x4a\x73\x2c\xa1\x0d\xbd\x8f\x66\xd0\x25\x66\x77\x19\x47\xd3\x20\xf9\xee\x65\x35\x8a\x89\x09\x94\xee\x41\x96\xd9\xdf\x9f\x99\xdf\xa8\x8f\xce\xb2\xc0\x6c\x53\x99\x4c\x27\x05\xed\xec\x81\xcc\x4c\xf5\xe5\xd7\x2f\x3c\xba\x49\x75\xcb\xba\x46\xa1\x77\x4a\x49\xd7\xc4\x1b\xcb\x27\xe4\x3d\xf1\x4c\xa9\x28\x82\x5d\xae\x4b\x10\x46\x53\x62\x2a\xda\x1a\x48\x99\x50\xa8\x04\x04\x43\x27\x70\x1d\x19\xf8\xca\x06\x6d\x00\x0d\x60\x9a\xda\xca\x08\x48\x8e\x02\x5e\x66\x6f\xa9\x34\x7f\x05\xb0\x60\xc2\xfd\x19\x72\xac\x09\x70\x4a\xb7\xec\xab\x55\x52\xe8\x14\xc4\xf7\x39\x3c\x79\x95\xa4\x92\x56\xe9\x5e\xe6\x13\xab\x42\x94\x1a\xb7\xd9\x28\x05\x00\xe0\x98\x1c\x32\x05\xa5\xce\x0c\x71\x0c\xeb\x4a\xf2\x75\xd7\xdc\x1c\x9a\x16\xe2\x4f\x6f\xf2\x82\x0e\x13\x5d\x68\x39\xc3\x3f\xe8\x38\x61\xa1\xcd\x61\xf5\x67\x9c\x5d\xd8\xfa\x35\x37\x29\x87\x7d\x7e\x97\xff\xc1\x20\xeb\x4f\x74\x9d\x31\xa2\x91\x42\x0f\x5e\xdc\x40\x05\x39\x23\x89\x61\xea\xf5\x21\x96\x31\xa3\x2d\x4a\x3e\x30\xe6\x6a\xb8\x16\x24\x50\x7b\x1c\xac\x96\xf0\x6c\x9f\x61\xb7\xb9\x37\x3a\x0d\xa5\x80\x29\xd5\x4e\x93\x91\xf8\x41\x04\x23\x83\x6b\x14\x25\xd6\x14\xac\x96\xad\xd5\x02\xc4\xc6\xcf\xcd\xee\x1e\x46\x03\x4c\x65\xbb\x84\x9b\xa7\x5a\xc3\xed\x3e\xdb\x9f\xba\x6f\xdb\x1f\xca\x9b\x3f\x0e\xfc\x17\x53\x8c\xd6\xe0\xbf\x17\x75\x51\xdf\x01\x00\x00\xff\xff\xe1\x22\x7b\xda\x7e\x03\x00\x00"

func privateforwarderCreate_private_forwarderCdcBytes() ([]byte, error) {
	return bindataRead(
		_privateforwarderCreate_private_forwarderCdc,
		"privateForwarder/create_private_forwarder.cdc",
	)
}

func privateforwarderCreate_private_forwarderCdc() (*asset, error) {
	bytes, err := privateforwarderCreate_private_forwarderCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "privateForwarder/create_private_forwarder.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd0, 0x6, 0xb4, 0x0, 0xfc, 0xb9, 0x8d, 0xea, 0xfc, 0x43, 0x2b, 0x1c, 0xac, 0x26, 0x97, 0x58, 0x79, 0xd3, 0x67, 0x8c, 0x4f, 0x64, 0x38, 0xb1, 0x56, 0xcf, 0x16, 0x1b, 0xf0, 0xbf, 0xcc, 0x71}}
	return a, nil
}

var _privateforwarderDeploy_forwarder_contractCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\x4d\x4b\x03\x31\x10\x86\xef\xf9\x15\x73\xdc\x42\xe8\x5e\x65\x6f\x05\x11\xbc\x48\xa1\x7a\x12\x0f\x63\x32\xee\x0e\xb6\x33\x61\x32\x4b\x11\xe9\x7f\x97\xed\x17\xab\x5e\x9a\x43\x48\x78\x9f\x64\xde\xa7\x6d\x5b\xb8\xa7\xb2\xd5\xaf\x0a\x3e\x10\x3c\xeb\x27\xc9\x83\xda\x1e\x2d\xb3\xf4\x90\x54\xdc\x30\x39\xec\xd9\x87\x23\x51\x0b\x25\xfe\x60\xca\xc0\xc2\x0e\x05\x0d\x77\xe4\x64\x35\x04\x37\x94\x8a\xc9\x59\xa5\xb9\x3c\x7c\xc2\x1d\x75\xb0\x71\x63\xe9\x63\x80\xd9\x4a\x9a\xa9\x83\xd7\x97\x47\xf1\xbb\xb7\xdf\x51\x25\xc9\x64\x1b\x57\xc3\x9e\xd6\xe8\xc3\xf4\xc3\xf5\xf2\x87\xbd\x89\x2a\xe3\xfb\x96\xd3\x09\x5a\x5f\xcf\x0b\xf8\x0e\x01\xa0\x18\x15\x34\x6a\x2a\xf7\x42\xd6\xc1\x6a\xf4\x61\x95\x92\x8e\xe2\x67\x02\xe0\x94\x2d\x2f\x5a\x75\x89\x39\x37\x72\x94\x9b\xab\xc6\xb3\xd6\xb4\xc7\xff\x1e\x71\x5e\x37\xce\x5a\x2d\xa6\x29\x87\x70\x08\x10\x7e\x02\x00\x00\xff\xff\xf7\x8a\xb2\xb8\x93\x01\x00\x00"

func privateforwarderDeploy_forwarder_contractCdcBytes() ([]byte, error) {
	return bindataRead(
		_privateforwarderDeploy_forwarder_contractCdc,
		"privateForwarder/deploy_forwarder_contract.cdc",
	)
}

func privateforwarderDeploy_forwarder_contractCdc() (*asset, error) {
	bytes, err := privateforwarderDeploy_forwarder_contractCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "privateForwarder/deploy_forwarder_contract.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x10, 0x63, 0x44, 0x17, 0x78, 0x41, 0x47, 0x73, 0xf, 0x19, 0xd3, 0x94, 0xb2, 0xd3, 0xfb, 0xbe, 0x5e, 0xe7, 0xd4, 0xa4, 0x53, 0x61, 0x2e, 0x62, 0x52, 0xcd, 0xb6, 0xd4, 0x6b, 0x79, 0xbb, 0x6e}}
	return a, nil
}

var _privateforwarderSetup_and_create_forwarderCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\x41\x8f\xa2\x4c\x10\xbd\xf3\x2b\x2a\x73\x30\x90\xa8\xdc\x0d\x9a\xcc\x37\x99\x39\x7e\x31\xbb\x93\xbd\x97\x4d\x09\x1d\xb1\x9b\x14\x85\x8e\x31\xfe\xf7\x0d\x0d\x22\x88\xec\xba\x9b\xe5\x44\xba\xba\x5e\xbd\xaa\x57\xaf\x3d\xbd\xcf\x2d\x0b\xbc\x7c\x94\x26\xd1\x9b\x8c\x3e\xed\x8e\xcc\x4b\x7b\xfc\xfe\x85\xfb\x7c\x70\xba\x66\x7d\x40\xa1\x6f\xa4\x48\x1f\x88\x3f\x2c\x1f\x91\x63\xe2\x17\xcf\x0b\xc3\x10\x3e\x53\x5d\x80\x30\x9a\x02\x95\x68\x6b\x00\xe3\xb8\x00\x84\x1f\x58\x66\x32\x05\x84\xbc\xce\x07\x6e\x00\x60\x7b\x45\x70\xf9\x08\x1b\xcc\xd0\x28\x02\x85\x39\x6e\x74\xa6\xe5\x34\x05\x34\x71\x95\x5a\x6e\x32\xad\x3a\x81\x2a\x17\x24\xbd\x81\x79\x5e\xb7\xf4\xd9\xf3\x00\x00\x72\xa6\x1c\x99\xfc\x42\x27\x86\x78\x01\xaf\xa5\xa4\xaf\x4a\xd9\xd2\x48\x00\x67\x77\xa5\xfa\xf4\x16\xea\x1b\xf3\x84\xe4\xad\xad\x11\x4d\xc6\x3a\x9e\xb7\x7f\x2b\x7f\xf4\xce\x5d\x60\xed\x5a\x58\xa3\xa4\xc1\x5c\xa5\xa4\x76\x7e\x97\x42\xf5\x85\x61\x3b\xa2\x76\x32\x70\xc4\x02\x30\x63\xc2\xf8\x04\x05\x09\x94\x79\x2f\x87\x49\x4a\x36\xed\xd1\xc5\x7b\xd0\xd4\xc6\x32\xdb\x63\x34\xe9\xaa\x3a\x77\xaa\xac\xfc\x2d\xdb\xfd\x02\x86\x91\xef\x62\x19\x13\x72\x74\x61\xb9\x04\xa3\xb3\x21\xdb\x37\xa6\x8a\x2c\x82\xa1\x63\x0f\xa3\xd6\xdc\x69\x97\x97\x02\x5a\x40\x1b\x28\x6a\xc8\x1e\x48\xc3\xb0\xc0\x03\xf9\xbd\x40\xf5\x45\xb3\x1e\x2f\xe5\xaa\xbd\xef\x73\x39\x39\x78\x3f\x98\x0e\x52\xc4\xfe\xa6\x99\x5e\x46\xf0\x68\x6e\x0d\xa5\x4c\x9b\x5d\x34\x39\xf7\x0c\x32\xbf\x6a\x79\x59\xf5\xd9\x86\x8d\x6e\x21\x75\x6a\x5f\x2f\xf7\x59\x0a\x72\x42\xf2\x2c\xcb\xe0\xc6\x2b\x23\x69\x97\xfd\xb6\xa3\xb0\x1c\x59\xdd\x71\xe6\xbf\x24\xdb\x29\xd8\x15\x78\xe8\x3f\xb1\xce\x7e\xb5\xd0\x92\xa2\x80\x35\xd9\x09\xe8\x2b\xb7\x05\x15\x5d\x90\xea\xda\xd5\xd9\x5b\x4d\x59\x0c\x92\xb2\x2d\x93\xd4\x45\xfe\x6b\x22\xda\x08\xf1\x16\x15\x3d\x16\x62\x38\xae\xbb\x06\x1b\x9c\x7b\x65\x86\x79\x37\x1f\xfe\x43\x61\x6e\x7e\x8d\x66\x30\xfa\x22\xd4\x1b\xfc\x3f\x1d\xdb\x23\x9f\x49\xe9\x5c\x93\x91\xc5\x03\x71\x83\xc1\x56\x3a\xa3\x44\xb3\xb6\xdc\xd4\x6d\xfc\xb3\x4f\x50\xd7\xd4\x23\x0b\xff\xcc\x8b\xd7\x1b\xdb\x9f\x3f\x7f\x8f\xc7\xfe\x17\x3d\x78\x7d\x1f\x5f\xbc\x8b\xf7\x33\x00\x00\xff\xff\xb3\xf9\x82\x4b\xd9\x06\x00\x00"

func privateforwarderSetup_and_create_forwarderCdcBytes() ([]byte, error) {
	return bindataRead(
		_privateforwarderSetup_and_create_forwarderCdc,
		"privateForwarder/setup_and_create_forwarder.cdc",
	)
}

func privateforwarderSetup_and_create_forwarderCdc() (*asset, error) {
	bytes, err := privateforwarderSetup_and_create_forwarderCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "privateForwarder/setup_and_create_forwarder.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x3, 0xf4, 0xcf, 0x36, 0xa0, 0xc, 0x5e, 0xbd, 0x3c, 0x6, 0x41, 0xbb, 0xf6, 0x59, 0x16, 0x97, 0xdd, 0xe7, 0xa7, 0x29, 0xe9, 0xc7, 0x48, 0x26, 0xa5, 0x20, 0x29, 0x62, 0x73, 0xcc, 0x49, 0x63}}
	return a, nil
}

var _privateforwarderTransfer_private_many_accountsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x93\x41\x6f\x9b\x4e\x10\xc5\xcf\xde\x4f\x31\xf1\x21\x7f\x5b\xfa\x17\x5f\xaa\x1e\x50\xda\xc8\xaa\xea\x9e\x2a\x45\x49\xda\x4b\xd5\xc3\x9a\x1d\x60\x15\xd8\x41\xb3\x83\x71\x14\xf9\xbb\x57\xb0\x8b\x45\x4a\x23\x5f\x7a\x02\x0d\x33\x6f\xdf\xef\xcd\x62\xeb\x86\x58\x60\xb9\x6b\x5d\x61\xf7\x15\x3e\xd2\x13\xba\xa5\x1a\xcb\x5f\x8e\xba\x6e\x66\xd5\x3b\xb6\x07\x2d\x78\x8f\x19\xda\x03\xf2\x8e\xb8\xd3\x6c\x90\x97\x4a\x6d\x36\x1b\x78\x2c\xad\x07\x61\xed\xbc\xce\xc4\x92\x0b\xef\x39\xb2\x07\x21\xa8\xb5\x7b\x06\x6d\x0c\xa3\xf7\xe8\x41\x4a\xa6\xb6\x28\x41\x4a\xb4\x0c\x4d\x50\x06\x8e\xd2\x5e\xa9\x89\xd0\x2a\x8e\x6d\x6b\x6a\x9d\x7c\xd3\x4d\x0a\x2f\xdb\x50\x4a\xe1\xfb\xce\x1e\x3f\xbc\x3f\xad\xe1\x45\x29\x00\x80\xc1\x08\xc2\x0f\xdd\x56\x02\x8c\x9e\x5a\xce\x10\xa4\xd4\x02\x25\x55\xa6\x3f\x19\x41\x7a\x30\x1f\xaa\x9a\x11\xf6\x68\x5d\x71\xf6\xcb\x68\x06\xa9\x0a\x05\x0e\xbd\xce\x3d\xe6\x29\x5c\x4f\x43\x49\x06\x7d\x75\x6e\x8b\x00\x31\x12\xeb\x8a\x07\x74\x06\x39\x85\xeb\xb7\x42\x4b\x42\x47\x90\x68\x18\x1b\xcd\xb8\xf2\xb6\x70\xfd\xd4\xb6\x95\x72\x9b\x65\x3d\xee\x19\x2c\xc2\x7d\x45\x01\x0d\x8c\x39\x32\xba\x9e\x8c\x06\xa2\x30\xf9\x9f\x07\x2f\xc4\x68\x82\xef\xf3\x9c\xc7\x2a\x4f\x46\x14\xf8\x18\xbb\x93\x3d\x31\x53\x77\xf3\x17\xb2\x4f\xab\x9c\xa9\x4e\x61\xfe\xe5\x41\x88\x75\x81\x77\x5a\xca\xb5\x5a\x2c\x16\xb7\xb7\xd0\x68\x67\xb3\xd5\xf2\x33\xb5\x95\x01\x47\x02\x41\x77\x6e\x92\xba\xe0\x71\x10\xba\x5a\xae\xd5\x6b\x83\x6f\x84\x38\xf7\x7b\x21\xd3\xd1\xfc\x85\xb6\x7f\x4f\x72\x0a\x0f\x3c\x62\xd6\x0a\x4e\x17\x97\x13\x8f\x97\x1f\xac\x83\x3f\x2f\x74\xf2\x84\xcf\x7e\xda\x7f\x29\x93\xc4\xa3\x33\x91\x6f\x58\x8e\x1f\x7f\x92\xff\xe3\xe5\x4e\xe1\xe6\xdd\xab\xb5\x27\x9d\x95\xd2\xb0\xee\x56\x7a\x38\x36\x9d\xb9\xf8\x19\x0b\xbf\xae\xd6\x93\xd5\x9c\x22\xda\x49\xfd\x0e\x00\x00\xff\xff\x74\xad\xda\xf2\x35\x04\x00\x00"

func privateforwarderTransfer_private_many_accountsCdcBytes() ([]byte, error) {
	return bindataRead(
		_privateforwarderTransfer_private_many_accountsCdc,
		"privateForwarder/transfer_private_many_accounts.cdc",
	)
}

func privateforwarderTransfer_private_many_accountsCdc() (*asset, error) {
	bytes, err := privateforwarderTransfer_private_many_accountsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "privateForwarder/transfer_private_many_accounts.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x12, 0xe4, 0x21, 0xbf, 0x58, 0x74, 0xfb, 0x24, 0x99, 0xd8, 0xf2, 0x38, 0x76, 0xa5, 0x87, 0xba, 0x18, 0x3b, 0x44, 0xaa, 0x24, 0xe3, 0xbc, 0x5f, 0xbe, 0x12, 0x3f, 0xcb, 0xa7, 0xe9, 0xdf, 0x23}}
	return a, nil
}

var _safe_generic_transferCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x94\xc1\x6e\xe3\x36\x10\x86\xcf\xf1\x53\xcc\xfa\xb0\x2b\x01\x5e\xe5\x52\xf4\x60\x24\x4d\xdd\x00\xe9\xa1\x87\x06\x89\xdb\x3b\x2d\x8e\x24\x36\x34\x29\x70\x46\x56\x0c\xc3\xef\x5e\x90\x94\x68\x2b\x4e\xda\xec\xc9\xf4\x88\x9c\xff\x9b\x9f\x33\x54\xdb\xd6\x3a\x86\xf9\x43\x67\x6a\xb5\xd1\xb8\xb6\x2f\x68\xe6\xb3\xd9\xf5\xf5\x35\xdc\x0b\x03\xad\x20\x02\x65\x40\x98\x3d\x10\x5b\x27\x6a\x84\x56\x70\x03\xc2\x48\x70\x58\xa2\xda\xa1\x8b\x11\x65\x88\x51\x48\xb0\x15\xfc\xd3\x11\x03\x37\x08\x12\x2b\xd1\x69\x2e\x42\xbe\x75\xa3\x08\x34\x32\xc1\xde\x76\x50\x36\xd6\x12\x86\x5d\xec\x45\x43\xb0\x17\x86\x81\x2d\x10\x1a\x09\x82\xa0\x47\xad\xc3\x96\x52\xb4\x62\xa3\xb4\xe2\xfd\xe5\x3e\xe5\x97\x41\x22\xc8\xac\xcc\x7e\xc8\x18\xb0\x4a\x61\x60\x83\xa1\x10\x0c\x39\x85\x01\xe1\xea\x6e\x8b\x86\xa1\x41\x87\x0b\x20\x0b\xbd\xd0\x81\x8c\x1a\xdb\x69\x19\xf2\xc4\x25\x94\x0d\x96\x2f\xa7\x13\x3b\xa1\x3b\x24\xaf\xbd\x15\x2f\x08\xd4\xb9\x58\x83\x32\x8c\x46\xa2\x3c\x97\x56\x34\xca\x2a\x13\xf0\xd8\x09\x43\xa2\x64\x65\x4d\x26\xb6\xb6\x33\xbc\x84\xbf\x1e\xd4\xeb\xcf\x3f\x2d\x80\xed\x12\x56\x52\x3a\x24\x5a\x84\xba\xd0\x3d\x0a\x6e\x96\xf0\x1c\x6d\xf7\x7f\x16\xc9\xf2\xf8\xe9\xb1\xdb\x68\x55\xfa\x75\x0e\x87\xd9\x0c\x00\x20\xf8\x8c\xf0\xb7\xb7\x1d\x1c\x92\xed\x5c\xe9\x09\x05\x43\x63\xb5\xa4\x93\xe1\x14\xa3\xc2\x21\x6c\x50\x99\x1a\x02\x5d\x85\xce\xa1\x0c\xa9\x34\x32\x30\x6e\xdb\x90\x6b\x09\xbf\x4e\x7a\xa4\x08\xd1\xa4\xf9\x9b\x75\xce\xf6\xbe\x7c\xac\xd0\xa1\x29\x71\x44\x1d\xc5\x54\x35\x44\xbc\x94\x28\x4b\x5f\x3d\x48\x8b\x64\xbe\x31\x50\xd7\x86\x3e\xf4\x70\xbe\xf6\x80\xe3\xcf\x25\x90\xe8\xc8\xd3\x50\xfe\x13\x56\x4b\xf8\x7a\x88\x24\x63\xf0\x18\x69\x5a\x87\xad\x70\x98\x91\xaa\x0d\xba\x25\xac\x3a\x6e\x56\x51\x2f\xb9\x34\x50\xff\x8e\x0c\x02\x5c\x42\x66\x1b\x09\xc2\xc9\x6f\x14\x3a\x1e\x25\xec\x42\xa9\xe3\x39\x4f\x13\x22\x4f\x58\xc1\xed\xb0\xb9\xd8\x04\x03\x6e\xbe\x1e\xa6\x2e\x3d\x3a\xbb\x53\x12\xdd\xf1\x97\xac\x72\x76\xbb\x3c\xbb\xd9\x7c\x76\x75\x75\x75\x77\x07\xad\x30\xaa\xcc\xe6\xf7\xa1\xdb\x8c\x65\x88\xa9\x2e\xb1\x6c\x1f\xa9\x82\xf3\x5f\xe6\x79\x22\x4a\x0b\x42\x5d\x15\x17\x4e\xfd\x2f\x64\x32\xf0\xc7\x21\x3f\xca\xf4\x09\xfa\x29\x75\x6a\x34\xb8\xf9\x9e\xec\x2d\x7a\xc5\x8d\x74\xa2\x4f\xd3\x12\x7f\x63\xe9\xc3\x7d\xe3\x2b\x96\x1d\x23\x1c\x26\x37\xe4\x26\xf5\xd7\xc8\x43\x0b\x64\x6c\xf3\xa2\x46\xbe\x4f\x0f\xca\x7f\xd9\x71\x3e\x6e\xf9\x60\x5f\x96\x7f\x99\x28\x0d\xbd\x8b\x32\xe0\xaf\xf7\x2d\x12\xdc\x9e\xeb\x7b\xb9\xe7\xcb\x4d\x59\x7e\xde\x8a\x7f\x1a\xbd\x4f\x13\x38\xce\x4c\xdf\xa0\x09\xe6\xa5\x97\x56\x11\xf4\x4a\xeb\x38\x1f\xa7\x11\xf3\x33\x2d\x5c\x8d\x8c\x12\x1e\xd6\x45\x4a\xac\xaa\xf7\xf0\x8a\xd2\x1a\x16\xca\xd0\x1f\xb8\xcf\xa6\xee\x7b\x56\xbf\x27\xcb\xf3\x33\x43\xc7\x87\xe5\x0d\x9e\x6f\x96\x8f\x07\x66\xbc\xf8\xc4\x7e\x7a\xc3\x27\x89\xcf\x9d\x92\xd8\x5a\x52\x3c\xb4\xe1\xcd\xf7\x29\xdc\xc9\xb0\x23\xa0\x26\x7c\x43\xf8\x7e\xf7\x7f\x3e\xe7\xd0\x54\xc7\x7f\x03\x00\x00\xff\xff\xdd\xc9\x3c\xfb\x14\x07\x00\x00"

func safe_generic_transferCdcBytes() ([]byte, error) {
	return bindataRead(
		_safe_generic_transferCdc,
		"safe_generic_transfer.cdc",
	)
}

func safe_generic_transferCdc() (*asset, error) {
	bytes, err := safe_generic_transferCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "safe_generic_transfer.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x7b, 0x1d, 0xd7, 0x52, 0x65, 0xe2, 0x99, 0xed, 0x5e, 0xb8, 0x1c, 0x12, 0x60, 0x66, 0x98, 0x8, 0x26, 0xc, 0x76, 0x89, 0xf, 0x99, 0x97, 0xd3, 0x69, 0x82, 0x1d, 0x9d, 0x84, 0xf5, 0x5f, 0x44}}
	return a, nil
}

var _scriptsGet_balanceCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x91\x4d\x4f\x32\x31\x14\x85\xf7\xfd\x15\x27\xb3\x78\xdf\x61\x33\x6c\x8c\x0b\x22\x12\x24\xb2\x26\x06\xdd\xdf\xe9\xdc\x81\xc6\xd2\x36\xed\xad\x62\x08\xff\xdd\xcc\x07\x88\x71\x56\x93\xf6\x39\x4f\x7b\x6e\xa7\x53\x6c\xf7\x26\x21\xe9\x68\x82\x20\x32\x35\x09\xb2\x67\xd4\x64\xc9\x69\x46\x6b\xd8\x36\xf0\x2d\xc8\x81\xb4\xf6\xd9\xc9\xff\x84\xe7\x23\x1d\x82\xe5\xad\x7f\x67\x87\xa7\x01\x55\xca\x1c\x82\x8f\x82\x62\x9d\xdd\xce\xd4\xe3\x76\x71\x5d\xbe\x0d\x15\x4a\x85\x5c\xa3\xcd\x0e\x07\x32\xae\x1c\xd5\x33\x2c\x9b\x26\x72\x4a\x93\x19\x5e\xd7\xe6\x78\x7f\x87\x93\x02\x00\xcb\xd2\x1d\x2f\x98\x63\xc7\xb2\x1c\xe8\x4b\x6a\x72\x45\x3e\x28\x5b\x79\xe1\x16\xf3\x9e\xae\x76\x2c\x2b\x0a\x54\x1b\x6b\xe4\xab\xbc\xbd\x40\xf5\xd6\xa1\x9b\x5c\x5b\xa3\x37\x24\xfb\xc1\xd1\x7d\x55\xed\x63\xf4\x9f\x0f\xff\xfe\xe2\xa7\x5f\xcd\xaa\xb1\xf8\xf9\xb1\xfc\x49\x2f\x16\x08\xe4\x8c\x2e\x8b\x95\xcf\xb6\x81\xf3\x82\x41\x78\x99\x13\x22\xb7\x1c\xb9\xfb\x13\xdf\xcf\xba\x77\x17\x13\xd5\x4b\x22\x4b\x8e\xee\xda\xa4\x1a\x1f\x42\x9d\xd5\x77\x00\x00\x00\xff\xff\x24\x1a\x54\x08\xac\x01\x00\x00"

func scriptsGet_balanceCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_balanceCdc,
		"scripts/get_balance.cdc",
	)
}

func scriptsGet_balanceCdc() (*asset, error) {
	bytes, err := scriptsGet_balanceCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_balance.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x33, 0x91, 0x96, 0xc1, 0x5d, 0x89, 0xef, 0x2, 0x49, 0x43, 0x88, 0x8d, 0x9b, 0x4e, 0x6a, 0x8a, 0xfb, 0xe2, 0xd0, 0x8e, 0x10, 0x64, 0x6a, 0x29, 0x1, 0x6a, 0x7b, 0xef, 0x7e, 0x56, 0x9a, 0x2e}}
	return a, nil
}

var _scriptsGet_supplyCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8e\x3b\x8a\xc3\x40\x10\x44\xf3\x3e\x45\xa1\x48\x4a\x76\x92\x65\x83\x85\x0d\xd7\x17\xb0\x7c\x80\xb1\xd4\xb2\x06\xcf\x8f\x9e\x1e\x90\x31\xbe\xbb\x41\x92\xc1\x4e\xfb\xbd\xae\x2a\x63\xd0\xcf\xae\xa0\x0c\xe2\xb2\x42\xd8\x8e\x05\x3a\x33\x34\xa9\xf5\x28\x35\x67\x7f\xc3\xe4\xd8\x8f\x64\x0c\xd2\xb4\xc2\xff\xc5\x86\xec\xb9\x4f\x57\x8e\x28\xc1\x8a\x62\x48\x51\xc5\x0e\x4a\xe4\x42\x4e\xa2\x68\xde\xa5\x86\x28\xd7\x33\xa6\x1a\x11\xac\x8b\x6d\xf7\x8b\xd3\xc1\x2d\x3f\xdf\xb8\x13\x01\x80\x67\x7d\x95\xfd\x7d\xc4\x7f\xad\x43\x8e\x2b\xda\xd5\x74\x69\x37\xb5\xdb\x0e\xc2\x5a\x25\xee\xef\xf4\x78\x06\x00\x00\xff\xff\x2b\x05\x6e\xa1\xd3\x00\x00\x00"

func scriptsGet_supplyCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_supplyCdc,
		"scripts/get_supply.cdc",
	)
}

func scriptsGet_supplyCdc() (*asset, error) {
	bytes, err := scriptsGet_supplyCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_supply.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x1a, 0xed, 0xcc, 0x72, 0xc3, 0x16, 0x81, 0x42, 0x4b, 0x89, 0xbf, 0x56, 0xea, 0x81, 0x9b, 0x3c, 0x26, 0x5c, 0x2c, 0xa8, 0x11, 0xb4, 0xb2, 0xd9, 0xa8, 0x8d, 0x62, 0x1f, 0xd0, 0xaf, 0xe4, 0xfb}}
	return a, nil
}

var _scriptsGet_supported_vault_typesCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x53\x4f\x6f\x9b\x4e\x10\xbd\xf3\x29\x9e\x7c\xf8\x05\xa4\x9f\xf0\xdd\x6a\x1b\xa5\x95\xaa\x1e\xa3\x24\xed\x99\x65\x19\xbc\xab\x2c\x0c\x9a\x1d\x82\x2c\xcb\xdf\xbd\x5a\xb0\x1b\x63\x25\x9c\xd0\xee\xbc\x3f\xfb\x66\xc6\x77\x03\x8b\x62\xf3\x73\xec\xf7\xbe\x0e\xf4\xc2\xaf\xd4\x6f\xb2\x6c\xbb\xdd\xe2\xc5\xf9\x88\x68\xc5\x0f\x1a\x21\xa4\xa3\xf4\x11\xea\x08\x71\x1c\x12\x8a\x1a\xac\x60\x77\x11\x7a\x18\x08\xf5\x61\xae\x1a\x84\xdf\x7c\x43\x0d\x2a\x35\xb2\x27\xad\x60\x9a\x46\x28\xc6\x72\x66\xbf\x3d\x45\x74\x3c\x86\x06\x8e\x43\x33\xe3\xad\x19\x4c\xed\x83\xd7\x03\x26\xe7\xad\x83\xe5\xbe\x65\xe9\x22\x26\xaf\x6e\x2d\x5d\x3e\x91\x25\xff\x46\x02\xa1\xa8\xe2\x6d\x32\x97\xcc\xcc\x52\x93\xf3\x81\xe0\x15\x0d\x53\xec\xef\x14\x9d\x51\x25\xc1\xe4\x48\x1d\xc9\xb5\x92\x50\x4b\x12\xa1\x8c\xf6\xcc\x0f\x4d\x02\x60\x81\x81\x1d\xa3\x72\x07\xb9\x88\x05\xff\x4a\x58\x5e\xb3\xb2\xf3\x3c\x79\xb5\xae\x66\x23\x4d\x95\x90\xd5\x7c\x7a\xf1\x58\x95\xf8\xc5\x13\x25\x82\x73\x08\x8f\x46\x5d\x05\xa5\x10\x62\x32\x25\x74\x1b\x40\x54\x16\x8a\xd9\x30\xd6\xc9\x17\x3a\xe3\xfb\x7c\x81\xee\xf0\xb0\xe4\xf7\x3f\xde\xb9\x76\x78\x1c\xeb\xe0\x6d\xfa\x2f\x76\x38\xbe\x1c\x06\xda\xe1\x3b\x73\x38\xe1\x98\x65\x00\xb0\xdd\xe2\xc1\xda\x94\xfb\x8d\x54\xcb\xb2\x6e\xdf\x42\x7b\x69\xd3\x0c\x0e\xa4\x57\x90\x27\x6a\xf1\x15\x7b\xd2\x07\x6b\x79\xec\xf5\xec\xac\x98\x4b\x6f\xbf\x72\x4f\xfa\xe3\x1f\xf4\xcb\x7f\xc7\x8f\xfb\x78\xfa\x96\xbf\x3f\xe7\x13\xa6\x9a\x45\x78\xca\x0b\x7c\x78\x7d\x7f\x8f\xc1\xf4\xde\xe6\x9b\xdf\xbd\x59\xfa\x88\x05\xb1\x9a\xac\x34\x4a\x57\x33\x13\xc7\x7a\x19\xe2\xcf\x7c\xa1\x15\xee\x30\x18\x75\x9b\xd2\x72\x6f\x8d\x5e\x19\x2d\x95\x9f\x55\x7c\xbf\xcf\x8b\xa2\xb8\xc4\xfc\x34\x6f\xce\xcd\xe2\xbc\x99\x31\xe8\xac\x14\xcb\xb9\x70\xd9\xaf\x75\xaa\x29\xab\xe7\x0b\xe4\x4f\x42\xa4\x46\xc6\xbc\xc8\x4e\x7f\x03\x00\x00\xff\xff\x92\x10\x56\x2c\xb8\x03\x00\x00"

func scriptsGet_supported_vault_typesCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_supported_vault_typesCdc,
		"scripts/get_supported_vault_types.cdc",
	)
}

func scriptsGet_supported_vault_typesCdc() (*asset, error) {
	bytes, err := scriptsGet_supported_vault_typesCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_supported_vault_types.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xfd, 0xa4, 0xf4, 0x38, 0xac, 0xc6, 0x31, 0xb8, 0xfe, 0xf4, 0x42, 0x2f, 0xfd, 0x38, 0xef, 0xe6, 0x9e, 0x28, 0x20, 0x95, 0x8f, 0xc1, 0xc6, 0x7b, 0xb2, 0x5d, 0x59, 0xef, 0x76, 0xe5, 0x37, 0x33}}
	return a, nil
}

var _scriptsMetadataGet_token_metadataCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xcd\x6a\xc3\x30\x10\x84\xef\x7a\x8a\xc1\x87\xe2\x5c\xf2\x00\xa6\x6e\x08\xa1\xb9\x15\x42\x08\xb9\xaf\xed\xb5\x23\x2a\x4b\x46\x5e\xd9\x2d\x21\xef\x5e\x5c\xd9\xe9\x0f\xb4\x27\x69\x87\x99\x8f\xd9\xd5\x6d\xe7\xbc\x20\x79\x7e\xa3\xb6\x33\x7c\x72\xaf\x6c\x13\xb5\xa8\xfb\x60\x1b\x5d\xcc\xf2\x0b\x0b\x55\x24\x74\xd6\x3c\xf6\x5f\x9e\x5f\xb2\xea\x42\x81\x3a\x58\xb4\xa4\x6d\x4a\x55\xe5\xb9\xef\x33\x6c\xe3\x67\x95\xe1\x6f\xe6\x7a\x7f\x9a\xde\xab\x02\x0c\x0b\xa8\x2c\x5d\xb0\x82\x1c\x0d\xcb\x36\x0e\x0b\x70\xa5\x66\xd3\x40\xc1\xc8\x91\x6b\xe4\x8b\x5f\x01\xc0\xba\x61\xd9\x51\x47\x85\x36\x5a\xde\xd3\xef\xdb\xad\xcf\x53\xe4\x10\x0a\xa3\xcb\x03\xc9\x65\x15\x03\x85\xf3\xde\x8d\x8f\x0f\xd7\x9f\x95\x8e\xdc\x3b\x33\xb0\xbf\x3d\xa5\xd1\xb8\xd9\xa0\x23\xab\xcb\x34\xd9\xb9\x60\x2a\x58\x27\x88\x59\x10\x3c\xd7\xec\xd9\x96\x0c\x71\x90\x0b\xc7\x7a\xf0\x33\x24\xb9\xd7\xae\x65\xc2\x23\xff\xef\x1a\x0d\x4b\x3c\x48\x3a\x68\x1e\x97\x22\xd9\x7d\xe5\x4f\x98\x67\x09\xde\xce\x3c\xa5\x6e\x1f\x01\x00\x00\xff\xff\x76\x87\x8a\xb2\xd0\x01\x00\x00"

func scriptsMetadataGet_token_metadataCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsMetadataGet_token_metadataCdc,
		"scripts/metadata/get_token_metadata.cdc",
	)
}

func scriptsMetadataGet_token_metadataCdc() (*asset, error) {
	bytes, err := scriptsMetadataGet_token_metadataCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/metadata/get_token_metadata.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x92, 0x12, 0xe, 0x20, 0x79, 0x76, 0x86, 0x56, 0x3, 0x39, 0xf7, 0x42, 0xc0, 0x8a, 0x52, 0xe1, 0x25, 0xf0, 0xaf, 0xdf, 0x21, 0x23, 0xc4, 0x5, 0x25, 0xe2, 0x99, 0xa1, 0x2f, 0xaa, 0xb6, 0x38}}
	return a, nil
}

var _scriptsMetadataGet_vault_dataCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\x41\x6b\xc2\x40\x14\x84\xef\xfb\x2b\x86\x1c\x4a\xbc\xf8\x03\xa4\x56\xc4\xd6\x5b\x41\x44\xbc\xbf\x24\xcf\xb8\x74\xb3\x1b\x36\x6f\x4d\x8b\xf8\xdf\x4b\xb2\x09\x46\xa1\xbd\x25\xc3\xcc\xec\x37\x4f\x57\xb5\xf3\x82\xe4\xe3\x9b\xaa\xda\xf0\xc1\x7d\xb1\x4d\xd4\xa8\x6e\x83\x2d\x75\x36\xc8\x9f\x2c\x54\x90\xd0\x51\x73\xdb\xdc\x3d\x4f\xb2\xaa\x43\x86\x53\xb0\xa8\x48\xdb\x94\x8a\xc2\x73\xd3\x2c\xb0\x8e\x1f\xb3\x05\xfe\xee\x9c\x6f\x0f\x47\x0a\x46\xde\x49\xe8\xaa\x00\xc3\x02\xca\x73\x17\xac\x60\x89\x92\x65\x1d\x7f\xc6\xd6\x99\x1a\x4c\x97\x2e\xb5\xe7\x13\x96\xa3\x5f\x01\xc0\xbc\x64\xd9\x50\x4d\x99\x36\x5a\x7e\xd2\xe9\xc4\x79\xff\xd0\x2e\x64\x46\xe7\x3b\x92\xf3\x2c\x06\x32\xe7\xbd\x6b\x5f\x5f\xae\x8f\x5c\x7b\x6e\x9c\xb9\xb0\xbf\xbd\xa5\xd1\xb8\x5a\xa1\x26\xab\xf3\x34\xd9\xb8\x60\x0a\x58\x27\x88\x59\x10\x3c\x9f\xd8\xb3\xcd\x19\xe2\x20\x67\x8e\x78\xf0\x43\x49\xf2\x88\xdd\x8d\xc5\xf2\xbf\xab\x94\x2c\x93\xc3\xa4\xe3\xd8\x67\x92\x3e\x89\xc2\x71\xd3\xe3\xe8\x6e\x6b\xc5\x56\x30\x09\xe3\xa2\xb9\x8d\x00\x9e\x25\x78\x7b\x67\x50\xea\xf6\x1b\x00\x00\xff\xff\xd5\x54\x6a\xae\x0c\x02\x00\x00"

func scriptsMetadataGet_vault_dataCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsMetadataGet_vault_dataCdc,
		"scripts/metadata/get_vault_data.cdc",
	)
}

func scriptsMetadataGet_vault_dataCdc() (*asset, error) {
	bytes, err := scriptsMetadataGet_vault_dataCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/metadata/get_vault_data.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x54, 0x67, 0xdf, 0xe6, 0xc, 0x3c, 0x4b, 0xdd, 0x19, 0xfb, 0x56, 0xcf, 0x8, 0xdd, 0x83, 0xde, 0x7a, 0x9a, 0xdc, 0x18, 0xf0, 0xe3, 0xda, 0xe0, 0xd7, 0x29, 0x88, 0xb5, 0x32, 0xea, 0x9c, 0xbf}}
	return a, nil
}

var _scriptsMetadataGet_vault_displayCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xc1\x6e\xf2\x30\x10\x84\xef\x7e\x8a\x51\x0e\xbf\xc2\x85\x07\x40\x3f\x45\x88\x96\x5b\x25\x84\x10\xf7\x4d\xb2\x09\x56\x1d\x3b\xb2\xd7\x50\x84\x78\xf7\x0a\x9c\x84\x16\xa9\xbd\xd9\xab\x99\xd9\x6f\x56\xb7\x9d\xf3\x82\xec\xed\x93\xda\xce\xf0\xce\x7d\xb0\xcd\xd4\x30\x5d\x47\xdb\xe8\xa2\x1f\xbf\xb3\x50\x45\x42\x7b\xcd\xa7\xf0\xd0\x3c\x8d\x55\x17\x0b\xd4\xd1\xa2\x25\x6d\x73\xaa\x2a\xcf\x21\xcc\xb0\x4c\x8f\xc9\x0c\xbf\x67\x4e\xd7\xbb\x57\x1d\x3a\x43\xe7\x8b\x02\x0c\x0b\xa8\x2c\x5d\xb4\x82\x39\x1a\x96\x65\xfa\x0c\x99\x13\xd5\x8b\x8e\x14\x8d\x6c\xb9\xc6\x7c\xd0\x2b\x00\x98\x36\x2c\x2b\xea\xa8\xd0\x46\xcb\x39\xff\x5e\x70\xba\xbf\x59\x36\xb1\x30\xba\xdc\x90\x1c\x26\xc9\x50\x38\xef\xdd\xe9\xff\xbf\xcb\x4f\xaa\x2d\x07\x67\x8e\xec\xaf\x2f\x79\x12\x2e\x16\xe8\xc8\xea\x32\xcf\x56\x2e\x9a\x0a\xd6\x09\x92\x17\x04\xcf\x35\x7b\xb6\x25\x43\x1c\xe4\xc0\x09\x0f\xbe\x0f\xc9\x46\xec\x5a\xfa\xb2\x98\xff\x75\x93\x86\x65\x3c\x4b\x3e\x54\x7d\xe6\xb8\xfb\x50\x39\x0e\x77\x18\x7d\x6b\xda\xb2\x15\x8c\x56\x1c\x35\x9f\xd2\x72\xcf\x12\xbd\x7d\xec\x57\xea\xfa\x15\x00\x00\xff\xff\xfc\x7e\x37\xf6\x06\x02\x00\x00"

func scriptsMetadataGet_vault_displayCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsMetadataGet_vault_displayCdc,
		"scripts/metadata/get_vault_display.cdc",
	)
}

func scriptsMetadataGet_vault_displayCdc() (*asset, error) {
	bytes, err := scriptsMetadataGet_vault_displayCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/metadata/get_vault_display.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa3, 0x95, 0xd0, 0x18, 0x68, 0xd3, 0x7b, 0x2, 0xed, 0x7, 0xdb, 0xb6, 0xc2, 0x16, 0x80, 0xb4, 0xad, 0xcc, 0x16, 0x54, 0x19, 0x7a, 0x90, 0x26, 0x55, 0x2c, 0xc, 0x12, 0x7b, 0x7, 0xbf, 0x57}}
	return a, nil
}

var _scriptsSwitchboardCheck_receiver_by_typeCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x91\xc1\x6e\xea\x30\x10\x45\xf7\xf9\x8a\xab\x2c\x9e\xe2\x4d\x3e\x00\xf1\xa0\x50\xb5\x6b\x04\xb4\x7b\xdb\x99\x24\x16\x8e\x6d\x39\xe3\xd2\x08\xf1\xef\x15\x0d\xb4\x69\x25\x16\xdd\x8d\xe5\x73\xe5\xe3\x3b\xa6\x0b\x3e\x32\xf2\xe7\xe4\x1a\xa3\x2c\xed\xfd\x81\xdc\xee\x68\x58\xb7\xca\xcb\x58\xe5\xd9\x8d\x78\x7a\x97\x5d\xb8\x02\x79\x96\x85\xa4\x50\x27\x87\x4e\x1a\x57\xf4\xdf\x81\x19\x56\x55\x15\xa9\xef\xc5\x0c\x6b\xef\x2d\x4e\x99\x25\xc6\x84\xd8\x52\x8d\xff\x68\x88\x57\x5a\xfb\xe4\x78\x9a\x16\x19\x00\x94\x0d\xf1\xa3\x0c\x52\x19\x6b\x78\x98\xff\x3b\xdd\xb3\x2b\x27\xf3\x26\x29\x6b\xf4\x79\x51\xdc\x85\x47\x62\x23\xb9\xbd\x3e\xa3\x7c\x8c\xfe\x58\x08\x7c\x1e\x97\x4b\x04\xe9\x8c\x2e\xf2\x17\x27\x95\x25\xb0\xc7\x48\x40\x7f\xc9\xe0\x68\xb8\x45\xa4\x9e\xa3\xd1\x4c\x15\x78\x08\x04\x5f\xe3\x2f\x8e\xa8\xa3\xef\x90\x97\xda\x3b\x2d\x7f\xfc\xbf\x64\xbf\xe3\x68\x5c\x53\x08\x71\xbb\x46\x2e\xc7\xa2\x72\x31\x7a\x47\xe2\x14\xdd\xaf\x4a\x4b\xdd\x92\x3e\x6c\x49\x93\x79\xa3\xb8\x1e\xf6\x43\xa0\xe2\x22\x37\xc3\x65\x9c\x3f\x4c\xf7\x57\xbe\xca\x64\x79\x51\x08\x91\x9d\x3f\x02\x00\x00\xff\xff\xa1\xce\xc8\x54\x02\x02\x00\x00"

func scriptsSwitchboardCheck_receiver_by_typeCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsSwitchboardCheck_receiver_by_typeCdc,
		"scripts/switchboard/check_receiver_by_type.cdc",
	)
}

func scriptsSwitchboardCheck_receiver_by_typeCdc() (*asset, error) {
	bytes, err := scriptsSwitchboardCheck_receiver_by_typeCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/switchboard/check_receiver_by_type.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x55, 0x44, 0xe6, 0x58, 0xfe, 0x62, 0xe9, 0x38, 0x1, 0xf2, 0x9a, 0x4f, 0x6, 0x32, 0xc4, 0x26, 0x8d, 0x39, 0xc5, 0xb3, 0x1b, 0xd3, 0x5, 0xfe, 0x74, 0x32, 0x77, 0x2c, 0x3, 0x39, 0x55, 0x4c}}
	return a, nil
}

var _scriptsSwitchboardGet_vault_typesCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x51\x4d\x6b\xe3\x30\x10\xbd\xeb\x57\x3c\x7c\x58\xec\x8b\x7d\x0f\x9b\x0d\x21\xb0\x7b\x0d\xd9\xd0\x4b\x29\x44\x96\xc7\xb6\xa8\x2d\x19\x69\xd4\x10\x42\xfe\x7b\x91\xdd\x34\x4e\x69\xa0\x3e\x99\xd1\xfb\x98\x79\x4f\xf7\x83\x75\x8c\xe4\x6f\x30\x8d\x2e\x3b\xda\xdb\x57\x32\x89\xf8\x76\xfc\xff\xa8\x59\xb5\xa5\x95\xae\x4a\x84\x28\x0a\xec\x5b\xed\xe1\x95\xd3\x03\xc3\x91\xac\x3c\xb8\x25\x78\xb6\x8e\x2a\xbc\xc9\xd0\x31\x94\x1c\x64\xa9\x3b\xcd\x9a\x3c\x6a\x67\x7b\x48\xf8\x9b\x0e\xac\x89\x9c\x28\x36\x48\xef\xa9\x82\x54\xca\x06\xc3\x62\x08\x25\xea\x60\xd0\x4b\x6d\xd2\x8f\xe1\x02\xeb\xaa\x72\xe4\x7d\xb6\xc0\xf3\xfe\x34\xd0\x0b\xce\x42\x00\x40\x47\x1c\x99\x8c\x25\x1a\xe2\xf5\x04\xbf\xd2\xb2\x09\x53\x14\xf8\x17\x61\x70\x54\x93\x23\xa3\x08\x6c\xa7\x8d\x67\x0b\x29\x6b\x6a\xeb\x7a\x6d\x9a\xf8\x3a\x3b\x79\x1b\xca\x4e\xab\x4f\xb7\x19\x67\x47\x35\x96\xa3\x7d\xde\x10\x6f\xae\x17\x9f\xd2\x47\xe9\xe5\x93\xd6\x56\x72\x9b\x8d\x82\xf1\xcb\x4b\xeb\x9c\x3d\xfe\xfe\xf5\x90\x35\xfb\x3f\xff\x04\x34\xb9\x5c\xfe\xa4\x37\x93\xd5\x0a\x83\x34\x5a\xa5\xc9\xc6\x86\xae\x82\xb1\x8c\xc9\xf7\x3e\x95\xd9\x75\xc9\x2d\xbe\x1d\x71\x70\x63\x61\x70\xe4\x63\xbd\xb6\xc6\xa1\x21\x7e\x8a\x5d\xc7\x42\x7c\x9a\x1d\x46\xb4\x9b\xa0\xf7\x29\xe5\x5f\xa0\x42\x5c\xc4\x7b\x00\x00\x00\xff\xff\x44\x74\xa4\xe1\x81\x02\x00\x00"

func scriptsSwitchboardGet_vault_typesCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsSwitchboardGet_vault_typesCdc,
		"scripts/switchboard/get_vault_types.cdc",
	)
}

func scriptsSwitchboardGet_vault_typesCdc() (*asset, error) {
	bytes, err := scriptsSwitchboardGet_vault_typesCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/switchboard/get_vault_types.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x9e, 0x61, 0xc3, 0xb8, 0x48, 0xa, 0x60, 0x67, 0x86, 0x25, 0x55, 0xd0, 0x62, 0x32, 0x52, 0x30, 0xbb, 0xb8, 0x51, 0x98, 0x50, 0xd, 0x8b, 0x98, 0x93, 0xaf, 0x2f, 0xa6, 0x1c, 0x69, 0x31, 0x10}}
	return a, nil
}

var _scriptsSwitchboardGet_vault_types_and_addressCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\xcd\x8a\xe3\x30\x10\x84\xef\x7a\x8a\xc2\x87\xc5\xbe\xd8\xf7\xb0\xd9\x10\x02\xbb\xd7\x90\x0d\x33\xd7\xc8\x72\xdb\x16\x63\x4b\x46\x6a\x4d\x08\x21\xef\x3e\xc8\xce\x8f\x03\x13\x18\x9f\x4c\xab\xbf\xaa\xee\x2e\xdd\x0f\xd6\x31\x92\xbf\xc1\x34\xba\xec\x68\x6f\x3f\xc8\x24\xe2\xdb\xf2\xff\xa3\x66\xd5\x96\x56\xba\x2a\x11\xa2\x28\xb0\x6f\xb5\x87\x57\x4e\x0f\x0c\x47\xb2\xf2\xe0\x96\xe0\xd9\x3a\xaa\xf0\x29\x43\xc7\x50\x72\x90\xa5\xee\x34\x6b\xf2\xa8\x9d\xed\x21\xe1\x1f\x3a\xb0\x26\x32\x51\x6c\x90\xde\x53\x05\xa9\x94\x0d\x86\xc5\x10\x4a\xd4\xc1\xa0\x97\xda\xa4\xd7\xe2\x02\xeb\xaa\x72\xe4\x7d\xb6\xc0\x79\x7f\x1a\xe8\x5e\xb8\xe0\x2c\x04\x00\x74\xc4\x51\x82\xb1\x44\x43\xbc\x9e\xb8\x1b\x9f\x4d\x3d\x45\x81\x7f\xb1\x0d\x8e\x6a\x72\x64\x14\x81\xed\x34\xfa\x6c\x32\x65\x4d\x6d\x5d\xaf\x4d\x13\x5f\x67\xbb\x6f\x43\xd9\x69\x75\x77\x9b\x31\x3b\xaa\xb1\x1c\xed\xf3\x86\x78\x73\x5b\xfd\x94\xbe\x3a\x63\x3e\x69\x6d\x25\xb7\xd9\x28\x18\xbf\xbc\xb4\xce\xd9\xe3\xef\x5f\x2f\xa9\xd9\xff\xf9\x27\x4d\x93\xcb\xe5\x4f\xfa\x30\x59\xad\x30\x48\xa3\x55\x9a\x6c\x6c\xe8\x2a\x18\xcb\x98\x7c\x9f\xaf\x32\xdb\x2e\x79\x9c\x6f\x47\x1c\xdc\x98\x1c\x1c\xf9\x98\xb3\xad\x71\x68\x88\xdf\x62\xe8\x31\x19\xff\xae\xb9\xbd\x86\x93\x66\x87\x11\x74\x13\xf5\x7c\xb0\xfc\x35\x25\xc4\x45\x7c\x05\x00\x00\xff\xff\x56\xa9\x8a\xc2\xa0\x02\x00\x00"

func scriptsSwitchboardGet_vault_types_and_addressCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsSwitchboardGet_vault_types_and_addressCdc,
		"scripts/switchboard/get_vault_types_and_address.cdc",
	)
}

func scriptsSwitchboardGet_vault_types_and_addressCdc() (*asset, error) {
	bytes, err := scriptsSwitchboardGet_vault_types_and_addressCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/switchboard/get_vault_types_and_address.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x52, 0xa9, 0x44, 0xf9, 0xef, 0xd, 0xe8, 0xce, 0x64, 0x4a, 0xea, 0xce, 0x60, 0x6a, 0x24, 0xe0, 0xce, 0xc2, 0xbd, 0xef, 0xfd, 0x2, 0x33, 0x28, 0x30, 0x33, 0x68, 0x38, 0x9b, 0x5e, 0xaf, 0xb1}}
	return a, nil
}

var _scriptsTokenforwarderIs_recipient_validCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\x4d\x6a\xc3\x30\x10\x85\xf7\x3e\xc5\xc3\x8b\x62\x43\xc9\x01\x4c\xdb\x90\x16\xb2\x0e\xa5\x3d\x80\x7e\xc6\x8e\x88\xac\x11\xe3\x11\x21\x84\xdc\xbd\xd4\xa6\x85\x94\x84\x6a\xa5\xc5\x37\xef\x7d\x33\x61\xcc\x2c\x8a\xfa\x83\x0f\x94\xb6\x2c\x47\x23\x3e\xa4\xa1\xae\xaa\x5c\x2c\xfa\x92\x30\x9a\x90\x1a\xe3\xbd\x74\xd8\x78\x2f\x34\x4d\x8f\xd0\x6b\x7a\x67\x74\xdf\x61\x57\x6c\x0c\xee\xfb\xdf\x76\x78\x65\x8e\x38\x57\x00\x10\x49\xd1\x2f\x2c\xc9\x3b\xf5\x78\xc6\x40\xba\x71\x8e\x4b\xd2\x39\xb9\x9d\xb9\x1b\x6f\x35\x90\xbe\x99\x6c\x6c\x88\x41\x4f\x4f\x0f\xe7\x3f\x9a\xab\xed\x4f\xee\x52\x7e\x79\x69\x6e\xa8\xdd\x8f\xb7\x2c\xc2\xc7\xe6\x2e\xb0\x5e\x23\x9b\x14\x5c\x53\x7f\x26\x63\x23\x41\x19\xcb\x0c\xfe\x55\x81\xd0\xa4\x12\x9c\x42\x4f\x99\xd0\x0b\x8f\x30\x70\xbf\xdb\xd4\x6d\x35\xd7\x0a\x69\x91\x74\x75\xa1\x95\xdb\x93\x3b\x34\x6d\x75\xf9\x0a\x00\x00\xff\xff\xb8\x92\x35\x6f\x9f\x01\x00\x00"

func scriptsTokenforwarderIs_recipient_validCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsTokenforwarderIs_recipient_validCdc,
		"scripts/tokenForwarder/is_recipient_valid.cdc",
	)
}

func scriptsTokenforwarderIs_recipient_validCdc() (*asset, error) {
	bytes, err := scriptsTokenforwarderIs_recipient_validCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/tokenForwarder/is_recipient_valid.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe, 0xf9, 0x8a, 0xa8, 0x4d, 0xb0, 0xa2, 0x52, 0xbe, 0x82, 0xa7, 0x78, 0xf, 0x4d, 0x15, 0xa8, 0x9c, 0x21, 0x36, 0x90, 0xba, 0x49, 0x1, 0xce, 0x61, 0xff, 0x59, 0x18, 0xe8, 0x11, 0x5c, 0x36}}
	return a, nil
}

var _setup_accountCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x53\xd1\x6a\xdb\x30\x14\x7d\xf7\x57\x9c\xe5\x61\x24\xd0\xc5\xef\xa5\x2b\x74\xa3\x7b\x1b\x94\xac\xf4\xfd\xc6\xbe\xb6\x45\x15\xc9\x5c\x5d\x35\x35\x21\xff\x3e\xac\x38\x9e\xbd\x86\x0d\xc6\xa8\xde\x74\x74\x74\xee\xb9\x47\x57\x79\x8e\xc7\xc6\x04\xa8\x90\x0b\x54\xa8\xf1\x0e\x26\x80\xa0\xbc\x6b\x2d\x29\xa3\xf2\xd2\x6f\x27\xe7\xea\x41\xd6\xfa\x3d\xb2\x3c\x07\xb9\xce\x3b\x4e\x58\x59\x82\xf0\x44\xd1\x2a\x84\x83\x8f\x52\x24\x5c\x1b\x36\x02\x2a\x0a\x1f\x9d\x22\xf4\x00\x69\xba\xab\x0d\x77\x28\xc8\x21\x06\xee\x37\xe0\x57\xda\xb5\x96\x1f\xfd\x33\xbb\x2c\x33\xbb\xd6\x8b\x62\xf1\x2d\xba\xda\x6c\x07\x78\x31\xc2\xf7\x13\xf2\x2f\xf4\x3b\x2b\x95\xa4\xf4\x64\x78\x1f\x16\x59\x36\x35\xbe\x5c\xe1\x90\x65\x00\xd0\x0a\xb7\x24\xbc\x0c\xa6\x76\x2c\xd7\xb8\x8b\xda\xdc\x9d\x1c\x8e\x9c\x7e\xe5\x39\x36\xac\x51\x1c\x98\xc4\x76\x30\x55\xf2\x79\x6e\x86\xac\x30\x95\x1d\x82\x7a\xe1\x3e\xb5\xa9\xa7\x53\x14\xa3\x94\xa9\x70\xaa\xb6\xde\x7a\x11\xbf\xbf\xf9\x38\x25\xaf\x13\xf9\x76\x59\x89\xdf\x5d\xe3\xed\xc9\x0f\xf5\x42\x35\x3f\x90\x36\x2b\x7c\xf8\x0c\x67\x2c\x0e\xa3\x76\xbf\x24\xf9\x1c\xa1\xe3\xac\x89\xaf\xc2\xfd\x5b\x12\x1c\xef\x2f\x98\x04\xb9\x12\x6d\x54\x18\x85\x71\xa9\x1d\xaa\x79\x14\x18\x7c\x07\x7a\xe1\xe5\xac\xe6\xcd\xa7\x99\xd3\x22\x55\xb9\xdf\xb5\xda\x25\xd9\xe5\xea\x6a\x46\x57\xff\x97\xd6\x46\xf6\xea\xb2\xfb\x36\x6e\xad\x29\x50\x50\x4b\x5b\x63\x8d\x76\xc3\x7c\x0d\x5d\xa4\xc1\xf2\xce\x76\xe0\xd7\xd6\x07\x0e\x53\x91\x9e\x56\x72\xeb\x83\x51\x54\xd1\x0d\xa3\xdc\x88\x8f\x75\x93\x0e\x37\x5c\xb0\x79\x61\x81\x71\xca\x52\x51\xf1\x26\x00\x6b\xdc\xf3\xa5\x67\x3b\xcc\x26\x74\x7d\x16\x3a\xde\xce\xd3\x9a\x5d\x3c\x93\x1e\x52\x4b\x7d\xf3\xbf\x65\x45\x52\xb3\xbe\x43\x5e\x43\x54\x09\xfe\x42\x96\x5c\xc1\x69\x1c\x36\x1c\xbc\x9d\xc5\x11\xfe\x31\x8f\x41\xf5\x0a\xb3\xbf\xb9\x3e\x17\xf8\x63\x4c\x49\xef\x7f\x65\x74\xfa\x17\xc7\xec\x67\x00\x00\x00\xff\xff\x93\x06\x36\xf0\xf5\x04\x00\x00"

func setup_accountCdcBytes() ([]byte, error) {
	return bindataRead(
		_setup_accountCdc,
		"setup_account.cdc",
	)
}

func setup_accountCdc() (*asset, error) {
	bytes, err := setup_accountCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "setup_account.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa2, 0x72, 0xfa, 0xd5, 0x26, 0xcd, 0xd, 0x93, 0x69, 0x8, 0x9, 0xa6, 0x32, 0xc8, 0xf7, 0x8d, 0xdc, 0x2b, 0xf3, 0x58, 0x1d, 0xbc, 0xc7, 0xb0, 0x1c, 0x6d, 0x8e, 0x8, 0x5b, 0xda, 0xbe, 0x74}}
	return a, nil
}

var _switchboardAdd_vault_capabilityCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x41\x6f\xa3\x3c\x10\xbd\xf3\x2b\x9e\x72\xe8\x47\xa5\x4f\xe4\x1e\xb5\x5b\x55\xd5\xee\xde\x56\x55\x5b\xed\x7d\x30\x03\x58\x05\x1b\xd9\x43\x93\xa8\xca\x7f\x5f\x19\x08\x31\xbb\x69\x5a\x0e\x91\x93\xcc\x3c\xbf\xf7\xe6\x0d\xba\xed\xac\x13\xac\x7e\xf4\xa6\xd2\x79\xc3\x2f\xf6\x95\xcd\x2a\x39\xfb\xf3\xf3\x56\x8b\xaa\x73\x4b\xae\x38\x55\x7c\xdf\x51\xdb\xcd\x7d\xc9\x7a\x8d\x97\x5a\x7b\x88\x23\xe3\x49\x89\xb6\x06\xda\x83\x20\xdc\x76\x0d\x09\xa3\xb4\x2e\x7c\x8d\xfe\x97\x9a\x24\x34\x2a\xdb\x37\x05\x72\x46\xef\xb9\x40\xbe\x07\x99\xbd\x35\x0c\xb1\xa0\xa2\x00\xc1\xf0\x16\xe5\xc4\x08\x12\x6e\xc4\x1b\xf5\xcd\xd8\x4c\x1d\xe5\xba\xd1\xb2\x0f\xf5\x52\xb3\x76\xf0\x27\xc2\x70\xec\x6d\xef\x14\x27\xf1\xcd\xef\x49\x02\x00\x0d\x0b\x38\xd2\xf1\x3b\x80\x3e\xcc\x80\x1b\x9c\xce\x37\x57\xef\x0b\x4f\xb2\x27\x56\xac\xdf\xd8\x1d\xbe\xcd\x50\xd1\xb5\x4f\x5c\x6e\x80\xab\x8f\x6c\xcc\xa2\xf3\x48\xa5\x73\xdc\x91\xe3\xd4\xeb\xca\xb0\xdb\xe0\xbe\x97\xfa\x5e\x29\xdb\x1b\xb9\x3e\xd2\x0d\xcf\x7a\x8d\x9f\x2c\x41\xe7\x91\x79\x6c\x48\xec\x46\xe9\x6c\x3b\xd4\x8d\x90\xff\x79\xd0\x88\x37\x63\x79\x6e\xca\xec\x82\x7e\xdc\x62\xae\x1d\xea\x07\xa0\xac\x62\xf9\xba\x2f\x97\x9e\x34\xce\xd0\xdc\xf8\xd8\xe7\x8d\x56\x8f\x24\xf5\xf5\x8c\x10\xcb\x7f\xa8\x59\xbd\x42\x97\x83\x36\x37\x35\xc5\xc2\x79\xa7\xbd\xf8\xb9\x85\xbc\x67\x27\xe9\x67\x62\x33\x15\x70\xd3\xeb\xff\x97\x9a\x5b\xf6\x9e\x2a\xde\x60\xf5\x3c\xa8\x47\x61\xd9\xc3\x58\x41\x4d\x6f\x0c\xc2\xa4\x01\x03\xe6\x39\x3e\xab\xf3\x32\xc2\x14\x09\x8e\x4b\x76\x6c\x14\x4f\xe1\x9d\x3c\xf6\x71\x96\x96\xf3\x5a\x86\x0c\xb7\xc7\xa9\xe4\xd6\x39\xbb\xbd\xf9\x52\xe4\x96\xa3\x49\x43\x52\x36\xf8\xb8\x51\xac\xa3\x8a\x87\x89\x2c\xcd\xb9\xbb\x43\x47\x46\xab\x74\xf5\x30\xac\x70\xb0\x65\xe4\xb1\x14\x16\x71\x9e\xdc\x18\x3e\x0e\x63\xac\x79\xc7\xaa\x17\xfe\x2b\xe5\xf7\x45\x31\x18\xf2\xcf\x7e\x2f\xb6\xbb\xf7\xda\x54\xe1\x2d\xf1\x8b\xb7\xc3\x40\xd1\xb2\xd4\xf6\xa2\x67\x59\x54\x9e\xaa\x68\xdb\x3f\x8b\xc8\x92\xfa\x21\xf9\x13\x00\x00\xff\xff\xbd\xd5\xe3\x61\x44\x05\x00\x00"

func switchboardAdd_vault_capabilityCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardAdd_vault_capabilityCdc,
		"switchboard/add_vault_capability.cdc",
	)
}

func switchboardAdd_vault_capabilityCdc() (*asset, error) {
	bytes, err := switchboardAdd_vault_capabilityCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/add_vault_capability.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2d, 0x1, 0xaa, 0xe1, 0xeb, 0xd8, 0x82, 0x0, 0xa8, 0xee, 0x59, 0x86, 0x7d, 0x97, 0x5c, 0x52, 0x8e, 0x8b, 0xd9, 0x26, 0x61, 0xfc, 0x5d, 0x60, 0x69, 0x2a, 0x54, 0x62, 0x35, 0xab, 0x24, 0x53}}
	return a, nil
}

var _switchboardAdd_vault_wrapper_capabilityCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x4d\x6f\x9b\x40\x10\xbd\xf3\x2b\x46\x3e\xa4\x58\x8a\xf0\x1d\xe5\xa3\x51\xd4\xf4\x56\x45\x49\xd4\x9e\x87\x65\x80\x55\x60\x17\xcd\x0e\x21\x56\x94\xff\x5e\xed\x42\xc8\xd2\xda\x56\x38\x58\xd8\x9e\x79\xfb\xde\x9b\x37\xab\xbb\xde\xb2\xc0\xe6\x6e\x30\xb5\x2e\x5a\x7a\xb2\xcf\x64\x36\xc9\xc1\x9f\x1f\x47\x2d\xaa\x29\x2c\x72\xf9\x59\xf1\xe3\x15\xbb\x7e\xe9\x4b\x76\x3b\x78\x6a\xb4\x03\x61\x34\x0e\x95\x68\x6b\x40\x3b\x40\x10\xea\xfa\x16\x85\xa0\xb2\xec\xbf\x46\xff\x4b\x83\xe2\x1b\x95\x1d\xda\x12\x0a\x82\xc1\x51\x09\xc5\x1e\xd0\xec\xad\x21\x10\x0b\x58\x96\x80\x60\x68\x84\x17\x1c\x5a\x81\x91\xb1\xef\x89\x43\x17\xf6\x58\xe8\x56\xcb\xde\x17\x4a\x43\x9a\xc1\x7d\x32\x05\x26\x67\x07\x56\x94\xc4\x47\xbe\x25\x09\x00\x40\x4b\x02\xe2\x99\xdf\x59\x1e\x91\x4b\xe2\xdb\x05\x2d\x87\xcf\xf7\x8b\xb3\xb7\x95\x13\xd9\x03\x29\xd2\x2f\xc4\xef\x57\x0b\x4e\x74\xe6\x03\x55\x39\xc0\xd9\x31\xf3\xb2\xe8\x7d\xe2\xd1\x33\xf5\xc8\x94\x3a\x5d\x1b\xe2\x1c\x6e\x06\x69\x6e\x94\xb2\x83\x91\xed\x07\x57\xff\xec\x76\xf0\xd3\x53\x6e\x68\xa2\xed\xcd\x9c\x78\xc7\x36\x54\x6c\xbb\x50\x33\xc1\x7d\x73\x80\x13\xd6\x82\xe3\xa8\xad\xb2\x63\xc2\xe1\x12\x96\xc2\x50\x1c\x50\xb2\x9a\xe4\xeb\x86\x9c\x7a\xd2\x38\x32\x4b\xe3\xfd\x50\xb4\x5a\xdd\xa3\x34\xdb\x05\x21\xd6\x7d\xdb\x90\x7a\x06\x5d\x05\x61\x3c\x37\xc5\xaa\xe9\x55\x3b\x71\x4b\x0b\x3a\x47\x2c\xe9\x49\xa5\x99\xf2\xa0\xe9\xf6\x7c\x2d\xb8\x23\xe7\xb0\xa6\x1c\x36\x8f\x41\x3a\x94\x96\x1c\x18\x2b\xd0\xe0\x0b\x01\xc2\x68\xf9\x59\x9b\x1a\xaa\xd9\x82\x79\x18\x07\x58\x6d\x0e\x8b\xf1\x43\x44\x60\xaa\x88\xc9\x28\x9a\x83\x3b\x3b\xed\xe2\x28\xad\x47\xb6\xce\x18\x5c\x7e\xcc\xa6\xb0\xcc\x76\xbc\xf8\x52\xe2\xd6\x03\x4a\x7d\x58\x72\x38\xde\x28\x96\xb1\xa6\x30\x97\xb5\x4b\xd7\xd7\xd0\xa3\xd1\x2a\xdd\xdc\x86\xbd\xf5\xfe\x4c\x3c\xd6\xc2\x22\xce\xb3\x1b\xe1\xe3\x7d\x4a\x35\xbd\x92\x1a\x84\xfe\x09\xf9\x4d\x59\x06\x43\xfe\xdb\xed\xd5\x66\x0f\xce\x0f\x01\xcb\xf2\x17\x8d\xbf\xc3\xb5\xd0\x91\x34\xf6\xa4\x67\x59\x54\xfe\x67\xba\x44\x52\x15\xed\xfc\xc9\xbc\x9c\x83\xec\x7b\xca\xe1\x69\xdf\xd3\xc5\xf7\x55\x8c\x03\xe0\x55\xba\x5d\x2b\x7c\x4f\xfe\x06\x00\x00\xff\xff\xf4\xb7\xd9\x14\x60\x05\x00\x00"

func switchboardAdd_vault_wrapper_capabilityCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardAdd_vault_wrapper_capabilityCdc,
		"switchboard/add_vault_wrapper_capability.cdc",
	)
}

func switchboardAdd_vault_wrapper_capabilityCdc() (*asset, error) {
	bytes, err := switchboardAdd_vault_wrapper_capabilityCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/add_vault_wrapper_capability.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x99, 0x64, 0xe2, 0x6a, 0x2d, 0xf8, 0x12, 0x76, 0xa8, 0x53, 0x13, 0xc0, 0xfa, 0x0, 0xfd, 0xfa, 0x3e, 0x47, 0x5d, 0xf6, 0xf1, 0x96, 0x35, 0x80, 0xbd, 0xfb, 0x44, 0x31, 0x7e, 0xd5, 0xad, 0xbe}}
	return a, nil
}

var _switchboardBatch_add_vault_capabilitiesCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\x5d\x6b\xdb\x30\x14\x7d\xf7\xaf\x38\xe4\x61\xa4\x50\x9c\xf7\xb0\xac\x64\x63\xdb\xdb\x28\x5d\xd9\x4b\x29\xf4\x5a\xba\x8e\xc5\x1c\x49\x48\xd7\x49\xc3\xe8\x7f\x1f\xb2\x1d\x47\x29\xc9\x98\x1e\x82\xe2\xfb\xa1\x73\xee\x39\xd7\x6c\xbd\x0b\x82\xd9\xb7\xce\x6e\x4c\xd5\xf2\xa3\xfb\xcd\xf6\xe7\xde\x88\x6a\x2a\x47\x41\xcf\x8a\x63\xc6\xd7\x57\xda\xfa\x31\x61\x56\x14\x8b\x05\x1e\x1b\x13\x21\x81\x6c\x24\x25\xc6\x59\x98\x08\x82\xf0\xd6\xb7\x24\x8c\xda\x85\xf4\x37\x8b\x4b\x43\x02\xe5\xba\x56\xa3\x62\x74\x91\x35\xaa\x03\xc8\x1e\x9c\xe5\xd4\x50\x1c\x48\x6b\x44\xde\x71\xa0\x16\x96\xf7\xa8\x47\x5c\x90\xf4\x2e\x76\xd4\xb5\x12\x6f\x51\x71\xeb\xec\xc6\xd8\x4d\x5f\x03\xc5\x41\xc8\x58\xbc\xac\xb5\x0e\x1c\xe3\x4b\xfa\xdc\x77\x6c\xd8\x04\xc4\x13\x1f\x04\x8e\xae\x0b\x8a\xcb\x22\x47\x36\xa7\xa1\x70\x89\xb1\xc3\x0d\xfe\x14\x05\x00\xb4\x2c\xe0\x8c\xfa\xaf\x84\xe0\x9e\xa4\x59\xe2\xbe\xab\x5a\xa3\xd2\x7d\xca\xdc\x1d\xa3\x71\x89\xa7\x53\xfc\x79\x4a\xc8\xa0\x3c\x70\xbd\x04\x3e\x5c\x9b\x7c\x99\xdd\x07\x28\x3e\xb0\xa7\xc0\xf3\x68\x36\x96\xc3\x12\xeb\x4e\x9a\xb5\x52\xae\xb3\x32\xc1\x4d\x67\xb1\xc0\x77\x96\xc4\xfd\x88\x3c\x9f\x1e\x3c\x49\x83\x3a\xb8\x6d\x9f\xa1\x9c\x95\x40\x4a\xa6\xea\xc8\x6d\x5d\x5e\x64\x8c\x15\x72\x13\x94\x0f\xac\xd8\xec\x38\xbc\x9b\x03\x90\x23\x59\x5b\x8d\x28\x2e\x30\x8c\xc0\xd8\xfe\x4d\x0a\x81\x0e\x70\x35\x7c\x5f\xd9\x23\x8a\x83\x3b\xf6\xa6\x6d\x93\x39\x3c\xc5\x64\x0f\x71\xa9\x20\xef\x97\x6b\xb9\x65\x69\x9c\x3e\x47\x7e\x52\x00\x2b\x3c\x3d\x5f\x0b\x96\xe4\x3d\x5b\x3d\xbf\xce\xf6\xe6\x02\x99\x34\x56\x42\xe0\x9a\x03\x5b\xc5\x23\x3c\x0c\x82\xc4\x1c\xdb\xf9\xbb\xe7\xaa\x63\x35\x56\x94\x95\x0b\xc1\xed\x3f\xfe\x97\x07\x3e\x4d\x2d\x2f\x9d\x79\x12\x74\x89\xeb\x8d\xc4\x05\xda\x70\x4f\x0c\xff\xec\x74\x77\x07\x4f\xd6\xa8\xf9\xec\x4b\xbf\xa9\xd6\x09\x06\x9c\xe7\xc4\x33\x4e\xb3\x61\x56\xfd\xcf\xdb\xe0\x43\x7e\x65\xd5\x09\x9f\x6c\x99\xac\xa0\xf5\x60\x39\xf2\x54\x99\xd6\xc8\x61\x1a\x60\x26\x6a\x17\xd3\x5a\x93\xd6\x3f\x78\xdf\x8b\x71\x2e\xf3\x85\x79\x96\x59\x72\xfc\x7c\xe8\xad\x3a\xf7\xc3\x12\xbe\x93\xfd\x16\xd3\xa2\x8f\x97\x9b\xe2\x08\xfb\xed\x6f\x00\x00\x00\xff\xff\x6d\x3c\xef\x78\x0c\x05\x00\x00"

func switchboardBatch_add_vault_capabilitiesCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardBatch_add_vault_capabilitiesCdc,
		"switchboard/batch_add_vault_capabilities.cdc",
	)
}

func switchboardBatch_add_vault_capabilitiesCdc() (*asset, error) {
	bytes, err := switchboardBatch_add_vault_capabilitiesCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/batch_add_vault_capabilities.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa4, 0xc1, 0x5d, 0xdc, 0x9, 0xa5, 0xfd, 0x15, 0xad, 0xab, 0x26, 0x16, 0x8, 0xe, 0xaf, 0xb, 0x8e, 0x55, 0xbd, 0x1, 0xcd, 0x5c, 0x44, 0x22, 0x61, 0x55, 0x2c, 0x84, 0xc3, 0xa8, 0xf4, 0x89}}
	return a, nil
}

var _switchboardBatch_add_vault_wrapper_capabilitiesCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\x4d\x6f\xdb\x3c\x0c\xbe\xfb\x57\x3c\xc8\xe1\xad\x03\x14\xce\x3d\xe8\xc7\xdb\x0d\xdb\x6e\x43\xd1\x16\xdb\xa1\x28\x10\xda\xa6\x63\x61\x8e\x24\x50\x74\x53\x63\xe8\x7f\x1f\x64\xbb\x89\xd3\x35\x68\xe7\x43\x62\x59\x24\xf5\x7c\x50\x34\x1b\xef\x44\x31\xfb\xda\xda\xb5\xc9\x1b\xbe\x73\xbf\xd8\xde\x6e\x8d\x16\x75\xee\x48\xca\x59\xf2\x12\xf1\xe5\x89\x36\x7e\x0c\x98\x25\xc9\x62\x81\xbb\xda\x04\xa8\x90\x0d\x54\xa8\x71\x16\x26\x80\xa0\xbc\xf1\x0d\x29\xa3\x72\x12\x97\x93\x7d\xad\x49\x51\xb8\xb6\x29\x91\x33\xda\xc0\x25\xf2\x0e\x64\x3b\x67\x39\x16\x54\x07\x2a\x4b\x04\x7e\x64\xa1\x06\x05\x79\xca\x4d\x63\xd4\x70\x18\x72\xbd\x33\x56\x63\x58\x35\xc2\x85\x46\x38\x78\xa4\xb6\xd1\x00\x57\x81\x50\x9a\xaa\x62\x61\xab\x00\x62\xd1\xd5\x5d\xe7\x79\x05\xb2\xf1\xd0\xc6\xd9\x75\x7f\x0c\x0a\x16\x25\x63\xb1\xba\x2a\x4b\xe1\x10\x56\xa7\xf1\xbb\xd6\x6c\x04\x61\xcf\x1f\xc2\xc1\xb5\x52\x70\x96\x4c\x99\xa4\x34\x64\x2d\x31\xa6\xcf\xf1\x3b\x49\x00\xa0\x61\x1d\xe0\x5c\x93\xd6\x61\x89\xfb\xeb\x36\x6f\x4c\x11\x57\x0f\x87\x01\x11\x57\x0c\x88\xff\xfb\xad\xc9\xd9\x37\x5c\x2d\x81\xff\x8e\x59\x93\x4d\xde\x87\xb3\xbd\xb0\x27\xe1\x34\x98\xb5\x65\x59\xe2\xaa\xd5\xfa\xaa\x28\x5c\x6b\x75\x87\x2f\x3e\x8b\x05\x6e\xd5\x09\x47\xba\x18\x7d\x45\x5f\x1e\xc2\x05\x9b\x47\x96\x93\x00\xdf\x03\x87\x27\xad\x61\x6c\x1f\x4b\x22\xd4\x45\x99\xc7\xbd\x69\xc5\x18\x37\xda\xb4\x35\x4d\x13\x1d\xf6\x14\xa2\xc7\x83\xae\x07\xaa\x6e\x58\x6b\x57\xee\xd2\x03\x37\x55\xb6\x57\x0d\xe7\xb8\x7f\x38\xb6\x99\x91\xf7\x6c\xcb\x74\xda\x8f\xd9\xcd\x08\x7b\x2f\xf6\xfc\x23\x74\x4f\x02\xb4\xf3\xfc\x17\xbd\xf8\xf1\x6d\x2e\xd3\xa2\xff\xc2\xab\x37\xfb\x18\xaf\x7e\xf3\x85\x57\x5c\x9c\xfd\x7f\xc0\xee\x47\x0c\xba\x48\xe7\xf3\x31\x77\x0a\xe2\x1b\x2b\x08\xc2\x7d\xcf\x17\xbc\x03\xd5\xb7\x40\x98\x82\x3b\x3c\xf8\xb0\xcf\x70\x3e\x66\x64\xb9\x13\x71\xdb\xb3\x0f\x75\xdd\xc5\xae\xe4\xbb\x4f\x5a\x89\xdb\x2c\x71\xbc\xaa\x3a\xa1\x35\xf7\xce\xe1\xdd\xb2\x97\x97\xf0\x64\x4d\x91\xce\x3e\xf7\xd3\xc4\x3a\xc5\x00\xfc\x50\x89\x09\xc9\xd9\x20\x5e\xff\xf3\x3c\xf4\x06\x3f\x71\xd1\x2a\xef\x6f\xc6\x62\x11\xaf\x73\xaf\xdf\x6e\xf6\x74\xa9\xe1\x30\x7f\xcb\xeb\x36\x18\xbb\x8e\x03\xeb\x3b\x6f\x7b\x87\x7e\x4a\xb4\x50\xc2\xa7\x2e\xd2\x48\x8e\x8a\x9d\x1d\xcd\x49\xfd\x30\x34\x5e\xb5\xfc\xe9\xfb\x8a\x4c\x1f\x1d\x06\xcb\xab\xfe\x3a\xc5\x6e\x66\x8d\x2f\xe3\x15\x79\x4e\x92\xe7\x3f\x01\x00\x00\xff\xff\xd3\x37\x48\xd0\x07\x06\x00\x00"

func switchboardBatch_add_vault_wrapper_capabilitiesCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardBatch_add_vault_wrapper_capabilitiesCdc,
		"switchboard/batch_add_vault_wrapper_capabilities.cdc",
	)
}

func switchboardBatch_add_vault_wrapper_capabilitiesCdc() (*asset, error) {
	bytes, err := switchboardBatch_add_vault_wrapper_capabilitiesCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/batch_add_vault_wrapper_capabilities.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xab, 0x7e, 0x56, 0xed, 0x65, 0x66, 0x49, 0xc9, 0xfa, 0x6e, 0x37, 0x5e, 0xf1, 0x15, 0x63, 0x9b, 0xce, 0xc2, 0x66, 0x86, 0xde, 0x0, 0xdb, 0xa, 0xc, 0x8e, 0x6d, 0x10, 0x5e, 0x5c, 0xec, 0xe0}}
	return a, nil
}

var _switchboardRemove_vault_capabilityCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\x4d\x8f\xda\x30\x10\xbd\xe7\x57\x3c\x71\xd8\xc2\x05\xee\xd1\x76\x57\x2b\xd4\xf6\xba\xa2\xab\xde\x1d\x33\x49\xac\x26\x76\x34\x1e\xb3\x8b\x56\xfc\xf7\x2a\x71\x48\x1c\x09\xda\x72\x01\x9c\xbc\x37\xef\x63\x6c\xda\xce\xb1\x60\xf5\x3d\xd8\xca\x14\x0d\xbd\xb9\xdf\x64\x57\xd9\xcd\xe3\x9f\xef\x46\x74\x5d\x38\xc5\xc7\xf9\x8d\x6f\x1f\xaa\xed\x26\x5c\xb6\xdb\xe1\xad\x36\x1e\xc2\xca\x7a\xa5\xc5\x38\x0b\xe3\xa1\x20\xd4\x76\x8d\x12\x42\xe9\xb8\xff\x9b\x3c\x97\x5a\x49\x0f\xd4\x2e\x34\x47\x14\x84\xe0\xe9\x88\xe2\x0c\x65\xcf\xce\x12\xc4\x81\xa9\x75\x27\x42\x39\xca\x81\xf4\xe3\x70\x52\xa1\x89\x48\xd5\xa9\xc2\x34\x46\xce\x28\xd9\xb5\x90\x9a\x0c\xc3\xcf\x7a\xc1\xe4\x5d\x60\x4d\x59\x3a\xf8\x33\xcb\x00\xa0\x21\x01\x25\x36\x7e\xf5\xb4\xfb\x48\x29\xe7\x1c\xfb\x89\xfd\xf1\xe1\x73\x91\xc8\xf6\x40\x9a\xcc\x89\xf8\xf2\x34\x31\x25\x53\x0f\x54\xe6\xc0\xc3\xbd\x10\xb7\xc9\xef\xa8\xa4\x63\xea\x14\xd3\xda\x9b\xca\x12\xe7\x78\x09\x52\xbf\x68\xed\x82\x95\xcd\x55\x2d\xb0\xdb\xe1\x07\x49\x6f\xf2\x2a\x3b\xcd\xe3\x56\x18\x88\x84\x5f\x3c\x54\x64\x1b\x99\x3c\x35\xe5\xf6\xbe\x75\x7c\x1d\x81\xdb\x8a\x64\x4e\x61\x04\x2f\x3f\x7f\x89\x66\x9d\xee\xc8\x74\xfe\x1a\x8a\xc6\xe8\x57\x25\xf5\x66\x24\x5c\xda\x53\x60\x2a\x89\xc9\xea\x61\x03\x66\x17\x7e\x51\x2c\x52\x2b\xcb\xec\x67\xf9\x85\x63\x76\xef\x8f\xff\xd5\xc4\xd3\x64\x6f\xdd\xc7\x97\xe3\x3e\x48\x1c\xab\x8a\x06\x0b\x48\x42\x79\x7e\x46\xa7\xac\xd1\xeb\xd5\x7e\xd8\x68\xeb\x04\x51\xc1\xd2\x52\xa2\x76\xb5\x89\xe5\x5e\xe2\x17\x7d\x90\x0e\x42\x8b\xca\x0f\xf1\x0a\xf4\x39\xdc\x6c\x38\xc9\x24\x78\x63\xab\xe1\x74\x86\xc7\x1b\x34\xf4\x8b\x96\xa4\x76\xc7\xfb\xc1\x6d\x93\x97\xd7\xf3\xb0\xfc\x5f\xfb\x12\x8b\xbc\x1a\xb9\x64\x7f\x02\x00\x00\xff\xff\xb4\x3c\xb8\xbc\x5d\x04\x00\x00"

func switchboardRemove_vault_capabilityCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardRemove_vault_capabilityCdc,
		"switchboard/remove_vault_capability.cdc",
	)
}

func switchboardRemove_vault_capabilityCdc() (*asset, error) {
	bytes, err := switchboardRemove_vault_capabilityCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/remove_vault_capability.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x3e, 0xfa, 0xaf, 0x79, 0xb6, 0xf1, 0xe1, 0xb7, 0xd, 0x68, 0x58, 0x5d, 0x6a, 0xbe, 0x9f, 0xd2, 0x50, 0x46, 0x2f, 0xbc, 0x6b, 0x5e, 0x5c, 0xb4, 0x5c, 0x8f, 0x92, 0x41, 0xee, 0x94, 0xdd, 0xb9}}
	return a, nil
}

var _switchboardSafe_deposit_to_lnfCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x57\x4d\x6f\xdb\x46\x10\x3d\x47\xbf\x62\xa2\x83\x22\x01\xb2\x74\x29\x7a\x10\xfc\x51\xd5\xae\x8a\x00\x39\x18\xb6\xd3\x5e\xbd\x22\x87\xe2\x36\xd4\x2e\xb1\x3b\x34\x23\x18\xfa\xef\xc5\x7e\xf1\x5b\x8a\x53\xb8\x3a\x28\x11\x39\x3b\xfb\xe6\xed\x7b\x33\x6b\xbe\xcf\xa5\x22\x18\x6f\x0a\xb1\xe3\xdb\x0c\x9f\xe4\x37\x14\xe3\xd1\xe0\xe3\xc7\x92\x53\x94\x6e\x25\x53\x71\x23\x82\x33\xea\x2c\xfa\x22\x35\xad\x45\xbc\x91\x85\x68\x06\x66\xb2\xf4\x81\xa3\xe5\x12\x9e\x52\xae\x81\x14\x13\x9a\x45\xc4\xa5\x00\xc2\x7d\x9e\x31\x42\x0d\xa9\x2c\x81\x24\x68\x14\x31\x7c\x7d\xbc\xbb\x85\xa4\x10\xb1\x86\x67\x92\xcf\xc0\xc4\x01\x9e\xd7\x71\xac\x50\xeb\x67\x28\x39\xa5\xb2\x20\xf8\x26\x64\xc9\xc5\x0e\x4c\x62\x9e\x00\x27\x48\x65\x16\x6b\x60\xf0\xc2\x8a\x8c\x40\x26\x40\x29\x23\xd0\x39\x46\x3c\xe1\x11\x90\x01\x02\x74\xc8\x71\x01\x4f\x29\xb6\x80\x94\x3c\xcb\x80\x91\xc1\x43\x06\x87\x49\x1a\x63\x2e\x35\x27\xa0\x14\x3d\x1a\x2e\x48\xda\x9f\x0a\x23\xe4\x2f\xa8\x3e\x69\xd0\x35\x41\x73\x83\x43\x48\x88\x58\xce\xb6\x3c\xe3\x74\x80\x44\x2a\x50\xb2\xa0\x00\xb4\x8d\x68\xf3\x04\x5c\x43\x62\x38\x03\xc3\x46\x8a\xed\x74\x94\xa2\x30\x85\x59\x74\x7d\x38\xb6\xf2\x00\xa9\x79\x00\x10\x49\x41\x8a\x45\xb4\x18\x2d\x97\xa3\x46\x9d\x53\x92\x2b\xf0\x4c\xce\x81\xed\x65\x21\x68\x05\x5f\x37\xfc\xfb\xaf\xbf\xcc\xe0\x75\x04\x00\x60\xbf\xec\x61\x99\x3a\x13\x54\x28\x22\x04\xbf\x8b\xa3\x36\x51\x72\x6f\x7f\xe6\xec\x60\x49\x60\x51\x64\x52\xd9\xa5\x19\x92\x0b\x7b\xc0\x64\x05\x93\x4a\x2b\x8b\xbf\xcc\xc3\x66\x76\xfb\x00\x14\x6a\x59\x28\xb3\x85\xe1\xc6\x9d\xa1\xc9\x6d\x8f\x4b\xbb\xa7\x4c\x21\x6c\xd1\x90\x68\x8b\x49\x50\x29\x8c\xab\xdd\x34\x0a\xb2\xb9\x56\xf0\x5b\x4b\xbc\xed\x2d\xd7\xfd\x72\x34\xdf\x09\x5b\x40\x92\xc9\xd2\xa1\x9e\xbb\x1d\x2d\xe5\x5b\x84\x42\x63\x6c\x4f\x31\x67\x07\xbb\xbf\xa1\x7a\xb2\x81\x04\x51\x43\x85\xc0\x2c\xbf\x57\xf2\x85\xc7\xa8\x5c\xd9\xaf\x6d\x20\xe1\xe5\xb1\x06\xd3\x50\xc9\x20\x1a\x27\xd7\xa0\x34\xa7\x24\x8c\xe4\x0b\xaa\x2e\x8e\x16\x8c\x07\xbf\x60\x05\xb7\xd5\x06\x97\x93\xca\x88\x8e\x92\x0e\xba\xb0\xe6\x78\x7d\x33\xb2\xc9\x72\x85\x39\x53\x38\x75\x88\x56\xb0\x2e\x28\x5d\xbb\x33\x36\x32\xb1\x31\xbe\x90\x3f\x91\x80\x9d\x61\x56\x93\x54\x18\x3b\x6e\xab\x75\x1a\xb3\x64\x11\x44\x02\x57\x3e\x7a\xb1\x95\x4a\xc9\xf2\xb2\xab\x99\xeb\xa9\x11\xdc\x0a\x3a\x8f\x1f\x49\x2a\xb6\xc3\x7b\x46\xe9\x6c\xf4\xe1\xc3\x87\x9b\x1b\xc8\x99\xe0\xd1\x74\x7c\x2b\x8b\x2c\x06\x21\x09\x5c\xc6\x3e\x3c\x59\x3a\x74\x36\xd1\xc7\xf1\xac\x59\xd1\xdf\x9c\xd2\x58\xb1\x32\x28\xb0\x52\xfb\x1b\x6a\xaa\xa4\x08\x97\x17\xad\x22\x17\xa5\xcf\x3a\x0d\xae\x73\xff\xce\x5a\x64\xfe\xee\xe0\x9e\xe3\xb3\xa1\x8d\xdc\x8b\xaa\x0d\xa1\xa3\xc5\x3e\xbb\xa7\xa4\x19\x68\x5e\x6a\x47\xec\x32\x09\xa2\xb1\x15\xd5\x1c\x99\xcf\x19\xb2\x07\x4c\x55\x41\x1d\xcf\x7a\xe2\x31\xd5\x35\xbc\x60\xdb\xf6\x79\x2f\xf4\xeb\x0d\x02\xae\x8b\xdd\x21\xfd\x17\xfd\x4f\x97\x79\xb1\xcd\x78\x54\xd7\x1e\xde\xcd\xea\xe6\x78\x74\x35\xe0\x77\x8c\x0a\xc2\x01\x3f\xf8\x11\xc1\x73\x8e\x82\x3e\x69\x70\x39\x43\x97\x04\xb9\xfd\x07\xa3\x5a\x38\xc6\xb9\x55\x34\x5c\xc1\x0e\xc9\x7b\x6d\x4a\xb2\xc1\x17\x4f\x5c\xb7\xab\x27\x84\x3b\xde\x6a\x6d\xbb\xe8\xe9\xa9\x39\xbe\xb8\xb7\x70\x9c\x6f\x9a\x67\x5a\xfb\xef\xd4\xca\xc6\xff\x5f\xdf\x12\xe4\x76\x3a\x5e\x4f\xc3\x70\x69\x10\xb5\xae\xa7\x6d\x73\xb4\x35\x86\xff\x0f\xc6\x2d\xb4\x32\x7a\x76\x84\xa4\x3b\x97\x0d\xe3\xca\x88\x2d\xc6\x16\x9a\x25\xe8\x63\xbc\xe2\x2f\x2f\x3a\xee\x3d\xe9\xd6\x6e\x1d\xbe\x96\xcf\x49\x75\xed\xe0\x1a\x14\x52\xa1\x04\x86\x01\x4e\x29\x72\x55\xd5\x18\xf3\x58\x7c\x22\xd0\x45\x14\xa1\x09\xd1\x12\x4a\x84\xbc\xa0\xa1\xbc\x9d\xab\x87\x99\xf1\xb0\x16\x31\xd8\x29\xdf\x5b\x60\xea\xdf\xe3\x5e\xc2\x15\x8c\xef\x0a\x04\x25\x0f\x2c\x23\x8e\x7a\x3c\x18\xea\x11\xfd\xa1\x89\xef\x19\xa1\x61\xa1\x79\x89\x58\xa0\x7f\x11\xb8\x52\x18\x23\xee\xcd\x38\x20\x39\x07\x4e\x68\x99\xeb\x11\x3e\xb7\x18\x56\xf6\x7b\x0e\x31\xd7\x79\xc6\x0e\x2b\x10\x3c\x9b\x0d\xc2\xf0\xdd\x66\x83\x58\x9d\x43\xa7\x85\xf5\x4f\xa3\x03\x7d\x51\xe7\x18\xde\xa3\xba\x63\x5c\x5e\xf4\xd6\x56\xc9\x1b\x56\x0b\x9f\x16\x1f\x7e\xe1\xb4\x17\x65\x3e\x2d\x72\x06\x23\x02\x61\x01\xcb\x70\x54\x83\xbb\xc1\xf7\x4d\x3e\x87\x23\x74\x18\x8b\x87\x3d\x1a\xae\x26\x0d\x82\x99\x86\xc9\xc0\x0d\x69\x38\x51\xa3\x05\xe6\x21\x59\xaf\xe3\xf6\x56\x0e\xb0\xb8\x5c\xc2\x83\xb5\x84\xbd\xc9\x2b\xdc\x33\x2e\xcc\x1d\xc6\x03\x73\x77\x29\x6e\x8c\xc2\xb5\x77\x91\x37\x7e\x24\x45\xc2\x77\x45\xb8\xec\x75\x92\xda\xd1\xd0\x1b\x0a\x15\x0f\x5d\xa8\x1f\x7d\x7f\x9b\xce\x3e\x56\x67\x19\xfc\x7f\x4e\x40\x31\x6a\x52\xf2\xd0\x15\x4e\x2b\xee\x38\x1a\x5a\xd1\x6e\x2a\x55\xc8\x11\x30\xd3\xd8\xef\x88\x9f\xdd\xe8\x2b\x34\x2a\xd3\x26\xec\x4c\x4d\x59\x0c\xac\xd5\xf5\x4a\x3c\xf5\x97\xc9\x97\xc9\xa6\x95\xf2\x8d\xfd\xe0\xfd\x7a\x41\xbb\xde\xb7\x36\x82\xff\xbb\x09\xfc\x44\x03\x68\x2e\x7b\x9b\xf7\xcf\xfb\xfe\xc7\x9e\x3f\xe7\xf7\xf3\x5e\x7f\x17\x9f\xff\xbc\xc7\x67\x5d\xd5\xbe\xaf\xb5\xcf\xda\xfa\x5d\x2c\x7d\xca\xce\x75\xdf\x3a\x86\x5b\xde\x71\x04\xff\x06\x00\x00\xff\xff\x8a\xa7\xc4\x1c\x2c\x11\x00\x00"

func switchboardSafe_deposit_to_lnfCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardSafe_deposit_to_lnfCdc,
		"switchboard/safe_deposit_to_lnf.cdc",
	)
}

func switchboardSafe_deposit_to_lnfCdc() (*asset, error) {
	bytes, err := switchboardSafe_deposit_to_lnfCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/safe_deposit_to_lnf.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x4e, 0x4d, 0x96, 0xb2, 0x1c, 0x39, 0x18, 0x1e, 0xff, 0x1c, 0x36, 0xf9, 0x77, 0x2e, 0xc6, 0x8b, 0x8a, 0xc6, 0xc8, 0xf0, 0x4f, 0x80, 0x4a, 0xe9, 0x30, 0x19, 0xac, 0xf7, 0x26, 0x16, 0xc9, 0x71}}
	return a, nil
}

var _switchboardSafe_transfer_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x55\x4d\x6f\xdc\x36\x10\x3d\x7b\x7f\xc5\x64\x0f\xb5\x16\x70\xe4\x4b\xd1\xc3\xc2\x49\x6a\x24\x75\xaf\x41\xe2\xb6\x67\x4a\x1c\x49\xac\xb5\x1c\x61\x38\xb2\xbc\x30\xfc\xdf\x0b\x7e\x48\x4b\xf9\x03\xb5\x0f\xb6\x48\x0e\x67\xde\x9b\x79\x7c\x36\x87\x81\x58\x60\x7b\x33\xda\xd6\x54\x3d\xde\xd2\x1d\xda\xed\xe6\xd5\xed\x9f\x93\x91\xba\xab\x48\xb1\x3e\x45\xfc\xf1\xa0\x0e\xc3\x72\x6f\x73\x79\x09\xb7\x9d\x71\x20\xac\xac\x53\xb5\x18\xb2\x60\x1c\x28\x10\x3c\x0c\xbd\x12\x84\x86\xd8\x2f\xb3\x73\xe9\x94\x40\x4d\x63\xaf\xa1\x42\x18\x1d\x6a\xa8\x8e\xa0\xec\x91\x2c\x82\xcf\x28\x04\x0e\xad\x06\xf1\x45\x9c\x5f\x2a\x4b\xd2\x21\x83\xaa\x6b\x1a\xad\x80\x74\x4c\x63\xdb\x81\x02\x77\x02\x09\xa3\x33\xb6\x05\xe9\x10\x9c\x6a\xf0\x1b\x0e\xe4\x8c\xf8\x84\x07\x94\x8e\x74\x19\xa1\xc6\x05\x4c\xa6\xef\xc1\x92\xc0\xa0\xac\xa9\xc1\x34\xf1\x62\x96\x4e\x13\xba\x10\xd1\xa9\x7b\xf4\xa7\x3e\x55\xad\x06\x55\x99\xde\xc8\x31\xc0\x14\xe2\x70\x04\x1a\x9d\x61\xd4\x70\x73\x7b\x01\x8c\x32\xb2\x9d\xb1\xe8\x88\x03\x35\xdc\xab\xb1\x17\x30\xd6\x09\x2a\x5d\xc6\xde\x21\x4c\x46\x3a\xcd\x6a\x02\x75\x08\xdc\x94\x67\xde\xe1\xc2\xb5\x61\x3a\x40\x8b\x72\x9d\xd6\xd3\xdc\x39\x1f\x34\x28\x56\x07\x14\x64\x37\x77\xce\xef\x66\xdd\x2e\x37\xd9\xa2\x10\xda\xc3\xb5\xd6\x8c\xce\x5d\xa4\x7a\x7b\xf8\xeb\xc6\x3c\xfc\xf6\xeb\x0e\x1e\x37\x00\x00\xe1\x57\x82\xc6\xd8\x20\xa3\xad\x71\x4e\x1c\x19\x04\x44\xb1\xfa\x11\xf9\xdc\xcd\x50\xc3\xd5\x1e\x25\x86\xfd\xc0\x66\x0f\xbf\xe4\x7a\x29\xff\xf6\xfb\x79\x81\xb0\x01\x8c\x8e\x46\xf6\x55\xbc\x32\x3a\xea\xb5\x8b\x34\xd2\xfc\xfd\xae\x62\x84\x0a\x43\x4f\x3d\x9f\x06\x99\x51\x2f\x05\x1d\x5a\x09\xb9\xf6\xf0\xfb\x4a\xc3\xa9\x64\x08\x1c\x18\x07\xc5\x58\x38\xd3\x5a\xe4\x3d\x5c\x8f\xd2\xa5\xa6\x7a\xf2\x21\x26\x61\xfb\x13\x05\xd4\x4b\xfa\xf1\xe6\xb9\x8b\x73\x4f\x03\x5d\xee\x39\xec\x9b\x72\xa6\x0e\x9f\x52\x74\x59\x11\x33\x4d\x57\xaf\x74\xe2\x73\xe1\x3b\xb9\x87\x97\x27\x3f\x85\x58\xb5\xf8\x5d\x49\xb7\xdb\x9c\x9d\x9d\x7d\xf9\x12\x65\x5a\x6c\xbf\x86\xe9\x7b\x55\xc6\xbc\x2f\x41\xd2\x14\x31\x86\x44\x1f\xb6\xbb\x15\xb1\x7f\x66\xb1\xa5\xde\x2e\xa3\x7c\x07\xb5\xa5\xc9\x70\xf5\x71\xc5\xb5\x9c\x25\x5c\xcc\x92\x8a\x7f\x77\x27\x41\x3d\x45\x14\xf8\x80\xf5\x28\xf8\x4a\xb7\x25\xc8\xad\x36\x83\x41\x2b\xe7\x0e\x86\xb1\xea\x4d\xbd\x3c\x02\xaa\xfe\xc5\xfa\x84\xc7\xcf\x7c\x89\x86\x4f\xd9\xf3\x28\x84\x76\xef\x19\x65\x5e\x2b\x33\x3a\xf8\x81\x35\x9a\x7b\xe4\x55\xa9\xcc\x15\xe2\x68\x97\xdb\x65\x8b\xf2\x75\xb1\x84\xe2\x2d\xff\x2c\xbf\x07\x3a\x71\x9e\x90\xfd\x2c\xea\x78\xf3\x66\xf6\xfd\xf8\x9e\xa0\x58\xe9\xe9\x73\xf1\xff\xc2\x89\x4c\xd7\xbd\xc9\xa8\x7e\xd8\xee\x96\xf9\xad\x3e\x2e\x2f\x21\x99\x6b\x68\x65\x33\x5a\xed\x20\x18\xfb\xca\x40\x2f\x66\x53\x4d\x0e\x78\x32\xd4\x9a\xbc\xde\x05\xf3\x8c\x3e\x30\xb7\xe6\x68\xa2\x59\x81\xe4\x9b\x40\x4d\xa4\x74\x67\x6c\x7b\x01\x8e\x60\xc2\xe4\xd0\x94\xe7\x63\xac\xc9\xb3\x93\x8e\x5c\x4a\xb1\x1c\x9b\x26\x8c\xd5\x92\x7c\x9b\xcd\x79\x11\xf6\x6a\xd4\x65\xf6\x8f\x24\x3d\xd6\xab\x8f\xcf\x5e\xc3\x9b\xea\xdf\x3d\xae\x46\xbd\x7e\x32\xfa\x59\xd2\x17\x58\x4e\x3a\x79\x3a\xe9\x59\xa3\x13\xa6\xe3\x33\x04\xab\x67\xf6\xb4\xf9\x2f\x00\x00\xff\xff\x90\x97\xe4\x4e\xe4\x07\x00\x00"

func switchboardSafe_transfer_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardSafe_transfer_tokensCdc,
		"switchboard/safe_transfer_tokens.cdc",
	)
}

func switchboardSafe_transfer_tokensCdc() (*asset, error) {
	bytes, err := switchboardSafe_transfer_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/safe_transfer_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x98, 0x21, 0x1, 0x66, 0xf4, 0x26, 0x6a, 0xdc, 0xb6, 0x6a, 0xc3, 0x95, 0x70, 0xf4, 0x77, 0x83, 0x9d, 0xec, 0x79, 0xf, 0x2f, 0xd5, 0x2f, 0xef, 0xed, 0x11, 0x53, 0xe6, 0xd8, 0x81, 0x35, 0xb1}}
	return a, nil
}

var _switchboardSafe_transfer_tokens_v2Cdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x4d\x6f\xe3\x38\x0c\x3d\x37\xbf\xe2\x35\x87\xad\x03\xec\xba\x97\xc5\x1e\x82\x7e\x17\xdb\xbd\x16\x6d\xb7\x73\x96\x6d\x3a\xd6\x54\x91\x0c\x89\xae\x63\x14\xf9\xef\x03\x59\x8e\x62\xa7\x29\xa6\xb9\xc4\x92\xc8\x47\x3e\x3e\x92\x72\x5d\x1b\xcb\x98\x3f\x34\x7a\x25\x33\x45\x2f\xe6\x8d\xf4\x7c\x76\xf4\xfa\xb9\x95\x9c\x57\x99\x11\xb6\xd8\x5b\xfc\xbb\x11\xeb\x3a\xfa\xcd\xce\xcf\xf1\x52\x49\x07\xb6\x42\x3b\x91\xb3\x34\x1a\xd2\x41\x80\x69\x5d\x2b\xc1\x84\xd2\x58\x7f\x1c\xbd\x73\x25\x18\xb9\x69\x54\x81\x8c\xd0\x38\x2a\x90\x75\x10\xba\x33\x9a\xe0\x11\xd9\xc0\x91\x2e\xc0\x3e\x88\xf3\x47\xa1\x0d\x57\x64\x21\xf2\xdc\x34\x9a\xc1\x95\x35\xcd\xaa\x82\x80\xdb\x27\x89\xc6\x49\xbd\x02\x57\x84\x82\x6a\xe3\x24\x7b\xb0\x35\x71\x65\x0a\x64\x0d\x23\xa3\xd2\xd8\xf8\xe8\x6d\x5b\x42\x2b\x95\x02\x6d\x6a\x25\x73\xc9\xaa\x43\x5e\x51\xfe\x86\xb6\xa2\x3e\xa0\xa5\x9c\xe4\xbb\x37\xcd\x45\x2d\x32\xa9\x24\x77\x90\xce\x03\x67\xc6\x5a\xd3\x8a\x4c\x11\x8c\x85\x36\x0c\xa1\x0b\xc8\x12\x1d\x39\x9f\x84\x86\xe4\x80\x3e\x04\xec\x33\x7b\x17\x8d\x62\x4f\xc9\x1f\x02\x3a\xd9\x11\x78\x3a\x1b\x95\x2a\x61\xb3\xc4\x6d\x51\x58\x72\xee\x4f\x88\xb5\xe7\xbe\xc4\xff\x0f\x72\xf3\xcf\xdf\x0b\x7c\xcc\x66\x00\xd0\x4b\xe0\xb1\x4a\xb2\xa4\x73\xda\x81\x87\x48\xa5\x35\xeb\xfe\x58\x8b\x8e\xec\x99\xdb\x95\xb0\x77\x55\xc4\xc1\xec\x89\xca\x25\xfe\x18\x6b\x9b\xbe\xfa\xfb\x71\x80\xfe\x02\x96\x9c\x69\xac\x8f\xe2\x55\xac\x8c\x2a\x7a\xb2\x51\x2b\x7f\x2b\x2c\x21\xa3\x5e\x0b\xcf\xa5\x24\x6b\xa9\x88\x01\x1d\x69\xee\xb1\x96\xb8\x99\xf4\xdb\x10\xb2\x37\xac\x2d\xd5\xc2\x52\xe2\xe4\x4a\x93\x5d\xe2\xb6\xe1\xea\x36\x64\x1e\x89\x0f\xb9\xfd\x47\x0c\xf1\x99\x7e\xf0\x3c\x73\x70\x6c\x2c\x15\x81\x67\xf4\x73\xa4\xca\x74\x47\x1d\x97\x83\x75\x1a\x34\xbd\x38\x52\x89\xab\xc4\x57\x72\x89\xcf\x2f\xcf\x6c\xac\x58\xd1\xa3\xe0\x6a\x31\x3b\x39\x39\xb9\xbe\x46\x2d\xb4\xcc\x93\xf9\x7d\xdf\xe3\xbe\x33\x02\xee\xe7\x24\x4d\x1b\x72\xec\x81\x4e\xe7\x8b\x09\xb1\x1f\x92\xab\xc2\x8a\x76\x57\xdb\x28\xe5\x37\xa8\xc5\x22\xe3\xe2\xaf\x09\xd7\xb4\x1d\x50\x93\x5d\x3b\x85\xff\x21\xf4\x36\xfc\xd1\x86\xf2\x86\xe9\x48\xa5\x87\xb6\x95\xb5\x24\xcd\x67\x0e\x75\x93\x29\x99\xc7\xc1\x34\xd9\x4f\xca\xf7\xb9\x78\xbd\xa3\x35\x2e\xb1\x22\x1e\x54\x4c\xd8\x2c\xbe\x23\xe3\x38\xd6\x68\x21\xe1\x69\x18\x9d\x49\xa8\xd1\x32\x08\xb2\x46\xef\x74\x45\x7c\x1f\x87\x2c\xf9\x6a\xcf\xa5\x8f\x3d\x9d\xa0\x25\x46\xbf\xd8\x19\x5f\x7a\x8e\xbe\x3f\xbe\x63\x14\x22\x6d\xaf\x92\xdf\x37\xcd\xb0\x24\x26\xb5\x19\x51\x3d\x9d\x2f\x7c\x8a\x93\x6a\xbe\x0a\x25\x0b\xbf\x7e\xf7\x6b\xe6\x60\x89\x65\xdd\xb0\x2f\x9d\x28\xe9\xae\x0f\x75\xd7\xbd\x74\x35\x45\x18\x59\xee\xf4\x0b\xde\xc3\xa4\x4c\x6a\x9c\x1e\x7a\x27\xdc\xd5\xb4\x84\xff\xbc\xb8\x39\x36\x46\x8b\xc5\xc7\xa4\xb2\x07\x78\xc3\xae\x1c\xa6\x6d\x68\xde\xd8\xcd\x7b\x51\xb6\x20\xe5\x7c\x83\x8e\xb1\x0a\x72\x6c\x4d\x77\x30\x02\x7b\x9f\x5d\x8b\x6f\x7f\x05\x00\x00\xff\xff\xc2\x6f\xbf\xc1\x07\x07\x00\x00"

func switchboardSafe_transfer_tokens_v2CdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardSafe_transfer_tokens_v2Cdc,
		"switchboard/safe_transfer_tokens_v2.cdc",
	)
}

func switchboardSafe_transfer_tokens_v2Cdc() (*asset, error) {
	bytes, err := switchboardSafe_transfer_tokens_v2CdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/safe_transfer_tokens_v2.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x8, 0x77, 0x9e, 0x5d, 0xb2, 0x2d, 0x21, 0x76, 0xda, 0xbc, 0xe6, 0x8e, 0x84, 0xa9, 0x22, 0x85, 0x5f, 0x72, 0xc1, 0x1b, 0x11, 0xd4, 0x5d, 0x6d, 0xe3, 0xbc, 0x47, 0x74, 0xf6, 0x60, 0xcd, 0x36}}
	return a, nil
}

var _switchboardSetup_accountCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x53\xcd\x6a\xe3\x30\x10\xbe\xfb\x29\x3e\x7a\x58\x12\xc8\x26\xf7\xd2\x16\xca\xc2\x9e\xcb\x6e\x5f\x60\x2c\x8f\x63\x11\x45\x32\xa3\x51\xb3\x21\xe4\xdd\x17\xd9\x4d\xb0\x9b\xb8\x64\xa1\x6b\x02\xb1\xa4\x99\x4f\xdf\xcf\xd8\x6e\xdb\x20\x8a\xbb\x9f\xc9\xaf\x6d\xe9\xf8\x35\x6c\xd8\xff\xde\x59\x35\x4d\x19\x48\xaa\xbb\xe2\x6a\xc5\x5d\x51\xac\x56\x78\x6d\x6c\x84\x0a\xf9\x48\x46\x6d\xf0\xb0\x11\x04\xe5\x6d\xeb\x48\x19\x75\x90\xbc\x1c\x9c\x6b\x43\x0a\x13\x92\xab\x50\x32\x52\xe4\x0a\xe5\x1e\x19\x8a\xfc\x3e\x78\x86\x86\xfc\xa3\xaa\x02\x61\xc0\x02\xc2\x31\x24\x31\x7d\x41\xc3\x56\x40\xc6\x84\xe4\x15\x31\xf4\xa8\xda\xf0\x1e\x86\x7c\x06\x13\x36\x6c\xdf\x18\xdb\xe4\xd4\xb6\x8e\x51\xbf\x73\x87\x66\xf2\x11\x29\x5a\xbf\x06\x21\xff\x39\xc6\x61\xa4\x6d\xf9\xab\x6f\x97\x63\x31\xe4\x7e\x28\x0a\x00\x68\x85\x5b\x12\x9e\x91\x31\x7a\x8f\xe7\xa4\xcd\x73\xcf\x64\x7e\xaa\xc8\xcf\x6a\x85\x1f\x0d\x9b\x0d\x6c\x9d\x99\x9d\xd9\x92\x13\xa6\x6a\x8f\x86\xe2\x84\xc2\x33\x84\xad\x73\x97\x2e\xcb\x20\x12\x76\x0f\xdf\xa6\x12\x5a\x0e\xde\x9f\xce\xdd\xc0\xac\x96\xb0\xbd\xc7\x74\x9b\x06\xa1\x35\xbf\x90\x36\x73\x3c\x3e\xc2\x5b\x87\xc3\xa0\x1f\x18\x2d\xb2\x22\xe1\x1c\x2b\xc1\xf3\xee\x7a\x3a\xe4\x2b\xb4\x49\x61\x15\xd6\x6b\x40\xec\xef\x18\x01\x75\xa2\x22\xbd\xf1\x6c\xb4\x9d\x9f\x87\xef\xd3\x74\x4d\x77\xf9\x60\x67\x36\x5f\xe0\x02\x41\xc3\x8d\x8a\x8b\x49\x71\x6d\x2a\x9d\x35\x30\xd4\x52\x69\x9d\xd5\xfd\xfb\xcc\x8d\x14\xf3\x9f\x36\x74\x33\x94\x0f\x2a\xce\x0b\xfd\x88\x58\x27\x7f\x9a\x7a\x09\x69\xdd\x74\xb5\x53\xa3\x96\xfd\x62\xa9\xc9\x5c\x31\xcb\x59\xbf\xb9\x2d\xff\x29\xf4\xa7\x4b\xaf\x27\xe1\x4e\x4d\x2f\x9d\x0f\xd9\xac\xc5\xa5\xcd\x24\x6b\xd6\xdb\xac\x1e\x35\xcf\x6f\x1b\xb0\x7f\xcb\xa0\x0c\xda\x99\xfb\x11\xee\x70\x8b\x65\xbd\xcc\x63\x37\xba\xf9\x86\xcf\x41\xae\x05\x16\xbf\x2e\xb1\x4f\x39\x2e\xf0\x05\xe9\xfe\xe7\x54\xcf\x2f\xc7\xfe\x03\x3b\x16\xc5\xb1\xf8\x1b\x00\x00\xff\xff\xf4\xab\x1f\x04\x64\x06\x00\x00"

func switchboardSetup_accountCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardSetup_accountCdc,
		"switchboard/setup_account.cdc",
	)
}

func switchboardSetup_accountCdc() (*asset, error) {
	bytes, err := switchboardSetup_accountCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/setup_account.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x1c, 0x64, 0xff, 0xa4, 0xc6, 0x38, 0x57, 0xa5, 0xbf, 0x8b, 0xc2, 0x1c, 0x6c, 0x85, 0x6, 0x66, 0x64, 0xf4, 0x89, 0x84, 0xc3, 0x5a, 0xfb, 0x33, 0x9a, 0x27, 0x7d, 0x81, 0xd1, 0x8f, 0xb3, 0x52}}
	return a, nil
}

var _switchboardSetup_royalty_accountCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x58\x4d\x6f\xe3\x36\x14\xbc\xfb\x57\x4c\x73\x48\x65\x20\xb5\xef\x41\x92\x45\x9a\x36\x8b\x5e\x8a\xc5\x26\xdb\x9e\x69\xea\xc9\x22\x22\x93\x02\xf9\x14\xaf\x11\xe4\xbf\x17\xa4\x2c\x99\xf6\x46\xb6\xa5\x18\xcd\xea\x12\x47\x22\x87\xef\x63\x66\x44\x51\x2d\x4a\x63\x19\x67\xf7\x95\x9e\xab\x59\x41\x8f\xe6\x89\xf4\xd9\xe8\xcd\xdb\x0f\x4b\xc5\x32\x9f\x19\x61\xd3\x68\x44\x61\x96\xbb\x93\x94\xe0\xf5\xad\xd1\x68\x3a\xc5\x63\xae\x1c\xd8\x0a\xed\x84\x64\x65\x34\x94\x83\x00\xd3\xa2\x2c\x04\x13\x32\x63\xfd\xbf\xd1\x73\xce\x05\x43\x9a\xaa\x48\x31\x23\x54\x8e\x52\xcc\x56\xf0\x50\x42\xaf\x8c\x26\x64\x55\x51\xac\xe0\x88\xab\x12\x42\x43\x48\x69\x2a\xcd\x01\xc9\x92\x24\xf5\xac\xf4\x1c\x33\xc3\x39\x7c\x78\x10\x3a\xc5\xb7\x87\x3f\xee\xc0\x3e\x2a\x07\xc1\xe0\x9c\xe0\xc4\x82\x3c\x68\x59\xcd\x0a\x25\x51\x0a\xce\x91\x78\x0c\xa5\x1d\x0b\x2d\x29\x8c\xb2\x66\x25\x0a\x56\xe4\x30\xad\x07\x4e\x3f\x93\x26\xab\xe4\xfd\xe3\xd7\xb0\x16\xd9\x30\x75\xec\xa1\xbe\x39\xbf\xb2\x9f\x26\xd2\xf4\x6f\x5a\xfe\x23\xaa\x82\xff\xb5\xa2\x2c\xc9\xba\xdf\x57\x5f\xfc\x12\x6e\x53\x46\x2c\x88\x73\x93\x42\x14\x85\x59\xba\x26\x3b\x36\x3e\x67\x0f\x27\x45\x29\x66\xaa\x50\xbc\xc2\x72\x0d\x02\x57\xc9\x1c\xc2\x21\x54\xf8\xde\xd8\xa5\xb0\xa9\xbf\xef\x83\x26\x91\xc2\x64\xf5\xfa\x92\x2b\x51\xd4\x19\xe3\xd9\x87\x31\x19\xc5\x35\x4e\xc6\x78\x19\x8d\x00\xa0\x20\x46\xd6\x74\x31\x04\x7c\xd7\x2e\x7b\x89\xcd\xef\xab\xf3\x97\x2d\x3a\x4c\x9a\xf4\x5f\x6f\x36\x38\x4d\xeb\x87\xe1\x00\x68\xa1\xa2\x32\x7d\xa5\xec\x12\x38\xef\x22\xe3\x24\xfa\x5d\xa7\x54\x5a\x2a\x85\xa5\x44\x48\xc9\x97\xb8\xad\x38\xbf\xad\x29\xd2\x26\xed\xaf\xe9\x14\x77\x39\xc9\x27\xa8\xa6\x64\x35\x8d\x44\x61\x49\xa4\x2b\xe4\xc2\xf3\x34\x30\x28\xa4\xd3\x4e\x54\x99\x1f\xcb\x93\x99\xb1\xd6\x2c\xaf\xce\x5b\x0d\x4c\xc2\xb8\x9b\x24\xb3\x66\x71\x89\xa9\x63\x63\xc5\x9c\xa6\xdb\xd5\x1d\xe3\xfa\x1a\x5a\x15\x78\x69\x01\xd7\xd1\xfc\x95\x41\x1b\xbe\x80\xb4\xe4\x85\x21\xa0\x69\x19\xad\x0f\x4b\xce\x54\x56\x52\x20\x74\x59\x31\x14\x43\x69\x36\x58\x2f\xb4\x85\x17\x22\x74\xe2\x99\x92\xab\xdf\xb0\x89\xb0\xc6\xfe\x73\x51\xf2\x2a\x80\x26\xe3\x0b\xb0\xe9\x0e\xb6\xc5\x7c\xed\xac\x9b\x6d\x64\x10\xd1\x55\x39\x14\x4a\x3f\x51\x8a\xa0\x67\x0a\x0c\xdb\x8c\xf4\x82\x89\xcb\xf9\x4b\x88\x76\x4e\x7c\x14\x4d\x92\x46\x89\x6d\xac\xcd\xb3\xf1\x56\x09\xde\x79\x4d\xa4\xcf\x32\x08\x65\xa7\x51\x2a\x83\xe2\x5f\xdd\x4e\xb7\xd6\x3e\x12\x55\x81\xcd\x26\xf7\xa0\x41\xd0\xf7\xd2\x04\x8f\xd8\x85\xf4\xe3\x52\xf2\x0f\x19\x59\xa5\x1b\x23\xb4\xa6\x9a\xe7\xe1\x61\x57\x35\x3c\x03\xc8\x66\x42\xbe\xd1\xfe\x4a\xfb\x26\x1c\x5b\xae\x30\xc5\x4f\x18\x54\xfa\x0b\x0c\xab\x3d\x0b\x3b\x27\xee\x45\x40\x47\x45\x36\xe9\xb2\x2c\x5c\xe3\x64\x64\xea\x69\x15\xe1\x1d\x73\xc0\x2a\x1a\x83\xdc\xb6\x8a\x9d\xdb\x0f\x75\x29\xfc\xeb\xa2\xa7\x5b\x6c\x42\x78\x8f\x5b\xb4\xd1\xbc\xe5\x16\x03\x25\xe6\x4d\x66\x4f\x9a\xa7\xf2\x99\x50\x80\x13\xf9\x4c\x9f\x4c\x93\x9d\xdc\x1a\x94\x2f\xd5\x2c\xe4\x77\x32\x33\x09\x09\x7e\xa0\x99\x1c\xc8\xb3\xbf\xa3\xec\x07\x1c\xc4\xb7\xc6\x53\xfa\xf1\xad\xb6\x95\x8e\x1d\x4c\x6f\x5b\x39\xb6\x4e\x3d\x3d\x26\xda\xeb\xb4\x0a\xef\x76\x9b\x23\x76\x4c\x87\x59\xde\x78\x54\x27\xd8\x60\xb7\x7a\x2b\x99\x01\x76\xd5\x15\x58\xbd\x56\x74\xa7\xb7\x7d\x05\xd3\x3a\x26\xef\x53\xd9\x57\x1f\xe7\xea\xc8\xe4\xb8\xb6\x0f\x35\xbd\xa4\x13\x3c\x62\x78\xa1\xe4\x69\x4d\x2f\x26\xca\xc7\xb8\x5e\x8f\xac\xbb\x2c\xf0\x5d\x6d\x49\x8e\xe7\x6d\x8f\x58\x2f\x8e\x46\x6d\x2d\xf5\x44\x6a\x88\xa6\xd6\xe1\x04\xdd\x67\xfc\x86\x4c\xfc\xb7\xb7\xb0\xb4\x51\xca\x68\xa7\xe9\xf1\x17\x75\xf4\x31\x7f\xe8\xc5\xdf\x3e\x1f\xd0\x99\x8e\x41\x75\x2a\x17\xe8\xe8\xe2\xb1\xd5\xbe\x19\xce\xb7\x77\x5e\xff\xaf\x62\xc3\x11\xcd\x8f\xca\xdc\x5b\xdc\xd7\x40\x14\x3f\x69\x17\xed\xb0\xbc\x5d\x7f\x7d\x1f\xd6\xf5\xd6\xed\x9f\x8e\x4a\xcd\xb5\x87\x52\x1f\x64\x07\x9f\x89\x21\x60\x29\x23\x4b\xe1\xb0\xcd\xec\x8a\x79\x7b\x67\xb6\x7d\x20\xd4\xec\xc7\x4e\xbb\xd5\x69\xaf\x5e\x7b\x9e\x83\xb0\x9f\x3e\xa1\x14\x5a\xc9\xe4\xec\x2e\x9c\x6a\x6a\xc3\xa8\x03\xdf\xce\x3f\x4a\xf1\x6c\xfd\xf5\xf9\x5a\xff\xa1\xef\x24\x2b\xa6\x48\x96\xd3\x29\x6e\xd3\x5a\x08\x3f\xaa\x2f\x76\xc4\x2a\x48\x2f\x3a\x8f\x5c\x9f\x3a\xee\xab\xee\x24\x1a\x9e\xc8\xe8\x18\x6f\xef\xa7\xf7\xf8\x1d\x90\x1d\xdb\xee\x71\x53\x84\xd7\x11\xfe\x0b\x00\x00\xff\xff\x42\x56\x79\x7d\xac\x16\x00\x00"

func switchboardSetup_royalty_accountCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardSetup_royalty_accountCdc,
		"switchboard/setup_royalty_account.cdc",
	)
}

func switchboardSetup_royalty_accountCdc() (*asset, error) {
	bytes, err := switchboardSetup_royalty_accountCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/setup_royalty_account.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x9, 0x7b, 0x80, 0x9a, 0x97, 0x63, 0x44, 0x1f, 0x48, 0xfa, 0x60, 0x9d, 0x23, 0x70, 0x35, 0xb4, 0x3b, 0x2a, 0x2f, 0x98, 0x98, 0x34, 0x23, 0xee, 0xa6, 0x8a, 0x90, 0x8c, 0x5e, 0x2c, 0x6c, 0x3f}}
	return a, nil
}

var _switchboardSetup_royalty_account_by_pathsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x58\xcd\x6e\xe3\x36\x10\xbe\xfb\x29\xa6\x39\xa4\x32\xe0\xda\xf7\x20\xc9\x36\x4d\x9b\x45\x2f\x85\xb1\xc9\xb6\x87\x45\x0e\x63\x6a\x64\x11\x91\x49\x81\x1c\xc5\x6b\x04\x79\xf7\x82\xa4\x25\xcb\xb2\x15\x4b\x8e\xdb\x2c\x2f\xb6\x48\xce\xc7\xf9\xfb\x46\xd4\xc8\x45\xae\x0d\xc3\xd9\x5d\xa1\xe6\x72\x96\xd1\x83\x7e\x22\x75\x36\xd8\x3b\x7d\xbf\x94\x2c\xd2\x99\x46\x13\xd7\x76\x64\x7a\xd9\x14\x92\xc8\xeb\xa9\xc1\x60\x32\x81\x87\x54\x5a\x60\x83\xca\xa2\x60\xa9\x15\x48\x0b\x08\x4c\x8b\x3c\x43\x26\x48\xb4\x71\x8f\xb5\x75\x4e\x91\x41\xe8\x22\x8b\x61\x46\x50\x58\x8a\x61\xb6\x02\x07\x85\x6a\xa5\x15\x41\x52\x64\xd9\x0a\x2c\x71\x91\x03\x2a\x40\x21\x74\xa1\xd8\x23\x19\x12\x24\x9f\xa5\x9a\xc3\x4c\x73\x0a\x4e\x3d\x40\x15\xc3\xd7\xfb\xdf\x6f\x81\x9d\x56\x16\x90\x81\x53\x02\x8b\x0b\x72\xa0\x79\x31\xcb\xa4\x80\x1c\x39\x85\xc8\x61\x48\x65\x19\x95\x20\xbf\xcb\xe8\x15\x66\x2c\xc9\xc2\x24\x6c\x9c\x7c\x26\x45\x46\x8a\xbb\x87\x2f\xfe\x2c\x32\x5e\x74\xe8\xa0\xbe\x5a\x77\xb2\x13\xc3\x38\xfe\x8b\x96\x7f\x63\x91\xf1\x3f\x06\xf3\x9c\x8c\xfd\x6d\x35\x75\x47\xd8\x8d\x1b\x61\x41\x9c\xea\x18\x30\xcb\xf4\xd2\x96\xd6\xb1\x76\x36\x3b\x38\x81\x39\xce\x64\x26\x79\x05\xcb\x35\x08\xd8\x42\xa4\x80\x16\xbc\x87\xef\xb4\x59\xa2\x89\xdd\xbc\x53\x9a\x30\x06\x9d\x84\xf3\x05\x17\x98\x05\x8b\xe1\xd9\xa9\x31\x1e\xd4\x7d\x1c\x61\x1c\x1b\xb2\xf6\x02\x6e\xc2\x9f\x21\xbc\x0c\x06\x00\x00\x19\x71\x10\x70\xda\xda\x0b\xf8\x36\xf5\x66\xbb\xa7\xc7\xed\x0d\x0f\xab\x9c\xdc\x06\xf7\xfb\xe8\x56\xaa\xe5\x9a\x8d\x5f\x28\xb9\x00\x38\x6f\xcb\xa4\x71\xed\x7f\x38\x3f\x37\x94\xa3\xa1\x08\x85\xe0\x0b\xb8\x29\x38\xbd\x09\xf1\xad\x34\x74\x63\x32\x81\x69\xd8\xe8\xcd\x75\x11\xb0\x3e\xd0\xec\x94\x02\x34\x06\x57\x16\x96\x92\x53\xbf\xbe\x37\x0f\x62\x64\xac\x00\x2d\x65\xc9\x78\x63\x37\x5c\xc1\xb7\xc7\xb6\xc5\xb1\x8b\x85\x8a\xa3\x32\x23\x92\x92\x04\x65\x46\x0c\x0f\x49\x56\x1c\x19\xfb\x14\x29\xe5\xa6\xc5\x6c\xea\x73\x69\x57\xdc\x3b\xbb\x4d\x2b\xbf\x58\x62\xbb\x87\xcb\x5f\x2b\x62\x86\x13\xae\xa3\x61\x2b\x6a\x43\x70\x5b\x35\x2f\x58\x77\xfb\x6d\x4a\xe2\x09\x64\x99\x66\x81\x7a\x98\x19\xc2\x78\x05\x29\x3a\x6e\x7b\x6f\x7b\xe9\x4a\x50\x26\x6e\x2f\x8f\x67\xda\x18\xbd\xbc\x3c\xdf\x51\x2f\x31\x7a\x71\x01\x13\xcb\xda\xe0\x9c\x36\x2e\xf5\xcb\x43\xb8\xba\x02\x25\x33\x78\xa9\x00\xd7\xda\xfc\x99\x80\xd2\x3c\x02\x61\xc8\x15\x13\x04\x45\xcb\xda\xf9\x60\xc8\xea\xc2\x08\xf2\xc1\xcf\x0b\x06\xc9\x20\x15\x6b\x58\x1f\xb4\x85\xe7\x35\xb4\xf8\x4c\xd1\xe5\x2f\xb0\xd1\x30\x60\xff\xb1\xc8\x79\xe5\x41\xa3\xe1\x08\x58\xb7\x2b\x5b\x61\xbe\xb6\xfa\xcd\x94\xa5\xa3\x46\x71\x69\x21\x93\xea\x89\x62\xf0\x35\x90\xc0\xc1\x6e\x76\xba\x14\xaf\xbb\xf3\x27\xaf\xed\x9c\xf8\xb6\x82\xb8\x3c\x7f\xd9\xe2\xd9\xb8\xcc\xab\xd7\xeb\x2e\xb9\x7a\x82\x31\x16\xce\xca\x68\xb8\x1b\x28\x99\x80\xe4\x9f\x6d\x23\x5a\xeb\xda\x5b\xf3\x02\xeb\x8d\xed\x3e\x45\x81\xbe\xe7\xda\xd7\xd5\x26\xa4\xdb\x17\x93\x5b\x64\x48\x0a\x55\xbe\x3c\x8c\x2e\xe6\x81\xf5\x6d\xde\x70\x19\x40\x26\x41\xb1\x27\xfc\x85\x72\x41\xe8\xea\x2e\x2f\xe2\x04\x8e\x72\xfd\x08\x8e\xf3\x3d\xa3\x99\x13\x77\x4a\xc0\x9e\xcc\xf5\xe5\xf1\x00\x73\x9b\xf5\x21\x30\xb7\x31\x7d\x1f\x34\xf3\xd5\xac\x1f\x79\x37\x2a\xbc\x87\xbc\x95\x36\xfb\xc8\x7b\x64\xc6\x3b\xce\xbf\x61\xe6\xa9\x68\xef\x1d\x70\x22\xda\xf7\xb1\xf4\xd0\x4b\xe9\x64\xdc\xf6\x06\x7e\x20\xb7\xbb\xbe\x7c\xa1\x2b\xc1\xdf\x06\x3c\x2a\xdf\x4a\x8a\x77\xcb\xb7\x9e\x2c\xaf\xdd\xb9\x2a\x8e\xb5\xf3\xbd\xc3\xcd\xed\x70\x9e\x95\x55\xa2\x15\xec\xe8\x7a\xb1\xcf\x98\x23\x0a\x46\x9b\x62\xe1\xac\xda\x4c\xef\x02\xe2\xcb\x46\x17\xbb\x4f\x55\x40\xfa\xd4\x8e\x16\x4b\xba\x85\xfd\xd8\xb2\x13\xb5\x82\xd7\xa8\xb3\xfe\xe6\x38\x5d\xd9\xa9\x27\xca\xc7\xd4\x9d\x1e\x56\xb7\x15\xa1\x77\x85\x25\xea\x9e\xb7\x3d\x74\x1d\x75\x46\xad\x8a\xda\x89\xd8\x50\x13\x0d\xea\x78\xde\x27\xbc\x87\x26\xd2\x7f\x14\xd2\x86\x29\x83\x46\xd0\xeb\x9f\xe5\xb5\x8e\xc0\xa1\x57\x6f\xb5\x7e\x44\x64\x5a\x36\x05\x53\x46\xd0\x12\xc5\xae\xde\xbe\x3e\x3e\xdf\xde\x39\xfe\x5f\xc6\xfa\x3e\xcf\x2e\x33\xdf\x74\xee\x6b\x68\x15\xa4\xb4\x83\x76\x98\xde\xb6\x3f\xbf\x0f\xf3\x7a\x6b\xfa\x87\x4b\xa5\x72\xbc\x91\x52\x1f\x54\x0e\x3e\x13\x03\x82\xa1\x84\x0c\xf9\x8e\x9d\x6e\x92\x79\xbb\xe9\xb1\xdd\x98\x82\xab\xff\xe2\xaa\x53\x8d\x5e\x77\x9e\x83\xb0\x9f\x3e\x41\x8e\x4a\x8a\xe8\xec\xd6\xb7\x46\x95\x66\x08\x8a\x6f\xdb\x5f\x33\xf1\x6c\xdd\xb9\x59\x5f\x10\xe9\x3b\x89\x82\x69\xd3\x46\x9b\x4c\xe0\x26\x0e\x3c\xd8\x2a\x94\xbb\x5e\x84\xc2\x73\xaf\xb5\xab\x39\x68\xf5\xf1\xb8\x55\x26\xca\x43\x83\xb1\xd1\x22\xeb\x7b\xbb\x0a\x4d\xc8\x46\x4b\x6b\x04\x55\x7f\x73\xfd\x67\xe3\x8a\xd7\x01\xfc\x1b\x00\x00\xff\xff\xa0\x5f\xcc\xf5\xf7\x16\x00\x00"

func switchboardSetup_royalty_account_by_pathsCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardSetup_royalty_account_by_pathsCdc,
		"switchboard/setup_royalty_account_by_paths.cdc",
	)
}

func switchboardSetup_royalty_account_by_pathsCdc() (*asset, error) {
	bytes, err := switchboardSetup_royalty_account_by_pathsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/setup_royalty_account_by_paths.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa7, 0xca, 0x9d, 0x5c, 0x4f, 0x43, 0xb1, 0x9f, 0x5a, 0x67, 0x11, 0xcc, 0x6f, 0x42, 0xf9, 0xd1, 0xea, 0x7f, 0xd1, 0x7e, 0xbd, 0x28, 0x5e, 0x59, 0xfa, 0x6d, 0xb5, 0x36, 0x8, 0x2, 0xd9, 0x52}}
	return a, nil
}

var _switchboardTransfer_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x4f\x4f\xdb\x4e\x10\x3d\x93\x4f\x31\xbf\x1c\x7e\x38\x52\x08\x97\xaa\x87\x88\x3f\x45\xb4\xf4\x8a\x28\x6d\xcf\x63\x7b\x6c\x6f\xeb\xec\xac\x66\xc7\x84\x08\xf1\xdd\xab\xdd\xb5\x8d\x0d\x95\x4a\x0e\x71\x3c\x3b\x7f\xde\xbc\xf7\x36\x66\xe7\x58\x14\x96\x37\x9d\xad\x4d\xde\xd2\x3d\xff\x26\xbb\x5c\x0c\xe1\x2f\x8f\xb8\x73\x63\x74\x71\x7a\x0a\xf7\x8d\xf1\xa0\x82\xd6\x63\xa1\x86\x2d\x18\x0f\x08\x4a\x3b\xd7\xa2\x12\x54\x2c\xe1\x75\x72\xae\x0d\x6a\x28\x2c\xb8\x6b\x4b\xc8\x09\x3a\x4f\x25\xe4\x07\x40\x7b\x60\x4b\xa0\x0c\x9e\x6c\x09\x1a\x66\xf8\xf0\x8a\x96\xb5\x21\x01\x2c\x0a\xee\x6c\x2c\xd6\x46\xb8\xab\x1b\x40\xf0\x7b\xa3\x45\x93\x33\x4a\xb9\x06\xf4\xd0\xb2\xad\xc3\x53\x1b\x3a\x40\x83\x0f\x04\x9e\x14\x3a\x17\x02\x46\x42\xed\xa4\x02\xd0\x96\x29\x09\xcb\x32\x64\x80\x13\x76\x24\x50\xa0\xc3\xdc\xb4\x46\x0f\x01\x80\x09\x33\xd3\xb2\x31\x53\xc8\x7b\xe0\x2a\x16\x08\x15\x64\x1e\x5e\xd0\xad\x63\x14\x77\xe1\x77\xa8\x8d\xab\x57\x14\x27\x87\x69\xe1\xf4\xb6\xcb\x5b\x53\xdc\xa2\x36\x91\x9f\x10\xaa\xc9\x92\x98\x02\x6e\xee\x5f\x3a\xee\x4d\xdb\x06\x82\xb4\xa1\x50\xed\x50\x70\x47\x4a\xe2\x17\x13\x3e\x33\xe5\x2d\x5c\x25\x4c\xeb\x7e\xee\x16\xbe\xdf\x98\xc7\x8f\x1f\xd6\x63\xaf\x30\x6b\x3b\x99\xbb\x82\xa7\xc5\x02\x00\xa0\x5f\xea\x01\xbb\x56\x41\xc8\x73\x27\x05\x45\x8d\xa0\xe1\xb6\x8c\x3c\x8e\x52\x84\x28\x0a\x41\x4e\xc6\xd6\xe3\x66\x42\x65\x6c\xd5\x92\x06\xe5\xf4\x47\xe8\xb5\x85\x4f\x33\x0b\x6d\x62\x34\xcd\x74\x42\x0e\x85\x32\x6f\x6a\x4b\xb2\x85\xab\x4e\x9b\xab\xc4\xde\x88\xab\xc7\xf6\x95\x14\x10\x84\x2a\x12\xb2\x45\x34\x47\x00\x94\x2a\x8f\x3d\x78\x65\xa1\x32\xc1\x1f\xeb\x02\x90\x18\xb9\xa3\x0a\xce\xfb\xe4\x4d\xce\x22\xbc\x3f\xfb\x7f\x6a\xe1\x84\xea\x22\xab\x84\x77\x5b\x78\x7b\xf2\x4d\x59\xb0\xa6\xc8\xd8\xe2\xe8\xe8\xe8\xf2\x12\x1c\x5a\x53\x64\xcb\xeb\xe8\x5e\xcb\x0a\xa9\xef\x5b\x8c\xbc\x4f\x10\x63\xa3\xff\x96\xab\xd9\x5e\x3f\x8d\x36\xa5\xe0\x7e\xa0\x36\x00\x78\xc7\x66\x9e\xda\x6a\x33\x72\x0c\x67\x27\xe3\x9e\x9b\x7d\xdf\x31\x1b\x2c\x90\x9e\xab\x58\x1b\xbf\x9e\x13\x02\x7a\xa4\xa2\x53\xfa\x0b\xd1\xbd\x9d\x8d\x33\x64\xf5\xd8\x83\x8b\x76\x19\x8c\x0d\x9c\xff\xa2\x62\xce\xf2\x98\x0d\xe7\x50\x93\xf6\x22\x66\xca\xab\xf7\xa8\x38\x9d\x75\xd7\x1b\xf5\x75\xfb\x18\x4c\x3a\x8e\xe9\x63\x4e\xf8\x6c\x6a\xd2\xeb\xf1\xb6\x66\x53\xc3\xaf\xe6\x89\x83\x01\x9e\xe6\xc6\x1c\x26\x3f\x5f\x64\xff\xd6\xb8\xbf\x99\xb3\x55\x26\xff\x27\xaf\x65\xfe\x4c\x8e\xbd\x49\xcc\x0e\x02\xd9\x41\x73\x63\xdf\xb0\x20\xaf\x59\x98\x30\xb0\x29\x53\xb3\xde\xac\x67\x27\x73\x33\xcc\x85\x7e\x5e\xfc\x09\x00\x00\xff\xff\x7e\x46\x30\x15\xc9\x05\x00\x00"

func switchboardTransfer_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardTransfer_tokensCdc,
		"switchboard/transfer_tokens.cdc",
	)
}

func switchboardTransfer_tokensCdc() (*asset, error) {
	bytes, err := switchboardTransfer_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/transfer_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xed, 0xce, 0x5b, 0xc4, 0xae, 0xdd, 0xf2, 0x7d, 0x10, 0xab, 0xc9, 0xad, 0xa8, 0xa2, 0xbd, 0x94, 0x92, 0x4a, 0x4a, 0x57, 0xcb, 0xad, 0xe7, 0xe5, 0xd3, 0xb2, 0x20, 0xef, 0xb2, 0x78, 0x8c, 0x31}}
	return a, nil
}

var _transfer_many_accountsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x94\xc1\x6e\xdb\x30\x0c\x86\xcf\xf1\x53\xb0\x39\xac\xce\xa1\xce\x65\xd8\xc1\x48\x5b\x04\xdd\xba\xd3\x80\xa2\xeb\xb6\xc3\x30\xa0\xb2\x4d\xdb\x5a\x1d\x49\xa0\xe8\x26\x45\x90\x77\x1f\x64\xc9\x86\x13\x07\xc5\x72\x09\x40\x89\xe4\x47\xfe\xbf\x25\x37\x46\x13\xc3\xfc\xbe\x55\x95\xcc\x1a\x7c\xd2\x2f\xa8\xe6\x51\x1f\xfe\xb2\x13\x1b\x33\x44\xa3\xe5\x72\x09\x4f\x24\x94\x2d\x91\x2c\xb0\x8b\xba\x3f\x10\xd0\x48\xcb\xa0\x4b\x10\x45\x41\x68\x2d\x5a\xb0\x06\x73\x59\x4a\x2c\x40\x2a\xe0\x1a\xe1\x39\x9c\xad\x37\xba\x55\xfc\x4d\x98\x67\x30\x82\xc4\x06\x19\x29\x8a\xd8\x95\x15\x39\x4b\xad\xe2\xd3\x8b\x29\xec\xd7\x3e\x94\xc2\x8f\x7b\xb9\xfb\xf4\xf1\xb0\x80\x7d\x14\x01\x00\x38\xa2\x1a\xe1\xa7\x68\x1b\x06\x42\xab\x5b\xca\x11\xb8\x16\x0c\xb5\x6e\x0a\xdb\xb5\xee\x49\x5d\x54\x10\x42\x86\x52\x55\xc0\x61\x12\xc2\xa2\x2b\xd5\x20\xc3\xab\xab\xf3\x88\x65\x0a\x1f\xc6\xb3\x27\x5d\x7d\xdf\xd1\x10\x1a\x41\x18\x5b\x59\x29\xa4\x14\xd6\x2d\xd7\xeb\x3c\x77\xac\x03\x55\x20\xfb\x8a\x0c\x02\x08\x4b\x24\x54\x0e\x4b\x77\x38\x3e\xf3\xd2\x82\x65\x4d\x58\xf8\xa6\x43\x9e\xc5\xa6\x4c\x7a\x0e\xb8\x0e\xb7\x93\x4c\x13\xe9\xed\xea\x0c\xd6\x4d\x5c\x92\xde\xa4\x30\x3d\xf9\xce\x9a\x44\x85\x0f\x82\xeb\x45\x34\x9b\xcd\x6e\x6f\xc1\x08\x25\xf3\x78\x7e\xa7\xdb\xa6\x00\xa5\x19\x7c\xdd\x29\xa4\xde\x7a\xc6\xae\xd0\xc5\x7c\xd1\xf1\x1d\xfc\x78\xb8\xc3\xbc\x65\x1c\x4f\x5b\x6a\xea\xc5\x77\x82\x9f\x4a\x98\xbc\xe0\x9b\x1d\xdf\x0f\x1b\xfa\x25\xb9\x2e\x48\x6c\x7b\x89\xdc\x24\xff\xb1\xa3\x5e\x2e\x8b\x8a\xbd\xf4\xab\xab\xe3\xc5\x25\xdb\x50\x39\x16\x1d\x43\x3a\x41\xfa\x1d\x02\x7f\x2e\x16\x13\x2c\x27\x9c\xa3\x20\xcc\xa5\x91\xa8\xf8\xd2\x82\x69\xb3\x46\xe6\x20\xbc\xd4\xa0\xb3\xbf\x98\x4f\x89\x86\x0c\xb8\x86\x0a\x39\x18\xa3\xb7\xf4\xf9\x4e\x67\x2c\x32\x6e\xfc\x88\x39\xca\x57\xa4\x73\xbd\xba\x03\xef\x93\x21\x25\xa9\x90\xef\x84\x11\x99\x6c\x24\xbf\xc5\x47\xb6\xe8\x6b\x3d\x74\xc3\x78\x63\xc0\xc9\x6f\xb0\xda\xfe\xe8\x55\x18\x72\x0f\x37\xf1\x34\xe9\x5d\x6b\xf9\xbc\xf7\xa7\xec\x64\x9c\x4f\x17\xf4\x19\x8d\xb6\xd2\xcb\xd1\x6b\xaa\x7a\xbb\x84\xa7\x65\x5c\x87\xce\x6d\x6b\xb4\xa9\xa4\xf0\x05\xc3\x47\xb3\xba\x1a\x3c\x34\xea\x7d\x08\x6e\x3f\x44\xff\x02\x00\x00\xff\xff\x22\x43\x24\x69\x21\x05\x00\x00"

func transfer_many_accountsCdcBytes() ([]byte, error) {
	return bindataRead(
		_transfer_many_accountsCdc,
		"transfer_many_accounts.cdc",
	)
}

func transfer_many_accountsCdc() (*asset, error) {
	bytes, err := transfer_many_accountsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transfer_many_accounts.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x89, 0x44, 0x1c, 0x42, 0x83, 0xa0, 0x27, 0x84, 0x1, 0xeb, 0xf1, 0xf2, 0xf6, 0x99, 0x29, 0xe8, 0xac, 0xd0, 0xdb, 0x4e, 0x8c, 0xba, 0x4f, 0x33, 0x3d, 0xb5, 0x1d, 0xe6, 0x96, 0x2f, 0x6b, 0xb1}}
	return a, nil
}

var _transfer_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\x4d\x6f\xd3\x40\x10\x3d\xd7\xbf\xe2\x91\x03\x75\x24\xea\x5c\x10\x87\xa8\x1f\x54\x85\x72\xad\x4a\x81\xf3\xda\x9e\xc4\x0b\xce\xee\x6a\x76\xdc\xb4\xaa\xfa\xdf\xd1\xee\xda\xc6\x6e\x10\x25\x97\xc8\xe3\x99\x37\x6f\xde\x7b\x5e\xad\x70\xd7\x68\x0f\x61\x65\xbc\xaa\x44\x5b\x03\xed\xa1\x20\xb4\x73\xad\x12\xc2\xc6\x72\x78\x9c\xbc\x97\x46\x49\xb6\x5a\xa1\xb2\x5d\x5b\xa3\x24\x74\x9e\x6a\x94\x8f\x50\xe6\xd1\x1a\x82\x58\x78\x32\x35\xc4\xfe\x22\xe3\xc3\xa3\x32\x56\x1a\x62\xa8\xaa\xb2\x9d\x89\xc3\x01\x04\x8d\xf2\x28\x89\x0c\x3c\x09\x3a\x17\x5a\x99\x2a\xd2\xf7\xd4\x0f\x17\xd9\x6a\x95\x45\x8e\x84\xbd\x96\xa6\x66\xb5\x87\xda\x05\x10\xa8\xb0\xa2\xa1\x01\x14\x1b\xb6\x3b\x6c\x49\x2e\xff\x2c\xd9\x0f\x0c\x43\x9f\x53\xac\x76\x24\xc4\x91\x52\xa8\x4c\x8e\xca\x32\xbd\x73\x96\x05\x8b\xeb\xce\x6c\x75\xd9\xd2\x5d\x20\xb0\x18\xcb\x9f\x1f\xd4\xce\x8d\xd5\x6c\x32\x9a\x27\x3e\x6b\x7c\xbb\xd6\x0f\x1f\xde\xbf\x83\xd8\x35\x2e\xeb\x9a\xc9\xfb\x25\x9e\xb2\x0c\x00\xfa\x1b\xbe\xab\xae\x15\x30\x79\xdb\x71\x45\xbd\x08\xb6\xad\x7d\xe2\xd3\x0b\x16\xaa\x8a\x09\x25\x69\xb3\x4d\x2c\x37\xc4\x4c\x75\x84\x6a\x49\x82\xbe\x12\xb1\xd6\xf8\x38\x23\x5c\xc4\x6a\xda\xe9\x98\x9c\x62\xca\xbd\xde\x1a\xe2\x35\x2e\x3b\x69\x7a\x71\x46\x5e\x3d\xb7\x2f\x24\x50\x60\xda\x10\x93\xa9\x68\x10\x28\x4d\x1e\x7b\x78\xb1\x4c\x35\xee\x23\xf8\x30\x17\x88\xc4\xca\x2d\x6d\x70\xd6\x37\x17\xa5\x65\xb6\xfb\xd3\xb7\x53\xc1\x12\xab\xf3\x3c\x58\xb4\xc6\xe1\x9b\xaf\x62\x59\x6d\xe9\x46\x49\xb3\xcc\x8e\x8e\x8e\x2e\x2e\xe0\x94\xd1\x55\xbe\xb8\x8a\x0e\x1a\x2b\x48\xb8\x87\x1c\xed\x3e\x51\x8c\x40\x6f\x16\xcb\xd9\x5d\x3f\x86\xcc\xf4\xd2\xc6\x8c\xbc\x7e\x99\xa7\x76\x53\x8c\x1a\xe3\xf4\x64\xbc\xb3\x18\x52\x38\xba\x9e\xfe\x97\x71\xf6\x39\x2d\xa7\x07\xaa\x3a\xa1\xbf\x68\x1c\x56\x33\x55\xda\x69\x32\x72\xec\xe1\xba\xb2\xd5\xd5\x18\x61\x5b\xfe\xa4\x6a\x2e\xf0\xd8\x8d\xb3\x49\xb8\x73\xb1\xcb\xff\x31\x70\xba\xeb\x36\x7d\x59\xfc\x12\x3e\x16\x93\x85\x63\x7b\xb1\x25\xb9\x52\x4e\x95\xba\xd5\xf2\x98\xcf\x1c\x1b\x70\x6e\x22\xf7\xe4\x19\x26\xbf\x31\x01\x4f\xf3\x64\x0e\x73\xcf\xe7\xf9\xeb\x26\xa7\xd6\x7f\x1f\x14\xcd\x79\x61\xf8\x27\x72\xd6\xeb\x24\xf4\x60\x95\x19\xdc\xd7\xe6\x00\x83\x5f\x8a\x32\x11\xa4\xa8\x13\x58\x1f\xdb\xd3\x93\x79\x2c\x06\xcb\x9f\xb3\xdf\x01\x00\x00\xff\xff\x80\x55\x4a\x03\x45\x05\x00\x00"

func transfer_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_transfer_tokensCdc,
		"transfer_tokens.cdc",
	)
}

func transfer_tokensCdc() (*asset, error) {
	bytes, err := transfer_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transfer_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x45, 0x1, 0x33, 0xad, 0x18, 0x81, 0x46, 0x2, 0xb2, 0x73, 0x36, 0xdb, 0xfb, 0xa4, 0x75, 0x2a, 0x56, 0xce, 0x50, 0xe3, 0x43, 0x72, 0x12, 0xf3, 0xd0, 0xbe, 0xf7, 0x14, 0xda, 0x4f, 0x3, 0x9f}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"burn_tokens.cdc":                                       burn_tokensCdc,
	"create_forwarder.cdc":                                  create_forwarderCdc,
	"generic_transfer.cdc":                                  generic_transferCdc,
	"metadata/setup_account_from_vault_reference.cdc":       metadataSetup_account_from_vault_referenceCdc,
	"mint_tokens.cdc":                                       mint_tokensCdc,
	"privateForwarder/create_account_private_forwarder.cdc": privateforwarderCreate_account_private_forwarderCdc,
	"privateForwarder/create_private_forwarder.cdc":         privateforwarderCreate_private_forwarderCdc,
	"privateForwarder/deploy_forwarder_contract.cdc":        privateforwarderDeploy_forwarder_contractCdc,
	"privateForwarder/setup_and_create_forwarder.cdc":       privateforwarderSetup_and_create_forwarderCdc,
	"privateForwarder/transfer_private_many_accounts.cdc":   privateforwarderTransfer_private_many_accountsCdc,
	"safe_generic_transfer.cdc":                             safe_generic_transferCdc,
	"scripts/get_balance.cdc":                               scriptsGet_balanceCdc,
	"scripts/get_supply.cdc":                                scriptsGet_supplyCdc,
	"scripts/get_supported_vault_types.cdc":                 scriptsGet_supported_vault_typesCdc,
	"scripts/metadata/get_token_metadata.cdc":               scriptsMetadataGet_token_metadataCdc,
	"scripts/metadata/get_vault_data.cdc":                   scriptsMetadataGet_vault_dataCdc,
	"scripts/metadata/get_vault_display.cdc":                scriptsMetadataGet_vault_displayCdc,
	"scripts/switchboard/check_receiver_by_type.cdc":        scriptsSwitchboardCheck_receiver_by_typeCdc,
	"scripts/switchboard/get_vault_types.cdc":               scriptsSwitchboardGet_vault_typesCdc,
	"scripts/switchboard/get_vault_types_and_address.cdc":   scriptsSwitchboardGet_vault_types_and_addressCdc,
	"scripts/tokenForwarder/is_recipient_valid.cdc":         scriptsTokenforwarderIs_recipient_validCdc,
	"setup_account.cdc":                                     setup_accountCdc,
	"switchboard/add_vault_capability.cdc":                  switchboardAdd_vault_capabilityCdc,
	"switchboard/add_vault_wrapper_capability.cdc":          switchboardAdd_vault_wrapper_capabilityCdc,
	"switchboard/batch_add_vault_capabilities.cdc":          switchboardBatch_add_vault_capabilitiesCdc,
	"switchboard/batch_add_vault_wrapper_capabilities.cdc":  switchboardBatch_add_vault_wrapper_capabilitiesCdc,
	"switchboard/remove_vault_capability.cdc":               switchboardRemove_vault_capabilityCdc,
	"switchboard/safe_deposit_to_lnf.cdc":                   switchboardSafe_deposit_to_lnfCdc,
	"switchboard/safe_transfer_tokens.cdc":                  switchboardSafe_transfer_tokensCdc,
	"switchboard/safe_transfer_tokens_v2.cdc":               switchboardSafe_transfer_tokens_v2Cdc,
	"switchboard/setup_account.cdc":                         switchboardSetup_accountCdc,
	"switchboard/setup_royalty_account.cdc":                 switchboardSetup_royalty_accountCdc,
	"switchboard/setup_royalty_account_by_paths.cdc":        switchboardSetup_royalty_account_by_pathsCdc,
	"switchboard/transfer_tokens.cdc":                       switchboardTransfer_tokensCdc,
	"transfer_many_accounts.cdc":                            transfer_many_accountsCdc,
	"transfer_tokens.cdc":                                   transfer_tokensCdc,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"burn_tokens.cdc": {burn_tokensCdc, map[string]*bintree{}},
	"create_forwarder.cdc": {create_forwarderCdc, map[string]*bintree{}},
	"generic_transfer.cdc": {generic_transferCdc, map[string]*bintree{}},
	"metadata": {nil, map[string]*bintree{
		"setup_account_from_vault_reference.cdc": {metadataSetup_account_from_vault_referenceCdc, map[string]*bintree{}},
	}},
	"mint_tokens.cdc": {mint_tokensCdc, map[string]*bintree{}},
	"privateForwarder": {nil, map[string]*bintree{
		"create_account_private_forwarder.cdc": {privateforwarderCreate_account_private_forwarderCdc, map[string]*bintree{}},
		"create_private_forwarder.cdc": {privateforwarderCreate_private_forwarderCdc, map[string]*bintree{}},
		"deploy_forwarder_contract.cdc": {privateforwarderDeploy_forwarder_contractCdc, map[string]*bintree{}},
		"setup_and_create_forwarder.cdc": {privateforwarderSetup_and_create_forwarderCdc, map[string]*bintree{}},
		"transfer_private_many_accounts.cdc": {privateforwarderTransfer_private_many_accountsCdc, map[string]*bintree{}},
	}},
	"safe_generic_transfer.cdc": {safe_generic_transferCdc, map[string]*bintree{}},
	"scripts": {nil, map[string]*bintree{
		"get_balance.cdc": {scriptsGet_balanceCdc, map[string]*bintree{}},
		"get_supply.cdc": {scriptsGet_supplyCdc, map[string]*bintree{}},
		"get_supported_vault_types.cdc": {scriptsGet_supported_vault_typesCdc, map[string]*bintree{}},
		"metadata": {nil, map[string]*bintree{
			"get_token_metadata.cdc": {scriptsMetadataGet_token_metadataCdc, map[string]*bintree{}},
			"get_vault_data.cdc": {scriptsMetadataGet_vault_dataCdc, map[string]*bintree{}},
			"get_vault_display.cdc": {scriptsMetadataGet_vault_displayCdc, map[string]*bintree{}},
		}},
		"switchboard": {nil, map[string]*bintree{
			"check_receiver_by_type.cdc": {scriptsSwitchboardCheck_receiver_by_typeCdc, map[string]*bintree{}},
			"get_vault_types.cdc": {scriptsSwitchboardGet_vault_typesCdc, map[string]*bintree{}},
			"get_vault_types_and_address.cdc": {scriptsSwitchboardGet_vault_types_and_addressCdc, map[string]*bintree{}},
		}},
		"tokenForwarder": {nil, map[string]*bintree{
			"is_recipient_valid.cdc": {scriptsTokenforwarderIs_recipient_validCdc, map[string]*bintree{}},
		}},
	}},
	"setup_account.cdc": {setup_accountCdc, map[string]*bintree{}},
	"switchboard": {nil, map[string]*bintree{
		"add_vault_capability.cdc": {switchboardAdd_vault_capabilityCdc, map[string]*bintree{}},
		"add_vault_wrapper_capability.cdc": {switchboardAdd_vault_wrapper_capabilityCdc, map[string]*bintree{}},
		"batch_add_vault_capabilities.cdc": {switchboardBatch_add_vault_capabilitiesCdc, map[string]*bintree{}},
		"batch_add_vault_wrapper_capabilities.cdc": {switchboardBatch_add_vault_wrapper_capabilitiesCdc, map[string]*bintree{}},
		"remove_vault_capability.cdc": {switchboardRemove_vault_capabilityCdc, map[string]*bintree{}},
		"safe_deposit_to_lnf.cdc": {switchboardSafe_deposit_to_lnfCdc, map[string]*bintree{}},
		"safe_transfer_tokens.cdc": {switchboardSafe_transfer_tokensCdc, map[string]*bintree{}},
		"safe_transfer_tokens_v2.cdc": {switchboardSafe_transfer_tokens_v2Cdc, map[string]*bintree{}},
		"setup_account.cdc": {switchboardSetup_accountCdc, map[string]*bintree{}},
		"setup_royalty_account.cdc": {switchboardSetup_royalty_accountCdc, map[string]*bintree{}},
		"setup_royalty_account_by_paths.cdc": {switchboardSetup_royalty_account_by_pathsCdc, map[string]*bintree{}},
		"transfer_tokens.cdc": {switchboardTransfer_tokensCdc, map[string]*bintree{}},
	}},
	"transfer_many_accounts.cdc": {transfer_many_accountsCdc, map[string]*bintree{}},
	"transfer_tokens.cdc": {transfer_tokensCdc, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
