// Code generated by go-bindata. DO NOT EDIT.
// sources:
// ../../../transactions/burn_tokens.cdc (1.402kB)
// ../../../transactions/create_forwarder.cdc (2.569kB)
// ../../../transactions/generic_transfer.cdc (1.335kB)
// ../../../transactions/metadata/setup_account_from_vault_reference.cdc (1.909kB)
// ../../../transactions/mint_tokens.cdc (1.595kB)
// ../../../transactions/privateForwarder/create_account_private_forwarder.cdc (1.683kB)
// ../../../transactions/privateForwarder/create_private_forwarder.cdc (1.392kB)
// ../../../transactions/privateForwarder/deploy_forwarder_contract.cdc (418B)
// ../../../transactions/privateForwarder/setup_and_create_forwarder.cdc (2.218kB)
// ../../../transactions/privateForwarder/transfer_private_many_accounts.cdc (1.241kB)
// ../../../transactions/safe_generic_transfer.cdc (1.892kB)
// ../../../transactions/scripts/get_balance.cdc (423B)
// ../../../transactions/scripts/get_supply.cdc (195B)
// ../../../transactions/scripts/get_supported_vault_types.cdc (979B)
// ../../../transactions/scripts/metadata/get_token_metadata.cdc (538B)
// ../../../transactions/scripts/metadata/get_vault_data.cdc (602B)
// ../../../transactions/scripts/metadata/get_vault_display.cdc (596B)
// ../../../transactions/scripts/metadata/get_vault_supply_view.cdc (679B)
// ../../../transactions/scripts/switchboard/check_receiver_by_type.cdc (570B)
// ../../../transactions/scripts/switchboard/get_vault_types.cdc (698B)
// ../../../transactions/scripts/switchboard/get_vault_types_and_address.cdc (729B)
// ../../../transactions/scripts/test/example_token_vault_display_strict_equal.cdc (2.014kB)
// ../../../transactions/scripts/tokenForwarder/is_recipient_valid.cdc (444B)
// ../../../transactions/setup_account.cdc (1.417kB)
// ../../../transactions/switchboard/add_vault_capability.cdc (1.415kB)
// ../../../transactions/switchboard/add_vault_wrapper_capability.cdc (1.443kB)
// ../../../transactions/switchboard/batch_add_vault_capabilities.cdc (1.34kB)
// ../../../transactions/switchboard/batch_add_vault_wrapper_capabilities.cdc (1.591kB)
// ../../../transactions/switchboard/remove_vault_capability.cdc (1.155kB)
// ../../../transactions/switchboard/safe_deposit_to_lnf.cdc (4.493kB)
// ../../../transactions/switchboard/safe_transfer_tokens.cdc (2.153kB)
// ../../../transactions/switchboard/safe_transfer_tokens_v2.cdc (1.932kB)
// ../../../transactions/switchboard/setup_account.cdc (1.698kB)
// ../../../transactions/switchboard/setup_royalty_account.cdc (5.883kB)
// ../../../transactions/switchboard/setup_royalty_account_by_paths.cdc (5.958kB)
// ../../../transactions/switchboard/transfer_tokens.cdc (1.551kB)
// ../../../transactions/transfer_many_accounts.cdc (1.418kB)
// ../../../transactions/transfer_tokens.cdc (1.446kB)

package assets

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	clErr := gz.Close()
	if clErr != nil {
		return nil, clErr
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _burn_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x53\x41\x73\x9b\x3c\x10\xbd\xf3\x2b\xde\xc7\xe1\x2b\x1c\x82\x2f\x9d\x1e\x3c\x71\xd3\xa4\x93\x9c\x3b\x93\x34\x3d\x2f\xb0\x18\x4d\x41\x62\xa4\xa5\x76\x26\xcd\x7f\xef\x48\x32\x04\xea\xa4\x5c\x6c\x89\x7d\x6f\xdf\x7b\xbb\xa8\x7e\x30\x56\x70\x37\xea\xbd\x2a\x3b\x7e\x30\x3f\x59\xa3\xb1\xa6\x47\xba\xba\x4b\x93\x53\xe5\xed\x91\xfa\x61\x5d\xb8\xbc\x4a\x93\x64\xb3\xd9\xe0\xa1\x55\x0e\x62\x49\x3b\xaa\x44\x19\x0d\xe5\x40\x10\xee\x87\x8e\x84\xd1\x18\xeb\x8f\x8b\xf7\xd2\x92\xa0\x32\x63\x57\xa3\x64\x8c\x8e\x6b\x94\x4f\x90\x96\x41\x75\xaf\x34\xa8\xaa\xcc\xa8\x05\x62\x50\x8e\x56\x43\x7c\x33\x17\x05\x48\xcb\xca\x86\xb6\x4e\x8c\xe5\x1a\x8f\x34\x76\xe2\x2f\x4e\x5a\x38\x60\x94\xde\x83\xfa\xc0\x72\x98\x1a\x11\x06\xb2\xd4\xb3\xb0\xf5\xd4\xbe\xdf\x42\x55\xa0\x58\x9c\xb3\x08\xdf\xe2\xfb\x9d\x3a\x7e\xfa\x98\xe3\x39\x49\x00\x60\xea\x22\x46\xa8\x83\x1b\x87\xa1\x7b\x82\x69\x26\x91\x25\x37\xc6\x72\x20\xf7\x3a\x02\xa4\x63\x39\x15\xde\x84\xb7\x13\xe7\x2b\x61\x30\x01\xcb\xce\x8c\xb6\xe2\x18\x50\x6b\xba\xda\x45\x95\x91\x3a\xdc\x92\x65\x94\xec\xed\x79\x7a\xae\xe7\x06\xfe\x18\x68\xb6\xf8\xb2\x1c\x52\x11\x03\x0a\x75\x83\xe5\x81\x2c\x67\x4e\xed\x35\xdb\x2d\x68\x94\x36\xbb\x31\xd6\x9a\xc3\x23\x75\x23\xe7\xf8\xff\x3a\x66\x3f\xdb\xf5\x8f\xe3\xae\x29\x96\x06\xb0\x5b\xad\x46\x11\xb2\xb8\x0f\x05\xaf\xa8\xcd\x06\x3f\x94\xb4\xb5\xa5\xc3\xdf\x13\x44\x14\xf0\xc1\xe1\x57\x30\xae\x74\x98\x26\xed\x79\x46\x87\xcc\x42\x1a\x31\x9b\xdd\x09\x53\x9c\x0a\x8b\x32\xc8\xbe\x0c\x16\x56\xdb\x5b\x4c\x5d\xa9\xec\xbc\xa3\xf3\x30\x3e\x67\x73\x9b\xe9\xf1\xca\xb6\x38\x2f\xbd\x8f\xdd\xbe\x91\xb4\x2b\x4c\x8e\xab\x2b\x0c\xa4\x55\x95\xa5\x5f\xc3\x82\x69\x23\x88\x9a\x40\xb0\xdc\xb0\x65\xed\x47\x69\xd6\x86\x57\x9f\x54\x70\x9f\xe6\xeb\xa0\xe7\x41\xe2\xf2\x62\x19\x41\x71\x38\xf9\x9a\x37\x33\xfe\xe6\x20\xf7\xdf\x9b\x33\xf7\x94\x2f\x71\x20\x7c\xe4\x6a\x14\x5e\x4e\x75\x05\xf0\x4d\xc3\x3f\x97\xc5\x28\x2e\x2f\xd6\x62\xf2\x64\x49\x37\x18\x27\x78\x7e\x9b\x6a\xb1\x0c\xd8\xed\x90\x9d\x6f\xcf\xc5\xa4\x7c\xbb\xca\x34\x9d\xbe\x8e\xb4\xa8\x8c\xae\x48\xce\xa1\x85\x98\x7b\xb1\x4a\xef\xb3\x3c\x5f\x61\x27\x44\x8a\xdf\xb8\x6e\xc4\x2f\xf7\xcc\xf2\x9e\xba\x25\xd9\xfb\x6c\xb7\xc7\x81\x2b\xe1\x7a\x41\xf8\x2f\x4b\xe7\xa4\x2f\xc9\x4b\xf2\x27\x00\x00\xff\xff\x14\x34\x67\xde\x7a\x05\x00\x00"

func burn_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_burn_tokensCdc,
		"burn_tokens.cdc",
	)
}

func burn_tokensCdc() (*asset, error) {
	bytes, err := burn_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "burn_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x68, 0xe, 0xcf, 0x4, 0xdf, 0x35, 0xbf, 0xd6, 0x31, 0x77, 0x6f, 0xcd, 0xdc, 0xfe, 0x93, 0xa0, 0x8, 0x58, 0xdd, 0x76, 0x1b, 0x3e, 0x33, 0xb0, 0xe6, 0x41, 0xf7, 0x3, 0xa7, 0x15, 0xb0, 0xc0}}
	return a, nil
}

var _create_forwarderCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x55\x4d\x6f\x1b\x37\x10\xbd\xf3\x57\x0c\x7c\x48\x25\x43\x5e\xa1\x5f\x17\xc1\x49\x90\xaa\x75\x11\xa0\x28\x82\xda\xc9\xb5\x19\x71\x47\x22\x9b\x15\xb9\x20\x67\xb5\x11\x02\xff\xf7\x82\xe4\x2e\xc5\xdd\xb8\x46\xd1\x43\x75\xf2\x92\xf3\xf1\xe6\xbd\x37\xf4\xfa\xfa\x5a\x88\x07\xa5\x3d\xb0\x43\xe3\x51\xb2\xb6\x06\xb4\x07\x04\xa6\x63\xdb\x20\x13\xec\xad\x0b\x9f\xc5\x3d\x2b\x64\x90\xb6\x6b\x6a\xd8\x11\x74\x9e\x6a\xc1\x16\x3c\x31\x74\x2d\xa0\x01\x94\xd2\x76\x86\x81\x6d\x48\xee\xd1\xd5\x50\x53\x6b\xbd\x66\xaa\x81\xed\x27\x32\x3e\xdc\xa1\xb1\xac\xc8\x81\x23\x49\xfa\x44\xae\x12\xe2\xed\x1e\xd0\x9c\xad\x21\xf0\x64\x6a\x5f\x06\x87\x3e\xee\x1b\x0f\x77\xa9\x22\x39\xf8\x63\xc8\x5b\x09\x56\x94\xbf\xa0\xd7\x4d\x03\x7f\x75\x9e\x73\x73\x56\xd6\x53\x51\x2b\x84\x7f\xc0\xae\xe1\x34\x89\x42\x0f\x3b\x22\x23\xc2\x04\xe8\xe3\xb5\x23\xa9\x5b\x4d\x86\x01\x4d\x0d\x74\xd4\xe1\x0f\xa0\x53\x38\x89\x49\xda\xd4\x5a\x22\x93\x17\xbd\xd2\x52\x45\x74\x63\xc3\x30\xa5\x1a\x1b\x56\x03\xc1\x3d\x9e\x57\xa0\xc3\x7c\x60\xf7\xfb\x1b\xa9\x50\x1b\xf0\xe4\x4e\x5a\x12\xf4\x68\x38\x42\x3b\x5a\xa3\xd9\x3a\xe8\x95\x0d\x32\x0c\x05\xb5\x39\x88\x0b\x7c\xcd\x2b\xd0\x0c\x12\x0d\xf4\xc8\x52\x25\x58\xf1\xca\x13\x41\xaf\xc8\x51\x01\x00\x24\x1e\x09\xf6\xce\x1e\x2b\x21\xee\x99\xda\x21\x32\xa9\x95\xa4\xf2\xd0\x6b\x56\x29\x21\x4f\xe1\x36\x42\x7c\x5b\xc1\x83\x22\xb8\xeb\xcc\x41\xef\x1a\x82\x87\x18\x21\xad\x61\x87\x32\xb0\xc0\xe4\xf6\x28\x09\xbc\x8a\x7e\xc0\xc6\x11\xd6\xe7\xe0\x8b\x9a\xda\xc6\x9e\xa9\x06\x6f\x8f\x14\x41\x89\xef\x52\x35\x6c\xdb\x46\x4b\x0c\xf5\x78\x5a\x6f\xa8\x52\x64\x57\xe2\xfb\x94\x54\x28\x32\xd8\x6b\x08\x56\x78\x22\xc0\x41\xd0\x60\x56\x8e\x7e\x4e\x85\x1d\x21\x53\x2d\x00\x20\x0a\xe9\xd9\x3a\xaa\x41\x1b\xd0\xec\xe3\x17\x1e\x28\xcd\x8e\xd0\x76\xbb\x46\x7b\x45\x75\xf6\x92\xf8\xa1\x82\x9f\x23\x90\xc8\xe7\xc7\x38\xfd\x5d\xd6\xa4\x92\xb5\xfc\x78\x01\x1f\x5d\x5a\xeb\xfd\x9e\x5c\x01\x53\xfc\x58\x05\xcf\x02\x82\xa1\x1e\xde\xa4\xc3\x0d\x6c\x23\xb2\x58\x76\x9c\xc7\x58\x77\xc4\xa6\x39\xaf\x22\x5c\x56\x64\xc0\x75\x26\x75\x4e\x83\xfc\x99\xa5\x49\xad\x8b\xa5\x4c\x49\x07\x62\xd6\xe6\x00\x93\x85\x08\xd2\x4f\x1a\x25\x03\xcf\x8c\x5e\x89\xeb\xb5\x10\xfa\xd8\x5a\xc7\x59\xef\x24\x77\x2c\x70\x35\x39\xbb\x1a\x23\x7f\xf9\x8c\xc7\x76\x1a\x58\x1e\xe5\xb8\x19\x75\x43\xe8\xec\xf4\x4a\x88\x62\xa4\xc5\xf8\x30\x6c\xe0\x4d\x5d\x3b\xf2\x7e\x09\x5f\x44\x9c\xb3\x75\xd4\xa2\xa3\x05\x4a\xc9\x1b\xc0\x8e\xd5\xe2\x27\xeb\x9c\xed\x3f\x60\xd3\xd1\x0a\xde\x7a\xdf\xd1\x7d\x92\x77\x8b\x2d\xee\x74\xa3\xf9\xbc\x0d\x4a\xd9\xa6\x21\xb7\x82\x77\x49\xec\xcb\xe5\x0a\xee\xf1\x44\x43\xfe\x7b\xd3\xce\xef\x97\xf0\x62\x10\x2f\xa3\x08\xbf\xf5\x1a\x7e\x25\x1e\xa9\x4c\x84\xcb\x9c\x34\xf8\xf1\x42\xfd\x8e\xe2\xf0\x97\x77\xc2\xe6\x4a\x0d\x71\x61\xf2\x97\x41\xcb\xa1\x61\x26\x62\x59\xe5\xd2\x9a\x7c\x75\x20\xbe\x7d\xf1\x65\xa2\x4b\x15\xd7\xe0\xf1\xd5\xa2\x14\x21\x1d\xc6\x89\xe5\x3b\x64\xb5\xcc\x3d\xc3\xef\xf5\x6b\x68\xd1\x68\xb9\xb8\xda\xc6\x7d\x32\x96\x61\x17\xc9\x7c\x7a\xa2\x20\xdc\x57\xcb\x78\xb5\x9c\x50\x52\xb8\x3b\x5b\x36\x2d\x60\x58\x56\xcd\xe3\x2b\x3c\x77\x64\x6d\x47\xf7\x16\x2f\x5f\x49\xd0\x29\x6e\xf9\xed\xcd\xdc\x4f\x55\x5a\x90\xdf\xa9\xcf\xff\x1f\x16\x19\xe4\xe6\x82\xf7\x32\x7a\xb0\x4e\x35\xbc\x00\x55\x80\xb5\xb8\xbd\x89\xd5\x57\xc0\x76\x03\xeb\xe1\x6a\x4d\x05\x91\xb9\xf6\x74\xda\xf7\xa6\xd1\xe6\x53\x84\x4d\x9f\xb5\x8f\x1b\x78\x61\x6c\xda\x71\x22\x60\x37\xda\x6c\x2a\xd7\xb8\xb9\xa5\x62\x65\xbf\xdf\xc6\x6e\xe1\x45\xb9\x10\xf5\x94\x5c\x13\xf2\xe2\x9b\x38\x16\xdf\x62\x0b\x2f\x9f\xc0\x34\x52\xa2\xc3\x0a\x7d\x65\xaf\x31\xfb\xf1\xd5\x62\x62\xa2\x88\xec\x59\xca\x26\xe1\xcb\x67\x48\x19\x29\x99\xa3\x5d\x01\xf2\x06\xfe\x3b\x51\x19\x49\x8a\x7e\x96\xa4\x1c\xfb\x6f\x59\x9a\xdb\x71\xd6\xec\xff\xa2\xab\xc4\x9d\xf8\x5a\xc7\x7b\xf9\x4f\x36\x0e\x35\x1f\xc5\xa3\xf8\x3b\x00\x00\xff\xff\xb0\x0a\x8c\x7d\x09\x0a\x00\x00"

func create_forwarderCdcBytes() ([]byte, error) {
	return bindataRead(
		_create_forwarderCdc,
		"create_forwarder.cdc",
	)
}

func create_forwarderCdc() (*asset, error) {
	bytes, err := create_forwarderCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "create_forwarder.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x3c, 0x43, 0x9e, 0x1b, 0xb5, 0xbe, 0xa6, 0x21, 0x2f, 0x23, 0x99, 0x61, 0xc9, 0xd3, 0x2, 0xa5, 0x30, 0xd2, 0x8c, 0x8b, 0x7b, 0x14, 0x75, 0x52, 0x10, 0xf9, 0x31, 0xd1, 0x62, 0xd, 0x44, 0xc3}}
	return a, nil
}

var _generic_transferCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\x4d\x6f\xe2\x4a\x10\x3c\x87\x5f\x51\x8f\xc3\x0b\x48\xc4\xb9\x3c\xbd\x03\xca\xc7\x66\x23\x65\xaf\x51\x36\x9b\x3d\x37\x9e\x06\xcf\x66\x98\xb1\x66\xda\x38\x28\xe2\xbf\xaf\xa6\x6d\x0c\x24\xda\xc3\x72\xc1\x34\xdd\x55\xd5\x35\xe5\xb1\xeb\x3a\x44\xc1\x43\xe3\x57\x76\xe1\xf8\x39\xbc\xb2\xc7\x32\x86\x35\xc6\x27\xb5\xf1\x68\x74\x79\x79\x89\x7b\xf2\xa8\x29\x25\x58\x0f\xf2\x5b\x24\x09\x91\x56\x8c\x9a\xa4\x02\x79\x83\xc8\x25\xdb\x0d\xc7\xae\x62\x7d\x12\x26\x83\xb0\xc4\xaf\x26\x09\xa4\x62\x18\x5e\x52\xe3\xa4\x50\xbc\xe7\xca\x26\x38\x96\x84\x6d\x68\x50\x56\x21\x24\xd6\x2e\x51\x21\xb9\xd8\x92\x17\x48\x40\x62\x6f\x40\x09\x2d\x3b\xa7\x2d\x25\xd5\xb4\xb0\xce\xca\xf6\x73\x9f\xcd\x8f\x4a\xa1\x34\x77\x7e\xdb\x23\xaa\xac\x92\x3c\x16\xac\x8b\xb0\x62\x92\x07\xc5\x55\xb3\x66\x2f\xa8\x38\xf2\x0c\x29\xa0\x25\xa7\xca\x52\x15\x1a\x67\x14\xa7\x7b\x44\x59\x71\xf9\x7a\x98\xd8\x90\x6b\x38\x65\xee\x35\xbd\x32\x52\x13\xbb\x1d\xac\x17\xf6\x86\xcd\x31\xb5\x4d\x7b\x5a\xeb\x55\x9e\x44\xf2\x89\x4a\xb1\xc1\x4f\x68\x1d\x1a\x2f\x73\xfc\x78\xb0\x6f\xff\xff\x37\x83\x84\x39\xee\x8c\x89\x9c\xd2\x4c\xf7\xe2\xf8\x48\x52\xcd\xf1\xbd\xb3\x3d\xff\x98\x0d\x96\x77\x7f\x3d\x36\x0b\x67\xcb\xfc\x3c\xc5\xfb\x68\x04\x00\xea\x33\xe3\x25\xdb\x8e\xc8\x29\x34\xb1\xcc\x0a\x49\x50\x05\x67\xd2\xc1\xf0\xd4\x55\x29\x32\x16\x6c\xfd\x0a\xaa\x6e\xc9\x31\xb2\x51\x28\xc7\x02\xe1\x75\xad\x58\x73\x7c\x79\x3f\x09\x49\xa1\xe5\x5d\xc7\x5a\x47\xae\x29\xf2\x24\xd9\x95\xe7\x38\x07\x35\x52\x4d\xbe\x86\x18\x43\xfb\x92\x0d\x9b\xe2\xdf\xbb\xb2\xcc\x0b\x0f\x42\x7b\xb1\xdf\x58\x40\x88\xbc\xe4\xc8\x3e\x2b\x0d\xaa\xb0\x03\x3a\x4f\x1a\x3a\x36\xd8\x64\xb2\x61\x2e\x2b\xd3\xca\x13\x2f\x71\xdd\x37\x17\x7d\x3e\x8b\x85\xf2\x5e\xa9\x86\x53\xc9\x3f\xad\x54\x26\x52\x4b\x0b\x97\x25\x7d\x58\xe8\x31\x86\x8d\x35\x1c\x77\x37\x93\xfc\x52\xcc\x8f\x4e\x61\x3a\x3a\x3b\x3b\xbb\xbd\x45\x4d\xde\x96\x93\xf1\xbd\x26\xc3\x07\x41\xc7\xf5\x59\x7f\x68\x3b\xf9\x6a\xd2\x3f\xe3\xe9\x61\xe7\xc4\x6e\x59\x0c\xb6\xe2\xea\x62\xd8\xa4\x68\x7b\x79\x43\x36\xba\xef\xa9\xce\xf6\x4e\xf3\x1b\x97\x8d\x30\xde\x4f\xcc\x88\x5c\xda\xda\xe6\x7c\x5e\x63\xc5\xd2\x7b\x3d\x91\x30\xfd\xd8\xa6\xe9\xe9\x6c\x1b\x86\x8a\xe1\xed\xb2\x9c\xf6\xf6\x7d\x74\xe7\xa9\x9f\xdd\xdd\x4c\x8e\x43\x78\x20\xc8\x9f\xbf\xb1\x68\xa0\x3f\x4f\xd8\x83\x9f\x38\x95\xa3\xdc\x47\x72\x9f\x58\xbd\xac\xfe\x98\x8f\x23\xe4\xee\x5e\x3a\xdc\x1a\x03\xe8\x91\x05\x85\xe1\x3a\x24\x2b\xfd\x69\x5f\x5d\x9c\x1e\xcd\xde\xf6\xdd\xef\x00\x00\x00\xff\xff\x15\x5d\xa5\x6a\x37\x05\x00\x00"

func generic_transferCdcBytes() ([]byte, error) {
	return bindataRead(
		_generic_transferCdc,
		"generic_transfer.cdc",
	)
}

func generic_transferCdc() (*asset, error) {
	bytes, err := generic_transferCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generic_transfer.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x89, 0x4b, 0xde, 0x50, 0x0, 0xa3, 0xbc, 0x3c, 0xa7, 0xcb, 0xa, 0x73, 0x89, 0xea, 0x33, 0xa1, 0x6c, 0xe4, 0xcf, 0xf9, 0x6, 0x1f, 0xc8, 0x76, 0x65, 0x38, 0x63, 0x45, 0x8d, 0x97, 0x73, 0x38}}
	return a, nil
}

var _metadataSetup_account_from_vault_referenceCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x53\xcd\x6e\xf3\x36\x10\xbc\xeb\x29\x06\x3e\xa4\x32\xe0\xc8\x77\xc3\x4e\x90\xba\x4d\x4f\x05\x82\xd4\xcd\x7d\x2d\xad\x2c\x22\x32\x29\x90\x2b\xab\x41\xe0\x77\x2f\x44\xfd\x98\x72\xdd\x2f\x40\x3e\x1d\x0c\x7a\xb9\xbb\x9c\x99\x9d\x55\xc7\xca\x58\xc1\x73\xad\x0f\x6a\x5f\xf2\xce\xbc\xb3\x46\x6e\xcd\x11\xb3\x49\x6c\x16\xdd\xca\xfc\x93\x85\x32\x12\x7a\x53\xdc\xb8\x5b\x65\x93\x84\xb1\x47\xfb\xef\x95\x9d\x29\x4f\x6c\xfb\xaa\x30\x34\x8b\xa2\xe5\x72\x89\x5d\xa1\x1c\xc4\x92\x76\x94\x8a\x32\x1a\xca\xa1\x29\x48\x40\x1a\x94\xa6\xa6\xd6\x82\xc6\xd4\x65\x06\x5b\x6b\x5f\x21\x06\x8e\x05\x4a\x1c\x97\x39\xea\xaa\x0d\x1c\x49\xd3\x81\x91\xf7\xa8\x20\x2d\x2c\x97\x74\xdd\xf3\x5a\xfb\xd6\xbe\xba\x76\xec\x70\xf2\x4c\xc4\xe0\x5d\x9b\x06\x4d\xc1\x96\x87\xb6\x6d\xbf\x82\x71\xa2\xba\x14\x5f\xa0\x34\x9c\x18\xdb\xb6\x27\x9d\xb5\x69\xa9\x65\x12\xf6\x69\x7c\xac\xe4\xa3\x4b\x4e\xa2\x28\xa0\x11\x53\x96\x59\x76\x6e\x85\xa7\xee\xb0\x40\x55\xef\x4b\x95\xbe\x90\x14\x2b\xbc\x8c\xe7\x39\x3e\xa3\x08\x00\x2a\xcb\x15\x59\x8e\x9d\x3a\x68\xb6\x2b\x50\x2d\x45\xfc\x17\x9d\xf8\x8d\xca\x9a\x17\xd8\x52\x45\x7b\x55\x2a\x51\xec\xe6\xb8\x7b\xea\xb4\x69\xcb\xd1\x7f\xcb\x25\x7e\x35\xd6\x9a\x06\x04\xcb\x39\x5b\xd6\xa9\xe7\x35\x12\xf2\x4c\x38\x83\xd1\x3e\x56\x91\x73\x9c\x8d\x32\x93\x84\xd1\x0b\xdc\xf1\x81\x92\x05\xb6\x1f\xdf\x2b\xe7\xd8\xe0\xc0\xd2\x03\x19\x08\xcf\xc7\xec\xf6\x4b\xd2\x00\x75\xb2\xf7\xe8\xd6\x77\x9f\xa1\x0f\x92\xe1\x70\x7e\x88\x2f\x6f\x4e\xdb\x3c\x3e\xa2\x22\xad\xd2\x78\xb6\xf5\x56\xd0\x46\xb0\xff\x82\x6a\x3b\xe3\x11\x2d\x66\xf3\x28\xd4\xe9\x6f\xd7\xce\x8f\x64\x5a\x6c\x59\xac\xe2\x53\x37\xda\xe7\x5d\x8b\x12\x13\xf2\xb9\xf8\xd8\xe6\x07\xfb\x91\x1c\x58\xba\xd2\xf8\x14\xb0\x5c\x85\xc2\x4d\xb1\xfc\xc1\x32\x3c\xd8\x02\xff\x8d\x84\x3a\xf0\x7e\x67\xfc\xcf\x05\xcf\x35\x9c\xb1\x62\xd3\x83\x4b\xc2\xe0\xa0\x1b\xe2\xd9\xae\xe0\x61\xfa\x9d\x3e\x99\xca\xf4\x2f\x02\x75\xac\x4a\x3e\xb2\x96\x40\xba\x6c\x80\x70\xa5\xda\xb6\x33\x3e\x41\x73\x13\x5a\x1f\xb5\x53\xfa\xe0\x1b\x74\xbb\xf1\x7b\x7b\xe7\x61\x8c\xcb\x07\xa5\x9d\xca\xf8\x9a\xe9\x84\x0f\x5f\xca\xd6\xf7\x01\x8f\xe4\xba\x6b\x3c\xc5\xd5\x6e\x09\x94\x0c\xf3\xef\xfd\x3c\x66\x74\x1b\x95\xf4\x5b\x9c\x38\x3a\x71\xbc\xbe\xbf\x3c\xb6\x80\x98\x55\x28\xe6\x90\x3a\x35\xe2\x4d\x25\x3a\xc7\x62\xb4\xf9\x07\x72\x63\x03\x29\x9b\x42\xa5\x05\x94\x4e\xcb\x3a\x63\xe7\x2f\x46\xc3\x43\x69\x61\x9b\x53\xca\x13\x15\x7c\xe1\x96\x2a\x6c\x06\xe4\x93\x25\x1a\x68\x28\xe7\x6a\x5e\xdf\x7d\x4e\xac\x98\x78\x0e\xe7\x87\xf8\x4b\x36\xb7\x5a\x7b\x32\xae\x88\x07\x04\x0b\x90\x4c\x85\x39\xf6\x56\xef\x7a\x7d\x4b\x11\xfe\xa7\x32\xa3\x5d\x2c\xa7\xac\xfe\x5f\x8a\xe1\xfa\xbb\x6a\xbc\xf6\xf5\x3f\x2b\x48\x80\xe3\xbf\x9a\x0c\x97\x81\x26\xe7\xe8\x1c\xe1\xdf\x00\x00\x00\xff\xff\x0c\xf6\xf8\x93\x75\x07\x00\x00"

func metadataSetup_account_from_vault_referenceCdcBytes() ([]byte, error) {
	return bindataRead(
		_metadataSetup_account_from_vault_referenceCdc,
		"metadata/setup_account_from_vault_reference.cdc",
	)
}

func metadataSetup_account_from_vault_referenceCdc() (*asset, error) {
	bytes, err := metadataSetup_account_from_vault_referenceCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metadata/setup_account_from_vault_reference.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x75, 0x50, 0xf5, 0xd5, 0x57, 0x5a, 0xa1, 0xb4, 0x46, 0xae, 0xe1, 0xfc, 0x2a, 0x15, 0x3, 0x58, 0xb6, 0x64, 0x95, 0xa3, 0x6e, 0x91, 0xc6, 0x84, 0xa0, 0xda, 0x3, 0x2a, 0xaa, 0x94, 0x36, 0xba}}
	return a, nil
}

var _mint_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x54\x4b\x6f\xdc\x3c\x0c\xbc\xfb\x57\x10\x3e\x04\x36\xbe\xc4\x7b\xf9\xd0\xc3\x22\x9b\x20\x69\x9b\x9e\x0a\x04\x79\xdd\x65\x99\xde\x55\x6b\x4b\x06\x45\xe7\x81\x20\xff\xbd\xd0\xc3\x5e\x2b\xd9\xc4\x17\x03\xd2\x90\x33\x1c\x92\x52\xfd\x60\x88\xe1\x6a\xd4\x5b\x55\x77\x78\x67\xfe\xa2\x86\x96\x4c\x0f\x79\x72\x96\x67\x11\xf9\xf3\x59\xf4\x43\x0a\x5c\x1e\xe5\x59\xb6\x5a\xad\xe0\x6e\xa7\x2c\x30\x09\x6d\x85\x64\x65\x34\x28\x0b\x4f\x3b\xc1\xc0\x3b\x84\x5e\x69\x46\x82\x0b\x29\xcd\xa8\x19\x46\x8b\x16\xd8\xf8\x63\xd0\xf8\x04\xec\x12\xd9\x98\x07\x5f\x60\x20\xf3\xa8\x1a\xf4\xb1\x84\x52\x0d\x0a\x35\x83\x68\x1a\x42\x6b\x41\xe8\x06\x44\xef\x33\xc5\x24\xc7\xfe\xcc\xa1\x17\x99\x04\x61\x10\xd4\x22\x11\x36\x0e\xeb\x10\x73\x96\xd6\x49\x72\xd1\x4a\x6f\xb3\x6c\x21\xbd\x98\x29\xd7\x70\x11\xd0\xc7\x91\x70\x0d\xf7\x57\xea\xf9\xdb\xff\x25\xbc\x66\x19\x00\x80\x23\xba\xc1\x16\x09\xb5\xc4\x89\x22\xda\x03\xc1\xb2\xdf\xa1\xf8\x1b\xb4\x66\x24\x89\x60\xea\x3f\x28\xd9\x47\x77\xc8\x41\x71\xc0\xac\xe1\x68\xe9\x6c\x15\x4e\xbf\x20\x9a\x1a\x16\x99\x6e\x50\xa2\x7a\x44\x02\xd3\xa6\xd6\xa5\x64\x13\x6c\x0d\x47\xaf\x49\xcb\xab\x07\x31\x76\xfc\xb6\x27\xbc\xf3\x8e\xb2\xe8\xc0\x8e\xc3\xd0\xbd\xf8\xc4\xde\x61\xa8\xb1\x35\x14\x3a\x54\x8f\xa4\x67\x86\x00\xbc\xf4\xb7\x93\x5b\x21\xe1\x40\x38\x08\xc2\xc2\xaa\xad\x76\xe4\x62\xe4\x5d\x71\x69\x88\xcc\xd3\x83\xe8\x46\x2c\xe1\x28\x0e\x88\x73\x17\xe2\x67\xb1\x6b\xab\x65\x52\xd8\x24\x13\x59\x79\x7d\xb7\x1e\x90\xcd\x51\xab\x15\x84\xcc\x20\x80\xde\xbb\x26\x9a\x5e\xe9\x65\x1b\x66\x9e\x45\x2f\x60\x03\x41\x68\x65\xd9\x90\xd8\x62\x55\xfb\x84\xa7\x87\x5a\x74\x56\xb8\xbd\x58\xa7\xc2\x2e\x1c\xcd\x6d\x08\xbe\x16\xbc\x2b\x67\x2e\xf7\x9d\x9f\xc3\x20\xb4\x92\x45\x7e\xeb\x69\xdc\xbe\x68\xc3\xfb\x21\x0e\x32\xf3\x32\x29\xea\x17\x06\x84\x88\x9b\xf4\xbe\xd1\x7e\x0f\xea\xcf\x2a\x57\xe4\x90\xbe\xf7\x07\xea\x9e\xa7\x67\x03\x5b\xe4\xd8\x8a\xfd\x2e\x94\x95\x14\x83\xa8\x55\xa7\x58\xa1\x9d\xdd\x38\x38\x41\x67\x45\x52\xab\xfb\x12\x6b\x3c\xea\x7a\xac\x3b\x25\x9d\x33\x09\xb8\x5c\x58\x73\xaf\x85\x9b\x6e\x36\x53\x4d\x93\xfc\x7d\x69\x79\xb0\x35\x0e\x2d\x3e\xa3\x1c\x19\xa7\xed\x8c\xae\x7d\x27\x14\x1c\x5e\xa1\xe9\x81\x98\x6e\xdd\xc8\xfa\xd7\xa9\xf1\x9a\xe0\xf4\xe4\xc3\x24\x54\xee\xde\xeb\xb6\xc5\xf4\x0a\x84\x7f\xda\x9b\x1f\x38\x18\xab\x7c\x7f\xfa\x69\xd4\xbc\x5e\xfc\xda\xef\xaa\x09\x81\x71\x86\x4e\x4f\x16\x7a\x92\xe2\x06\x63\x79\xb1\x19\x9f\x6d\x01\x6c\x36\x07\xb6\xe6\xbf\xf9\x05\xcb\x3f\x6c\x75\x3f\x5a\x86\x1a\x41\x69\x49\x28\x2c\x36\x50\xbf\x84\x31\xf3\x21\x79\x14\xf1\xf6\x2f\x00\x00\xff\xff\xbb\x86\x5a\x5c\x3b\x06\x00\x00"

func mint_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_mint_tokensCdc,
		"mint_tokens.cdc",
	)
}

func mint_tokensCdc() (*asset, error) {
	bytes, err := mint_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "mint_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x44, 0xb7, 0x69, 0xe4, 0x6d, 0x5b, 0x93, 0xb6, 0x7d, 0x54, 0x15, 0x98, 0x88, 0x3d, 0x23, 0xf6, 0x6c, 0xe5, 0x6b, 0x1, 0x9b, 0xa8, 0x1, 0x20, 0x8d, 0x3f, 0xf7, 0xe8, 0xf3, 0xf6, 0x10, 0x59}}
	return a, nil
}

var _privateforwarderCreate_account_private_forwarderCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x54\x4f\x6b\xe3\x4e\x0c\xbd\xfb\x53\x88\x1e\xfa\xb3\xc1\x75\xef\x25\xfd\xc1\x6e\x68\xa0\x2c\x94\xb0\xed\xf6\xae\x38\x4a\x3c\xec\xc4\x63\x34\x72\x9c\x10\xf2\xdd\x97\xf1\xbf\xcc\x34\x4d\xb7\xdd\xb9\x24\x68\xa4\xa7\xf7\xa4\x37\x56\x9b\xca\xb0\xc0\xac\x2e\xd7\x6a\xa1\xe9\xc5\xfc\xa6\x12\x56\x6c\x36\x70\x15\xc4\xae\xa2\x3e\xf3\x61\x87\x9b\x2a\x4c\xf4\x43\x63\xde\x9c\xd5\x16\x85\x7e\x52\x4e\x6a\x4b\x3c\x33\xdc\x20\x2f\x89\xfb\x9a\x4b\xd7\x57\x51\x74\x7b\x7b\x0b\x2f\x85\xb2\x20\x8c\xa5\xc5\x5c\x94\x29\x41\x59\xa8\x2d\x2d\x41\x0c\xe4\x4c\x28\x04\xe8\x02\xfc\x9f\x85\x99\x36\x0d\x60\x9e\x9b\xba\x14\x68\x94\x14\x80\x50\x75\xf0\xb0\x1a\x70\xa3\xc8\x47\x3b\x44\x11\x00\x80\xeb\xf4\x44\x0d\x7c\xeb\x8b\xa5\x40\x87\xa0\x35\x14\x46\x2f\x41\x0a\x1f\xc0\x15\x68\x12\x28\xa9\xe9\xf3\xef\x00\x6b\x29\xe2\x67\x31\x8c\x6b\x4a\x61\x6a\x4a\x61\xcc\xc5\xa6\xf0\x83\xf6\x36\x85\xc7\x72\x61\x76\x29\x4c\xb1\xc2\x85\xd2\x4a\x14\xd9\x04\xae\xfb\xea\x8e\x42\xc5\x54\x21\x53\x5c\xe1\x9e\xb8\x07\xfc\x6e\x98\x4d\xf3\x8a\xba\xa6\x53\x7a\x02\x87\xb6\xc0\x1d\x4b\x7a\x95\x9d\x78\xc0\xfd\xa0\x60\x80\x69\x7f\x92\x36\xff\xd8\xf5\xa1\x1d\xe5\xb5\xd0\xa0\xbc\x53\x0f\xcf\xb8\x75\x83\x64\x5a\xd7\x1a\x19\xb6\x58\x6b\x71\x23\x76\xca\x4b\x1a\xa7\x7a\xa9\x71\x66\x3b\xe9\x99\xc5\x2d\xc5\x93\x1b\xdf\x08\x59\xb7\xa6\x87\x4d\x25\xfb\x57\x87\x1b\x27\x29\x88\xb9\x0b\x0c\x94\xb5\x37\xfd\x00\xe7\x28\x45\x12\xd0\x7b\xb4\xb6\x76\xfc\x06\x97\x9c\x26\xb9\x07\x41\x5e\x93\x88\x2a\xd7\x2d\xdb\xc0\x96\x2d\xea\x08\xe4\x96\xc6\x3d\x82\x07\x70\x7f\xa6\x26\xf7\xf6\x34\x4a\x53\x8e\xc3\xe4\xfa\x10\xbc\x86\x6c\x60\x74\xfc\x3f\x1e\xfb\xb8\xf3\xa1\xb8\x31\x33\x54\xf9\xcb\x52\x2b\x61\xf0\xec\xc0\x35\xf0\xfa\xb9\xa1\x7d\x79\x63\x14\x26\x37\x17\x5f\x5e\xbf\x91\x27\x6a\xc6\x50\xcc\x94\xab\x4a\x91\xf3\xf2\xf9\x88\x92\x73\xaf\xf8\x3c\x4f\x4d\xc5\x8c\xef\xaf\x1f\xdb\x67\x1d\x33\x62\x74\xde\xb8\x48\xfd\xcd\xc5\x5f\x1d\xe3\x1b\xa5\xb3\xf3\xe9\x03\xc4\x64\x4d\xcd\x39\xbd\x3f\xc1\x29\x56\x5f\xb4\xc6\x45\xd2\xe3\xbf\x37\x26\x71\xe7\x1f\x94\x06\x18\x89\xaf\x7a\x5e\x2f\xb4\xb2\x45\xab\xf3\x4b\xca\x3f\x94\x59\x75\xa8\x21\x77\x7f\x4e\x69\x70\x83\xf2\xf9\xfd\xb5\x84\xf3\xf7\xde\xc4\x31\x3a\xfe\x09\x00\x00\xff\xff\x2a\x78\x13\x75\x93\x06\x00\x00"

func privateforwarderCreate_account_private_forwarderCdcBytes() ([]byte, error) {
	return bindataRead(
		_privateforwarderCreate_account_private_forwarderCdc,
		"privateForwarder/create_account_private_forwarder.cdc",
	)
}

func privateforwarderCreate_account_private_forwarderCdc() (*asset, error) {
	bytes, err := privateforwarderCreate_account_private_forwarderCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "privateForwarder/create_account_private_forwarder.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x5b, 0xda, 0x24, 0x45, 0xc8, 0x6d, 0x3d, 0xb2, 0x99, 0xe9, 0x9e, 0x81, 0xf3, 0x5e, 0xc6, 0xb7, 0x25, 0x6c, 0x5, 0x8e, 0xfa, 0x9c, 0x2d, 0x95, 0xef, 0xad, 0xf8, 0xe6, 0x65, 0x23, 0x2e, 0xd1}}
	return a, nil
}

var _privateforwarderCreate_private_forwarderCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x53\x4d\x6b\xdb\x4c\x10\xbe\xeb\x57\x3c\xf8\x90\xd7\x06\x47\xbe\x1b\xbf\x85\x62\x1a\xe8\xa5\x98\x26\xe4\x3e\x5e\x4f\xac\xa5\xf2\xae\x98\x1d\xd9\x0d\xc6\xff\xbd\xe8\xd3\x5a\xd7\x82\xa4\x7b\x12\x33\x3b\xcf\x3e\x1f\x23\x7b\x28\xbc\x28\x9e\x4a\xb7\xb7\xdb\x9c\x5f\xfc\x2f\x76\x78\x13\x7f\xc0\x24\xaa\x4d\x92\xf6\xe6\xb7\xdf\x74\x28\xe2\x8b\xc3\x52\x7f\x6f\x23\xf6\x48\xca\x3f\xd9\xb0\x3d\xb2\x3c\x79\x39\x91\xec\x58\xda\x99\xb1\xf6\x24\x49\x16\x0b\xbc\x64\x36\x40\x85\x5c\x20\xa3\xd6\x3b\x18\x61\x52\x0e\x20\x38\x3e\xa1\x68\x86\x21\xed\x34\xac\x03\x39\x90\x31\xbe\x74\x0a\xcd\x48\x51\xc1\xec\x3c\x07\xf7\x9f\x82\x72\x61\xda\xbd\x23\xa3\x23\x83\xfe\x1e\xf7\x52\x55\xcb\x6d\x6e\x0d\xb4\x16\xd6\xb5\x2a\x94\x6d\xa9\x35\xd2\x2d\xcc\x2b\x95\xb9\x26\xc9\x90\xe6\x39\x49\x00\xa0\x10\x2e\x48\x78\x1a\xec\xde\xb1\x2c\x41\xa5\x66\xd3\xef\x21\x94\xfc\xac\x5e\x68\xcf\x6b\x2a\x68\x6b\x73\xab\xef\x6b\xef\x54\x7c\x9e\xb3\xcc\xb1\xa9\x18\x84\xec\xda\x9c\xe3\x99\x8e\xfc\x4a\x79\xc9\x33\x3c\x7c\x6d\xe4\xcd\x70\xae\x1f\xa9\xce\x62\x81\x1a\x16\x84\xce\x49\x5c\xc7\xa1\x24\x7b\x56\xb5\x6e\x0f\xcd\x38\x8e\xae\x61\xdf\x01\xe5\xac\xbd\xe6\x01\xc0\xff\x68\x24\xa4\xa6\xab\x59\x0e\x69\x68\x44\xa4\xb6\x7a\x7a\xf5\x70\x8e\x16\x25\xed\x88\x5c\xbe\x4c\x7b\xf8\xea\x0c\x5f\x4f\xeb\xd7\x5b\x33\x36\xa4\x59\x7f\x73\x36\xd4\xb6\xae\x53\xaf\xb9\x5f\xf7\x47\x38\xf8\x52\x0c\x47\xdc\xdf\xfa\xf6\xea\x71\x74\xf5\xd2\x66\x8b\x7e\xf0\xa9\x2f\x4d\x85\x8d\x2d\x2c\x3b\x5d\xde\xd1\x1f\x91\xa9\xa2\x18\xa1\x02\xf5\x68\x4d\xe9\x27\x5a\xe3\x3a\xaf\x02\x1d\x79\xba\x7a\xec\x79\xce\xa1\x7e\x39\xce\xf4\xa6\x31\x70\x6a\x76\x2f\xfc\x61\xe6\xfe\x53\x7e\xad\xa9\xf8\x58\xca\xa3\x54\xfb\xaf\x9b\xbc\xab\xf3\x0f\xfa\x22\x8c\x48\x6c\xfb\x7b\xd4\xf2\x3e\x25\xf8\x9e\xba\xa2\x01\x8b\x29\x0f\x5d\x99\x47\x1d\xd2\x8f\x87\x55\xf3\x34\x77\xb6\xfa\x92\x5c\x92\x3f\x01\x00\x00\xff\xff\x39\x74\x40\x0c\x70\x05\x00\x00"

func privateforwarderCreate_private_forwarderCdcBytes() ([]byte, error) {
	return bindataRead(
		_privateforwarderCreate_private_forwarderCdc,
		"privateForwarder/create_private_forwarder.cdc",
	)
}

func privateforwarderCreate_private_forwarderCdc() (*asset, error) {
	bytes, err := privateforwarderCreate_private_forwarderCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "privateForwarder/create_private_forwarder.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x63, 0xf7, 0x2d, 0x8e, 0x52, 0xb, 0x72, 0x82, 0xf0, 0xdf, 0xf7, 0xe4, 0x17, 0x39, 0x77, 0xea, 0xb8, 0x5c, 0x89, 0xff, 0xef, 0x4c, 0x59, 0x7d, 0xa4, 0xb8, 0xcd, 0x45, 0xa3, 0xf4, 0x39, 0xa1}}
	return a, nil
}

var _privateforwarderDeploy_forwarder_contractCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\xc1\x4a\x03\x31\x10\x86\xef\x79\x8a\x39\xc9\x2e\x84\xee\x55\xf6\x56\x14\xc1\x8b\x14\xaa\x27\xf1\x30\x26\xe3\xee\x60\x3b\x09\x93\x59\x8a\x48\xdf\x5d\xb6\xdd\x2e\xab\x5e\x9a\x43\x48\xc8\xf7\x67\xfe\xaf\x69\x1a\xb8\xa7\xbc\x4b\x5f\x05\xac\x27\x78\x4e\x9f\x24\x0f\x49\x0f\xa8\x91\xa5\x83\x90\xc4\x14\x83\xc1\x81\xad\x3f\x11\x25\x53\xe0\x0f\xa6\x08\x2c\x6c\x90\x51\x71\x4f\x46\x5a\x9c\x33\x45\x29\x18\x8c\x93\x54\x97\xe0\x13\xee\xa9\x85\xad\x29\x4b\xe7\x1d\x2c\x56\x48\x91\x5a\x78\x7d\x79\x14\xbb\x7d\xfb\xfd\x54\x48\x22\xe9\xd6\x92\x62\x47\x1b\xb4\x7e\xfc\x61\xbe\xfc\x61\xaf\xa2\xf2\xf0\xbe\xe3\x70\x86\x36\xf3\xb9\x86\x6f\xe7\x00\xb2\x52\x46\xa5\xaa\x70\x27\xa4\x2d\xe0\x60\x7d\xb5\x8e\xf1\x6e\x72\xa8\xe1\x66\x1d\x42\x1a\xc4\xa6\x00\xc0\x19\x5d\x5d\x2c\xcb\x0a\x63\xac\xe4\xe4\xba\x34\xf7\x93\xe5\xb8\xfb\xff\x5a\x7e\xd9\xde\x2f\x4a\xd6\xe3\x94\xa3\x3b\x3a\x70\x3f\x01\x00\x00\xff\xff\xb6\x45\x50\xb4\xa2\x01\x00\x00"

func privateforwarderDeploy_forwarder_contractCdcBytes() ([]byte, error) {
	return bindataRead(
		_privateforwarderDeploy_forwarder_contractCdc,
		"privateForwarder/deploy_forwarder_contract.cdc",
	)
}

func privateforwarderDeploy_forwarder_contractCdc() (*asset, error) {
	bytes, err := privateforwarderDeploy_forwarder_contractCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "privateForwarder/deploy_forwarder_contract.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x16, 0x7f, 0x10, 0x12, 0xa4, 0xc2, 0xb6, 0x67, 0x4e, 0x42, 0xbd, 0x4e, 0xe5, 0x57, 0xd4, 0x8, 0xc8, 0x9d, 0x79, 0xd0, 0x13, 0x4e, 0x7e, 0x14, 0xe3, 0x37, 0x17, 0x7a, 0x3a, 0xb, 0x3b, 0x67}}
	return a, nil
}

var _privateforwarderSetup_and_create_forwarderCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x55\x4d\x6b\xe3\x30\x10\xbd\xfb\x57\xcc\xf6\x10\x1c\x48\xe3\x7b\x49\x0a\x4b\x68\x61\x2f\x4b\xd9\x96\xde\x27\xf2\x24\x11\x75\x24\x23\x8d\x93\x2d\x25\xff\x7d\x91\xfc\x11\xa9\xb6\xb7\x49\x75\x32\xd2\x7c\xbc\x79\xf3\x66\x9c\xc8\x7d\xa9\x0d\xc3\x63\xa5\xb6\x72\x5d\xd0\x8b\x7e\x23\x05\x1b\xa3\xf7\x70\x13\xdd\xdd\xb4\x96\x0f\x7f\x71\x5f\xc6\x86\xe1\x55\x67\xf7\x64\xe4\x01\x99\xfe\x90\x20\x79\x20\xf3\xa8\xcd\x11\x4d\x4e\xa6\xf1\x19\x7b\xbe\x49\x92\x2c\xcb\xe0\x65\x27\x2d\xb0\x41\x65\x51\xb0\xd4\x0a\x30\xcf\x2d\x20\xbc\x62\x55\xf0\x0c\x10\xca\xda\x1f\x4c\x13\x00\x36\x6d\x04\xef\x8f\xb0\xc6\x02\x95\x20\x10\x58\xe2\x5a\x16\x92\xdf\x67\x80\x2a\x77\xae\xd5\xba\x90\x22\x78\x70\xbe\xc0\xbb\x73\xb0\x24\x09\x53\x7f\x24\x09\x00\x40\x69\xa8\x44\x43\xa9\x95\x5b\x45\xe6\x0e\xb0\xe2\x5d\xfa\xcb\xda\x8a\x9e\x59\x1b\xdc\xd2\xaa\x0b\xb8\xd2\x8a\x8d\x2e\x0a\x32\x33\x78\x72\xd9\xec\x6e\x15\xc0\x78\xc6\x03\xbd\x62\x51\xd1\x14\x26\x3f\x85\xd0\x95\xe2\x29\x7c\xf8\x24\xee\xc8\x0d\xd4\x39\xe6\x1d\x44\x49\x76\xbe\x25\x5e\x4c\xc6\x68\x9b\x77\x5f\xf7\xe9\xa8\xcd\xa7\x07\x8f\x4c\x3c\x21\xef\xa6\xf0\x63\x09\x4a\x16\x01\x08\x77\xb2\xac\xa3\xb9\x63\x17\x8e\x68\x01\x0b\x43\x98\xbf\x83\x25\x86\xaa\x8c\x7c\x0c\x71\x65\x54\x77\x75\x4a\x06\xca\xb2\x35\x5f\x73\xb1\x23\xf1\xb6\x98\x84\xf2\x99\xfb\x06\xdf\xa7\x4e\x24\x77\xd0\x7f\x69\xa8\xae\x41\x2f\x97\xb0\xc1\xc2\x52\x1f\xf6\xca\x90\x43\x8d\xa0\xe8\x18\x2b\xd6\x47\xf1\x42\x28\x2b\x06\xc9\x20\x15\x34\x78\xa2\x20\x9f\xa0\x5a\x3c\x50\x1a\x19\xb8\xb3\xb8\x8d\x10\x0a\x9f\xf5\x61\x5f\xf2\xbb\x4f\x93\x4e\x67\x3d\x17\xd6\x5f\x94\x15\x79\x4c\x87\x88\x0c\xeb\x6b\xb4\x5c\x57\x75\xd6\x98\x23\x5b\x11\xe5\x94\x7f\xa5\xaa\xb5\x36\x46\x1f\x17\x93\x8f\x68\xda\x6b\x54\xa7\xfb\xb4\x0f\x35\x54\xcd\x72\x48\x35\x05\x31\x1c\x9c\xe5\x0a\x4b\x58\x0e\x26\x6d\x59\x95\x6e\x7a\x46\x73\xf7\xb8\x73\xe7\x72\xee\x62\xfe\x82\x9e\x46\x50\xca\x7a\x3c\xd3\x16\xf1\x0c\x90\x87\x3a\x14\x94\x3d\xd2\x13\xbf\x0a\x00\xa1\x1d\xaf\xb0\x1d\x8c\x66\x4b\xcc\x52\x6d\xfd\x9e\xe9\x2b\x32\x09\xd9\x6b\xd7\x50\x10\xe0\x3b\x3c\xb6\x40\x86\xa8\xbc\x46\x82\x11\xb6\xf3\x22\x58\xdc\x8e\xee\xf8\x66\x12\x7e\xd3\xb1\xbb\x4a\x0d\x09\x59\x4a\x52\x7c\x37\x50\x5f\x90\x64\x68\xf0\x16\xb7\x5d\xda\x99\x9f\xa0\x4b\x57\x5c\xb8\x2e\x06\x9b\x15\xf6\x48\xfb\xde\x9c\x7f\x54\x86\xac\xae\x8c\xa0\xe1\xfa\x2f\x56\xf7\x25\x2b\xbb\xd7\x9f\x6f\x14\x38\xb2\x38\xb2\xac\xfd\x05\xf9\xf2\xae\x2a\xf8\x7f\x03\x13\xa5\x0b\x59\x89\x77\x9e\x9b\xa6\xeb\x7f\x48\x49\x5c\xc7\x29\x39\x25\xff\x02\x00\x00\xff\xff\x5a\xa6\x3f\x2a\xaa\x08\x00\x00"

func privateforwarderSetup_and_create_forwarderCdcBytes() ([]byte, error) {
	return bindataRead(
		_privateforwarderSetup_and_create_forwarderCdc,
		"privateForwarder/setup_and_create_forwarder.cdc",
	)
}

func privateforwarderSetup_and_create_forwarderCdc() (*asset, error) {
	bytes, err := privateforwarderSetup_and_create_forwarderCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "privateForwarder/setup_and_create_forwarder.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x79, 0x86, 0xe3, 0x73, 0x11, 0x57, 0xa, 0xf2, 0xd8, 0x1b, 0x2b, 0x9a, 0x9a, 0xc3, 0xb3, 0x56, 0xe6, 0x1e, 0x6e, 0xca, 0x66, 0x3d, 0x74, 0x30, 0x58, 0x4c, 0xe4, 0xbf, 0xa7, 0xed, 0x9c, 0x28}}
	return a, nil
}

var _privateforwarderTransfer_private_many_accountsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x53\xc1\x6a\xdb\x40\x10\x3d\x7b\xbf\x62\xe2\x43\x2a\x43\x2b\x5f\x4a\x0f\x22\x6d\x70\x4b\xdd\x53\x21\x24\x69\x7a\x28\x3d\x8c\xb5\x23\x69\x89\xbc\x2b\x66\x47\xb6\x43\xf0\xbf\x17\x69\xd7\x46\xaa\x31\x86\xd2\x93\xc4\xec\x9b\x37\xf3\xde\xcc\x98\x75\xe3\x58\x60\xd9\xda\xd2\xac\x6a\x7a\x74\xcf\x64\xa1\x60\xb7\x86\xe9\x28\x36\x55\x11\xf9\x75\x87\xeb\x66\x0c\x1c\x86\x8e\xb8\x3b\x36\x1b\x14\xba\xa7\x9c\xcc\x86\x78\xe9\x78\x8b\xac\x89\x63\xce\xb9\xe7\xa9\x52\xf3\xf9\x1c\x1e\x2b\xe3\x41\x18\xad\xc7\x5c\x8c\xb3\xe1\xbf\x20\xf6\x20\x0e\xd6\x68\x5f\x00\xb5\x66\xf2\x9e\x3c\x48\xc5\xae\x2d\x2b\x90\x8a\x0c\x43\x13\x98\x81\x23\xb5\x57\x6a\x40\x94\xc4\xb4\xc5\xda\xb5\x56\xbe\x63\x93\xc1\xeb\x22\x84\x32\xf8\xb1\x34\xbb\x0f\xef\xf7\x33\x78\x55\x0a\x00\xa0\x6f\x84\xe0\x09\xdb\x5a\x80\xc9\xbb\x96\x73\x02\xa9\x50\xa0\x72\xb5\xee\x2a\x13\x48\x27\xdb\x87\x28\x32\xc1\x8a\x8c\x2d\x8f\xfd\x32\xe9\x9e\xaa\x26\x81\x4d\xc7\x73\x4f\x45\x06\xd8\x4a\x95\x8c\xfc\x4d\x7f\x1a\xa9\x34\xe3\x16\x57\x35\xcd\xe0\x7a\xe8\x69\xda\x37\xa0\x8e\x3c\x51\x61\xf4\xcc\xd8\xf2\x81\xac\x26\xce\xe0\xfa\x9c\xab\x69\x40\x04\x8a\x86\xa9\x41\xa6\xc4\x9b\xd2\x76\x59\x7d\x33\x9f\x1d\xb3\xdb\x3e\x61\xdd\x76\xd5\x17\x79\xde\xd9\x73\x34\x22\x9a\xf1\x8d\x04\x10\x98\x0a\x62\xb2\x9d\x13\xae\x77\x20\x10\xbd\xf1\xe0\xc5\x31\xe9\xa0\xf3\x98\xe7\xa9\x2e\xd2\x83\x74\xf8\x18\xd1\x69\x87\xc5\x92\xd2\x55\x5f\xf8\xe6\x5f\x1c\xf9\x94\x74\xbb\x94\xc1\xe9\xcb\x43\x20\xbf\x43\xa9\x66\x6a\x32\x99\xdc\xde\x42\x83\xd6\xe4\xc9\xf4\x8b\x6b\x6b\x0d\xd6\x09\x84\xc2\xa7\x6a\xdc\x36\x88\xe9\x89\xae\xa6\x33\x35\x56\x72\xc6\xfc\xb3\xc2\x2e\xcd\xe4\x20\xe2\x02\xec\xff\x2b\xda\x87\x0f\xed\x28\x6f\x85\x86\x93\x2e\x1c\x1f\xae\x0b\x8c\x85\xbf\x2f\x26\x7d\xa6\x17\x3f\xc4\x5f\xf2\x26\xf5\x64\x75\xd4\xd7\x0f\xc9\x1f\xae\xf0\x6d\xbc\x9e\x0c\x6e\xde\x8d\xf6\x24\xdd\xc6\xe1\x27\xd8\x97\xcd\x4e\xba\xf8\x15\x03\xbf\xaf\x66\x83\x11\xed\xa3\xb4\xbd\xfa\x13\x00\x00\xff\xff\xc4\xa9\xac\xca\xd9\x04\x00\x00"

func privateforwarderTransfer_private_many_accountsCdcBytes() ([]byte, error) {
	return bindataRead(
		_privateforwarderTransfer_private_many_accountsCdc,
		"privateForwarder/transfer_private_many_accounts.cdc",
	)
}

func privateforwarderTransfer_private_many_accountsCdc() (*asset, error) {
	bytes, err := privateforwarderTransfer_private_many_accountsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "privateForwarder/transfer_private_many_accounts.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x1d, 0xa5, 0x2d, 0xa, 0x7c, 0xa5, 0xc4, 0x27, 0x83, 0xe8, 0x34, 0x3e, 0xcb, 0x7f, 0x2e, 0x5f, 0x21, 0x5e, 0xd8, 0x5f, 0x69, 0x16, 0x8d, 0x29, 0x61, 0x0, 0x1c, 0xeb, 0x45, 0x22, 0xd1, 0x57}}
	return a, nil
}

var _safe_generic_transferCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x95\xc1\x6e\xdc\x36\x10\x86\xcf\xde\xa7\x98\xf8\x90\x48\x80\x23\x5f\x8a\x1e\x16\x4e\x53\x37\x80\x7b\xe8\xa1\x86\xe3\xa6\xe7\x59\x71\x24\xb1\xe6\x92\x02\x67\x64\x65\xb1\xd8\x77\x2f\x48\x4a\xdc\x95\x37\x06\x9c\xd3\x72\x47\xd4\xfc\xdf\xfc\x9c\xa1\xf4\xb6\x77\x5e\xe0\x6e\xb0\xad\xde\x18\x7a\x74\x4f\x64\xa1\xf1\x6e\x0b\x97\x8b\xd8\xe5\x6a\x75\x7d\x7d\x0d\x5f\xd0\x42\x8f\xcc\xa0\x2d\xa0\xdd\x01\x8b\xf3\xd8\x12\xf4\x28\x1d\xa0\x55\xe0\xa9\x26\xfd\x4c\x3e\x45\xb4\x65\x21\x54\xe0\x1a\xf8\x6f\x60\x01\xe9\x08\x14\x35\x38\x18\xa9\x62\xbe\xc7\x4e\x33\x18\x12\x86\x9d\x1b\xa0\xee\x9c\x63\x8a\xbb\x24\x82\x84\xe0\x88\x56\x40\x1c\x30\x59\x05\xc8\x30\x92\x31\x71\x4b\x8d\x3d\x6e\xb4\xd1\xb2\x3b\xdf\xa7\xc3\x32\x4a\x44\x99\x5b\xbb\x9b\x32\x46\xac\x1a\x2d\x6c\x28\x16\x42\x31\x27\x5a\x40\xdf\x0e\x5b\xb2\x02\x1d\x79\xba\x02\x76\x30\xa2\x89\x64\xdc\xb9\xc1\xa8\x98\x27\x2d\xa1\xee\xa8\x7e\x3a\xbe\xf1\x8c\x66\x20\x0e\xda\x5b\x7c\x22\xe0\xc1\xa7\x1a\xb4\x15\xb2\x8a\xd4\xa9\xb4\xe6\x59\x56\xdb\x88\x27\x1e\x2d\x63\x2d\xda\xd9\x02\xb7\x6e\xb0\xb2\x86\x7f\xee\xf4\xf7\x5f\x7f\xb9\x02\x71\x6b\xb8\x55\xca\x13\xf3\x55\xac\x8b\xfc\x3d\x4a\xb7\x86\xaf\xc9\xf6\xf0\xe7\x2a\x5b\x9e\x1e\xdd\x0f\x1b\xa3\xeb\xb0\x2e\x61\xbf\x5a\x01\x00\x44\x9f\x09\xbe\x05\xdb\xc1\x13\xbb\xc1\xd7\x81\x10\x05\x3a\x67\x14\x1f\x0d\xe7\x14\x45\x4f\xb0\x21\x6d\x5b\x88\x74\x0d\x79\x4f\x2a\xa6\x32\x24\x20\xb4\xed\x63\xae\x35\xfc\xbe\xe8\x91\x2a\x46\xb3\xe6\x1f\xce\x7b\x37\x86\xf2\xa9\x21\x4f\xb6\xa6\x19\x75\x16\xd3\xcd\x14\x09\x52\x58\xd7\xa1\x7a\x50\x8e\xd8\x7e\x10\xe0\xa1\x8f\xad\x19\xe0\x42\xed\x11\x27\xbc\x97\x41\x92\x23\x0f\x53\xf9\x0f\xd4\xac\xe1\xfd\x3e\x91\xcc\xc1\x43\xa2\xe9\x3d\xf5\xe8\xa9\x60\xdd\x5a\xf2\x6b\xc0\x41\xba\x22\xf1\x7d\x0b\x87\x57\xc2\xfb\xdb\x24\x9f\x4d\x9b\x8a\xf8\x93\x04\x10\x7c\xae\x40\x5c\x02\x8a\x89\x3e\x70\x1c\x00\x52\xf0\x1c\x2b\x9f\xdf\x0b\x70\x31\xf2\x40\x0d\x7c\x9a\x36\x57\xd3\xac\x54\x9b\xa8\x7b\x13\x19\x96\xfe\xfd\xab\xa5\x53\x1e\x47\xdc\x98\x80\xb4\x5f\x3e\xbd\xf7\xee\x59\x2b\xf2\x87\xdf\x8a\x30\xa0\xeb\x93\x8e\x28\x57\x17\x17\x17\x9f\x3f\x43\x8f\x56\xd7\xc5\xe5\x97\xd8\xa5\xd6\x09\x24\xad\x73\x7e\x37\x26\xfc\x78\x62\xef\x2e\xcb\x8c\x9e\x17\x4c\xa6\xa9\xce\x1c\x7e\xb5\x9a\x97\xb0\xf9\x00\x7e\x1e\xf6\xb5\x4c\x6f\xa8\x62\x49\x9f\x1b\x15\x6e\x3e\xe6\xf3\xa8\xc6\xc9\xe4\x3c\x6d\xe9\x37\x59\x30\xf5\x0b\x7d\xa7\x7a\x10\x82\xfd\xe2\x48\xfd\xc2\x87\x96\x64\xea\x99\x42\x5c\x59\xe5\xdb\x48\x13\xbf\xc1\x94\xd3\xa1\x2d\xdf\x2d\x64\xa6\xc6\x27\x15\xd9\x1f\x77\x3d\x31\x7c\x3a\x15\xaf\x5a\x92\xaf\xe7\x9b\x8a\xf2\xb4\x71\xff\xb6\x66\x97\xc7\x77\x1e\xb8\xb1\x23\x1b\x9d\xcb\xd7\xb4\x66\x18\xb5\x31\x69\xb8\x8e\xf3\x19\x2e\x04\xf4\x2d\x09\x29\xb8\x7b\xac\x72\x62\xdd\xfc\x08\xaf\xaa\x9d\x15\xd4\x96\xff\xa2\x5d\xb1\xb4\x3e\xb0\x86\x3d\x45\x59\x9e\xb8\x39\xdf\x4a\x2f\xf0\xe2\x77\xe7\xd5\xf1\x9a\x4f\x3d\xb3\x1f\x3f\x00\x8b\xc4\xa7\x4e\x29\xea\x1d\x6b\x99\x7a\xf0\xe6\xe3\x12\xee\x68\xd8\x01\xc8\x30\xbd\x20\xfc\xf1\x08\xbc\x3d\xe7\xd4\x51\x87\xff\x03\x00\x00\xff\xff\xed\x48\x9f\xd3\x64\x07\x00\x00"

func safe_generic_transferCdcBytes() ([]byte, error) {
	return bindataRead(
		_safe_generic_transferCdc,
		"safe_generic_transfer.cdc",
	)
}

func safe_generic_transferCdc() (*asset, error) {
	bytes, err := safe_generic_transferCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "safe_generic_transfer.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x82, 0x10, 0x32, 0x60, 0x4, 0x18, 0x52, 0x3, 0xf4, 0xbb, 0x9c, 0xb7, 0x48, 0xb, 0x67, 0xf9, 0xa3, 0xd5, 0x41, 0x24, 0xa8, 0x5a, 0xf0, 0x62, 0xa2, 0x8d, 0xd5, 0xa4, 0x3f, 0x7b, 0x29, 0xa6}}
	return a, nil
}

var _scriptsGet_balanceCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x91\x31\x4f\xc3\x30\x10\x85\x77\xff\x8a\xa7\x0c\x90\x2c\xc9\x82\x18\x2a\x44\x55\x10\x9d\x3b\x14\xf6\x8b\x73\x69\x4f\x38\x76\x64\x9f\x45\xa5\xaa\xff\x1d\xd1\x90\xaa\xf1\x74\x7a\xfe\x7c\xef\xe9\xb9\x69\xb0\x3f\x4a\x42\xb2\x51\x46\x45\x64\xea\x12\xf4\xc8\x68\xc9\x91\xb7\x8c\x5e\xd8\x75\xa6\x69\x10\x7a\x90\x07\x59\x1b\xb2\xd7\xc7\x84\x8f\x13\x0d\xa3\xe3\x7d\xf8\x66\x8f\xb7\x89\x36\x46\x86\x31\x44\xc5\x36\xfb\x83\xb4\xf3\x6d\x1f\xc3\x80\x62\xa1\x15\x33\xb9\x58\x33\x81\xf7\x52\x61\x0c\x59\xcb\x29\x95\xe4\x5c\x85\x3e\x7b\x0c\x24\xbe\xa4\xae\x8b\x9c\xd2\x0a\x9b\x69\xa8\x56\xf8\xdc\xca\xe9\xf9\x09\x67\x03\x00\x91\x35\x47\x8f\x03\xeb\x66\x4a\x3c\xbf\xa8\x6a\x4b\x23\xb5\xe2\x44\x85\x53\xdd\x86\x18\xc3\xcf\xcb\xc3\x79\x91\xae\xfe\xa2\xec\xf4\xf2\x5a\x5e\x77\xcd\xe7\x3e\xd7\x44\xec\x72\xeb\xc4\xee\x48\x8f\x37\xb0\x5a\xd7\x07\xd6\xff\x3e\xca\xea\xa6\xaf\xd7\x18\xc9\x8b\x2d\x8b\xf7\x90\x5d\x07\x1f\x14\x93\xf9\x5c\x1e\x22\xf7\x1c\xf9\x6f\xd2\x70\xfd\x83\xab\x47\x51\x99\x8b\xf9\x0d\x00\x00\xff\xff\xbf\x5b\xb9\x6a\xa7\x01\x00\x00"

func scriptsGet_balanceCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_balanceCdc,
		"scripts/get_balance.cdc",
	)
}

func scriptsGet_balanceCdc() (*asset, error) {
	bytes, err := scriptsGet_balanceCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_balance.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc0, 0x3d, 0x8f, 0x6d, 0xc4, 0x72, 0x2e, 0x58, 0x1d, 0x1a, 0x12, 0x9, 0x55, 0xf, 0x38, 0x14, 0x1, 0xcf, 0x52, 0x4a, 0xdb, 0x36, 0x3f, 0x5f, 0xbf, 0x72, 0x9c, 0xbc, 0xf1, 0x41, 0x77, 0x17}}
	return a, nil
}

var _scriptsGet_supplyCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xce\x3d\xaa\xc3\x30\x10\x04\xe0\x7e\x4f\x31\xb8\xb2\x9b\xa7\xe6\xf1\x8a\xd7\x27\x17\x88\x73\x80\x45\x96\xb0\x88\xfe\xd8\x5d\x83\x43\xc8\xdd\x03\xae\xe2\x76\x66\x18\x3e\xe7\x30\xaf\x49\xa1\x5e\x52\x37\x48\xe0\x45\x61\x6b\x80\x35\xe3\x0c\xdd\x7a\xcf\x4f\xc4\x14\xf2\x42\xce\xa1\xc5\xa3\xbc\xec\x5c\x7a\x0e\x73\x7b\x84\x0a\x2d\x2c\x06\xdf\xaa\x09\x7b\x23\x4a\xa5\x37\xb1\xf3\x26\x4a\x2b\x18\xbe\xa3\x81\x88\xbd\x0f\xaa\x23\xe7\x3c\x21\x6e\x15\x85\x53\x1d\xa7\x7f\xdc\xaf\x69\xff\xfb\xc5\x8b\x00\x40\x82\x6d\x52\x4f\x6f\x3f\x87\xed\x76\xd0\xe8\x4d\x9f\x00\x00\x00\xff\xff\x8f\xf7\xbd\x87\xc3\x00\x00\x00"

func scriptsGet_supplyCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_supplyCdc,
		"scripts/get_supply.cdc",
	)
}

func scriptsGet_supplyCdc() (*asset, error) {
	bytes, err := scriptsGet_supplyCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_supply.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa9, 0xd5, 0xf3, 0x75, 0xbf, 0xc, 0x80, 0x25, 0xb3, 0x59, 0x1, 0x8c, 0xc6, 0x48, 0xfe, 0x86, 0xbb, 0x9, 0x17, 0xd, 0xcc, 0x8c, 0x6a, 0xbd, 0x42, 0x10, 0xf, 0x68, 0x44, 0x60, 0xad, 0x57}}
	return a, nil
}

var _scriptsGet_supported_vault_typesCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x53\x4f\x8b\xdb\x3e\x10\xbd\xfb\x53\x3c\x72\xf8\xad\x0d\x3f\x9c\x7b\x68\xbb\x6c\x0b\xa5\xc7\x25\x49\x7b\xb6\x2c\x8f\x23\xb1\xb2\x65\x46\xe3\x98\x10\xf2\xdd\x8b\xe4\xa4\x1b\x87\xdd\x9c\xc2\x78\xde\x1f\xbd\x99\xb1\xdd\xe0\x59\xf0\x73\xec\x0f\xb6\x76\xb4\xf7\x6f\xd4\xa3\x65\xdf\x61\xb5\xa8\xad\xb2\x6c\xbd\x5e\x63\x6f\x6c\x40\xd0\x6c\x07\x09\x60\x92\x91\xfb\x00\x31\x84\x30\x0e\x91\x88\x9a\x25\xd5\x53\x80\x9c\x06\x42\x7d\x4a\x5d\x03\xfb\xa3\x6d\xa8\x41\x25\x8a\x0f\x24\x15\x54\xd3\x30\x85\x50\x26\xf6\xc7\x2a\x82\xf1\xa3\x6b\x60\xbc\x6b\x12\x5e\xab\x41\xd5\xd6\x59\x39\x61\x32\x56\x1b\x68\xdf\xb7\x9e\xbb\x80\xc9\x8a\x59\x4a\x97\x5b\xd2\x64\x8f\xc4\x60\x0a\xc2\x56\x47\x73\xd1\x4c\x92\x9a\x8c\x75\x04\x2b\x68\x3c\x85\xfe\x49\xd0\x29\x11\x62\x4c\x86\xc4\x10\xdf\x2b\x31\xb5\xc4\x01\xe2\xd1\x5e\xf9\x21\x29\x26\xcf\x50\xd0\x63\x10\xdf\x81\x6f\x62\xce\xbe\x11\xe6\xd7\x2c\xec\xec\x26\x2b\xda\xd4\x5e\x71\x53\x45\x64\x95\xaa\x37\x8f\x55\x89\x5f\x7e\xa2\x48\x70\x0d\xe1\x55\x89\xa9\x20\xe4\x5c\x88\xa6\x98\x1e\x03\x08\xe2\x99\x42\xa6\xb4\xa6\x10\x72\xe5\x5c\x11\xfd\xa1\x53\xb6\xcf\x67\x8a\x0d\x5e\xe6\x1c\xff\xc7\x3b\xe7\x06\xaf\x63\xed\xac\x8e\xff\x8b\x0d\xce\xfb\xd3\x40\x1b\x7c\xf7\xde\x5d\x70\xce\x32\x00\x58\xaf\xf1\x92\x58\x1f\x25\x5b\xcf\xcb\x31\xce\xb4\xb7\x71\x25\xb0\x23\xb9\x83\x6c\xa9\xc5\x57\x1c\x48\x5e\xb4\xf6\x63\x2f\x57\x67\x45\x6a\x7d\xfc\x95\x07\x92\x1f\xff\xa0\x5f\xfe\x3b\x7f\x3c\xcf\xcb\xb7\xfc\xfd\x39\x9f\x30\xd5\x9e\xd9\x4f\x79\x81\x0f\x3f\x3f\x3f\x63\x50\xbd\xd5\xf9\xea\x77\xaf\xe6\x79\x62\x46\x2c\x36\x2c\xae\xd4\xdd\xee\x84\xb1\x9e\x97\xf9\x33\x5f\xf3\xdd\x0c\x4a\xcc\xaa\xd4\xbe\xd7\x4a\xee\x8c\x96\xe2\x77\xc2\xb6\x3f\xe4\x45\x51\xdc\x62\xde\xa6\x0b\x7a\x38\xa0\xa3\x1a\x9d\x24\xa5\x50\xa6\xc6\xf9\xce\x96\xa9\xc6\xac\x76\x37\xc8\x9f\x88\x88\x83\x0c\x79\x91\x5d\xfe\x06\x00\x00\xff\xff\x68\x0a\x37\x89\xd3\x03\x00\x00"

func scriptsGet_supported_vault_typesCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_supported_vault_typesCdc,
		"scripts/get_supported_vault_types.cdc",
	)
}

func scriptsGet_supported_vault_typesCdc() (*asset, error) {
	bytes, err := scriptsGet_supported_vault_typesCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_supported_vault_types.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x9, 0xa7, 0x1a, 0xca, 0x78, 0x21, 0x6a, 0x9e, 0x9a, 0x54, 0x8, 0xc6, 0x88, 0x73, 0xfc, 0x67, 0x6a, 0x86, 0x23, 0x2a, 0xe7, 0xe0, 0x30, 0xcb, 0xe8, 0xba, 0x14, 0x9b, 0xf4, 0x2f, 0x40, 0x31}}
	return a, nil
}

var _scriptsMetadataGet_token_metadataCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xc1\x8a\x83\x30\x10\x86\xef\x79\x8a\xc1\xc3\xa2\x17\x1f\x40\xd6\x2d\x65\xd9\xde\x16\x4a\x29\xbd\x8f\x71\xb4\x61\x63\x22\xc9\xc4\x2e\x94\xbe\xfb\x62\x8d\x92\xcb\xd6\x8b\x33\xc3\xfc\x5f\xfe\xf9\xd5\x30\x5a\xc7\xf0\xf5\x8b\xc3\xa8\xe9\x6c\x7f\xc8\x40\xe7\xec\x00\x59\x3a\xca\x44\xdc\x3b\x04\xd3\xab\x26\x4e\xbf\x89\xb1\x45\xc6\x8b\xa2\x9b\x8f\xaa\xff\x17\x36\xc6\xdc\x9d\xc8\x5b\x3d\x91\x8b\xaa\x74\x94\x09\x81\x52\x92\xf7\x39\x6a\x5d\x40\x17\x0c\x0c\xa8\x4c\x8e\x6d\xeb\xc8\xfb\x0a\xf6\x4b\x51\x54\x2f\xdc\x94\x87\xf3\xfc\x87\xbb\x00\x00\xd0\xc4\x80\x52\xda\x60\x18\x6a\xe8\x89\xf7\x4b\xb3\x32\x0b\xb1\xad\x4d\x18\x34\x9f\xa8\x83\x7a\x55\x94\x12\x47\x6c\x94\x56\xac\xc8\x97\x8d\x75\xce\xde\xde\xdf\xee\xa9\xe5\x72\x2d\x1e\x1f\x79\x1a\x5b\x79\x99\x69\xc7\xd0\x68\x25\x8f\xc8\xd7\xe2\xf9\xcc\xfc\xed\x76\x30\xa2\x51\x32\xcf\x3e\x6d\xd0\x2d\x18\xcb\xb0\xa0\x01\xc1\x51\x47\x8e\x8c\x24\x60\x0b\x7c\xa5\xc5\x14\xb8\x35\xa0\xc4\x6e\xc7\xcf\x33\xeb\x57\x51\xf4\xc4\x4b\x1a\xf9\x94\x78\xae\xb6\x53\x23\xce\x11\x07\x67\x22\x51\x3c\xc4\x5f\x00\x00\x00\xff\xff\x48\x12\x3f\xca\x1a\x02\x00\x00"

func scriptsMetadataGet_token_metadataCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsMetadataGet_token_metadataCdc,
		"scripts/metadata/get_token_metadata.cdc",
	)
}

func scriptsMetadataGet_token_metadataCdc() (*asset, error) {
	bytes, err := scriptsMetadataGet_token_metadataCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/metadata/get_token_metadata.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd, 0xc, 0x14, 0x2b, 0x3c, 0xff, 0xa6, 0x9f, 0xb6, 0xd8, 0x95, 0xa7, 0x74, 0xd0, 0xee, 0x21, 0xf5, 0xa5, 0x4f, 0x4b, 0x3, 0x9d, 0x14, 0xad, 0xc3, 0x7d, 0x18, 0x2, 0xbe, 0x26, 0xc5, 0x18}}
	return a, nil
}

var _scriptsMetadataGet_vault_dataCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\xcf\x6a\xc3\x30\x0c\xc6\xef\x7e\x0a\x91\xc3\x48\x2e\x79\x80\xb2\xae\x94\x6d\xbd\x0d\x4a\x29\xbd\x2b\x8e\xd2\x9a\x39\x76\xb0\xe5\x64\x50\xfa\xee\x23\x7f\xdc\x99\xb1\x35\x27\x49\xe8\x53\x7e\xdf\x87\x55\xdb\x59\xc7\xf0\xfe\x85\x6d\xa7\xe9\x68\x3f\xc9\x40\xe3\x6c\x0b\x59\x3a\xca\xc4\xb2\xb7\x0b\xe6\xac\xaa\x65\xfa\x41\x8c\x35\x32\x9e\x14\x0d\x7e\x51\xfd\xbf\x70\xbf\x31\x76\x07\xf2\x56\xf7\xe4\x16\x55\x3a\xca\x84\x40\x29\xc9\xfb\x1c\xb5\x2e\xa0\x09\x06\x5a\x54\x26\xc7\xba\x76\xe4\xfd\x0a\xb6\x73\x51\xac\x1e\xd0\x94\xbb\xe3\x09\x83\xe6\x37\x64\x84\xab\x00\x00\xd0\xc4\x80\x52\xda\x60\x18\xd6\x70\x26\xde\xce\x4d\x3c\x5c\x88\xfb\x5a\x3f\x4a\x0f\xd4\xc0\x3a\x2a\x4a\x89\x1d\x56\x4a\x2b\x56\xe4\xcb\xca\x3a\x67\x87\xe7\xa7\x6b\xca\x5d\xc6\xe2\xf6\x92\xa7\xd9\x95\x13\xc8\x3e\x54\x5a\xc9\x3d\xf2\xa5\x98\x7e\x33\x7e\x9b\x0d\x74\x68\x94\xcc\xb3\x57\x1b\x74\x0d\xc6\x32\xcc\xa7\x01\xc1\x51\x43\x8e\x8c\x24\x60\x0b\x7c\xa1\x19\x0a\x5c\x4c\xe9\x37\xee\xe4\x74\xfd\x28\x92\x33\x71\x92\x4a\x1e\x4d\xfe\xc5\x33\xbf\x83\xda\x92\x9f\xa0\xd4\x68\xa6\x25\xc3\x90\xc6\xda\x2b\x1a\x22\x86\x23\x0e\xce\xfc\x90\x88\x9b\xf8\x0e\x00\x00\xff\xff\xdb\xdf\x30\xe8\x5a\x02\x00\x00"

func scriptsMetadataGet_vault_dataCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsMetadataGet_vault_dataCdc,
		"scripts/metadata/get_vault_data.cdc",
	)
}

func scriptsMetadataGet_vault_dataCdc() (*asset, error) {
	bytes, err := scriptsMetadataGet_vault_dataCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/metadata/get_vault_data.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xcc, 0x59, 0x4, 0xe2, 0x48, 0x77, 0x97, 0x7f, 0x1f, 0xf5, 0x74, 0x99, 0x6a, 0x9d, 0x95, 0x78, 0xf1, 0xa, 0x59, 0x74, 0xa8, 0xc0, 0x6d, 0x92, 0xa0, 0xac, 0x67, 0x7a, 0xfb, 0xd7, 0x1c, 0x39}}
	return a, nil
}

var _scriptsMetadataGet_vault_displayCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\xc1\x6e\xfa\x30\x0c\xc6\xef\x79\x0a\xab\x87\xbf\xda\x4b\x1f\x00\xfd\x19\x42\xdb\xb8\x4d\x42\x08\x71\x77\x53\x17\xac\xa5\x49\x95\x38\xb0\x09\xf1\xee\x53\x69\x53\x7a\xd8\xe8\xc9\xb6\xec\xaf\xbf\xef\x53\xb8\xed\x9c\x17\x78\xff\xc2\xb6\x33\xb4\x77\x9f\x64\xa1\xf1\xae\x85\x6c\x3e\xca\xd4\xb8\xb7\x89\xf6\xc8\xd5\x38\xfd\x20\xc1\x1a\x05\x0f\x4c\x97\x30\x5e\xfd\xbd\x30\x69\xf4\xdd\x8e\x82\x33\x67\xf2\xe3\xd5\x7c\x94\x29\x85\x5a\x53\x08\x39\x1a\x53\x40\x13\x2d\xb4\xc8\x36\xc7\xba\xf6\x14\xc2\x02\xd6\x43\x51\x2c\x9e\xd0\x94\x9b\xfd\x1b\x87\xce\xe0\x37\x5c\x15\x00\x80\x21\x01\xd4\xda\x45\x2b\xb0\x84\x23\xc9\x7a\x68\x92\x6c\xa1\xa6\xb5\x33\x46\x23\x3b\x6a\x60\x99\x2e\x4a\x8d\x1d\x56\x6c\x58\x98\x42\x59\x39\xef\xdd\xe5\xff\xbf\xeb\x9c\xba\x4c\xc5\xed\x25\x9f\x27\x57\x1e\x7a\xb5\x6d\xac\x0c\xeb\x2d\xca\xa9\xb8\xff\xa6\xff\x56\x2b\xe8\xd0\xb2\xce\xb3\x57\x17\x4d\x0d\xd6\x09\x0c\xd2\x80\xe0\xa9\x21\x4f\x56\x13\x88\x03\x39\xd1\x00\x05\x3e\x65\x34\xc3\x6d\x24\x39\x5d\x3e\x0b\xe4\x48\x32\x65\x92\x27\x8b\xbf\xd1\x0c\x6f\xa0\x76\x14\xee\x48\xdc\x5b\x69\xc9\x0a\x3c\x22\x3d\x33\x5d\x12\x82\x27\x89\xde\x3e\x28\xd4\x4d\xfd\x04\x00\x00\xff\xff\x91\x4f\x45\x33\x54\x02\x00\x00"

func scriptsMetadataGet_vault_displayCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsMetadataGet_vault_displayCdc,
		"scripts/metadata/get_vault_display.cdc",
	)
}

func scriptsMetadataGet_vault_displayCdc() (*asset, error) {
	bytes, err := scriptsMetadataGet_vault_displayCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/metadata/get_vault_display.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x11, 0xde, 0xb0, 0x70, 0x3a, 0xe7, 0x87, 0xcc, 0x2a, 0x19, 0xce, 0x4a, 0xed, 0x42, 0xc7, 0xe7, 0x9, 0x44, 0x63, 0xce, 0x63, 0xab, 0x3e, 0x9d, 0x4, 0x41, 0x19, 0x89, 0xf, 0x91, 0xdc, 0x86}}
	return a, nil
}

var _scriptsMetadataGet_vault_supply_viewCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\xbf\x8e\xdb\x30\x0c\xc6\x77\x3d\x05\xcf\x43\x6b\x2f\xce\x52\x74\x38\x9c\x13\x04\x45\xd3\xa9\x40\x90\xa6\xd9\x69\x99\x4e\x84\xca\x92\x21\x51\xf9\x83\x20\xef\x5e\xd8\xb2\x1d\x2f\x39\x4f\x14\xfd\xf1\x47\xea\xa3\x54\xd3\x5a\xc7\xf0\xf3\x8a\x4d\xab\x69\x6f\xff\x91\x81\xda\xd9\x06\x92\x79\x2a\x11\x83\x6e\x13\xcc\x51\x95\x43\xf6\x37\x31\x56\xc8\x78\x50\x74\xf1\x43\xd5\x6b\xc1\xc4\xe8\x4e\x3b\xf2\x56\x9f\xc9\x0d\x55\xf3\x54\x22\xc4\x62\xb1\x80\x5f\xc4\x1e\xf8\x44\xc0\x96\x51\x83\x0f\x6d\xab\x6f\x60\xeb\x3e\x77\xc6\xa0\xf9\xab\x07\xee\xe7\xad\x94\x23\xc9\xfa\x16\x61\xd3\x7f\x21\x50\x4a\xf2\x3e\x45\xad\x33\xa8\x83\x81\x06\x95\x49\xb1\xaa\x1c\x79\xff\x0e\xeb\x18\x64\xef\xf0\x77\xa3\xae\xdf\xbf\xc1\x5d\x00\x00\x68\x62\x40\x29\x6d\x30\x0c\x05\x1c\x89\xd7\xf1\x30\x16\x66\x62\x92\xf5\x6d\x76\x54\x43\x31\x56\xe4\x12\x5b\x2c\x95\x56\xac\xc8\xe7\xa5\x75\xce\x5e\x3e\xbe\xdc\xe7\xf7\xcb\xc7\xe0\xb1\x4c\xe7\x1e\xe7\x87\x8e\xb6\x0d\xa5\x56\x72\x8b\x7c\xca\xfa\x36\xdd\xb7\x5a\x41\x8b\x46\xc9\x34\xf9\x61\x83\xae\xc0\x58\x86\x88\x06\x04\x47\x35\x39\x32\xb2\x33\xea\x79\x77\x70\xa3\x9b\xb3\x71\x6b\xfe\x13\x5d\x2c\xa6\xc9\xf3\x41\xd7\x0d\x98\xee\x6f\x2d\x7d\xbc\x5e\x60\xbe\xef\x36\x11\x11\xcb\x34\xcb\xde\x9e\xe4\xb8\x9d\x4e\x05\xc5\xb3\x0d\xfa\xb7\x4f\x1e\xcc\x1c\x17\x49\x8e\x38\x38\x33\x83\xe5\x31\x14\x0f\xf1\x3f\x00\x00\xff\xff\x54\x98\x60\xd6\xa7\x02\x00\x00"

func scriptsMetadataGet_vault_supply_viewCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsMetadataGet_vault_supply_viewCdc,
		"scripts/metadata/get_vault_supply_view.cdc",
	)
}

func scriptsMetadataGet_vault_supply_viewCdc() (*asset, error) {
	bytes, err := scriptsMetadataGet_vault_supply_viewCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/metadata/get_vault_supply_view.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe8, 0x4c, 0x76, 0x40, 0x21, 0x6a, 0x87, 0x6e, 0xef, 0x77, 0x92, 0xca, 0x2f, 0x6a, 0xfa, 0xbd, 0xcc, 0xf0, 0x27, 0x53, 0x71, 0xfd, 0xf7, 0x92, 0x64, 0x4, 0xa3, 0x49, 0x0, 0xf2, 0x5a, 0xb0}}
	return a, nil
}

var _scriptsSwitchboardCheck_receiver_by_typeCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x91\x41\x6f\xe2\x30\x14\x84\xef\xf9\x15\xa3\x1c\x56\xf6\x25\x3f\x00\xb1\xb0\xb0\x6a\xcf\x08\x68\xef\xce\xcb\x4b\x62\xe1\xd8\x91\xf3\x52\x1a\x21\xfe\x7b\x45\x93\xb6\x69\x25\x0e\xbd\x3d\x7b\x66\xec\xcf\x63\xdb\xb4\x21\x0a\x1e\x7b\x5f\xd9\xdc\xf1\x31\x9c\xd8\x1f\xce\x56\xa8\xce\x83\x89\x05\xca\x18\x1a\xa4\xf7\xe4\x34\x99\xf2\x0f\xaf\xa6\x69\x27\x7d\xca\xcc\xb7\xd2\x24\x31\x44\xdc\x75\xca\x38\xa7\x51\xf6\x1e\x8d\xb1\x5e\x75\x5f\x47\x2d\xb0\x29\x8a\xc8\x5d\xa7\x17\xd8\x86\xe0\x70\x49\x1c\x0b\x66\x8e\x3d\x97\xf8\x8b\x8a\x65\x43\x14\x7a\x2f\xf3\xb4\x4e\x00\x20\xab\x58\xfe\x9b\xd6\xe4\xd6\x59\x19\x96\x7f\x2e\xf7\xb8\xb3\xd9\xbc\xeb\x73\x67\xe9\xba\x52\x77\xcd\xa3\x63\x67\xa4\x9e\xae\xc9\x43\x8c\xe1\xac\x34\xde\x97\xeb\x35\x5a\xe3\x2d\xa9\xf4\xc9\x9b\xdc\x31\x24\x60\x74\x80\x3e\x61\x70\xb6\x52\x23\x72\x27\xd1\x92\x70\x01\x19\x5a\x46\x28\xf1\x1b\xc6\xa9\xd9\x8c\x82\x27\xf3\xed\xfd\x99\x84\x83\x44\xeb\x2b\xa5\xf5\x87\x8c\xd4\x8c\x45\xa5\x7a\xe4\x8e\x2c\x7d\xf4\x3f\x2a\xcd\xa8\x66\x3a\xed\x99\xd8\xbe\x70\xdc\x0e\xc7\xa1\x65\x75\x83\x5b\xe0\x36\x2e\xff\xcd\xff\x31\x7b\x36\xbd\x93\x95\xd2\x3a\xb9\xbe\x05\x00\x00\xff\xff\xda\xcb\x5c\xb3\x3a\x02\x00\x00"

func scriptsSwitchboardCheck_receiver_by_typeCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsSwitchboardCheck_receiver_by_typeCdc,
		"scripts/switchboard/check_receiver_by_type.cdc",
	)
}

func scriptsSwitchboardCheck_receiver_by_typeCdc() (*asset, error) {
	bytes, err := scriptsSwitchboardCheck_receiver_by_typeCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/switchboard/check_receiver_by_type.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x81, 0xb8, 0x6e, 0x4b, 0xcb, 0x6a, 0xa3, 0x48, 0xfb, 0xf, 0xdc, 0xa5, 0xe5, 0x47, 0xac, 0x7c, 0xae, 0xc4, 0x91, 0x8b, 0x70, 0x1, 0x95, 0xf7, 0x73, 0xee, 0xf6, 0x9e, 0x85, 0x22, 0xec, 0xc9}}
	return a, nil
}

var _scriptsSwitchboardGet_vault_typesCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\xcd\x0a\xdb\x30\x10\x84\xef\x7a\x8a\xc1\x87\x62\x5f\xec\x7b\x68\x1a\x42\xa0\xbd\x86\x34\xf4\x52\x0a\x91\xe5\xb5\x2d\x2a\x4b\x46\x5a\x37\x84\x90\x77\x2f\xb2\x9a\xc6\x29\x09\xd4\x27\xa3\xfd\x66\x66\x7f\xf4\x30\x3a\xcf\xf8\x3c\xd9\x4e\xd7\x86\x8e\xee\x27\x59\xb4\xde\x0d\xc8\x9e\xde\x32\xf1\x8a\xfc\x7a\xd6\xac\xfa\xda\x49\xdf\xbc\x12\x2d\xca\x99\x10\x55\x85\x63\xaf\x03\x82\xf2\x7a\x64\x78\x92\x4d\x00\xf7\x84\xc0\xce\x53\x83\x5f\x72\x32\x0c\x25\x47\x59\x6b\xa3\x59\x53\x48\x9e\x12\x61\x11\xe3\x6c\xd4\x44\xb3\x51\x86\x40\x0d\xa4\x52\x6e\xb2\x2c\xa4\x52\x14\x42\x2e\x8d\x29\xd0\x4e\x16\x83\xd4\x36\xff\x53\x5c\x61\xdb\x34\x9e\x42\x28\x56\xf8\x7e\xbc\x8c\xf4\x03\x57\x21\x00\xc0\x10\x47\x07\xc6\x1a\x1d\xf1\x36\xe1\x77\x59\x91\x98\xaa\xc2\x97\x88\xc1\x53\x4b\x9e\xac\x22\xb0\x4b\x9d\x2f\x1a\x53\xce\xb6\xce\x0f\xda\x76\xb1\xba\x18\x7d\x3f\xd5\x46\xab\xbf\x69\x0b\xcd\x81\x5a\xac\xe7\xf8\xb2\x23\xde\xdd\x27\xbf\xe4\xef\xb6\x58\x26\xaf\xbd\xe4\xbe\x98\x0d\xe3\x57\xd6\xce\x7b\x77\xfe\xf8\xe1\xad\x6a\xf1\x7f\xfd\x1f\x28\xa5\xdc\x3e\xe5\x8f\x90\xcd\x06\xa3\xb4\x5a\xe5\xd9\xce\x4d\xa6\x81\x75\x8c\x94\xfb\xbc\x95\xc5\x74\xd9\x63\x7d\x07\xe2\xc9\xcf\x87\x83\xa7\x10\xcf\xec\x5a\x9c\x3a\xe2\x6f\xf1\xe6\xf1\x20\x21\x2f\x4e\x33\xed\x13\xfa\xbc\xa5\xf2\x1f\x54\x88\x9b\xf8\x1d\x00\x00\xff\xff\x0f\x40\x25\x01\xba\x02\x00\x00"

func scriptsSwitchboardGet_vault_typesCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsSwitchboardGet_vault_typesCdc,
		"scripts/switchboard/get_vault_types.cdc",
	)
}

func scriptsSwitchboardGet_vault_typesCdc() (*asset, error) {
	bytes, err := scriptsSwitchboardGet_vault_typesCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/switchboard/get_vault_types.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x31, 0x74, 0x9c, 0xc1, 0x57, 0xd3, 0x1b, 0xfe, 0x8, 0x2c, 0x71, 0xb9, 0x27, 0x9a, 0xd1, 0x61, 0xe0, 0x73, 0x5e, 0x58, 0xb4, 0xd9, 0x69, 0x25, 0x6f, 0x62, 0x61, 0x45, 0x1a, 0xbd, 0x79, 0x52}}
	return a, nil
}

var _scriptsSwitchboardGet_vault_types_and_addressCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\xcf\xca\xdb\x30\x10\xc4\xef\x7a\x8a\xc1\x87\x62\x5f\xec\xfb\x47\xbf\x86\x10\x68\xaf\x21\x0d\xed\x35\xb2\xbc\xb6\x45\x65\xc9\x48\xeb\x86\x10\xf2\xee\x45\x56\xfe\x38\x90\x40\x7d\x32\xda\xfd\xcd\x48\x33\x7a\x18\x9d\x67\x7c\x9f\x6c\xa7\x6b\x43\x7b\xf7\x87\x2c\x5a\xef\x06\x64\x4f\x67\x99\x78\xb5\xf9\xf3\xa8\x59\xf5\xb5\x93\xbe\x79\x05\x2d\xc6\x99\x10\x55\x85\x7d\xaf\x03\x82\xf2\x7a\x64\x78\x92\x4d\x00\xf7\x84\xc0\xce\x53\x83\xbf\x72\x32\x0c\x25\x47\x59\x6b\xa3\x59\x53\x48\x9a\x12\x61\x61\xe3\x6c\x64\xa2\xd8\x28\x43\xa0\x06\x52\x29\x37\x59\x16\x52\x29\x0a\x21\x97\xc6\x14\x68\x27\x8b\x41\x6a\x9b\x5f\x87\x1f\x58\x37\x8d\xa7\x10\x8a\x0f\x9c\xf7\xa7\x91\xee\x07\x17\x9c\x85\x00\x00\x43\x1c\xa5\x18\x9f\xe8\x88\xd7\x89\xbb\xf1\x45\xda\xa9\x2a\xfc\x88\x6b\xf0\xd4\x92\x27\xab\x08\xec\xd2\x13\x16\x37\x54\xce\xb6\xce\x0f\xda\x76\x71\xba\xc8\x60\x3b\xd5\x46\xab\xbb\xdb\x82\xd9\x51\x8b\xcf\xd9\xbe\xec\x88\x37\xb7\x08\x4e\xf9\xbb\x38\xcb\xa4\xb5\x95\xdc\x17\xb3\x60\xfc\xca\xda\x79\xef\x8e\x5f\xbf\xbc\xa5\x16\xff\xe7\xff\x59\x4a\x2e\x97\x6f\xf9\xc3\x64\xb5\xc2\x28\xad\x56\x79\xb6\x71\x93\x69\x60\x1d\x23\xf9\x3e\xa7\xb2\x78\x5d\xf6\x88\x6f\x47\x3c\xf9\xb9\x41\x78\x0a\xb1\x6f\xd7\xe2\xd0\x11\xff\x8a\xe5\xc7\x66\xc2\x6f\xcd\xfd\xb5\x9c\xbc\x38\xcc\xa0\x4f\xd4\x73\x60\xe5\x7b\x4a\x88\x8b\xf8\x17\x00\x00\xff\xff\xa3\xe8\x69\xc6\xd9\x02\x00\x00"

func scriptsSwitchboardGet_vault_types_and_addressCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsSwitchboardGet_vault_types_and_addressCdc,
		"scripts/switchboard/get_vault_types_and_address.cdc",
	)
}

func scriptsSwitchboardGet_vault_types_and_addressCdc() (*asset, error) {
	bytes, err := scriptsSwitchboardGet_vault_types_and_addressCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/switchboard/get_vault_types_and_address.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x7f, 0xe6, 0xe9, 0x2e, 0x23, 0x2d, 0xf9, 0x64, 0x3, 0xf2, 0xc5, 0x39, 0xb7, 0x30, 0x55, 0xc, 0x68, 0xf4, 0x1e, 0xc9, 0x1e, 0x14, 0x1c, 0x6e, 0xd9, 0x90, 0x58, 0xc2, 0xfc, 0x82, 0x76, 0xd3}}
	return a, nil
}

var _scriptsTestExample_token_vault_display_strict_equalCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x4d\x8f\xdb\x36\x10\xbd\xeb\x57\x0c\x54\xc0\x90\xd1\x44\xde\x7c\xec\x36\x31\xea\x06\x69\x1b\xa3\x87\x04\x58\x2c\xd4\xf4\x10\x04\x0b\x8a\x1a\xcb\xc4\x52\xa4\xc0\x19\xd9\x5e\x04\xfb\xdf\x0b\xea\xcb\xb4\xad\x2e\xca\x93\xc8\x79\xf3\x66\xf8\xc4\x79\xaa\xaa\xad\x63\x58\x37\xa6\x54\xb9\xc6\xcc\x3e\xa0\xf9\x82\x2c\x0a\xc1\xe2\xab\xc2\x3d\xc1\xc6\xd9\x0a\xe2\xff\x06\xc4\x51\xcf\x31\x95\x36\x8d\xf4\xbb\x3b\x24\xab\x77\xe8\x7a\x60\x78\x34\xe2\x3e\x1d\x44\x55\xf7\x35\x7b\x5c\x78\x14\x47\xd1\x62\xb1\x80\x0c\x89\x61\x8b\xba\x46\x07\x24\x9d\xaa\x19\xd8\xc2\x4e\x68\x55\x08\xc6\x53\x12\x42\xb7\x43\x82\x75\xf6\xa7\xa2\x5a\x8b\x47\x10\x04\x78\xa8\x51\x32\x16\x9e\x2c\x12\x52\x22\x51\x22\xb4\x9e\xc3\xa6\x31\x50\x09\x65\x12\x51\x14\x0e\x89\x96\xf0\xb1\xfb\x98\x2f\xe1\x77\x6b\x35\xfc\x88\x00\x00\x34\x32\x08\x29\x6d\x63\x18\x56\x50\x22\x7f\xec\x36\x43\xda\x3c\x1a\x61\x43\x29\x58\x3d\xa3\x78\x3a\x76\x97\xb4\x89\xc3\x32\xa2\xc2\xe5\xa8\xc0\x48\x00\x9d\x16\x2f\x4e\xb0\xf4\x58\xe5\x56\x7b\xf4\x3a\x3b\x0b\x15\xd8\x89\xa4\xac\x59\x42\x9c\x6d\x15\xf9\x8b\x76\x54\xdc\x8a\xa4\x08\x1a\xc2\xc2\x6b\x23\x0c\x60\x5f\x8f\x6d\x2b\x32\x3c\xda\x06\x0a\xdc\xa1\xb6\xed\xb7\x03\x83\x07\x86\x75\x06\x3f\x59\xb3\xd6\x76\x9f\x9e\xd5\xc3\x03\xa3\x33\x42\xff\x7d\xf7\x79\x79\xfa\x46\xd2\x4f\xc7\x50\x12\x6f\x99\x6b\x5a\x2e\x16\x7d\xbd\x97\x1b\x4e\xad\xd9\x78\x42\xeb\xca\x78\x7e\x4a\xaa\x6d\x69\xe9\x9c\xee\x0b\x16\x4a\x50\xf2\xed\x04\xe9\xd7\x04\x2c\xb9\x00\xf9\xb5\x51\x1a\xcf\x59\xff\xca\xb2\xdb\xb5\xd2\x38\x9d\xe1\x57\xe3\xbc\xd2\x43\xff\x82\x08\x99\xd2\x3d\xe6\xa4\x18\x5f\x7a\x4a\x4a\xa5\xad\x16\xd7\x9b\x9b\xd7\xef\xdf\xca\x2b\xf9\x8b\x78\x27\x8b\xe2\xe6\xed\x9b\xfc\x95\x7c\xf7\xfa\xea\x2c\x20\xae\xaf\x65\xfe\x4a\xbe\x7f\x73\x73\xef\xe5\xbc\xff\xc7\xba\xa2\x12\xee\x21\xa5\x5d\x19\x4f\xf6\x70\xa6\xcd\xb0\x2a\x7f\xcf\xec\xb1\xf6\x8f\x46\x55\xa2\xc4\x05\xed\xca\x9f\x0f\x95\xbe\x64\x99\x7f\x8f\x9e\x21\x24\x2b\x95\xd0\xb4\xec\xdf\x7b\xb8\x62\xde\x2b\x66\x74\xf1\xff\xfa\xb5\x3d\xb8\x55\xc3\xff\xd9\xfb\x5c\x5b\xf9\x20\xb7\x42\x99\x78\x7e\xc2\xfd\x34\xee\x82\xe9\xd9\x89\x46\xf3\x1d\x6e\x60\x35\xcc\x5b\x2a\x45\x2d\x72\xa5\x15\x2b\xa4\x34\xb7\xce\xd9\xfd\xaf\xb3\x1f\xa1\x99\xa4\xc3\xc7\xd3\x6f\x49\x68\x05\xe9\x57\xcf\x76\xdb\xe4\x5a\xc9\x5b\xc1\xdb\x63\xfd\x0f\x1f\xa0\x16\x46\xc9\x24\xfe\xc3\x36\xba\x00\x63\x19\x3a\x6a\x10\xe0\x70\x83\x0e\x8d\x6c\xe7\x81\xb7\xd8\x35\x05\x6e\xb0\xae\xa0\x5d\x21\xb9\x11\xfa\xf9\x51\x2f\x91\x8f\xd3\x3e\xdc\x6f\xaa\x95\xce\xbe\x0a\x8b\xd4\xf6\xa3\xfc\x3d\x2a\x34\x1c\x58\xd9\x4e\xe1\x7e\xa8\xef\x1f\xa1\xe3\xa4\x6b\x21\x6d\xa7\x25\x55\x8c\x15\xa5\x1a\x4d\xc9\x5b\x58\xad\x46\x33\x9a\x08\xbf\x80\x0a\x89\x44\xe9\x9f\x4e\x37\x55\xd0\xe7\x55\x8a\x2a\xc1\x72\x1b\x4f\xb8\xda\x67\x5b\xda\x16\x0d\xd3\xe4\xdf\xae\xbe\x9f\x89\x13\x66\x5c\xf6\x3a\xe0\x1d\x72\xe3\xcc\x91\xd2\x1b\xa1\xbf\x40\x9f\xd1\x6e\x67\xb3\x63\xbc\x33\xbf\x00\xd1\x1f\xcc\x66\xa3\xb0\x23\x36\x70\xc3\x20\x21\x3c\x0d\x99\x03\x2f\x4b\x1b\x17\x96\x38\x8f\xcc\x66\x70\x51\x6c\xbc\x6d\xea\x4d\x21\x6d\x9c\x4a\xe6\x47\x8a\xc9\x68\x50\xfc\x18\x1f\x07\x7b\x2a\x79\x0c\x46\x4f\x51\xf4\x6f\x00\x00\x00\xff\xff\x90\x1e\x92\x8c\xde\x07\x00\x00"

func scriptsTestExample_token_vault_display_strict_equalCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsTestExample_token_vault_display_strict_equalCdc,
		"scripts/test/example_token_vault_display_strict_equal.cdc",
	)
}

func scriptsTestExample_token_vault_display_strict_equalCdc() (*asset, error) {
	bytes, err := scriptsTestExample_token_vault_display_strict_equalCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/test/example_token_vault_display_strict_equal.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x6e, 0xa1, 0x11, 0xd4, 0xb8, 0x6e, 0x2f, 0x2b, 0xc7, 0x13, 0xb2, 0xdd, 0x50, 0x7b, 0x8a, 0xe5, 0xdc, 0x85, 0xb2, 0x93, 0x2c, 0xae, 0x97, 0x1c, 0x7e, 0xf9, 0x12, 0x8e, 0x8e, 0x90, 0x42, 0x5b}}
	return a, nil
}

var _scriptsTokenforwarderIs_recipient_validCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x50\x4b\x6a\xc3\x40\x0c\xdd\xfb\x14\x0f\x2f\xca\x18\x8a\x0f\x60\xda\x86\xb4\x90\x75\x28\xed\x01\xe4\xb1\xec\x0c\x19\x8f\x8c\x2c\x13\x42\xc8\xdd\x4b\x6d\x5a\x48\x48\x88\x56\x42\xbc\x9f\x5e\xe8\x07\x51\xc3\x97\xec\x39\x6d\x44\x0f\xa4\x4d\x48\x1d\x5a\x95\x1e\xf9\xd5\x35\xcf\x32\xf2\x9e\xc7\xd1\x51\x8c\x05\xda\x29\xa1\xa7\x90\x1c\x35\x8d\x56\x58\x37\x8d\xf2\x38\x3e\xc3\x2e\x59\x5b\xb2\x5d\x85\xed\x54\xc7\xe0\x7f\xf7\xa2\xc2\xbb\x48\xc4\x29\x03\x80\xc8\x86\x76\xc1\xb2\x7e\x72\x8b\x57\x74\x6c\x6b\xef\x65\x4a\x36\x2b\x17\x33\xee\xc6\x94\x1d\xdb\x07\x0d\x54\x87\x18\xec\xf8\xf2\x74\xba\x8a\x5b\x6e\xfe\x74\x17\xf3\xf3\x9b\xbb\x11\xed\xbe\x7c\x2d\xaa\x72\x70\x77\x01\xab\x15\x06\x4a\xc1\xbb\xfc\x3b\x51\x1d\x19\x26\x58\x38\x78\x18\x05\xca\xa3\x69\xf0\x06\x3b\x0e\xbc\xd4\x4d\xf0\xff\xdf\xe4\x45\x36\xdb\x2a\xdb\xa4\xe9\xa2\xa1\xd2\xef\xd8\xef\x5d\x91\x9d\x7f\x02\x00\x00\xff\xff\x1c\x3c\x53\x68\xbc\x01\x00\x00"

func scriptsTokenforwarderIs_recipient_validCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsTokenforwarderIs_recipient_validCdc,
		"scripts/tokenForwarder/is_recipient_valid.cdc",
	)
}

func scriptsTokenforwarderIs_recipient_validCdc() (*asset, error) {
	bytes, err := scriptsTokenforwarderIs_recipient_validCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/tokenForwarder/is_recipient_valid.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x7a, 0x23, 0x4d, 0x2, 0xff, 0x47, 0x5f, 0xfa, 0x75, 0xc3, 0x97, 0xa7, 0xe, 0x25, 0x75, 0xe4, 0xab, 0xb9, 0x6d, 0xd0, 0x4a, 0x83, 0x54, 0x49, 0x43, 0x4e, 0x6f, 0xf8, 0x6a, 0xd6, 0x3b, 0xf9}}
	return a, nil
}

var _setup_accountCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x93\x41\x4f\xe3\x3e\x10\xc5\xef\xf9\x14\xef\xcf\x81\x7f\x2a\x15\x7a\x47\x05\x69\xb7\x62\xa5\xbd\x21\x40\xdc\xa7\xe9\x94\x5a\xeb\xda\xd6\x78\xdc\x52\x21\xbe\xfb\xca\x6e\x12\x12\xa8\x16\x69\xa5\xcd\x2d\xcf\x33\x9e\x37\xbf\x19\xcf\x66\x78\xdc\x98\x08\x15\x72\x91\x1a\x35\xde\xc1\x44\x10\x94\xb7\xc1\x92\x32\xd6\x5e\xf2\xef\xe0\x5c\x3d\xc8\x5a\xbf\xaf\x66\x33\x90\x3b\x78\xc7\x45\x5a\xad\x40\x78\xa2\x64\x15\xc2\xd1\x27\x69\x8a\xae\x1b\x36\x02\x6a\x1a\x9f\x9c\x22\x66\x81\x34\xa7\xea\x86\x0f\x68\xc8\x21\x45\xce\x3f\xe0\x17\xda\x06\xcb\x8f\xfe\x17\xbb\xaa\x32\xdb\xe0\x45\xf1\x23\xb9\x67\xb3\x6c\x55\xac\xc5\x6f\x71\x36\xd2\xce\xba\xc8\xdb\x41\x7a\x1b\x38\x94\xfa\xb8\x27\xc3\xfb\x7b\x8e\xde\xee\x58\xda\xb8\xa1\x74\x56\x55\xc3\x66\xeb\x09\x5e\xab\x0a\x00\x82\x70\x20\xe1\x3a\x9a\x67\xc7\x72\x05\x4a\xba\xa9\xbf\x7b\x11\xbf\x7f\x22\x9b\x78\x8a\x9f\x31\x26\x7e\x50\x2f\xf4\xcc\x0b\x0a\xb4\x34\xd6\xe8\x61\xe1\x9d\x8a\xb7\x96\x65\x8a\xbb\xb4\xb4\x26\x6e\xde\x0f\xa7\x78\xa0\x1d\x97\xfc\x09\xce\xbf\x1d\x29\xf5\x25\xf3\x37\x9b\xe1\x9e\x35\x89\x03\x93\xd8\x03\xcc\xba\xc0\xea\x80\x92\x15\xa6\xd5\x01\x51\xbd\x70\x1e\xdc\x08\x43\x19\x47\x7f\x95\x59\xe3\x68\xfe\x32\x1e\x4d\x5e\x2e\x8b\xfd\xf9\xf9\x30\xe9\xb2\x24\xdd\xd4\x19\xcd\x15\x3e\x9f\xb4\x0d\xde\x91\x6e\x26\xf8\xef\x1a\xce\x58\xbc\xf6\x35\xf2\x27\xc5\x6f\x2f\xbd\xbd\x37\x63\x59\xb1\x2b\x2b\x32\xbf\x18\x5f\xdd\x08\x93\xf2\xed\x36\xe8\xa1\x54\xa9\x27\x23\x04\x8b\x72\x0c\x82\xe3\xfd\x89\x16\x41\x6e\x85\x90\x14\x46\x61\x1c\xda\xf6\xfa\x0b\x3e\x74\x1d\x69\xc7\xf5\xfc\xa2\x18\x99\x42\xfd\x57\x5d\x9e\x76\x12\xf2\x2c\x1b\x34\xfd\x2c\xdb\x6d\x6f\x1d\xe5\x35\x07\xbf\x04\x1f\x39\x0e\x64\xe3\x94\x65\x4d\x0d\xc7\xcf\x50\x16\x14\x70\xdd\x99\xed\xef\x35\x1c\x7b\xe7\x26\x6f\xd8\xfc\xfc\x75\xf4\x02\x8e\x86\xdf\x6e\xea\xd1\x10\xfe\xd8\x52\x1f\x39\xf9\xc8\x68\x54\x36\x1c\xd7\xb5\xee\xdc\x4d\x41\x7a\x0a\x56\x59\xeb\xe6\x6b\x56\x8b\xd3\xac\xfe\x8f\xb8\xe7\x86\x4d\x79\x90\xc9\x95\x87\x47\x39\x6a\x84\x48\xda\x90\xbf\xa5\xd4\x95\xf8\x97\xa0\x06\x1e\x4f\xb0\xea\x1c\x0c\x71\x1d\x1f\xc8\x5b\xf5\x3b\x00\x00\xff\xff\x08\x94\x25\x2a\x89\x05\x00\x00"

func setup_accountCdcBytes() ([]byte, error) {
	return bindataRead(
		_setup_accountCdc,
		"setup_account.cdc",
	)
}

func setup_accountCdc() (*asset, error) {
	bytes, err := setup_accountCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "setup_account.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x94, 0x28, 0xc3, 0xbd, 0xe8, 0x3c, 0x1e, 0xcc, 0x88, 0xa8, 0xce, 0xe7, 0xc3, 0x90, 0x9d, 0xad, 0x4a, 0x7b, 0x4a, 0x5a, 0x8e, 0xac, 0x4d, 0xbc, 0x22, 0x7d, 0xe5, 0x3f, 0x90, 0x7d, 0x57, 0xd}}
	return a, nil
}

var _switchboardAdd_vault_capabilityCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x4d\x6f\x9b\x40\x10\xbd\xf3\x2b\x9e\x38\xa4\x44\xaa\xf0\xdd\x4a\x1a\x45\x51\xdb\x5b\x15\x25\x51\xef\xc3\x32\xc0\x2a\xb0\x8b\x76\x07\x7f\x28\xf2\x7f\xaf\x16\x6c\xba\xb4\x8e\x13\x0e\x16\x86\x99\xb7\xef\xbd\x79\x83\xee\x7a\xeb\x04\x3f\x06\x53\xeb\xa2\xe5\x17\xfb\xca\x06\x95\xb3\x1d\xd2\xc5\xb3\x34\x39\x57\xf9\xbc\xd5\xa2\x9a\xc2\x92\x2b\xcf\x35\x45\xaf\xe7\xfe\xef\x3b\xea\xfa\xe5\x41\xf1\xa3\x34\x49\x56\x2b\xbc\x34\xda\x43\x1c\x19\x4f\x4a\xb4\x35\xd0\x1e\x04\xe1\xae\x6f\x49\x18\x95\x75\xe1\x6f\xf4\x5e\x1a\x92\xd0\xa8\xec\xd0\x96\x28\x18\x83\xe7\x12\xc5\x1e\x64\xf6\xd6\x30\xc4\x82\xca\x12\x04\xc3\x5b\x54\x47\x8e\x90\x91\xc4\x86\x86\x76\x6a\xa6\x9e\x0a\xdd\x6a\xd9\x87\x7a\x69\x58\x3b\xf8\x48\xa1\x63\x6f\x07\xa7\x38\x89\x4f\x7e\x4b\x12\x00\x68\x59\xc0\x91\x8e\xdf\x01\xf4\x61\x06\x5c\xe3\xef\xfd\xcd\xd5\xdb\xc2\xa5\xfc\x89\x15\xeb\x0d\xbb\xc3\xb7\x19\x2a\x3a\xf6\x89\xab\x35\x70\xf5\x9e\xb1\x79\x74\x3f\x51\xe9\x1d\xf7\xe4\x38\xf3\xba\x36\xec\xd6\xb8\x1f\xa4\xb9\x57\xca\x0e\x46\xae\x4f\x74\xc3\xb5\x5a\xe1\x27\x4b\xd0\x79\x62\x1e\x1b\x12\xbb\x31\x8e\x29\xd4\x4d\x90\x5f\x3c\x68\xc2\x9b\xb1\x3c\xb7\x55\x7e\x41\x3f\x6e\x31\xd7\x8e\xf5\x23\x50\x5e\xb3\x7c\xde\x97\x4b\x57\x16\x67\x68\x6e\x7c\x1c\x8a\x56\xab\x47\x92\xe6\x7a\x46\x88\xe5\x3f\x34\xac\x5e\xa1\xab\x51\x9b\x3b\x36\xc5\xc2\x79\xa7\xbd\xf8\xb9\x85\xbc\x67\x27\xd9\x47\x62\x73\x15\x70\xb3\xeb\xaf\x4b\xcd\x1d\x7b\x4f\x35\xaf\x91\x3e\x8f\xea\x51\x5a\xf6\x30\x56\xd0\xd0\x86\x41\xa7\xd5\xc0\xb4\x1b\x67\xf8\xa4\xe7\x65\x84\x29\x12\x1c\x57\xec\xd8\x28\x3e\x86\xf7\xe8\xb1\x8f\xb3\xb4\x9c\xd7\x32\x64\xb8\x3d\x4d\xa5\xb0\xce\xd9\xed\xcd\xa7\x22\xb7\x1c\x4d\x16\x92\xb2\x7e\xf7\x1b\x91\x3f\x8b\x75\x54\xf3\x38\x91\xa5\x39\x77\x77\xe8\xc9\x68\x95\xa5\x0f\xe3\x0a\x07\x5b\x26\x1e\x4b\x61\x11\xe7\xa3\x1b\xe3\xcf\x61\x8a\x35\xef\x58\x0d\xc2\xff\xa4\xfc\xbe\x2c\x47\x43\xfe\xdb\xef\xc5\x76\x0f\x5e\x9b\x3a\x7c\x25\x7e\xf1\x76\x1c\x28\x3a\x96\xc6\x5e\xf4\x2c\x8f\xca\x33\x15\x6d\xfb\x47\x11\x59\x52\x3f\x24\x7f\x02\x00\x00\xff\xff\xde\x10\x3c\x68\x87\x05\x00\x00"

func switchboardAdd_vault_capabilityCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardAdd_vault_capabilityCdc,
		"switchboard/add_vault_capability.cdc",
	)
}

func switchboardAdd_vault_capabilityCdc() (*asset, error) {
	bytes, err := switchboardAdd_vault_capabilityCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/add_vault_capability.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xaf, 0x1b, 0x91, 0x9c, 0x2d, 0x7, 0x8c, 0xba, 0x72, 0x99, 0x5d, 0xd0, 0xd8, 0x0, 0xf0, 0xd, 0x43, 0x69, 0x1e, 0xcd, 0x9, 0x7d, 0x70, 0xf7, 0x1e, 0xb2, 0x37, 0x90, 0xe8, 0x12, 0x64, 0x58}}
	return a, nil
}

var _switchboardAdd_vault_wrapper_capabilityCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\xcd\x6e\xa4\x3c\x10\xbc\xf3\x14\xad\x39\xe4\x63\xa4\x88\xb9\x8f\xf2\xf3\x45\xd1\x66\x6f\xab\x28\x89\x76\xcf\x8d\x69\xc0\x0a\xd8\xa8\xdd\x84\x8c\xa2\xbc\xfb\xca\x86\xb0\xf6\xee\x64\x14\x0e\x23\x06\x77\x97\xab\xaa\xcb\xd6\xfd\x60\x59\xe0\x6e\x34\x8d\x2e\x3b\x7a\xb2\xcf\x64\xa0\x66\xdb\xc3\x26\xf9\xb6\xc9\x8e\x55\x3e\x4e\x5a\x54\x5b\x5a\xe4\xea\x58\x53\xb4\xbc\xf6\x7f\x7b\xc5\x7e\x48\x37\x8a\x3f\x6d\xb2\x6c\xb7\x83\xa7\x56\x3b\x10\x46\xe3\x50\x89\xb6\x06\xb4\x03\x04\xa1\x7e\xe8\x50\x08\x6a\xcb\xfe\x6f\xb4\x2e\x2d\x8a\x6f\x54\x76\xec\x2a\x28\x09\x46\x47\x15\x94\x07\x40\x73\xb0\x86\x40\x2c\x60\x55\x01\x82\xa1\x09\x5e\x70\xec\x04\x26\xc6\x61\x20\x0e\x5d\x38\x60\xa9\x3b\x2d\x07\x5f\x28\x2d\x69\x06\x17\x49\x63\x72\x76\x64\x45\x59\xbc\xe5\x5b\x96\x01\x00\x74\x24\x20\x9e\xf9\x9d\xe5\x09\xb9\x22\xbe\x5d\xd1\xf6\xf0\xe7\xfd\xe2\xec\x2d\xf1\xa6\x78\x20\x45\xfa\x85\xf8\xfd\x6a\xc5\x89\xf6\x7c\xa0\x7a\x0f\x70\xf6\x99\x9d\x45\xf4\x3e\xf3\x18\x98\x06\x64\xca\x9d\x6e\x0c\xf1\x1e\x6e\x46\x69\x6f\x94\xb2\xa3\x91\xed\x07\x57\xff\xec\x76\xf0\xdd\x53\x6e\x69\xa6\xed\xcd\x9c\x79\xc7\x36\x84\xc1\xf8\x9a\x19\xee\x3f\x07\x38\x63\xad\x38\x8e\xba\xba\xf8\x4c\x38\x5c\xc2\x5a\x18\x8a\x03\x4a\xd1\x90\x7c\xdd\x90\x53\x4f\x1e\x47\x66\x6d\xbc\x1f\xcb\x4e\xab\x7b\x94\x76\xbb\x22\xc4\xba\x6f\x5b\x52\xcf\xa0\xeb\x20\x8c\x97\xa6\x58\x35\xbd\x6a\x27\x6e\x6d\x41\xe7\x88\x25\x3f\xa9\xb4\x50\x1e\x34\xdf\x9e\xa7\x82\x7b\x72\x0e\x1b\xda\xc3\xe6\x31\x48\x87\xca\x92\x03\x63\x05\x5a\x7c\x21\x40\x98\x2c\x3f\x6b\xd3\x40\xbd\x58\xb0\x0c\xe3\x08\xab\xcd\x71\x31\x7e\x88\x08\x4c\x35\x31\x19\x45\x4b\x70\x17\xa7\x5d\x1c\xa5\x74\x64\x69\xc6\xe0\xf2\x63\x36\xa5\x65\xb6\xd3\xc5\x97\x12\x97\x0e\x28\xf7\x61\xd9\x7f\x7a\x31\x14\x8f\x62\x19\x1b\x0a\x73\x49\x5d\xba\xbe\x86\x01\x8d\x56\xf9\xe6\x36\x9c\x5b\xef\xcf\xcc\x23\x15\x16\x71\x5e\xdc\x08\x3f\xef\x73\xaa\xe9\x95\xd4\x28\xf4\x57\xc8\x6f\xaa\x2a\x18\xf2\xcf\xd9\x4e\x4e\xf6\xe8\xfc\x10\xb0\xaa\x7e\xd0\xf4\x33\x5c\x0b\x3d\x49\x6b\x4f\x7a\x56\x44\xe5\xbf\xe6\x4b\x24\x57\xd1\x99\x3f\x99\x97\x73\x90\xc3\x40\x7b\x78\x3a\x0c\x74\xf1\x7f\x12\xe3\x00\x78\x95\x6f\x53\x85\xef\xd9\xef\x00\x00\x00\xff\xff\x36\x7e\xb8\x46\xa3\x05\x00\x00"

func switchboardAdd_vault_wrapper_capabilityCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardAdd_vault_wrapper_capabilityCdc,
		"switchboard/add_vault_wrapper_capability.cdc",
	)
}

func switchboardAdd_vault_wrapper_capabilityCdc() (*asset, error) {
	bytes, err := switchboardAdd_vault_wrapper_capabilityCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/add_vault_wrapper_capability.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xac, 0xe9, 0x7a, 0x55, 0xa, 0x8a, 0xf4, 0x72, 0xbd, 0xd7, 0x2f, 0x41, 0xe6, 0x48, 0xd, 0x3e, 0x1e, 0x4, 0xd7, 0x8, 0x57, 0x68, 0x93, 0x92, 0x3c, 0xe0, 0xf6, 0xec, 0xfd, 0x79, 0x1, 0xaa}}
	return a, nil
}

var _switchboardBatch_add_vault_capabilitiesCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\x41\x6b\xdb\x4c\x10\xbd\xeb\x57\x3c\x7c\xf8\x70\x20\xc8\x77\xf3\xa5\xc1\x2d\x6d\x6f\x25\x24\xa1\x97\x10\xc8\x68\x77\x64\x2d\x95\x77\x97\xdd\x91\x1d\x53\xf2\xdf\xcb\x4a\x8a\xbc\x0a\x76\xa9\x0e\x66\xad\xd9\x37\x7a\x6f\xde\x1b\xb3\xf3\x2e\x08\xbe\x75\x76\x6b\xaa\x96\x1f\xdd\x2f\xb6\x0f\x07\x23\xaa\xa9\x1c\x05\x8d\x3a\xb8\x1d\x16\x97\xca\x8b\x62\xc4\x7f\x7d\xa5\x9d\x1f\xeb\x23\x26\x7f\xb5\x28\x8a\xd5\x0a\x8f\x8d\x89\x90\x40\x36\x92\x12\xe3\x2c\x4c\x04\x41\x78\xe7\x5b\x12\x46\xed\x42\xfa\x9b\xd5\xa5\x21\x81\x72\x5d\xab\x51\x31\xba\xc8\x1a\xd5\x11\x64\x8f\xce\x72\x6a\x28\x0e\xa4\x35\x22\xef\x39\x50\x0b\xcb\x07\xd4\x23\x53\x48\x4f\x65\x4f\x5d\x2b\xf1\x1a\x15\xb7\xce\x6e\x8d\xdd\xf6\x18\x28\x0e\x42\xc6\xe2\x65\xa3\x75\xe0\x18\x5f\xd2\xeb\xbe\x63\xc3\x26\x20\x66\x03\x08\x1c\x5d\x17\x14\x97\x45\xce\x6c\x49\x03\x70\x8d\xb1\xc3\x15\x7e\x17\x05\x00\xb4\x2c\xe0\x4c\xfa\xcf\xc4\xe0\x8e\xa4\x59\xe3\xae\xab\x5a\xa3\xd2\x79\xba\xb9\x7f\xaf\xc6\x35\x9e\x4e\xf5\xe7\xe9\x42\x46\xe5\x9e\xeb\x35\xf0\xdf\x25\x2f\xca\xec\x3c\x50\xf1\x81\x3d\x05\x5e\x46\xb3\xb5\x1c\xd6\xd8\x74\xd2\x6c\x94\x72\x9d\x95\x89\x6e\x7a\x56\x2b\x7c\x67\x49\xda\xdf\x99\xe7\xd3\x83\x27\x69\x06\x4f\xd3\x0d\xe5\xac\x04\x52\x32\xa1\x23\xb7\x75\x79\x56\x31\x6e\x66\xb9\x28\xef\x59\xb1\xd9\x73\xf8\x30\x07\x20\x67\xb2\xb1\x1a\x51\x5c\x60\x18\x81\xb1\xfd\x37\x29\x04\x3a\xc2\xd5\xf0\x3d\xb2\x67\x14\x87\x74\x1c\x4c\xdb\xa6\x70\x78\x8a\x29\x1e\xe2\x12\x20\xef\x97\x7b\xb9\x63\x69\x9c\x9e\x33\x3f\x39\x80\x1b\x3c\x3d\x5f\x2a\x96\xe4\x3d\x5b\xbd\xbc\xac\xf6\xea\x8c\x98\x34\x56\x42\xe0\x9a\x03\x5b\xc5\x23\x3d\x0c\x86\xc4\x9c\xdb\xfc\xbb\x73\xd7\x71\x33\x22\xca\xca\x85\xe0\x0e\xff\xff\x53\x06\x3e\x4d\x2d\xcf\x3d\xcb\x64\xe8\xfa\xe2\xde\x97\x0f\xe2\x02\x6d\xb9\x17\x86\xbf\x76\xba\xbd\x85\x27\x6b\xd4\x72\xf1\xa5\xdf\x54\xeb\x04\x03\xcf\xb9\xf0\x4c\xd3\x62\x98\x55\xff\xf3\x36\xe4\x90\x5f\x59\x75\xc2\xa7\x58\xa6\x28\x68\x3d\x44\x8e\x3c\x55\xa6\x35\x72\x9c\x06\x98\x99\xda\xc5\xb4\xd6\xa4\xf5\x0f\x3e\xf4\x66\xcc\x6d\x3e\x33\xcf\x32\xbb\x1c\x3f\x1f\xfb\xa8\x2e\xfd\xb0\x84\x1f\x6c\xbf\xc6\xb4\xe8\xe3\xe1\xaa\x78\xa7\xfd\xf6\x27\x00\x00\xff\xff\xc4\xdc\x11\x4a\x3c\x05\x00\x00"

func switchboardBatch_add_vault_capabilitiesCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardBatch_add_vault_capabilitiesCdc,
		"switchboard/batch_add_vault_capabilities.cdc",
	)
}

func switchboardBatch_add_vault_capabilitiesCdc() (*asset, error) {
	bytes, err := switchboardBatch_add_vault_capabilitiesCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/batch_add_vault_capabilities.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x29, 0x7f, 0x18, 0x77, 0xaf, 0x95, 0x78, 0xd4, 0x66, 0xec, 0x46, 0x64, 0x6b, 0x3d, 0x15, 0x4f, 0xec, 0x65, 0xfd, 0x3b, 0xef, 0xcf, 0x5f, 0x71, 0x3e, 0x8, 0xd6, 0x61, 0x3a, 0xa2, 0x71, 0x41}}
	return a, nil
}

var _switchboardBatch_add_vault_wrapper_capabilitiesCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\xcd\x6e\xdb\x3c\x10\xbc\xeb\x29\x06\x3e\x7c\x91\x81\x40\xbe\x1b\xf9\xf9\xd2\xa2\xed\xad\x08\x92\xa0\x3d\x04\x01\xbc\x96\x56\x16\x51\x99\x24\xc8\x55\x1c\xa1\xc8\xbb\x17\xa4\x14\x9b\x4e\x23\x24\xe5\xc1\x16\xb9\x3f\xdc\x99\x59\xae\xda\x5a\xe3\x04\x5f\x3b\xbd\x51\xeb\x96\xef\xcc\x2f\xd6\xb7\x3b\x25\x65\xb3\x36\xe4\x2a\xd4\xce\x6c\x31\x9b\x32\xcf\xb2\x31\xfe\xcb\x13\x6d\xed\x68\x1f\x63\xd2\xa3\x59\x96\x2d\x16\xb8\x6b\x94\x87\x38\xd2\x9e\x4a\x51\x46\x43\x79\x10\x84\xb7\xb6\x25\x61\xd4\xc6\x85\x6d\x62\x97\x86\x04\xa5\xe9\xda\x0a\x6b\x46\xe7\xb9\xc2\xba\x07\xe9\xde\x68\x0e\x09\xc5\x80\xaa\x0a\x9e\x1f\xd9\x51\x8b\x92\x2c\xad\x55\xab\x44\xb1\x1f\x62\xad\x51\x5a\x82\x5b\x3d\x02\x80\xc4\x0a\x1f\xa9\x6b\xc5\xc3\xd4\x20\x54\xaa\xae\xd9\xb1\x16\x00\x21\xe9\xea\xae\xb7\xbc\x02\xe9\x70\x69\x6b\xf4\x26\x5e\x83\x92\x9d\x90\xd2\x58\x5d\x55\x95\x63\xef\x57\xa7\xe1\x5c\x1a\x56\x0e\x3e\x21\xcc\xb1\x37\x9d\x2b\xb9\xc8\x52\x24\x39\x0d\x51\x4b\x8c\xe1\x73\xfc\xce\x32\x00\x68\x59\x86\x72\xae\x49\x1a\xbf\xc4\xfd\x75\xb7\x6e\x55\x19\x76\x0f\xc7\x0e\xa1\xae\xe0\x10\xfe\x0f\xa6\xe4\xee\x1b\xae\x97\xc0\x7f\x53\x62\x15\xc9\xf7\x70\xb7\x75\x6c\xc9\x71\xee\xd5\x46\xb3\x5b\xe2\xaa\x93\xe6\xaa\x2c\x4d\xa7\x65\x5f\x5f\x58\x8b\x05\x6e\xc5\x38\x0e\x70\x5f\xa4\xc6\xa0\xb5\xe3\x92\xd5\x23\xbb\x13\x0f\x1b\x0b\x87\x25\x69\xa0\x74\xf4\x25\xe7\xa8\x0f\x34\x8f\xb6\x34\x63\xf0\x1b\x65\xda\xa9\xb6\x0d\x0a\x5b\xf2\x41\xe3\x81\xd7\x23\x56\xb7\x2c\x8d\xa9\xf6\xe1\x9e\xdb\xba\x38\xb0\x86\x73\xdc\x3f\x4c\x19\x0b\xb2\x96\x75\x95\xa7\xfd\x58\xdc\x8c\x65\x1f\xc8\x9e\x7f\x04\xee\x89\x87\xf4\x96\xff\x82\x17\x0e\xdf\xc6\x92\x26\xfd\x17\x5c\x51\xec\x29\x5c\xd1\xf8\x82\x2b\x6c\xce\xfe\x3f\x42\xf7\x23\x38\x5d\xe4\xf3\xf9\x18\x9b\x16\xf1\x8d\x05\x04\xc7\xb1\xe7\x4b\xde\x17\x15\x5b\xc0\xa7\xc5\x1d\x5f\x7c\xdc\x67\x38\x1f\x23\x8a\xb5\x71\xce\xec\xce\x3e\xd4\x75\x17\xfb\x94\xef\xae\x3c\x0c\x91\xe5\xe4\x5c\x2a\x82\x40\xb4\xe1\xa8\x1c\xde\x4d\x7b\x79\x09\x4b\x5a\x95\xf9\xec\x73\x9c\x26\xda\x08\x86\xc2\x8f\x99\x48\x40\xce\x06\xf2\xe2\xcf\xf3\xd0\x1b\xfc\xc4\x65\x27\x7c\x78\x19\x8b\x45\x78\xce\x91\xbf\xfd\xec\xe9\x73\xc5\x7e\xfe\x96\xd6\x9d\x57\x7a\x13\x06\xd6\x77\xde\x45\x85\x7e\xba\x20\xa1\xf3\x9f\xfa\x00\x23\x9b\x24\xbb\x98\x8c\xc9\xed\x30\x34\x5e\xb5\xfc\xe9\xfb\x8c\xa4\x4b\x86\xc1\xf2\xaa\xbf\x4e\xb1\x9f\x59\xe3\xc7\xf8\x44\x9e\xb3\xec\xf9\x4f\x00\x00\x00\xff\xff\xf1\xb3\x2c\x41\x37\x06\x00\x00"

func switchboardBatch_add_vault_wrapper_capabilitiesCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardBatch_add_vault_wrapper_capabilitiesCdc,
		"switchboard/batch_add_vault_wrapper_capabilities.cdc",
	)
}

func switchboardBatch_add_vault_wrapper_capabilitiesCdc() (*asset, error) {
	bytes, err := switchboardBatch_add_vault_wrapper_capabilitiesCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/batch_add_vault_wrapper_capabilities.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf6, 0x59, 0x81, 0xe6, 0x82, 0x64, 0x28, 0x6c, 0x45, 0x37, 0xa2, 0xf2, 0x24, 0xed, 0x3f, 0x27, 0x80, 0x7a, 0x68, 0x23, 0x1c, 0x69, 0x57, 0xc4, 0xd2, 0x59, 0x17, 0xa6, 0x21, 0x36, 0x70, 0x29}}
	return a, nil
}

var _switchboardRemove_vault_capabilityCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\xcf\x6f\x9b\x30\x14\xbe\xf3\x57\x7c\xe2\xd0\x91\x0b\xb9\xa3\xae\x55\x15\x6d\xbb\x56\x69\xb5\xbb\x71\x1e\x60\x0d\x6c\x64\x3f\xa7\x8d\xa2\xfc\xef\x13\x98\x81\x91\xc2\xb6\x5c\x02\xb6\x3f\xbe\x5f\xcf\xaa\xeb\x8d\x65\x7c\xf7\xba\x56\x65\x4b\xef\xe6\x17\x69\x54\xd6\x74\x48\x57\x6b\x69\x72\xef\xe4\xdb\x87\x62\xd9\x94\x46\xd8\xd3\x3d\x50\xb4\x3d\xe3\xbf\x7d\x8a\xae\x5f\x13\xc5\x4b\x69\x92\xec\xf7\x78\x6f\x94\x03\x5b\xa1\x9d\x90\xac\x8c\x86\x72\x10\x60\xea\xfa\x56\x30\xa1\x32\x76\x78\x8d\xf6\xb9\x11\x3c\x00\xa5\xf1\xed\x09\x25\xc1\x3b\x3a\xa1\xbc\x40\xe8\x8b\xd1\x04\x36\xb0\xd4\x99\x33\xa1\x9a\x04\x82\x47\x05\x67\xe1\xdb\x80\x14\xbd\x28\x55\xab\xf8\x12\x54\x71\x43\xca\xc2\x45\x06\x2d\x39\xe3\xad\xa4\x24\x22\xce\x7a\xc1\x4d\x81\x57\x5f\xb6\x4a\xbe\x0a\x6e\x76\xb8\x26\x09\x00\xb4\xc4\xa0\xc8\xd8\xcf\x81\xe8\x10\x48\xf8\x52\xe0\x30\xf3\x3d\x3e\x5c\x57\xa9\xe5\x47\x92\xa4\xce\x64\x6f\x4f\xf3\x97\x22\x1d\x47\xaa\x0a\xe0\x61\x2b\xe8\x3c\x7a\x0e\x4a\x7a\x4b\xbd\xb0\x94\x39\x55\x6b\xb2\x05\x5e\x3c\x37\x2f\x52\x1a\xaf\x79\x56\x0b\xec\xf7\xf8\x41\x3c\xd8\xbe\x17\x05\x02\xf8\x8b\x83\x08\xc8\x09\xe5\xa8\xad\xf2\x6d\x9b\xf8\x3a\x01\xf3\x9a\x78\x71\x3c\x81\xd7\xbf\xbf\xc4\x30\xa6\xbc\x9b\x50\x6b\xbd\x02\x96\x2a\xb2\xa4\xe5\x58\xf2\x22\xd5\xad\xba\x43\xac\x77\x1d\xe6\xa2\xb1\x34\xd6\x9a\x8f\xc7\xff\x8a\xf6\x69\xf6\x90\x0d\x19\x15\x9b\xf7\x22\x7f\x63\x63\x45\x4d\x61\x38\x22\xe7\xcf\xcf\xe8\x85\x56\x32\x4b\x0f\xe3\xd0\x6a\xc3\x08\x0a\xd6\x96\x22\xb5\xe9\x2e\xb4\x75\x0b\x7f\xf4\x49\xd2\x33\xad\x3a\x3c\x86\x29\xdf\xac\x31\xca\xc4\x3b\xa5\xeb\x71\x75\x81\x87\x4b\x32\x96\x88\x8e\xb8\x31\xa7\xed\xe0\xf2\xe8\x70\xb6\x90\x15\xff\x1a\x8a\x50\xe4\x1f\x23\xb7\xe4\x77\x00\x00\x00\xff\xff\x36\x73\x1f\x58\x83\x04\x00\x00"

func switchboardRemove_vault_capabilityCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardRemove_vault_capabilityCdc,
		"switchboard/remove_vault_capability.cdc",
	)
}

func switchboardRemove_vault_capabilityCdc() (*asset, error) {
	bytes, err := switchboardRemove_vault_capabilityCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/remove_vault_capability.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xac, 0xcb, 0x2b, 0x62, 0x7b, 0xca, 0x3f, 0xde, 0x8c, 0x12, 0x9, 0xaa, 0x96, 0xba, 0xca, 0x21, 0xe8, 0x13, 0x67, 0xf6, 0x7a, 0xe9, 0xc3, 0x3a, 0x82, 0xd7, 0xe7, 0xb2, 0xe1, 0xc0, 0x8c, 0x39}}
	return a, nil
}

var _switchboardSafe_deposit_to_lnfCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x57\x4d\x6f\xe3\x36\x10\x3d\xaf\x7f\xc5\xac\x0f\x5e\x1b\x70\xec\x4b\xd1\x83\x91\x8f\xba\x49\x5d\x2c\xb0\x87\x20\xc9\xb6\xd7\xd0\xd2\xc8\x62\x57\x26\x05\x72\x14\xad\x11\xf8\xbf\x17\x24\x45\x49\x94\x64\x6f\xb6\x48\x75\xf0\xae\xa8\x99\xe1\x9b\xc7\x79\x33\x0c\xdf\xe7\x52\x11\x6c\x0a\xb1\xe3\xdb\x0c\x9f\xe4\x37\x14\x90\x28\xb9\x87\x71\xb0\x36\x1e\x0d\x59\x3e\x96\x9c\xa2\x74\x2b\x99\x8a\x87\x9c\x5a\x9f\x1b\x7f\xce\x28\xd8\xc5\xbf\xd7\x16\x5f\xa4\xa6\xb5\x88\x37\xb2\x10\x3e\x6a\x7b\xa9\x89\x94\xc9\x32\x88\xe4\xdf\xc7\xa3\xd1\x72\x09\x4f\x29\xd7\x40\x8a\x09\xcd\x22\xe2\x52\x00\xe1\x3e\xcf\x18\xa1\x86\x54\x96\x40\x12\x34\x8a\x18\xbe\x3e\xde\xdd\x42\x52\x88\x58\xc3\x33\xc9\x67\x60\xe2\x00\xcf\xeb\x38\x56\xa8\xf5\x33\x94\x9c\x52\x59\x10\x7c\x13\xb2\xe4\x62\x07\x26\x30\x4f\x80\x13\xa4\x32\x8b\x35\x30\x78\x61\x45\x46\x20\x13\xa0\x94\x11\xe8\x1c\x23\x9e\xf0\x08\xc8\x02\xa3\x43\x8e\x0b\x78\x4a\x31\x00\x52\xf2\x2c\x03\x46\x06\x0f\x19\x1c\x26\x68\x8c\xb9\xd4\x9c\x80\x52\xac\xd0\x70\x41\xd2\xbe\x2a\x8c\x90\xbf\xa0\xfa\xa4\x41\x37\x84\xce\x0d\x0e\x21\x21\x62\x39\xdb\xf2\x8c\xd3\x01\x12\xa9\x40\xc9\x82\x3c\xd0\x10\xd1\xe6\x09\xb8\x86\xc4\xb2\x6a\xd8\x48\x31\x0c\x47\x29\x0a\x93\x98\x45\xd7\x87\x63\x33\xf7\x90\x82\x23\x8a\xa4\x20\xc5\x22\x5a\x8c\x96\xcb\x51\x2b\xcf\x29\xc9\x15\x54\x4c\xce\x81\xed\x65\x21\x68\x05\x5f\x37\xfc\xfb\xaf\xbf\xcc\xe0\x75\x04\x00\x60\x7f\xec\x61\x99\x3c\x13\x54\x28\x22\x84\x6a\x17\x47\xad\x3d\x5c\xf3\x9a\xb3\x83\x25\x81\x45\x91\x09\x65\x5d\x33\x24\x67\xf6\x80\xc9\x0a\x26\x75\x31\x2d\xfe\x32\x8b\xed\xe8\x76\x01\x14\x6a\x59\x28\xb3\x85\xe1\xc6\x9d\xa1\x89\x6d\x8f\x4b\xbb\x55\xa6\x10\xb6\x68\x48\xb4\xc9\x24\xa8\x14\xc6\xf5\x6e\x1a\x05\xd9\x58\x2b\xf8\x2d\x28\xf6\x70\xcb\x75\x3f\x1d\xcd\x77\xc2\x26\x90\x64\xb2\x74\xa8\xe7\x6e\x47\x4b\xf9\x16\xa1\xd0\x18\xdb\x53\xcc\xd9\xc1\xee\x6f\xa8\x9e\x6c\x20\x41\xd4\x50\x23\x30\xee\xf7\x4a\xbe\xf0\x18\x95\x4b\xfb\x35\x04\xe2\x3f\x1e\x1b\x30\xad\x2a\x19\x44\xe3\xca\xd5\x57\x9a\xab\x24\x8c\xe4\x0b\xaa\x2e\x8e\x00\xc6\x43\xe5\xb0\x82\xdb\x7a\x83\xcb\x49\x2d\x44\x47\x49\x07\x9d\xf7\x39\x5e\xdf\x8c\x6c\xb0\x5c\x61\xce\x14\x4e\x1d\xa2\x15\xac\x0b\x4a\xd7\xee\x8c\x4d\x99\x58\x9b\x2a\x91\x3f\x91\x80\x9d\x61\x56\x93\x54\x18\x3b\x6e\x6b\x3f\x8d\x59\xb2\xf0\x45\x02\x57\x95\xf5\x62\x2b\x95\x92\xe5\x65\xb7\x66\xae\xa7\xa6\xe0\x56\xd0\x59\x7e\x24\xa9\xd8\x0e\xef\x19\xa5\xb3\xd1\x87\x0f\x1f\x6e\x6e\x20\x67\x82\x47\xd3\xf1\xad\x2c\xb2\x18\x84\x24\x70\x11\xfb\xf0\x64\xe9\xd0\xd9\x40\x1f\xc7\xb3\x76\x46\x7f\x73\x4a\x63\xc5\x4a\x5f\x81\x75\xb5\xbf\x21\xa7\xba\x14\xe1\xf2\x22\x48\x72\x51\x56\x51\xa7\x5e\x75\xee\xdf\x59\x40\xe6\xef\x0e\xee\x39\x3e\x5b\xb5\x91\x57\x45\x15\x42\xe8\xd4\x62\x9f\xdd\x53\xa5\xe9\x69\x5e\x6a\x47\xec\x32\xf1\x45\x63\x33\x6a\x38\x32\xcf\x19\xb2\x07\x44\x55\x43\x1d\xcf\x7a\xc5\x63\xb2\x6b\x69\xc1\xb6\xed\xf3\x5a\xe8\xe7\xeb\x0b\xb8\x49\x76\x87\xf4\x5f\xea\x7f\xba\xcc\x8b\x6d\xc6\xa3\x26\x77\xff\x6d\xd6\x34\xc7\xa3\xcb\x01\xbf\x63\x54\x10\x0e\xe8\xa1\x1a\x11\x3c\xe7\x28\xe8\x93\x06\x17\xd3\x77\x49\x90\xdb\x7f\x30\x6a\x0a\xc7\x28\xb7\xb6\x86\x2b\xd8\x21\x55\x5a\x9b\x92\x6c\xf1\xc5\x13\xd7\xed\x9a\x09\xe1\x8e\xb7\xf6\x0d\x93\x9e\x9e\x9a\xfb\x8b\x7b\x0b\xc7\xe9\xa6\x7d\xa6\x8d\xfe\x4e\x79\xb6\xfe\xff\xfa\x16\x23\xb7\xd3\xf1\x7a\xea\x87\x4b\x8b\xa8\x75\x33\x6d\xdb\xa3\xad\x35\xfc\x7f\x30\x6e\x21\x88\x58\xb1\x23\x24\xdd\xb9\x68\x18\xd7\x42\x0c\x18\x5b\x68\x96\x60\x65\x53\x55\xfc\xe5\x45\x47\xbd\x27\xd5\xda\xcd\xa3\xca\xe5\x73\x52\x5f\x3b\xb8\x06\x85\x54\x28\x81\x7e\x80\x53\x8a\x5c\xd5\x39\xc6\x3c\x16\x9f\x08\x74\x11\x45\x68\x4c\xb4\x84\x12\x21\x2f\x68\x28\x6e\xe7\xea\x61\x66\x3c\xac\x45\x0c\x76\xca\xf7\x1c\x4c\xfe\x7b\xdc\x4b\xb8\x82\xf1\x5d\x81\xa0\xe4\x81\x65\xc4\x51\x8f\x07\x4d\x2b\x44\x7f\x68\xe2\x7b\x46\x68\x58\x68\x5f\x22\x16\x58\x7d\xf0\x5c\x29\x8c\x11\xf7\x66\x1c\x90\x9c\x03\x27\xb4\xcc\xf5\x08\x9f\x5b\x0c\x2b\xfb\x3b\x87\x98\xeb\x3c\x63\x87\x15\x08\x9e\xcd\x06\x61\x54\xdd\x66\x83\x58\x9f\x43\xa7\x85\xf5\x4f\xa3\x03\x7d\xd1\xc4\x18\xde\xa3\xbe\x63\x5c\x5e\xf4\x7c\xeb\xe0\x2d\xa9\xf9\x27\xe0\xa3\x72\x9c\xf6\xac\xcc\x13\x90\x33\x68\xe1\x09\xf3\x58\x86\xad\x5a\xdc\x0d\x7e\x6f\xf3\x39\x6c\xa1\xfd\x58\x3c\xec\xd1\x70\x35\x69\x11\xcc\x34\x4c\x06\x6e\x48\xc3\x81\x5a\x2d\x30\xf7\xc1\x7a\x1d\xb7\xe7\x39\xc0\xe2\x72\x09\x0f\x56\x12\xf6\x26\xaf\x70\xcf\xb8\x30\x77\x98\x0a\x98\xbb\x4b\x71\x23\x14\xae\x2b\x15\x55\xc2\x8f\xa4\x48\xf8\xae\xf0\x97\xbd\x4e\x50\x3b\x1a\x7a\x43\xa1\xe6\xa1\x0b\xf5\x63\xd5\xdf\xa6\xb3\x8f\xf5\x59\x7a\xfd\x9f\x2b\xa0\x18\x35\x29\x79\xe8\x16\x4e\x60\x77\x1c\x0d\x79\x84\x4d\xa5\x36\x39\x02\x66\x1a\xfb\x1d\xf1\xb3\x1b\x7d\x85\x46\x65\xda\x84\x9d\xa9\x29\x8b\x81\x05\x5d\xaf\xc4\x53\x7f\x99\x7c\x99\x6c\x82\x90\x6f\xec\x07\xef\xd7\x0b\xc2\x7c\xdf\xda\x08\xfe\xef\x26\xf0\x13\x0d\xa0\xed\xf6\x36\xed\x9f\xd7\xfd\x8f\x35\x7f\x4e\xef\xe7\xb5\xfe\x2e\x3a\xff\x79\x8d\xcf\xba\x55\xfb\xbe\xd2\x3e\x2b\xeb\x77\x91\xf4\x29\x39\x37\x7d\xeb\xe8\x6f\x79\xc7\x11\xfc\x1b\x00\x00\xff\xff\xfd\x84\x52\xd0\x8d\x11\x00\x00"

func switchboardSafe_deposit_to_lnfCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardSafe_deposit_to_lnfCdc,
		"switchboard/safe_deposit_to_lnf.cdc",
	)
}

func switchboardSafe_deposit_to_lnfCdc() (*asset, error) {
	bytes, err := switchboardSafe_deposit_to_lnfCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/safe_deposit_to_lnf.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x26, 0x5a, 0x67, 0x79, 0x0, 0x7b, 0x1d, 0x2a, 0xd, 0x55, 0x35, 0xb6, 0xc4, 0x4b, 0xa9, 0x5e, 0xbf, 0x8d, 0x29, 0x23, 0xde, 0x9d, 0xfe, 0x59, 0xb5, 0xa3, 0xb4, 0x70, 0x0, 0x9, 0x5a, 0x96}}
	return a, nil
}

var _switchboardSafe_transfer_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x55\x4d\x6f\xdc\x36\x10\x3d\x7b\x7f\xc5\x64\x0f\xb1\x16\x70\xe4\x4b\xd1\xc3\xc2\x49\x6a\x24\x75\xaf\x41\xe2\xb6\x67\x4a\x1c\x89\x6c\xb4\x1c\x61\x38\xb2\xbc\x30\xfc\xdf\x0b\x92\x92\x96\xf2\x07\x6a\xd4\x07\xef\x92\x9c\x8f\xf7\x66\xde\xcc\xda\x43\x4f\x2c\x70\x33\xb8\xd6\x56\x1d\xde\xd2\x4f\x74\xd0\x30\x1d\x60\xbb\xba\xdb\x6e\x5e\xb2\xfc\x31\x5a\xa9\x4d\x45\x8a\xf5\x4b\x4e\xd9\xf3\xe2\xff\xfb\xbd\x3a\xf4\xeb\x44\xf9\xd5\x76\xb3\xb9\xbc\x84\x5b\x63\x3d\x08\x2b\xe7\x55\x2d\x96\x1c\x58\x0f\x0a\x04\x0f\x7d\xa7\x04\xa1\x21\x0e\xc7\xec\x5d\x8c\x12\xa8\x69\xe8\x34\x54\x08\x83\x47\x0d\xd5\x11\x94\x3b\x92\x43\x08\x11\x85\xc0\xa3\xd3\x20\x21\x89\x0f\x47\xe5\x48\x0c\x32\xa8\xba\xa6\xc1\x09\x88\x61\x1a\x5a\x03\x0a\x7c\xc6\x6a\xf0\xd6\xb5\x20\x06\xc1\xab\x06\xbf\x62\x4f\xde\x4a\x08\x78\x40\x31\xa4\xcb\x04\x35\x1d\x60\xb4\x5d\x07\x8e\x04\x7a\xe5\x6c\x0d\xb6\x49\x8e\x59\x38\x4d\xe8\xa3\x85\x51\x77\x18\x5e\x43\xa8\x5a\xf5\xaa\xb2\x9d\x95\x63\x84\x29\xc4\xf1\x09\x34\x7a\xcb\xa8\xe1\xe6\xf6\x02\x18\x65\x60\x37\x63\xd1\x09\x07\x6a\xb8\x53\x43\x27\x60\x9d\x17\x54\xba\x4c\xb5\x43\x18\xad\x18\xcd\x6a\x04\x75\x88\xdc\x54\x60\x6e\x70\xe1\x1a\xeb\xde\xa2\x5c\x4f\xe7\x71\xae\x5c\x30\xea\x15\xab\x03\x0a\xb2\x9f\x2b\x17\x6e\xb3\x6a\x97\x9b\xec\x50\x08\xed\xe1\x5a\x6b\x46\xef\x2f\xa6\x7c\x7b\xf8\xf3\xc6\xde\xff\xfa\xcb\x0e\x1e\x36\x00\x00\xf1\xdf\x04\x8d\xb1\x41\x46\x57\xe3\x1c\x38\x31\x88\x88\x52\xf6\x23\xf2\xb9\x9f\xa1\x46\xd7\x0e\x25\x99\x7d\xc7\x66\x0f\x6a\x10\x53\xac\x74\x56\xfe\x3d\xf1\x55\x55\x87\x3b\x78\x9f\x0b\xaa\xfc\x2b\x38\xe6\x08\xe2\x05\x30\x7a\x1a\x38\xc0\x08\xd2\x31\xd4\x69\x9f\x78\x4e\x02\x09\xb7\x8a\x11\x2a\x8c\x45\x0f\x84\x1b\x64\x46\xbd\x20\xf2\xe8\x24\xc6\xda\xc3\x6f\x6b\x38\x29\x65\x34\xec\x19\x7b\xc5\x58\x78\xdb\x3a\xe4\x3d\x5c\x0f\x62\xa6\xaa\x87\xea\x44\x9b\x09\xdb\x1f\x28\xa0\x9e\xd7\x27\x79\x9e\xfb\x24\x8c\xa9\xe3\x8b\x9f\xc7\xae\x29\xe7\xda\xc0\xc7\xc9\xba\xac\x88\x99\xc6\xab\xff\x53\xaa\x4f\x45\xe8\xc5\x1e\x9e\xbf\xfc\x10\x62\xd5\xe2\x37\x25\x66\xb7\x39\x3b\x3b\xfb\xfc\x39\x09\xbd\xd8\x7e\x89\xfa\x09\xba\x4e\x89\x9f\xb3\xa0\x31\x91\x88\x81\xde\x6d\x77\x2b\xe6\x33\xa6\xb9\xf8\x8b\x18\xde\xc0\x7d\xe9\x02\x5c\x7d\x58\x15\xa3\x9c\x87\xa0\x98\x45\x99\x3e\x77\x27\x49\x3e\x26\x14\x78\x8f\xf5\x20\xf8\x42\x3b\x24\x0a\xb6\xb6\xbd\x45\x27\xe7\x1e\xfa\xa1\xea\x6c\xbd\x8c\x11\x55\xff\x60\x7d\xc2\x13\x44\xb1\x58\xc3\xc7\x6c\xc0\x0a\xa1\xdd\x5b\x7a\x9d\xe7\xca\x77\xeb\x77\xac\xd1\xde\x21\xaf\x52\x65\x7b\x25\xf5\x7e\xf1\x2e\x5b\x94\x2f\xcb\x52\x29\x5e\xdb\xc9\xe5\xb7\x48\x27\xf5\x13\xb2\xbf\x59\x3e\xef\x5f\xf5\xcc\xbe\x3f\xbc\xc5\x28\x65\x7a\xfc\x54\xfc\xb7\x70\x12\xd3\x75\x6d\x32\xaa\xef\xb6\xbb\xa5\x7f\xab\x2f\x97\x97\x30\xad\xe7\x58\xca\x66\x70\xda\x43\xfc\x69\x58\xad\xe0\x8b\x79\x2d\x4f\x3b\xf4\xb4\x92\x6b\x0a\x7a\x17\xcc\x23\x06\xc3\x7c\xb9\xa7\x35\x9c\x25\x98\x36\x2f\x50\x93\x28\xfd\xb4\xae\xbd\x00\x4f\x30\xe2\xb4\xe3\x29\x8f\xc7\x58\x53\x60\x27\x86\xfc\x14\x62\x79\xb6\x4d\x6c\xab\x23\xf9\x3a\xaf\xf7\x45\xd8\xab\x56\x97\xd9\x4f\xd1\x34\xac\x57\x1f\x9e\x4c\xc3\xab\xea\xdf\x3d\xac\x5a\xbd\x1e\x19\xfd\x24\xe8\x33\x2c\x27\x9d\x3c\x9e\xf4\xac\xd1\x0b\xd3\xf1\x09\x82\xd5\x98\x3d\x6e\xfe\x0d\x00\x00\xff\xff\xc6\x5e\xa3\xf4\x69\x08\x00\x00"

func switchboardSafe_transfer_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardSafe_transfer_tokensCdc,
		"switchboard/safe_transfer_tokens.cdc",
	)
}

func switchboardSafe_transfer_tokensCdc() (*asset, error) {
	bytes, err := switchboardSafe_transfer_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/safe_transfer_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x16, 0x29, 0xd0, 0x42, 0x9b, 0x75, 0xbc, 0x64, 0x0, 0x59, 0x4, 0xa4, 0x2, 0x60, 0xe3, 0xb8, 0xe7, 0x2a, 0x4c, 0xf, 0x42, 0xa0, 0xfa, 0x1e, 0xf, 0x22, 0x14, 0xd5, 0xee, 0xc7, 0x38, 0x3e}}
	return a, nil
}

var _switchboardSafe_transfer_tokens_v2Cdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x54\x4d\x6f\xe3\x38\x0c\x3d\x37\xbf\xe2\x35\x87\xd6\x06\x76\xdd\xcb\x62\x0f\x41\xbf\x8b\xe9\x5c\x8b\xb6\xd3\x39\xcb\x36\x1d\x6b\xaa\x48\x86\x44\x37\x31\x8a\xfc\xf7\x81\x2c\xdb\xb1\xd3\x14\x53\x4c\x2e\xb1\x24\xf2\x91\x7c\x8f\xa4\x5c\x55\xc6\x32\xee\x6b\xbd\x94\xa9\xa2\x67\xf3\x4a\x1a\x85\x35\x2b\xcc\x27\x77\xf3\xd9\x21\xcb\xa7\xb5\xe4\xac\x4c\x8d\xb0\xf9\x21\xa7\xd1\xf3\xe0\xff\x6d\x23\x56\xd5\x34\xd0\xf8\x6a\x3e\x9b\x9d\x9d\xe1\xb9\x94\x0e\x6c\x85\x76\x22\x63\x69\x34\xa4\x83\x00\xd3\xaa\x52\x82\x09\x85\xb1\xfe\x38\x7a\xe7\x52\x30\x32\x53\xab\x1c\x29\xa1\x76\x94\x23\x6d\x20\x74\x63\x34\xc1\x23\xb2\x81\x23\x9d\x83\x7d\x10\xe7\x8f\x42\x1b\x2e\xc9\x42\x64\x99\xa9\x35\x83\x4b\x6b\xea\x65\x09\x01\x37\xaa\xaa\x76\x52\x2f\xc1\x25\x21\xa7\xca\x38\xc9\x1e\x6c\x45\x5c\x9a\x1c\x69\xcd\x48\xa9\x30\x76\x78\xf4\xb6\x6b\xc2\x5a\x2a\x05\xda\x54\x4a\x66\x92\x55\x83\xac\xa4\xec\x15\xeb\x92\xda\x80\x96\x32\x92\x6f\xde\x34\x13\x95\x48\xa5\x92\xdc\x40\x3a\x0f\x9c\x1a\x6b\xcd\x5a\xa4\x8a\x60\x2c\xb4\x61\x08\x9d\x43\x16\x68\xc8\xf9\x24\x34\x24\x07\xf4\x2e\x60\x9b\xd9\x9b\xa8\x15\xfb\x92\xfc\x21\xa0\x93\x1d\x81\x27\xb3\x11\x55\x11\x9b\x05\x6e\xf2\xdc\x92\x73\xff\x40\xac\x7c\xed\x0b\xfc\xb8\x97\x9b\xff\xff\x8b\xf1\x3e\x9b\x01\x40\x2b\x81\xc7\x2a\xc8\x92\xce\xa8\x07\x0f\x91\x5a\xd5\xfc\xb1\x12\x0d\xd9\x53\xd7\x53\xd8\xba\x2a\xe2\x60\xf6\x48\xc5\x02\xa2\xe6\x32\x9a\xf4\x44\xf2\x53\x72\x99\x5b\xd1\x56\x19\xe3\x64\x2c\x7e\xf2\xe2\x1d\xc7\x19\xb4\x17\xb0\xe4\x4c\x6d\x7d\x1a\x5e\xe6\xd2\xa8\xbc\x65\x63\x10\xd3\xdf\x0a\x4b\x48\xa9\x15\xcb\x17\x5b\x90\xb5\x94\x0f\x19\x39\xd2\xdc\x62\x2d\x70\x3d\x4d\x27\x84\x6c\x0d\x2b\x4b\x95\xb0\x14\x39\xb9\xd4\x64\x17\xb8\xa9\xb9\xbc\x09\xa5\x0d\xcc\x74\xb9\x7d\x27\x86\xf8\xc8\x4f\xf0\x3c\x75\x70\x6c\x2c\xe5\x81\x88\xc1\xcf\x91\x2a\x92\x9e\x1b\x5c\x74\xd6\x49\x10\xfd\xfc\x6f\xa8\xba\x8c\xbc\x16\x0b\x7c\x7c\x79\x62\x63\xc5\x92\x1e\x04\x97\xf1\xec\xe8\xe8\xe8\xea\x0a\x95\xd0\x32\x8b\xe6\x77\xed\x94\xf8\xde\x0a\x81\x3f\x56\x61\xd6\xa1\x88\x16\xe8\x78\x1e\x4f\x2a\xef\x73\xea\xc9\x1f\x9a\xe1\x0b\xb5\x0f\x2a\xe0\xfc\xdf\x09\x19\xc9\xba\x43\x8d\xfa\x86\x0c\xff\x5d\xe8\x6d\xf8\xa3\x0d\x65\x35\xd3\x01\x29\xba\xc6\x97\x95\x24\xcd\xa7\x0e\x55\x9d\x2a\x99\x0d\xa3\x6d\xd2\x5f\x94\xed\x72\xf1\x0d\x31\x58\xe3\x02\x4b\xe2\x4e\xe6\x88\x4d\xfc\x15\x9d\xc7\xb1\xc6\x3b\xf0\xb1\x1b\xbe\x49\xa8\xd1\x3a\x09\xba\x0f\xde\xc9\x92\xf8\x6e\x18\xd3\xe8\xb3\xdd\x99\x3c\xb4\xe5\x04\x2d\x31\xfa\xf5\xad\x73\xf2\xa9\xe7\xe8\xfb\xfd\x2b\x46\x21\xd2\xf6\x32\xfa\x73\xd3\x74\x6b\x66\xc2\xcd\xa8\xd4\xe3\x79\xec\x53\x9c\xb0\xf9\x22\x94\xcc\xfd\x02\xdf\x2d\xaa\xbd\x35\x98\x36\xdd\xc6\x75\xa2\xa0\xdb\x36\xd4\x6d\xf3\xdc\x54\x34\xc0\xc8\xa2\xd7\x2f\x78\x77\xa3\x34\xe1\x38\xd9\xf7\x8e\xb8\xa9\x68\x01\xff\x79\x7e\x7d\x68\x8c\xe2\xf8\x7d\xc2\xec\x1e\x5e\xb7\x6d\xbb\x69\xeb\x9a\x77\xe8\xe6\x9d\x28\x5b\x90\x72\xbe\x41\xc7\x58\x39\x39\xb6\xa6\xd9\x1b\x81\x9d\x4f\xdf\xe2\xdb\xdf\x01\x00\x00\xff\xff\xef\x92\x6f\xa2\x8c\x07\x00\x00"

func switchboardSafe_transfer_tokens_v2CdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardSafe_transfer_tokens_v2Cdc,
		"switchboard/safe_transfer_tokens_v2.cdc",
	)
}

func switchboardSafe_transfer_tokens_v2Cdc() (*asset, error) {
	bytes, err := switchboardSafe_transfer_tokens_v2CdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/safe_transfer_tokens_v2.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xbf, 0x44, 0x4c, 0xb2, 0x5b, 0x45, 0x85, 0x8e, 0x98, 0x69, 0xa5, 0xd1, 0xb1, 0x81, 0x9d, 0x55, 0xac, 0x5f, 0x97, 0x18, 0xcf, 0xcf, 0x7b, 0x5f, 0x99, 0x27, 0xf8, 0x9b, 0x75, 0x53, 0x61, 0x5e}}
	return a, nil
}

var _switchboardSetup_accountCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x53\xdd\x6a\xdb\x30\x14\xbe\xf7\x53\x7c\xe4\x62\x24\x90\x25\xf7\xa5\x2d\x94\xc1\xae\xcb\xda\x17\x38\x96\x8f\x23\x11\x45\x32\xd2\x51\xb3\x10\xf2\xee\x43\x76\x13\xec\xc6\x2e\xd9\xe8\x4c\x20\xfa\x3b\x9f\xbe\x9f\x23\xb3\x6b\x7c\x10\xfc\x4c\x6e\x63\x4a\xcb\xaf\x7e\xcb\xee\x65\x6f\x44\xe9\xd2\x53\xa8\x50\x07\xbf\xc3\x6c\x6a\x7b\x56\x8c\xd5\x8f\x15\xcd\x8a\x62\xbd\xc6\xab\x36\x11\x12\xc8\x45\x52\x62\xbc\x83\x89\x20\x08\xef\x1a\x4b\xc2\xa8\x7d\xc8\xd3\xde\xbe\x68\x12\x28\x9f\x6c\x85\x92\x91\x22\x57\x28\x0f\xc8\x50\xe4\x0e\xde\x31\xc4\xe7\x1f\x55\x15\x08\x7d\xde\x81\xa3\x4f\x41\x75\x07\x34\x9b\x00\x52\xca\x27\x27\x88\xbe\x43\x15\xcd\x07\x28\x72\x19\x2c\xb0\x62\xf3\xc6\xd8\x25\x2b\xa6\xb1\x8c\xfa\x9d\x3b\x24\x93\x8f\x48\xd1\xb8\x0d\x08\xf9\xcf\x32\x8e\x03\x6d\xab\x5f\x5d\x79\x38\x15\x7d\xee\xc7\xa2\x00\x80\x26\x70\x43\x81\xe7\xa4\x94\xdc\xe1\x29\x89\x7e\xea\x98\x2c\xce\x27\xf2\xb7\x5e\xe3\x87\x66\xb5\x85\xa9\x33\xb3\x0b\x5b\xb2\x81\xa9\x3a\x40\x53\x9c\x50\x78\x81\x30\x75\xae\x92\x55\xe9\x43\xf0\xfb\xfb\x6f\x53\xa1\xad\x7a\xe3\xc7\x4b\x35\x30\xcf\xb1\xdd\x4d\xb6\xc2\xea\x45\x7c\xa0\x0d\x3f\x93\xe8\x05\x1e\x1e\xe0\x8c\xc5\xb1\x57\x0f\x0c\x26\x59\x51\xe0\x1c\x2b\xc1\xf1\x7e\x3c\x1d\x72\x15\x9a\x24\x30\x02\xe3\xc4\x23\x76\x77\x0c\x80\x5a\x51\x91\xde\x78\x3e\x58\xce\xdf\xfd\xf7\x69\xba\xaa\xbd\xbc\xb7\x32\x5f\x2c\x71\x85\x20\xfe\x36\xc5\x83\xc2\x45\x31\xa9\xb4\x49\xa5\x35\x0a\x8a\x1a\x2a\x8d\x35\x72\x78\x6f\xc0\x81\x7c\xfe\xdd\xf8\xb6\xa1\xf2\x46\xc5\x79\x22\x1f\x11\xeb\xe4\xce\x4f\x20\xf8\xb4\xd1\xed\xd9\xa9\xbe\xcb\xe6\x71\xa8\x49\x8d\x38\x67\x8d\xdb\xde\xd6\x0c\x53\xe8\x8f\xd7\xc6\x4f\xc2\x9d\x8b\x9e\x5b\x1f\xb2\x73\xcb\x6b\xcf\x29\x6c\x58\xfe\xc9\xf7\x9b\xba\xed\xef\x32\x28\xbd\xb4\xe6\x7e\x84\x3b\xde\x62\x59\x27\xf3\xd4\xf6\x71\xbe\xe1\x73\x90\xb1\xc0\xe2\xd7\x25\xf6\x29\xc7\x25\xbe\x20\xdd\xff\x9c\xea\x65\x70\xea\x1e\xd8\xa9\x28\x4e\xc5\x9f\x00\x00\x00\xff\xff\x7e\x23\xaf\xa6\xa2\x06\x00\x00"

func switchboardSetup_accountCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardSetup_accountCdc,
		"switchboard/setup_account.cdc",
	)
}

func switchboardSetup_accountCdc() (*asset, error) {
	bytes, err := switchboardSetup_accountCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/setup_account.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x51, 0xab, 0xfd, 0x49, 0x8, 0x59, 0xc4, 0xc3, 0xd5, 0x74, 0x24, 0xc4, 0xaa, 0xd2, 0xf5, 0x4, 0x29, 0x1e, 0xb2, 0x82, 0x2d, 0x40, 0xaf, 0x9f, 0x7d, 0xda, 0xc2, 0x0, 0x7e, 0x5, 0x68, 0xf9}}
	return a, nil
}

var _switchboardSetup_royalty_accountCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x58\x4d\x6f\xe3\x36\x10\xbd\xfb\x57\x4c\x73\x48\x65\xc0\xb5\xee\x41\x92\x45\x9a\x36\x8b\x5e\x8a\xc5\x26\xdb\x9e\xc7\xd4\xc8\x22\x22\x93\x02\x39\x8a\xd7\x08\xfc\xdf\x0b\x52\x96\x4c\x79\x2d\xdb\x92\x8d\x66\x75\x49\x2c\x91\x8f\xf3\xf1\xde\x13\x45\xb9\x28\xb4\x61\x78\x2a\xd5\x5c\xce\x72\x7a\xd1\xaf\xa4\x20\x35\x7a\x01\x57\xad\x7b\x57\xa3\x7d\x23\x9f\x97\x92\x45\x36\xd3\x68\x92\x7d\x93\x82\xc7\xdb\xf9\xb9\x5e\xb6\x56\xa9\x7f\x6f\x47\x48\xe4\xd6\x88\xfa\xf7\xd5\x68\x34\x8a\x63\x78\xc9\xa4\x05\x36\xa8\x2c\x0a\x96\x5a\x81\xb4\x80\xc0\xb4\x28\x72\x64\x82\x54\x1b\xf7\x33\x78\xce\x19\x32\x08\x5d\xe6\x09\xcc\x08\x4a\x4b\x09\xcc\x56\xe0\xa0\x50\xad\xb4\x22\x48\xcb\x3c\x5f\x81\x25\x2e\x0b\x40\x05\x28\x84\x2e\x15\x7b\x24\x43\x82\xe4\x9b\x54\x73\x98\x69\xce\x7c\xf4\x80\x2a\x81\x6f\xcf\x7f\x3c\x02\xbb\xa8\x2c\x20\x03\x67\x04\x16\x17\xe4\x40\x8b\x72\x96\x4b\x01\x05\x72\x06\x91\xc3\x90\xca\x32\x2a\x41\x7e\x94\xd1\x2b\xcc\x59\x92\x85\xb8\x1a\x18\x7f\x26\x45\x46\x8a\xa7\x97\xaf\x7e\x2d\x32\x7e\xea\xd8\x41\x7d\xb3\x6e\x65\x37\x0d\x93\xe4\x6f\x5a\xfe\x83\x65\xce\xff\x1a\x2c\x0a\x32\xf6\xf7\xd5\x17\xb7\x84\x0d\x7a\xb0\x20\xce\x74\x02\x98\xe7\x7a\x69\xeb\xec\x58\xbb\x9c\x1d\x9c\xc0\x02\x67\x32\x97\xbc\x82\xe5\x06\x04\x6c\x29\x32\x40\x0b\xbe\xc2\x4f\xda\x2c\xd1\x24\xee\xbe\x0b\x9a\x30\x01\x9d\x56\xeb\x0b\x2e\x31\xaf\x32\x86\x37\x17\xc6\x74\x14\xd6\x38\x1a\xc3\xfb\x68\x04\x00\x90\x13\x43\x5a\x37\xd5\x07\xfc\xd8\x2c\x7b\x03\xdb\xff\x6f\xaf\xdf\x5b\x64\x99\xd6\xe9\xaf\xef\xb7\x38\x75\xeb\x87\xe1\x00\x40\x03\x15\x94\xe9\x2b\xa5\x37\x00\xd7\x5d\x54\x9d\x06\xff\x57\x29\x15\x86\x0a\x34\x14\xa1\x10\x7c\x03\x0f\x25\x67\x0f\x15\x45\x9a\xa4\xdd\x15\xc7\xf0\x98\x91\x78\x05\x59\x97\xac\xa2\x11\xe6\x86\x30\x59\x41\x86\x8e\xa7\x9e\x41\x3e\x9d\x66\xa2\x4c\xdd\x58\x9e\xce\xb4\x31\x7a\x79\x7b\xdd\x48\x62\xea\xc7\xdd\x47\x4e\x07\x37\x10\x5b\xd6\x06\xe7\x14\xb7\xab\x3b\x86\xbb\x3b\x50\x32\x87\xf7\x06\x70\x13\xcd\x5f\x29\x28\xcd\x13\x10\x86\x9c\x30\x10\x14\x2d\x83\xf5\xc1\x90\xd5\xa5\x11\xe4\x09\x5d\x94\x0c\x92\x41\x2a\xd6\xb0\x59\xa8\x85\xe7\x23\xb4\xf8\x46\xd1\xed\x6f\x5b\x11\x4f\x2b\xec\x3f\x17\x05\xaf\x3c\x68\x34\x9e\x00\xeb\xee\x60\x1b\xcc\x75\x67\xdd\x4c\x2d\x83\x80\xae\xd2\x42\x2e\xd5\x2b\x25\xe0\xf5\x4c\x9e\x61\xdb\x91\x4e\x30\x61\x39\x7f\xf1\xd1\xce\x89\x4f\xa2\x49\x54\x2b\xb1\x89\xb5\x7e\x36\x6e\x95\xe0\xcc\x6b\x2a\x5c\x96\x5e\x28\x3b\x8d\x92\x29\x48\xfe\xd5\xee\x74\x6b\xe3\x23\x41\x15\x58\x6f\x73\xf7\x1a\x04\xfa\x5e\x68\xef\x11\xbb\x90\x6e\x5c\x42\xee\x21\x43\x5a\xaa\xda\x08\x8d\x2e\xe7\x99\x7f\xd8\x55\x0d\xc7\x00\x32\x29\x8a\x3d\xed\x2f\x95\x6b\xc2\xa9\xe5\xf2\x53\xdc\x84\x41\xa5\x9f\xc0\xb0\xda\x33\x9a\x39\x71\x2f\x02\x5a\xca\xd3\x69\x97\x65\xc1\x1d\x5c\x8c\x4c\x3d\xad\xc2\xbf\x63\x8e\x58\x45\x6d\x90\x6d\xab\xd8\xb9\xfd\x5c\x95\xc2\xbd\x2e\x7a\xba\xc5\x36\x84\x73\xdc\xa2\x89\x66\x9f\x5b\x0c\x94\x98\x33\x99\x03\x69\x5e\xca\x67\x7c\x01\x2e\xe4\x33\x7d\x32\x8d\x76\x72\xab\x51\xbe\x94\x33\x9f\xdf\xc5\xcc\xc4\x27\xf8\x81\x66\x72\x24\xcf\xfe\x8e\x72\x18\x70\x10\xdf\x6a\x4f\xe9\xc7\xb7\xca\x56\x3a\x76\x30\xbd\x6d\xe5\xd4\x3a\xf5\xf4\x98\x70\x07\x5f\x2b\xbc\xdb\x6d\x4e\xd8\x31\x1d\x67\x79\xed\x51\x9d\x60\x83\xdd\x6a\x5f\x32\x03\xec\xaa\x2b\xb0\x6a\xad\xe0\x4e\x6f\xfb\xf2\xa6\x75\x4a\xde\x97\xb2\xaf\x3e\xce\xd5\x91\xc9\x69\x6d\x1f\x6a\x7a\x51\x27\x78\xc0\xf0\x5c\x8a\xcb\x9a\x5e\x48\x94\x8f\x71\xbd\x1e\x59\x77\x59\xe0\x59\x6d\x89\x4e\xe7\x6d\x8f\x58\x27\x27\xa3\x36\x96\x7a\x21\x35\x04\x53\xab\x70\xbc\xee\x53\xde\x23\x13\xf7\xed\x8d\x86\xb6\x4a\x19\xed\x34\x3d\xfc\xa2\x0e\x3e\xe6\x8f\xbd\xf8\x9b\xe7\x03\x3a\xd3\x31\xa8\x4a\x65\x02\x1d\x5d\x3c\xb5\xda\xf7\xc3\xf9\x76\xe6\xf5\xff\x2a\xd6\x1f\xd1\xfc\xa8\xcc\x83\xc5\x5d\x7b\xa2\xb8\x49\xbb\x68\xc7\xe5\x6d\xfb\xeb\xfb\xb8\xae\x5b\xb7\x7f\x3a\x2a\xd5\xd7\x01\x4a\x7d\x90\x1d\x7c\x26\x06\x04\x43\x29\x19\xf2\x87\x6d\x7a\x57\xcc\xed\x9d\x59\xfb\x40\xa8\xde\x8f\x5d\x76\xab\xd3\x5c\xbd\xf6\x3c\x47\x61\x3f\x7d\x82\x02\x95\x14\xd1\xd5\xa3\x3f\xd5\x54\x9a\xa1\x0a\xbc\x9d\x7f\x90\xe2\xd5\xe6\xeb\x73\x5d\xfd\xa1\xef\x24\x4a\xa6\x40\x96\x71\x0c\x0f\x49\x25\x84\x1f\xd5\x17\x3a\x62\xe9\xa5\x17\x9c\x47\x6e\x4e\x1d\x0f\x55\x77\x1a\x0c\x8f\x44\x70\x8c\x77\xf0\xd3\x7b\x7c\x06\x64\xc7\xb6\x7b\x5c\x17\x61\x3d\x82\xff\x02\x00\x00\xff\xff\xf8\xa1\x09\x9d\xfb\x16\x00\x00"

func switchboardSetup_royalty_accountCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardSetup_royalty_accountCdc,
		"switchboard/setup_royalty_account.cdc",
	)
}

func switchboardSetup_royalty_accountCdc() (*asset, error) {
	bytes, err := switchboardSetup_royalty_accountCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/setup_royalty_account.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc6, 0x9c, 0xdc, 0x26, 0x5f, 0x47, 0x8a, 0xa, 0xed, 0xa8, 0x60, 0x29, 0x8a, 0xe6, 0x99, 0xae, 0xee, 0xe0, 0xc9, 0x30, 0x6e, 0xaa, 0x42, 0xfd, 0xa9, 0x26, 0x47, 0x26, 0x60, 0x66, 0x97, 0x1d}}
	return a, nil
}

var _switchboardSetup_royalty_account_by_pathsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x58\x4d\x6f\xe3\x36\x13\xbe\xfb\x57\xcc\x9b\xc3\xbe\x32\xe0\xda\xf7\x20\xc9\x36\x4d\x9b\x45\x2f\x45\xb0\xc9\xb6\x87\x45\x0e\x63\x6a\x64\x11\x91\x49\x81\x1c\xc5\x6b\x04\xf9\xef\x05\x49\xeb\xcb\xb6\x62\xc9\x71\x9b\xea\x62\x4b\x9c\x19\xce\xd7\xf3\x88\x1a\xb9\xcc\xb5\x61\xb8\x2d\xd4\x42\xce\x33\x7a\xd0\x4f\xa4\x20\x31\x7a\x09\x67\xad\x67\x67\xa3\x7d\x92\xf7\x2b\xc9\x22\x9d\x6b\x34\xf1\x3e\xa5\xc6\x72\xad\x9f\xe9\x55\x6b\x97\xf2\xbe\x96\x90\xc8\x2d\x89\xf2\xfe\x6c\x34\x1a\xcd\x66\xf0\x90\x4a\x0b\x6c\x50\x59\x14\x2c\xb5\x02\x69\x01\x81\x69\x99\x67\xc8\x04\x89\x36\xee\xb6\xb1\xce\x29\x32\x08\x5d\x64\x31\xcc\x09\x0a\x4b\x31\xcc\xd7\xe0\x4c\xa1\x5a\x6b\x45\x90\x14\x59\xb6\x06\x4b\x5c\xe4\x80\x0a\x50\x08\x5d\x28\xf6\x96\x0c\x09\x92\xcf\x52\x2d\x60\xae\x39\xf5\xde\x03\xaa\x18\xbe\xdd\xff\x7a\x03\xec\xbc\xb2\x80\x0c\x9c\x12\x58\x5c\x92\x33\x9a\x17\xf3\x4c\x0a\xc8\x91\x53\x88\x9c\x0d\xa9\x2c\xa3\x12\xe4\xa5\x8c\x5e\x63\xc6\x92\x2c\xcc\x82\xe0\xec\x0b\x29\x32\x52\xdc\x3e\x7c\xf5\x7b\x91\xf1\xaa\x63\x67\xea\x9b\x75\x3b\x3b\x35\x8c\xe3\x3f\x68\xf5\x27\x16\x19\xff\x65\x30\xcf\xc9\xd8\x5f\xd6\x77\x6e\x0b\xdb\xa8\xc1\x92\x38\xd5\x31\x60\x96\xe9\x95\x2d\xa3\x63\xed\x62\x76\xe6\x04\xe6\x38\x97\x99\xe4\x35\xac\x36\x46\xc0\x16\x22\x05\xb4\xe0\x33\x7c\xab\xcd\x0a\x4d\xec\x9e\x3b\xa7\x09\x63\xd0\x49\xd8\x5f\x70\x81\x59\x88\x18\x9e\x9d\x1b\xd3\x51\x33\xc7\x11\xc6\xb1\x21\x6b\xcf\xe1\x3a\xfc\x19\xc3\xcb\x68\x04\x00\x90\x11\x07\x05\xe7\xad\x3d\x87\xef\x77\x3e\x6c\x77\xf7\xd8\x16\x78\x58\xe7\xe4\x04\xdc\xef\xa3\x5b\xa9\x96\x1b\x31\x7e\xa5\xe4\x1c\xe0\x53\x57\x9f\x4d\x1b\xff\xc3\xfe\xb9\xa1\x1c\x0d\x45\x28\x04\x9f\xc3\x75\xc1\xe9\x75\xa8\x6f\xe5\xa1\xbb\x66\x33\xb8\x0b\x82\x3e\x5c\x57\x01\xeb\x0b\xcd\xce\x29\x40\x63\x70\x6d\x61\x25\x39\xf5\xeb\x7b\xfb\x20\x46\xc6\xca\xa0\xa5\x2c\x99\xd6\x71\xc3\x25\x7c\x7f\xec\x5a\x9c\xba\x5a\xa8\x38\x2a\x3b\x22\x29\x31\x51\x76\xc4\xf8\x90\x66\x85\x91\xa9\x6f\x91\x52\xef\xae\x98\xdf\xf9\x5e\xda\x55\xf7\xc9\xee\xf2\xca\x2f\x96\xb6\xdd\xcd\xc5\xcf\x15\x4e\xc3\x0e\x57\xd1\xb8\xd3\xea\x96\x62\xdb\x35\xaf\xd8\x4c\xfb\x4d\x4a\xe2\x09\x64\xd9\x66\x01\x7a\x98\x19\xc2\x78\x0d\x29\x3a\x6c\xfb\x6c\x7b\xed\x4a\x51\x26\x4e\x96\xa7\x73\x6d\x8c\x5e\x5d\x7c\xda\x71\xcf\x71\xc7\x39\xcc\x2c\x6b\x83\x0b\xaa\x53\xea\x97\xc7\x70\x79\x09\x4a\x66\xf0\x52\x19\xdc\x78\xf3\x7b\x02\x4a\xf3\x04\x84\x21\x47\x26\x08\x8a\x56\x8d\xfd\xc1\x90\xd5\x85\x11\xe4\x8b\x9f\x17\x0c\x92\x41\x2a\xd6\xb0\xd9\xa8\x65\xcf\x7b\x68\xf1\x99\xa2\x8b\x9f\x6a\xe2\x9b\x06\xdb\xbf\x2d\x73\x5e\x7b\xa3\xd1\x78\x02\xac\xbb\x9d\xad\x6c\xbe\x76\xe6\xcd\x94\xd4\xd1\x80\xb8\xb4\x90\x49\xf5\x44\x31\x78\x0e\x24\x70\x66\x6b\x49\xd7\xe2\xcd\x74\xfe\xcf\x7b\xbb\x20\xbe\xa9\x4c\x5c\x7c\x7a\x69\xe1\x6c\x5a\xf6\xd5\xeb\x55\x9f\x5e\x3d\xc1\x35\x15\x2e\xca\x68\xbc\x5b\x28\x99\x80\xe4\xff\xdb\xad\x6a\x6d\xb8\xb7\x91\x05\xd6\x75\xec\xbe\x45\x81\x7e\xe4\xda\xf3\xea\xb6\x49\x27\x17\x93\x5b\x64\x48\x0a\x55\xbe\x3c\x8c\x2e\x16\x01\xf5\x5d\xd9\x70\x1d\x40\x26\x41\xb1\xa7\xfc\x85\x72\x45\xe8\x9b\x2e\xaf\xe2\x14\x8e\x4a\xfd\x04\x8e\xcb\x3d\xa3\x59\x10\xf7\x6a\xc0\x81\xc8\xf5\xf4\x78\x00\xb9\xdb\xfc\x10\x90\xbb\xf5\xf8\x3e\x78\xe6\xd9\x6c\x18\x78\x6b\x17\xde\x03\xde\xca\x9b\x7d\xe0\x3d\xb2\xe3\x1d\xe6\xdf\x08\xf3\x54\xb0\xf7\x09\x38\x11\xec\x87\x44\x7a\xe8\xa5\x74\x32\x6c\xfb\x00\x3f\x10\xdb\x7d\x5f\xbe\xd0\x17\xe0\x6f\x1b\x3c\xaa\xdf\x4a\x88\xf7\xeb\xb7\x81\x28\x6f\x7e\x06\x94\x18\xeb\xc6\x7b\x8f\x93\xdb\xe1\x3e\x2b\x59\xa2\xd3\xd8\xd1\x7c\xb1\x2f\x98\x23\x08\xa3\xcb\xb1\xb0\x57\xe3\xc9\x60\x02\xf1\xb4\xd1\x27\xee\x53\x11\xc8\x10\xee\xe8\x88\xa4\x5f\xd9\x8f\xa5\x9d\xa8\xd3\x78\x03\x3a\x9b\x6f\x8e\xd3\xd1\x4e\xb3\x51\x3e\x86\x77\x06\x44\xdd\x45\x42\xef\x2a\x4b\xd4\xbf\x6f\x07\xf8\x3a\xe9\x6d\xb5\x22\xb5\x13\xa1\xa1\xa1\x1a\xdc\xf1\xb8\x4f\x78\x0f\x4c\xa4\xff\x28\xa4\x1a\x29\xa3\xad\xa2\x37\x3f\xcb\x1b\x13\x81\x43\xaf\xde\x6a\xfd\x88\xca\x74\x08\x85\x50\x26\xd0\x51\xc5\xbe\xd9\xbe\x3a\xbe\xdf\xde\x79\xfd\xbb\x88\xf5\x73\x9e\x5d\x64\xbe\x99\xdc\xd7\x30\x2a\x48\x69\xc7\xda\x61\x78\xdb\xe1\xf8\x3e\x8c\xeb\xd6\xe3\xff\x5c\x2b\x95\xd7\x1b\x2d\xf5\x41\x74\xf0\x85\x18\x10\x0c\x25\x64\xc8\x4f\xec\xf4\x36\x98\xdb\x43\x8f\xf6\x60\x0a\x2e\xff\x89\xa3\x4e\x75\x0d\x3a\xf3\x1c\x34\xfb\xf9\x33\xe4\xa8\xa4\x88\xce\x6e\xfc\x68\x54\x69\x86\xe0\x78\x3b\xfe\x46\x88\x67\x9b\xc9\xcd\xe6\x80\x48\x3f\x48\x14\x4c\xf5\x18\x6d\x36\x83\xeb\x38\xe0\xa0\x45\x94\xbb\x59\x84\xc2\x63\xaf\x73\xaa\x39\xea\xcc\xf1\xb4\x53\x27\xca\xc3\x80\x71\x6b\x44\x36\xf4\x74\x15\x86\x90\x5b\x23\xad\x09\x54\xf3\xcd\xcd\x9f\x3a\x15\xaf\x23\xf8\x3b\x00\x00\xff\xff\xb2\x42\x4b\xe4\x46\x17\x00\x00"

func switchboardSetup_royalty_account_by_pathsCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardSetup_royalty_account_by_pathsCdc,
		"switchboard/setup_royalty_account_by_paths.cdc",
	)
}

func switchboardSetup_royalty_account_by_pathsCdc() (*asset, error) {
	bytes, err := switchboardSetup_royalty_account_by_pathsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/setup_royalty_account_by_paths.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x25, 0x74, 0x5c, 0x4a, 0x90, 0xd4, 0x13, 0xe, 0x2a, 0x42, 0xf7, 0x5e, 0x3, 0xcf, 0x28, 0x75, 0xa1, 0xbc, 0xc9, 0x80, 0x6e, 0xd0, 0xbe, 0x94, 0xbb, 0x12, 0x8b, 0x8a, 0xea, 0xc, 0x31, 0x42}}
	return a, nil
}

var _switchboardTransfer_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x4d\x6f\xdb\x38\x10\x3d\x47\xbf\x62\xd6\x87\x44\x06\x1c\xe7\xb2\xd8\x83\x91\x8f\x0d\xd2\xa6\xd7\x20\x4d\xdb\xf3\x88\x1a\x8b\x6c\x65\x92\x18\x8e\xe2\x18\x41\xfe\x7b\x41\x52\x52\xa4\xa4\x40\xea\x83\x65\x0d\xe7\xe3\xcd\x7b\x8f\x36\x3b\xef\x58\xe0\xb6\xb3\x8d\xa9\x5a\x7a\x70\xbf\xc8\xc2\x96\xdd\x0e\x16\xb3\xd8\xa2\xe8\x33\x3f\x3f\xe1\xce\xcf\x13\xa7\xa1\x45\x51\x9c\x9d\xc1\x83\x36\x01\x84\xd1\x06\x54\x62\x9c\x05\x13\x00\x41\x68\xe7\x5b\x14\x82\xad\xe3\xf8\x3a\x39\x17\x8d\x12\x0b\x95\xeb\xda\x1a\x2a\x82\x2e\x50\x0d\xd5\x01\xd0\x1e\x9c\x25\x10\x07\x81\x6c\x0d\x12\x67\x84\xf8\x8a\xd6\x89\x26\x06\x54\xca\x75\x36\x15\x8b\x66\xd7\x35\x1a\x10\xc2\xde\x88\xd2\x95\x43\xae\x57\x80\x01\x5a\x67\x9b\xf8\x14\x4d\x07\xd0\xf8\x48\x10\x48\xa0\xf3\x31\x60\x38\xd6\x4e\x2a\x00\x6d\x9d\x93\xb0\xae\x63\x06\x78\x76\x9e\x18\x14\x7a\xac\x4c\x6b\xe4\x10\x01\x98\x38\x33\x2f\x9b\x32\x99\x42\x00\xb7\x4d\x05\x4c\x8a\xcc\xe3\x2b\xba\x55\x8a\xe2\x2e\xfe\x8e\xb5\x69\xf5\x2d\xa5\xc9\x71\x5a\x3c\xbd\xeb\xaa\xd6\xa8\x3b\x14\x9d\xf8\x89\xa1\x86\x2c\xb1\x51\x70\xfb\xf0\xda\x71\x6f\xda\x36\x12\x24\x9a\x62\xb5\x47\xc6\x1d\x09\x71\x28\x26\x7c\x96\xe2\x36\x70\x9d\x31\xad\xfa\xb9\x1b\xf8\x76\x6b\x9e\xfe\xfb\x77\x35\xf6\x8a\xb3\x36\x93\xb9\x4b\x78\x2e\x0a\x00\x80\x7e\xa9\x47\xec\x5a\x01\xa6\xe0\x3a\x56\x94\x34\x02\xed\xda\x3a\xf1\x38\x4a\x11\xa3\xc8\x04\x15\x19\xdb\x8c\x9b\x31\xd5\xa9\x55\x4b\x12\x95\x93\xef\xb1\xd7\x06\xfe\x9f\x99\x6a\x9d\xa2\x79\xa6\x67\xf2\xc8\x54\x06\xd3\x58\xe2\x0d\x5c\x77\xa2\xaf\x33\x7b\x23\xae\x1e\xdb\x17\x12\x40\x60\xda\x12\x93\x55\xc9\x1c\x11\x50\xae\x3c\x09\x10\xc4\x31\xd5\x19\xfe\x58\x17\x81\xa4\xc8\x3d\x6d\xe1\xa2\x4f\x5e\x57\x8e\xd9\xed\xcf\xb1\x13\x5d\xce\xa1\xfd\x30\xa2\x6b\xc6\x3d\x56\x2d\x2d\xe1\x78\xea\xf1\x0c\xfb\xb2\x8c\xee\xdf\xc0\xfb\x93\xaf\xe2\x18\x1b\x4a\x94\x16\x47\x47\x47\x57\x57\xe0\xd1\x1a\x55\x2e\x6e\x92\xbd\xad\x13\xc8\x83\xdf\x2f\xe1\xf6\x79\x87\xd4\xe8\x9f\xc5\x72\xb6\xf8\x80\x69\xe0\x3e\x5d\xbf\x8f\x57\x0f\xd4\x6e\xd7\xa3\x08\x70\x7e\x3a\x12\xb1\xde\xf7\x1d\xcb\xc1\x23\xf9\xb9\x4c\xb5\xe9\xeb\x25\x23\xa0\x27\x52\x9d\xd0\x1f\x94\xe8\xfd\x6e\xbc\x21\x2b\x27\x01\x7c\xf2\xd3\xe0\x7c\x70\xd5\x4f\x52\x73\x19\xc6\x6c\xb8\x80\x86\xa4\x57\xb9\x14\xb7\xfc\x1b\x99\xa7\xb3\xee\x7b\x27\xbf\x6d\x9f\x82\x59\xe8\x31\x7d\xcc\x89\x9f\x75\x43\x72\x33\x5e\xe7\x72\x7a\x23\x96\xf3\xc4\xde\x21\xc7\xcf\x73\x7b\x0c\x93\x5f\x2e\xcb\x8f\x35\xee\xaf\xee\x6c\x95\xc9\x1f\xce\x5b\x99\x3f\x91\x77\xc1\x64\x66\x07\x81\xec\xa0\xb9\xb1\xef\x58\xe0\xb7\x2c\x4c\x18\x58\xd7\xb9\x59\x6f\xd6\xf3\xd3\xb9\x19\xe6\x42\xbf\x14\xbf\x03\x00\x00\xff\xff\x3f\x7d\x09\xec\x0f\x06\x00\x00"

func switchboardTransfer_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardTransfer_tokensCdc,
		"switchboard/transfer_tokens.cdc",
	)
}

func switchboardTransfer_tokensCdc() (*asset, error) {
	bytes, err := switchboardTransfer_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/transfer_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x16, 0xa7, 0xa7, 0x4d, 0x8d, 0x23, 0x60, 0xab, 0x4, 0x57, 0x96, 0x4, 0x1a, 0x97, 0x6, 0xb7, 0x12, 0xaa, 0x97, 0x5e, 0xbc, 0x46, 0x86, 0x7e, 0xef, 0xc0, 0x58, 0x4e, 0xa3, 0xc5, 0xc4, 0x6a}}
	return a, nil
}

var _transfer_many_accountsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x54\xcb\x6e\xdb\x40\x0c\x3c\x47\x5f\xc1\xf8\x90\xc8\x87\xc8\x97\xa2\x07\x23\x0f\xa4\x8f\xf4\x54\x20\x48\xd3\xf4\x50\x14\x08\x25\x51\xd6\x36\xf2\xae\xc0\xa5\xe2\x14\x81\xff\xbd\xd8\x97\x21\x3f\x90\x02\xdd\x8b\x01\x2e\x77\x38\x33\x1c\x59\x2d\x7b\xc3\x02\x37\x83\x5e\xa8\xb2\xa3\x7b\xf3\x44\x1a\x1a\x36\x4b\x98\x6c\xd5\x26\x59\xec\xfc\xfc\x82\xcb\x7e\xbb\x71\x5c\x9a\x64\xd9\x6c\x36\x83\x7b\x46\x6d\x1b\x62\x0b\xe2\xaa\xee\x07\x10\x3a\x65\x05\x4c\x03\x58\xd7\x4c\xd6\x92\x05\xdb\x53\xa5\x1a\x45\x35\x28\x0d\xd2\x12\x3c\xc6\xbb\xeb\xa5\x19\xb4\x7c\xc5\xfe\x11\x7a\x64\x5c\x92\x10\x67\x99\x38\x58\xac\x44\x19\x9d\xef\x36\xce\xe1\xf5\x3a\x94\xe6\xf0\xfd\x46\xbd\xbc\x7f\xb7\x9e\xc2\x6b\x96\x01\x00\x38\x46\x2d\xc1\x03\x0e\x9d\x00\x93\x35\x03\x57\x04\xd2\xa2\x40\x6b\xba\xda\xfa\xd1\x89\xa9\xab\x22\x13\x94\xa4\xf4\x02\x24\x2a\x61\xaa\x3d\x54\x47\x02\xcf\x0e\xe7\x8e\x9a\x39\xe0\x20\x6d\xbe\x65\x54\xf1\x43\x49\x5b\x33\xae\xb0\xec\x68\x0a\x27\x63\x73\x0a\x4f\x20\x50\xea\x99\x7a\x64\xca\xad\x5a\x68\xe2\x88\xf4\xc1\x30\x9b\xd5\x03\x76\x83\x7b\x7a\x5d\x55\x4e\x9b\x53\x01\xf1\xcc\x66\xf0\x85\x04\x10\x98\x1a\x62\xd2\x4e\x85\xf1\xec\x03\xce\xa9\x05\x2b\x86\xa9\x0e\x1c\x37\xef\x2c\x75\x4d\x91\x68\xc3\x45\xec\x2e\x5c\x2f\x2e\xa8\x28\xfd\xdc\xf3\xff\x51\x73\x99\xbb\x10\xcc\x61\xff\xe6\x5b\x00\xbf\x45\x69\xa7\xd9\xd1\xd1\xd1\xd5\x15\xf4\xa8\x55\x95\x4f\x3e\x9a\xa1\xab\x41\x1b\x81\x30\x78\x5f\x8d\x59\x05\x31\x1e\xe8\x78\x32\xf5\x42\xd6\xc1\x39\x7a\xa1\x6a\x10\x4a\xbb\x75\xa7\x31\x9c\x42\xe5\x82\xb4\x1b\x8d\xe2\x89\xfe\xd8\x71\x7f\xb4\x32\x89\x4b\xab\xf7\x71\xfe\xb7\x99\x29\x06\x96\xb4\x84\x48\x9d\x9f\x6d\x3b\x5c\xac\x22\x72\x8e\x9e\xc3\x7c\x8f\xd2\xcf\x58\xf8\x75\x3c\xdd\xa3\xe5\x36\xec\x58\x30\x55\xaa\x57\xa4\xe5\xd4\x42\x3f\x94\x9d\xaa\x00\x43\x24\xc0\x94\xbf\xa9\xda\x67\xb4\x79\x01\x17\xb0\x20\x89\x01\x4a\x9f\xca\xe1\x49\x07\xb2\x34\x1e\x7c\x47\x15\xa9\x67\xe2\x43\xb3\xfc\x45\x08\xd4\xe6\x49\x51\x61\x8f\xa5\xea\x94\x28\xb2\x29\x58\x27\xaf\xdb\xa9\x4a\xa0\xeb\xcb\x7c\x2b\x37\xa9\x7e\xeb\xd5\x86\xe4\xc0\xce\x79\x33\x46\xe1\xf9\xdb\x8a\xfc\xca\x26\xfb\x66\x7c\xa2\xde\x58\x15\xac\x4f\xfb\xd3\x29\x1a\xf1\xef\x69\x8c\xc3\x87\x9c\x19\xb9\x52\xd4\x01\x30\x7e\x20\xe7\x67\x9b\xbc\x8c\x66\xaf\x63\xb2\xd7\xd9\xdf\x00\x00\x00\xff\xff\x4d\x51\x2e\xb4\x8a\x05\x00\x00"

func transfer_many_accountsCdcBytes() ([]byte, error) {
	return bindataRead(
		_transfer_many_accountsCdc,
		"transfer_many_accounts.cdc",
	)
}

func transfer_many_accountsCdc() (*asset, error) {
	bytes, err := transfer_many_accountsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transfer_many_accounts.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd0, 0x1c, 0xce, 0xf7, 0x5e, 0xbf, 0x36, 0xce, 0xe6, 0x61, 0x21, 0x92, 0x14, 0xa2, 0xfe, 0xe9, 0x99, 0xf6, 0x73, 0xa, 0x1c, 0x11, 0xce, 0x36, 0x79, 0x26, 0xce, 0xed, 0x16, 0x11, 0x38, 0x18}}
	return a, nil
}

var _transfer_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\x4b\x6f\xdb\x30\x0c\xbe\xfb\x57\x70\x39\xb4\x0e\xb0\x3a\x97\x61\x87\xa0\x8f\x75\x8f\xee\x5a\x74\x5d\x77\xa6\x65\x26\xd6\xe6\x48\x02\x45\x37\x2d\x8a\xfe\xf7\x41\x92\xe5\xd9\xe9\xb0\x47\x2e\x81\x29\xea\xe3\xf7\xa0\x56\x2b\xb8\x6d\xb5\x07\x61\x34\x1e\x95\x68\x6b\x40\x7b\x40\x10\xda\xb9\x0e\x85\x60\x63\x39\x7c\x4e\xce\xa5\x45\x29\x56\x2b\x50\xb6\xef\x1a\xa8\x09\x7a\x4f\x0d\xd4\x8f\x80\xe6\xd1\x1a\x02\xb1\xe0\xc9\x34\x20\xf6\x07\x19\x1f\x3e\xd1\x58\x69\x89\x01\x95\xb2\xbd\x89\x97\x03\x08\xb4\xe8\xa1\x26\x32\xe0\x49\xa0\x77\xa1\x95\x49\x91\xbe\xa7\xe1\x72\x55\xac\x56\x45\xe4\x48\xb0\xd7\xd2\x36\x8c\x7b\xc0\x5d\x00\x01\x0c\x23\x5a\xca\xa0\xb0\x61\xbb\x83\x2d\xc9\xe5\xaf\x21\xfb\xcc\x30\xf4\x39\x64\xdc\x91\x10\x47\x4a\xa1\x32\x11\x55\x14\x7a\xe7\x2c\x0b\x5c\xf5\x66\xab\xeb\x8e\x6e\xc3\xfc\x84\xb9\x98\xd5\x16\xb9\xf3\xd3\x03\xee\xdc\xbc\x71\x5a\x5a\x14\xc5\x04\xbf\x4c\xa4\xd7\xf0\xf5\x4a\x3f\xbc\x7d\xf3\x1a\xc4\xae\xe1\xb2\x69\x98\xbc\x5f\xc2\x53\x51\x00\x00\x0c\x42\xef\xb0\xef\x04\x98\xbc\xed\x59\xd1\xe0\x94\xed\x1a\x9f\x48\x0f\xae\x86\x2a\x32\x41\x4d\xda\x6c\x93\x94\x0d\x31\x53\x13\xa1\x3a\x92\x10\x82\x44\xac\x35\xbc\x7b\x9a\x69\xa8\x62\xf9\x39\x4d\x75\x4c\x0e\x99\x4a\xaf\xb7\x86\x78\x0d\xd8\x4b\x5b\xbe\xb7\xcc\x76\x7f\x87\x5d\x4f\x4b\x38\x1a\x2c\x1d\x89\x0e\x64\x3f\x93\x00\x02\xd3\x86\x98\x8c\xa2\x6c\x6b\x02\x3a\xf6\xe0\xc5\x32\x35\x70\x1f\x86\x8d\xf7\x02\xb3\x58\xb9\xa1\x0d\x9c\x0d\xcd\x55\x68\xc5\x2d\x55\x75\x9c\x7b\x1a\x39\xcc\x29\x7f\x1b\xe2\xc7\xba\x0b\x94\xa6\x56\x27\x39\xe7\x65\x08\x61\x0d\x2f\x4f\xbe\x24\xf0\x6b\x94\x76\x39\xf2\x08\xbf\x8b\x0b\x70\x68\xb4\x2a\x17\x1f\xe2\xa6\x18\x2b\x90\x18\xbc\x54\x65\xf7\x49\x54\x44\x7c\xb5\x58\xce\x9c\xc8\xe4\x72\x3a\x71\x1d\xfe\xee\x85\xa7\x6e\x53\x8d\x31\xc1\xe9\xc9\xe8\x4c\x95\xb7\x7d\x5c\x9c\xf4\x9f\xf8\x0f\xc9\xd1\x03\xa9\x5e\xe8\x37\xa9\x84\xd1\x4c\x4a\x3b\x4d\x46\x8e\x3d\xb8\xbe\xee\xb4\x1a\x9f\x8a\xad\xbf\x93\x9a\x47\x32\x76\xc3\xd9\xe4\x11\x95\x62\x97\xff\x12\xf9\x74\xd6\x4d\x7a\xc1\x7c\x08\x1f\x8b\x29\xf4\xb1\xbd\x52\xe8\xb0\xd6\x9d\x16\x4d\x3e\x87\x7f\x74\xb0\xac\x19\xf0\xf9\xbc\x9c\x65\x9b\xeb\xd7\x51\xdc\x7f\xa6\x9b\xae\xfe\x59\x49\x4c\xe5\x20\xe9\x8f\xe4\xac\xd7\xc9\xe1\x9c\x91\xc9\xb1\x6b\xf3\x02\x83\x0f\xdd\x98\x38\x51\x35\x09\x6c\x58\xdc\xd3\x93\xf9\x3e\xe4\xac\x9f\x8b\x9f\x01\x00\x00\xff\xff\x10\xe8\xaf\x10\xa6\x05\x00\x00"

func transfer_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_transfer_tokensCdc,
		"transfer_tokens.cdc",
	)
}

func transfer_tokensCdc() (*asset, error) {
	bytes, err := transfer_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transfer_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd0, 0xbd, 0xbb, 0xb0, 0x2c, 0x7a, 0x2c, 0xa8, 0xe5, 0xee, 0x3, 0xa2, 0xb3, 0x6d, 0x1b, 0xbc, 0x94, 0x89, 0xf5, 0xb3, 0x96, 0x9, 0xc4, 0x1c, 0x48, 0xa4, 0x3, 0x37, 0x50, 0x47, 0xaf, 0x7a}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"burn_tokens.cdc":                                           burn_tokensCdc,
	"create_forwarder.cdc":                                      create_forwarderCdc,
	"generic_transfer.cdc":                                      generic_transferCdc,
	"metadata/setup_account_from_vault_reference.cdc":           metadataSetup_account_from_vault_referenceCdc,
	"mint_tokens.cdc":                                           mint_tokensCdc,
	"privateForwarder/create_account_private_forwarder.cdc":     privateforwarderCreate_account_private_forwarderCdc,
	"privateForwarder/create_private_forwarder.cdc":             privateforwarderCreate_private_forwarderCdc,
	"privateForwarder/deploy_forwarder_contract.cdc":            privateforwarderDeploy_forwarder_contractCdc,
	"privateForwarder/setup_and_create_forwarder.cdc":           privateforwarderSetup_and_create_forwarderCdc,
	"privateForwarder/transfer_private_many_accounts.cdc":       privateforwarderTransfer_private_many_accountsCdc,
	"safe_generic_transfer.cdc":                                 safe_generic_transferCdc,
	"scripts/get_balance.cdc":                                   scriptsGet_balanceCdc,
	"scripts/get_supply.cdc":                                    scriptsGet_supplyCdc,
	"scripts/get_supported_vault_types.cdc":                     scriptsGet_supported_vault_typesCdc,
	"scripts/metadata/get_token_metadata.cdc":                   scriptsMetadataGet_token_metadataCdc,
	"scripts/metadata/get_vault_data.cdc":                       scriptsMetadataGet_vault_dataCdc,
	"scripts/metadata/get_vault_display.cdc":                    scriptsMetadataGet_vault_displayCdc,
	"scripts/metadata/get_vault_supply_view.cdc":                scriptsMetadataGet_vault_supply_viewCdc,
	"scripts/switchboard/check_receiver_by_type.cdc":            scriptsSwitchboardCheck_receiver_by_typeCdc,
	"scripts/switchboard/get_vault_types.cdc":                   scriptsSwitchboardGet_vault_typesCdc,
	"scripts/switchboard/get_vault_types_and_address.cdc":       scriptsSwitchboardGet_vault_types_and_addressCdc,
	"scripts/test/example_token_vault_display_strict_equal.cdc": scriptsTestExample_token_vault_display_strict_equalCdc,
	"scripts/tokenForwarder/is_recipient_valid.cdc":             scriptsTokenforwarderIs_recipient_validCdc,
	"setup_account.cdc":                                         setup_accountCdc,
	"switchboard/add_vault_capability.cdc":                      switchboardAdd_vault_capabilityCdc,
	"switchboard/add_vault_wrapper_capability.cdc":              switchboardAdd_vault_wrapper_capabilityCdc,
	"switchboard/batch_add_vault_capabilities.cdc":              switchboardBatch_add_vault_capabilitiesCdc,
	"switchboard/batch_add_vault_wrapper_capabilities.cdc":      switchboardBatch_add_vault_wrapper_capabilitiesCdc,
	"switchboard/remove_vault_capability.cdc":                   switchboardRemove_vault_capabilityCdc,
	"switchboard/safe_deposit_to_lnf.cdc":                       switchboardSafe_deposit_to_lnfCdc,
	"switchboard/safe_transfer_tokens.cdc":                      switchboardSafe_transfer_tokensCdc,
	"switchboard/safe_transfer_tokens_v2.cdc":                   switchboardSafe_transfer_tokens_v2Cdc,
	"switchboard/setup_account.cdc":                             switchboardSetup_accountCdc,
	"switchboard/setup_royalty_account.cdc":                     switchboardSetup_royalty_accountCdc,
	"switchboard/setup_royalty_account_by_paths.cdc":            switchboardSetup_royalty_account_by_pathsCdc,
	"switchboard/transfer_tokens.cdc":                           switchboardTransfer_tokensCdc,
	"transfer_many_accounts.cdc":                                transfer_many_accountsCdc,
	"transfer_tokens.cdc":                                       transfer_tokensCdc,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"burn_tokens.cdc": {burn_tokensCdc, map[string]*bintree{}},
	"create_forwarder.cdc": {create_forwarderCdc, map[string]*bintree{}},
	"generic_transfer.cdc": {generic_transferCdc, map[string]*bintree{}},
	"metadata": {nil, map[string]*bintree{
		"setup_account_from_vault_reference.cdc": {metadataSetup_account_from_vault_referenceCdc, map[string]*bintree{}},
	}},
	"mint_tokens.cdc": {mint_tokensCdc, map[string]*bintree{}},
	"privateForwarder": {nil, map[string]*bintree{
		"create_account_private_forwarder.cdc": {privateforwarderCreate_account_private_forwarderCdc, map[string]*bintree{}},
		"create_private_forwarder.cdc": {privateforwarderCreate_private_forwarderCdc, map[string]*bintree{}},
		"deploy_forwarder_contract.cdc": {privateforwarderDeploy_forwarder_contractCdc, map[string]*bintree{}},
		"setup_and_create_forwarder.cdc": {privateforwarderSetup_and_create_forwarderCdc, map[string]*bintree{}},
		"transfer_private_many_accounts.cdc": {privateforwarderTransfer_private_many_accountsCdc, map[string]*bintree{}},
	}},
	"safe_generic_transfer.cdc": {safe_generic_transferCdc, map[string]*bintree{}},
	"scripts": {nil, map[string]*bintree{
		"get_balance.cdc": {scriptsGet_balanceCdc, map[string]*bintree{}},
		"get_supply.cdc": {scriptsGet_supplyCdc, map[string]*bintree{}},
		"get_supported_vault_types.cdc": {scriptsGet_supported_vault_typesCdc, map[string]*bintree{}},
		"metadata": {nil, map[string]*bintree{
			"get_token_metadata.cdc": {scriptsMetadataGet_token_metadataCdc, map[string]*bintree{}},
			"get_vault_data.cdc": {scriptsMetadataGet_vault_dataCdc, map[string]*bintree{}},
			"get_vault_display.cdc": {scriptsMetadataGet_vault_displayCdc, map[string]*bintree{}},
			"get_vault_supply_view.cdc": {scriptsMetadataGet_vault_supply_viewCdc, map[string]*bintree{}},
		}},
		"switchboard": {nil, map[string]*bintree{
			"check_receiver_by_type.cdc": {scriptsSwitchboardCheck_receiver_by_typeCdc, map[string]*bintree{}},
			"get_vault_types.cdc": {scriptsSwitchboardGet_vault_typesCdc, map[string]*bintree{}},
			"get_vault_types_and_address.cdc": {scriptsSwitchboardGet_vault_types_and_addressCdc, map[string]*bintree{}},
		}},
		"test": {nil, map[string]*bintree{
			"example_token_vault_display_strict_equal.cdc": {scriptsTestExample_token_vault_display_strict_equalCdc, map[string]*bintree{}},
		}},
		"tokenForwarder": {nil, map[string]*bintree{
			"is_recipient_valid.cdc": {scriptsTokenforwarderIs_recipient_validCdc, map[string]*bintree{}},
		}},
	}},
	"setup_account.cdc": {setup_accountCdc, map[string]*bintree{}},
	"switchboard": {nil, map[string]*bintree{
		"add_vault_capability.cdc": {switchboardAdd_vault_capabilityCdc, map[string]*bintree{}},
		"add_vault_wrapper_capability.cdc": {switchboardAdd_vault_wrapper_capabilityCdc, map[string]*bintree{}},
		"batch_add_vault_capabilities.cdc": {switchboardBatch_add_vault_capabilitiesCdc, map[string]*bintree{}},
		"batch_add_vault_wrapper_capabilities.cdc": {switchboardBatch_add_vault_wrapper_capabilitiesCdc, map[string]*bintree{}},
		"remove_vault_capability.cdc": {switchboardRemove_vault_capabilityCdc, map[string]*bintree{}},
		"safe_deposit_to_lnf.cdc": {switchboardSafe_deposit_to_lnfCdc, map[string]*bintree{}},
		"safe_transfer_tokens.cdc": {switchboardSafe_transfer_tokensCdc, map[string]*bintree{}},
		"safe_transfer_tokens_v2.cdc": {switchboardSafe_transfer_tokens_v2Cdc, map[string]*bintree{}},
		"setup_account.cdc": {switchboardSetup_accountCdc, map[string]*bintree{}},
		"setup_royalty_account.cdc": {switchboardSetup_royalty_accountCdc, map[string]*bintree{}},
		"setup_royalty_account_by_paths.cdc": {switchboardSetup_royalty_account_by_pathsCdc, map[string]*bintree{}},
		"transfer_tokens.cdc": {switchboardTransfer_tokensCdc, map[string]*bintree{}},
	}},
	"transfer_many_accounts.cdc": {transfer_many_accountsCdc, map[string]*bintree{}},
	"transfer_tokens.cdc": {transfer_tokensCdc, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
