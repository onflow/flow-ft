// Code generated by go-bindata. DO NOT EDIT.
// sources:
// ../../../transactions/burn_tokens.cdc (1.446kB)
// ../../../transactions/create_forwarder.cdc (2.176kB)
// ../../../transactions/generic_transfer.cdc (1.235kB)
// ../../../transactions/mint_tokens.cdc (1.741kB)
// ../../../transactions/privateForwarder/create_account_private_forwarder.cdc (1.488kB)
// ../../../transactions/privateForwarder/create_private_forwarder.cdc (1.021kB)
// ../../../transactions/privateForwarder/deploy_forwarder_contract.cdc (403B)
// ../../../transactions/privateForwarder/setup_and_create_forwarder.cdc (1.88kB)
// ../../../transactions/privateForwarder/transfer_private_many_accounts.cdc (1.204kB)
// ../../../transactions/scripts/get_balance.cdc (505B)
// ../../../transactions/scripts/get_supply.cdc (249B)
// ../../../transactions/scripts/get_token_metadata.cdc (613B)
// ../../../transactions/scripts/get_vault_data.cdc (673B)
// ../../../transactions/scripts/get_vault_display.cdc (667B)
// ../../../transactions/scripts/switchboard/get_vault_types.cdc (736B)
// ../../../transactions/setup_account.cdc (1.399kB)
// ../../../transactions/setup_account_from_vault_reference.cdc (1.972kB)
// ../../../transactions/switchboard/add_vault_capability.cdc (1.477kB)
// ../../../transactions/switchboard/batch_add_vault_capabilities.cdc (1.384kB)
// ../../../transactions/switchboard/remove_vault_capability.cdc (1.25kB)
// ../../../transactions/switchboard/safe_transfer_tokens.cdc (2.153kB)
// ../../../transactions/switchboard/setup_account.cdc (1.737kB)
// ../../../transactions/switchboard/transfer_tokens.cdc (1.562kB)
// ../../../transactions/transfer_many_accounts.cdc (1.384kB)
// ../../../transactions/transfer_tokens.cdc (1.424kB)

package assets

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	clErr := gz.Close()
	if clErr != nil {
		return nil, clErr
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _burn_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x54\xc1\x6e\xd4\x40\x0c\xbd\xe7\x2b\x4c\x0e\x68\x7b\x68\x02\x12\xe2\xb0\xea\x52\xda\x8a\x1e\x11\xa2\x0b\x9c\x27\x13\x67\x33\x90\xcc\x44\x1e\x87\xdd\x55\xd5\x7f\x47\xe3\x49\xb2\x09\xed\x36\x87\x46\x5d\xdb\xcf\xef\x3d\xdb\xc9\x73\xd8\xd6\xc6\x03\x93\xb2\x5e\x69\x36\xce\x82\xf1\xa0\x80\xb1\xed\x1a\xc5\x08\x95\xa3\xf0\xef\x2c\xce\xb5\xe2\x24\xcf\x41\xbb\xbe\x29\xa1\x40\xe8\x3d\x96\x50\x1c\x81\x6b\x04\x55\xb6\xc6\x82\xd2\xda\xf5\x96\x81\x1d\x14\x3d\x59\x60\xf7\x07\xad\x0f\x45\x15\xb9\x36\x24\x1a\x02\xcf\x8e\xb0\x84\x9f\xaa\x6f\x02\x5e\x22\x5c\x50\x0a\x8c\xdd\x81\x6a\x05\x62\x3f\x76\x51\xd0\x29\x52\x2d\x32\x52\xc0\x0d\xcd\x66\xac\x92\xc4\xb4\x9d\x23\x86\xfb\xde\xee\x4c\xd1\xe0\x36\xb4\x8c\xed\xd2\x2c\xcb\xb5\xb3\x4c\x4a\xb3\xcf\x17\x09\x99\x2e\x75\x3a\x96\x7e\x39\xa8\xb6\x7b\xa5\x72\x1e\x8f\x85\xc9\x8c\xc1\x2a\x12\x5e\xc3\x8f\x7b\x73\xf8\xf8\xe1\x02\x1e\x93\x04\x00\x20\xcf\xf3\xa8\x11\x08\xbd\xeb\x49\xa3\x38\x08\xb5\x6b\x4a\x1f\x65\x88\x3b\xf1\x57\x45\x08\x05\x06\xfd\xc1\x07\x2c\x05\xa2\x41\x86\xbf\x01\x62\x0d\x9f\x97\xf4\xa3\x79\x53\x9f\xef\x58\x21\xa1\x0d\x2d\xa2\x43\x0b\x49\x37\x32\x1b\x57\xfc\x46\xcd\x13\xae\x0c\x6c\x0d\x6f\x17\xe2\x24\xd3\x78\x26\xc5\x8e\x4e\xf0\x5b\x21\xcb\xaa\x01\xdf\x77\x5d\x73\x04\x57\x8d\xe4\x0b\xac\x1c\xa1\xf4\x0c\xc4\x27\xf8\x98\x78\x2b\xd1\xd1\x9a\x08\xd8\x11\x76\x8a\x70\xe5\xcd\xce\x22\xad\xe1\xa6\xe7\xfa\x26\xee\xcd\xe4\x5d\x78\x3c\x36\x55\x36\x87\x81\xcd\x42\x56\x26\x8c\x1e\x24\xe1\x54\x95\xe7\xf0\xcb\x70\x5d\x92\xda\xc3\xfb\x77\x23\xcb\x71\xfb\x86\x35\x15\x4f\xc1\x58\x59\x45\xb5\xc3\x65\xcf\x18\xbd\xba\x84\xc8\x30\x2b\x1c\x91\xdb\x5f\x2d\x9d\x92\x01\x7c\x5a\x05\xe0\x35\x3c\x8f\x3c\x44\xe0\x6f\x8a\xeb\x8b\x37\x13\x7c\x78\xb2\xfd\x40\x6f\xda\x9b\xf8\xbe\x58\x68\xb8\x23\x0c\x47\xa8\x80\xfe\x9f\xec\x70\x68\xf2\x77\x5a\xac\x73\x52\x62\xda\xe6\x55\x25\x8b\x99\xbf\xa8\x48\x32\xe6\x8a\x16\x82\xae\xaf\xa1\x53\xd6\xe8\x55\x7a\x27\x27\x6b\x1d\x43\x6c\x74\x9e\xfe\x48\x3c\x8d\x50\x4f\x51\x3b\x1e\x50\xf7\x8c\xf0\x38\xe1\x87\x4d\x92\x7b\x20\x99\xc7\x24\x29\xd3\xe2\xcf\x57\xdc\xdf\x4a\x74\x35\x73\x2f\xe6\x67\xe1\x25\xf4\xfd\x20\xe9\xea\xf2\x34\xdd\x59\x7a\x89\x9e\xc9\x1d\x87\xb2\x39\x9d\xce\x79\x9e\x71\x39\xb7\x7b\xb0\xd9\xbc\xb0\xab\x97\x30\x8e\x37\x7d\x76\x3d\x6d\xef\x39\x7c\xd9\x4a\x0c\x32\xe6\x1f\x51\x29\x49\x07\x12\x4f\xc9\xbf\x00\x00\x00\xff\xff\x80\x74\x15\xd4\xa6\x05\x00\x00"

func burn_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_burn_tokensCdc,
		"burn_tokens.cdc",
	)
}

func burn_tokensCdc() (*asset, error) {
	bytes, err := burn_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "burn_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x38, 0x9, 0xd3, 0x1a, 0x53, 0x50, 0x2a, 0x8b, 0x53, 0xe7, 0xc6, 0x88, 0xdd, 0xbd, 0x68, 0xe0, 0xd9, 0x2f, 0x63, 0x1a, 0xaf, 0x2b, 0x41, 0x10, 0x9f, 0xf4, 0x2f, 0xe6, 0xff, 0xc1, 0x69, 0x2}}
	return a, nil
}

var _create_forwarderCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x54\x5d\x6b\x2b\x37\x10\x7d\xd7\xaf\x18\xf2\xd0\x3a\xc1\x59\xd3\xaf\x17\x93\x16\x42\xda\x94\x42\x29\x97\x36\xed\x6b\xef\x58\x1a\x5b\x6a\x76\xa5\x45\x9a\xf5\x5e\x13\xf2\xdf\x8b\xa4\x5d\x59\x1b\x42\xec\x27\xaf\x34\x1f\xe7\xcc\x39\x9a\xcd\xcd\x8d\x10\x4f\xda\x04\x60\x8f\x36\xa0\x64\xe3\x2c\x98\x00\x08\x4c\x5d\xdf\x22\x13\xec\x9d\x8f\x9f\xd5\x3d\x6b\x64\x90\x6e\x68\x15\xec\x08\x86\x40\x4a\xb0\x83\x40\x0c\x43\x0f\x68\x01\xa5\x74\x83\x65\x60\x17\x93\x47\xf4\x0a\x14\xf5\x2e\x18\x26\x05\xec\x9e\xc9\x86\x78\x87\xd6\xb1\x26\x0f\x9e\x24\x99\x23\xf9\x46\x88\xdf\xf6\x80\xf6\xe4\x2c\x41\x20\xab\x42\x1d\x1c\xfb\xf8\xaf\x03\x3c\xe6\x8a\xe4\xe1\xcf\x29\x6f\x2d\x58\x53\xf9\x82\xd1\xb4\x2d\xfc\x37\x04\x2e\xcd\x59\xbb\x40\x55\xad\x18\xfe\x0f\x0e\x2d\x67\x26\x1a\x03\xec\x88\xac\x88\x0c\x30\xa4\x6b\x4f\xd2\xf4\x86\x2c\x03\x5a\x05\xd4\x99\xf8\x07\xe8\x18\x4f\x52\x92\xb1\xca\x48\x64\x0a\x62\xd4\x46\xea\x84\x6e\x6e\x18\x59\xea\xb9\x61\x33\x0d\x78\xc4\xd3\x1a\x4c\xe4\x07\x6e\xbf\xbf\x95\x1a\x8d\x85\x40\xfe\x68\x24\xc1\x88\x96\x13\xb4\xce\x59\xc3\xce\xc3\xa8\x5d\x94\x61\x2a\x68\xec\x41\x9c\xe1\x1b\x5e\x83\x61\x90\x68\x61\x44\x96\x3a\xc3\x4a\x57\x81\x08\x46\x4d\x9e\x2a\x00\x20\xb1\x23\xd8\x7b\xd7\x35\x42\xfc\xc5\xd4\x4f\x91\x59\xad\x2c\x55\x80\xd1\xb0\xce\x09\x85\x85\xdf\x0a\xf1\x4d\x03\x4f\x9a\xe0\x71\xb0\x07\xb3\x6b\x09\x9e\x52\x84\x74\x96\x3d\xca\x38\x05\x26\xbf\x47\x49\x10\x74\xf2\x03\xb6\x9e\x50\x9d\xa2\x2f\x14\xf5\xad\x3b\x91\x82\xe0\x3a\x4a\xa0\xc4\xb7\xb9\x1a\xf6\x7d\x6b\x24\xc6\x7a\xbc\xac\x37\x55\xa9\xb2\x1b\xf1\x5d\x4e\xaa\x14\x99\xec\x35\x05\x6b\x3c\x12\xe0\x24\x68\x34\x2b\x27\x3f\xe7\xc2\x9e\x90\x49\x09\x00\x48\x42\x06\x76\x9e\x14\x18\x0b\x86\x43\xfa\xc2\x03\x65\xee\x08\xfd\xb0\x6b\x4d\xd0\xa4\x8a\x97\xc4\xf7\x0d\xfc\x9c\x80\xa4\x79\x7e\x4e\xec\x1f\x8b\x26\x8d\x54\xf2\xf3\x19\x7c\x72\xa9\x32\xfb\x3d\xf9\x0a\xa6\xf8\xa1\x89\x9e\x05\x04\x4b\x23\xdc\xe7\xc3\x2d\x3c\x24\x64\xa9\xec\xcc\xc7\x3a\xdf\x61\xdb\x9e\xd6\x09\x2e\x6b\xb2\xe0\x07\x9b\x3b\x67\x22\xff\x16\x69\x72\xeb\xea\x51\xe6\xa4\x03\x31\x1b\x7b\x80\xc5\x83\x88\xd2\x2f\x1a\x65\x03\xbf\x31\x7a\x23\x6e\x36\x42\x98\xae\x77\x9e\x8b\xde\x59\xee\x54\xe0\xaa\x69\x36\x33\xd5\xb0\x59\x04\x44\x30\x57\x73\xea\x2f\x5f\xb0\xeb\x3f\xc8\xac\xef\x17\x89\x6f\x86\xfb\x5e\xee\xc0\xa6\x35\x7c\x7a\x28\x07\xef\x08\x72\x25\x44\x35\x96\xd5\xbc\x5c\xb6\x70\xaf\x94\xa7\x10\xae\xe1\x45\xa4\x59\xf5\x9e\x7a\xf4\xb4\x42\x29\x79\x0b\xf7\x03\xeb\x49\x9c\x12\x11\x7f\x9b\x0d\xfc\x4a\x3c\x8f\x2a\x0f\x54\x62\x8f\xbb\x84\x64\xf2\xdb\x79\xb4\x3b\x4a\xd0\xcf\x7b\xc0\x95\x4a\x2d\x71\x65\xe2\x1f\xa3\x56\x53\xc3\x02\xf2\xba\x04\xc7\x5f\x73\x20\x7e\x28\xad\xee\xbe\x7a\x59\x0e\x7d\xd6\xf7\xf5\xa7\xd5\x62\xa6\xf3\xf9\xa7\x68\x67\xf9\x09\x59\x5f\x2f\xe8\x54\xce\x2b\x76\xca\x8f\x23\x3e\x24\xc3\xf3\x86\x7c\xeb\x16\xe5\x66\x67\x55\x5b\xa9\x26\x77\x4c\x2f\xf0\xee\xf6\xad\x92\x4d\x36\xef\x1f\x34\x96\xdd\xbd\x2a\x83\xd8\x9e\x67\x72\x66\x1f\x25\x69\x22\x9c\xd5\xdd\x6d\xaa\xba\x06\x76\x5b\xd8\x4c\x0f\x76\x43\x15\xdf\x52\x73\xc9\xf2\x6f\xdb\x1a\xfb\x9c\xe0\xd2\x17\x13\xd2\xab\x78\x47\xc0\x92\x12\x37\x73\xec\xba\x98\xf9\xc5\xc1\x36\x52\x93\x7c\xfe\x48\x9a\x68\xa6\x5a\xd4\xd4\x64\x48\xe0\x2e\xcb\x36\x27\xbd\x2e\xa8\xfd\x3e\x13\x8b\x0b\xe5\xac\xc5\x87\xf4\x52\xdb\xd8\xf4\x23\xac\x0b\xa0\x17\xc0\xad\x17\xc1\x8c\xfe\x40\x7c\x49\xa1\x92\x92\x99\xbd\x8a\xd7\xff\x03\x00\x00\xff\xff\xdf\x8c\x99\x8e\x80\x08\x00\x00"

func create_forwarderCdcBytes() ([]byte, error) {
	return bindataRead(
		_create_forwarderCdc,
		"create_forwarder.cdc",
	)
}

func create_forwarderCdc() (*asset, error) {
	bytes, err := create_forwarderCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "create_forwarder.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe8, 0xf6, 0x28, 0x68, 0xfd, 0xd5, 0x15, 0x5f, 0xc5, 0x77, 0x5a, 0x54, 0xeb, 0xc4, 0x16, 0x89, 0x62, 0x21, 0x21, 0xe4, 0x87, 0xf, 0x10, 0xfe, 0x9f, 0x76, 0xff, 0x96, 0x0, 0xfa, 0x2c, 0x3d}}
	return a, nil
}

var _generic_transferCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x54\x4f\x6f\xda\x4e\x10\x3d\x87\x4f\xf1\xc2\xe1\xf7\x03\x89\x98\x4b\xd5\x03\xca\x9f\xa2\x48\xe9\x35\x4a\xd3\xde\x87\xdd\x01\x6f\x63\x76\xad\xd9\x31\x0e\x8a\xf8\xee\xd5\xae\x8d\x81\x46\xe5\xe2\x65\x3c\xf3\xe6\xcd\x9b\xe7\x75\xdb\x3a\x88\xe2\xa9\xf1\x1b\xb7\xaa\xf8\x35\xbc\xb1\xc7\x5a\xc2\x16\xe3\x62\x5e\x14\x73\x13\xbc\x0a\x19\x8d\xf3\x8b\x94\xc2\x58\x33\x1e\x8d\xe6\xf3\x39\x1e\xc9\xa3\xa6\x18\xe1\x3c\xc8\xef\x11\x35\x08\x6d\x18\x35\x69\x09\xf2\x16\xc2\x86\xdd\x8e\xa5\x8b\x38\x1f\x95\xc9\x22\xac\xf1\xbb\x89\x0a\x2d\x19\x96\xd7\xd4\x54\x5a\x64\xbc\xd7\xd2\x45\x54\xac\x11\xfb\xd0\xc0\x94\x21\x44\xce\x59\x9a\xb9\xa5\x60\x4b\x5e\xa1\x01\x91\xbd\x05\x45\xb4\x5c\x55\x39\xc5\x50\x4d\x2b\x57\x39\xdd\x7f\xce\x73\xe9\x98\x5b\xe4\x36\x4b\xbf\xef\x11\x33\x2d\x43\x1e\x2b\xce\x83\x70\xc6\x24\x0f\x92\x4d\xb3\x65\xaf\x28\x59\x78\x86\x18\xd0\x52\x95\x99\xc5\x32\x34\x95\xcd\x38\xdd\x11\xa6\x64\xf3\x76\xaa\xd8\x51\xd5\x70\x4c\xbd\xb7\xf4\xc6\x88\x8d\x74\x33\x38\xaf\xec\x2d\xdb\xf3\xd6\x2e\x1e\xdb\x3a\x9f\xe9\xa9\x90\x8f\x64\xd4\x05\x3f\xa1\x6d\x68\xbc\x2e\xf0\xf3\xc9\xbd\x7f\xfd\x32\x83\x86\x05\x96\xd6\x0a\xc7\x38\xcb\x73\xb1\x3c\x93\x96\x0b\xfc\xe8\x64\x4f\x7f\x66\x83\xe4\xdd\xab\xe7\x66\x55\x39\x93\xce\x53\x7c\x8c\x46\x00\x90\x75\x66\xfc\x4a\xb2\x43\x38\x86\x46\x4c\x62\x48\x8a\x32\x54\x36\x9e\x04\x8f\x5d\x94\x84\xb1\x62\xe7\x37\xc8\xec\xd6\x2c\xc2\x36\x43\x55\xac\x50\xde\xd6\x19\x6b\x81\x6f\x97\x3e\xc9\xd1\xae\x67\x2d\x5c\x93\xf0\x24\xba\x8d\x67\x59\x60\xd9\x68\xb9\x34\x26\xcd\x37\xf0\xea\xb9\x7d\x67\x05\x41\x78\xcd\xc2\x3e\x11\x0b\x99\x50\x57\xf9\x7f\xcc\x1e\x63\x8b\x5d\x06\x3f\xd6\x25\x22\x39\xf2\xc2\x6b\xdc\xf5\xc9\xc5\x2a\x88\x84\xf6\xf6\xbf\x8f\x4b\x5e\xcf\x12\x76\xce\xb2\x1c\xee\x27\xc9\xed\x8b\x33\x2d\xa7\xa3\xab\xab\xab\x87\x07\xd4\xe4\x9d\x99\x8c\x1f\xf3\x7e\x7d\x50\x74\x50\x9f\x69\x85\xb6\x63\x95\x67\xbd\x1e\x4f\x4f\xa3\x44\xae\xd6\xc5\x20\x0e\x6e\x6f\x06\x82\x45\xeb\xb4\xb4\x42\xed\xb0\xe1\xee\xd9\x17\x1f\xba\x07\xbf\xb3\x69\x94\xcf\xd5\x49\x53\x0a\x1b\x57\xbb\xe4\xb3\x3b\x6c\x58\x7b\x11\x27\x1a\xa6\x7f\xa7\x65\x17\x74\x7a\x0c\x45\xc5\x86\xf5\x71\xf8\x50\x3e\x29\xf3\xd2\x57\x1d\xee\x27\xe7\x36\x3a\x41\xa7\x5f\x2f\xeb\x64\x7a\x7d\xb1\xb7\xd7\xde\x1b\x47\xeb\xe4\x8b\xe4\x9f\x9b\x3b\xea\x37\x5c\x10\xa7\xcf\x77\x00\x3d\x9b\xa1\xb0\x5c\x87\xe8\xb4\x5f\xd8\xed\xcd\xa5\xba\xd3\x5e\xb8\xc3\x9f\x00\x00\x00\xff\xff\x98\x88\x7c\x49\xd3\x04\x00\x00"

func generic_transferCdcBytes() ([]byte, error) {
	return bindataRead(
		_generic_transferCdc,
		"generic_transfer.cdc",
	)
}

func generic_transferCdc() (*asset, error) {
	bytes, err := generic_transferCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generic_transfer.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xda, 0xd7, 0x59, 0xa8, 0x38, 0x6b, 0xd3, 0x24, 0x52, 0x38, 0x8e, 0x55, 0x5c, 0x2b, 0x6e, 0x74, 0xd8, 0xd7, 0xeb, 0x1, 0x3d, 0x5c, 0xd1, 0xe8, 0x27, 0xfc, 0x24, 0xf7, 0xbe, 0x42, 0xcf, 0x3b}}
	return a, nil
}

var _mint_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x54\x4d\x6f\xdb\x48\x0c\xbd\xfb\x57\x10\x3a\x04\x32\x36\x91\x2e\x8b\x3d\x18\x71\x02\x27\xdb\xf4\xd4\x22\xc8\x47\xef\xa3\x11\x65\x4f\x2b\xcd\x08\x1c\x2a\x8e\x11\xe4\xbf\x17\xf3\x21\x59\xb2\x63\xfb\x62\x40\xf3\xf8\x48\x3e\x3e\x52\x35\xad\x21\x86\x87\x4e\xaf\x55\x51\xe3\x8b\xf9\x83\x1a\x2a\x32\x0d\x24\x59\x96\x4b\xa3\x99\x84\x64\x9b\x4f\x00\x99\x2c\x65\x32\x8b\xa1\xdf\xde\x45\xd3\x9e\x89\x1c\xbf\x87\xc0\x59\x9e\xe7\xf0\xb2\x51\x16\x98\x84\xb6\x42\xb2\x32\x1a\x94\x85\xed\x46\x30\xf0\x06\xa1\x51\x9a\x91\x60\x25\xa5\xe9\x34\x43\x67\xd1\x02\x1b\xff\x19\x34\x6e\x81\x1d\x99\x8d\x3c\xb8\x83\x96\xcc\x9b\x2a\xd1\xc7\x12\x4a\xd5\x2a\xd4\x0c\xa2\x2c\x09\xad\x05\xa1\x4b\x10\x8d\x67\x8a\x24\x97\xfe\x9b\x43\x8f\x98\x04\x61\x28\xa8\x42\x22\x2c\x1d\xd6\x21\x06\x96\xca\x95\xe4\xa2\x95\x5e\xcf\x66\xa3\xd2\xd3\x21\xe5\x02\x56\x01\x7d\x19\x13\x2e\xe0\xf5\x41\xbd\xff\xf7\xef\x1c\x3e\x66\x33\x00\x00\x97\xe8\x09\x2b\x24\xd4\x12\xfb\x14\x51\x22\x08\x1a\xae\xca\x46\x69\x78\x42\x6b\x3a\x92\x08\xa6\xf8\x8d\x92\x7d\x70\x8d\x1c\x0a\xf6\x90\x05\x5c\x4c\xb4\xf5\x1f\x95\x65\x12\x6c\xe8\x4c\xb6\x7e\x94\x31\xdd\x13\x4a\x54\x6f\x48\x60\xaa\xa9\x7e\xd3\x94\x3d\x6c\x01\x17\x1f\x53\x33\xf4\x2f\x9f\xfb\x9c\x2f\x5e\x59\x16\x35\xd8\xae\x6d\xeb\x9d\xe7\xf6\x4a\x43\x81\x95\xa1\x30\xa9\xa2\x23\x3d\x24\x09\xc0\x3b\xff\xda\xab\x16\x08\x5b\xc2\x56\x10\xa6\x56\xad\xb5\xcb\xbf\xea\x78\x13\x9d\xe1\x64\x85\xf8\xb3\x58\x57\xd9\x98\x05\x96\x13\x6f\x66\xbe\xa0\x67\x0f\x98\x0d\x51\x79\x0e\x77\x86\xc8\x6c\x41\x00\x1d\x2a\x25\xfc\x24\x46\x03\x18\xf2\xec\xa7\x00\x4b\x08\x85\x65\x85\xe7\xb9\x3e\x33\x94\x9b\xd4\xed\xc7\x02\x8e\x11\xcf\x6c\x48\xac\xf1\x51\xf0\x66\x3e\x64\x72\xbf\xdb\x5b\x68\x85\x56\x32\x4d\x9e\x7d\x16\xb7\x26\xda\xf0\xde\xbb\xa1\xc8\x64\x3e\x69\xe9\x3b\x06\x84\x88\x0b\x74\x38\x5a\x6f\xff\xe2\x54\xdf\x8a\x1c\xd2\xcf\xf4\x8b\xae\x07\xbf\x2c\x61\x8d\x1c\x07\xb1\x5f\x81\x69\xf9\xd9\x1a\xf9\x5e\xb4\xa2\x50\xb5\xe2\x5d\x3a\x69\xbc\x27\x7a\xec\x8a\x5a\xc9\xe3\xd6\x07\x41\x4f\xf9\xed\x26\x3d\xa5\xd5\xab\x16\xce\xe0\x6c\xfa\x26\xfb\x7e\xf6\xbd\x26\x21\x36\x9a\x16\xdf\x51\x76\x8c\xfd\x96\x46\x19\xef\x09\x05\x23\x88\xfe\x1e\x39\xd5\xfc\x0d\x8a\x57\xa3\x87\x3a\xff\x46\xc8\xf5\xd5\xa1\x41\x32\xe9\x59\x7e\xe2\xf6\x87\x87\xa4\xa2\xae\xcd\x16\xcb\x55\x3c\x10\xe1\x50\xcc\x8f\xc9\xca\x5f\xa2\xab\xd9\x31\x06\xee\xcc\xfd\x79\x09\x6c\x2a\x0e\x82\xc7\x55\xff\x8f\xad\xb1\xca\x1b\xa0\xe9\x9d\xec\xfb\xc7\xf3\x03\xcd\xca\x10\x18\x4d\x7a\x7d\x35\xaa\x62\x94\xa1\x44\xcb\x64\x76\xb1\xa8\xb1\x88\xad\xb1\x3c\x5a\xc8\x53\xcb\x07\xcb\xe5\x17\xcb\xfa\xcf\x70\x31\x93\xa3\xeb\xd1\x74\x96\xa1\x40\x50\xda\x69\x69\xb1\x84\x62\x17\xfc\xed\x43\x92\x58\xc4\xe7\xdf\x00\x00\x00\xff\xff\x72\xee\xdb\x6b\xcd\x06\x00\x00"

func mint_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_mint_tokensCdc,
		"mint_tokens.cdc",
	)
}

func mint_tokensCdc() (*asset, error) {
	bytes, err := mint_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "mint_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb6, 0x75, 0x27, 0xec, 0x9, 0xbf, 0x6f, 0xc2, 0x5f, 0xe1, 0xc, 0x24, 0xfc, 0xd8, 0xd6, 0x6e, 0xa, 0x4c, 0x95, 0x1f, 0xa3, 0xc9, 0xf, 0x70, 0x60, 0x53, 0x49, 0x4d, 0x12, 0xe0, 0x8d, 0xcc}}
	return a, nil
}

var _privateforwarderCreate_account_private_forwarderCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x53\xcb\x6e\xdb\x30\x10\xbc\xeb\x2b\xb6\x39\xb4\x36\x90\x48\xf7\x20\x29\x10\x04\xf1\xa9\x08\x8c\x26\xed\x7d\x4d\xaf\x2d\xc2\xb4\x28\x2c\x57\x56\x0c\xc3\xff\x5e\x50\x0f\x46\x94\xa3\x36\xa8\x2e\xb6\xa8\x99\xe1\xec\x70\xa8\xf7\xa5\x65\x81\x45\x55\x6c\xf5\xca\xd0\xab\xdd\x51\x01\x1b\xb6\x7b\xb8\x4a\xd3\x2c\x4d\x33\x65\x0b\x61\x54\xe2\xb2\x08\x93\xaa\xb5\xba\x4a\x3a\xf6\xd3\x1b\xee\xcb\xbf\x93\x87\x90\x88\xbb\x64\x7d\x40\xa1\x9f\xa4\x48\x1f\x88\x17\x96\x6b\xe4\x35\xf1\x84\xce\x14\xbc\xd5\x4c\xb2\x2c\x83\xd7\x5c\x3b\x10\xc6\xc2\xa1\x12\x6d\x0b\xd0\x0e\x2a\x47\x6b\x10\x0b\x8a\x09\x85\x00\xfd\x02\x7f\x73\xb0\x30\xb6\x06\x54\xca\x56\x85\x40\xad\x25\x07\x84\xb2\xdd\x02\x36\xbd\x76\x92\x0c\xd5\x4e\x49\x02\x00\xe0\x77\x7a\xa6\x1a\x1e\x3a\xb2\xe4\xe8\x15\x8c\x81\xdc\x9a\x35\x48\x3e\x14\xf0\x04\x43\x02\x05\xd5\x1d\xfe\x16\x1e\x2a\xc9\xbb\x97\x56\xb1\x64\x2a\x91\x69\x56\xe2\x91\x38\xfa\x3e\x87\x53\x83\xf0\x8f\x23\xb3\x49\xdf\x75\xe0\x7e\x08\xec\xb9\xcd\xcf\xbc\xe1\x9c\x5b\x71\x7a\x23\x55\x09\xf5\xee\xdb\x09\xe0\x05\x0f\x3e\x0c\xa6\x6d\x65\x90\xe1\x80\x95\x11\x1f\x93\x77\x5f\x50\x48\x66\x6a\xf3\xd4\xe1\x81\x66\x77\x37\xf1\xe1\x36\x11\x3f\xed\x4b\x39\xfe\xf6\x7a\xb3\xf9\x75\xe0\xfb\x47\xec\x6d\x54\x98\xb4\x41\xbd\x88\x65\xdc\xd2\x12\x25\x0f\xe8\x79\xe4\xf5\xb1\x3f\xba\xfe\x7c\xb8\xeb\x40\x00\xf9\x84\xfb\xc5\x47\x2c\x71\xa5\x8d\x96\x23\xdc\x5f\xd8\x36\xba\xd8\xdd\x7d\x3d\xc5\x85\xee\x2b\x75\xfe\x3e\x8b\xfc\x66\xdd\x7e\x19\x0d\x4c\xf7\xe0\xd1\x68\xc8\x5b\x92\x4f\x8f\xf7\x25\x9a\xef\x97\xa3\x26\xf7\xf1\x78\x51\x6d\x2f\xbb\x39\x1c\x3e\xac\xc2\xdd\xcd\xe4\xc5\xea\x0e\xe8\x99\xea\xb0\x34\x63\x52\xba\xd4\xe4\x6b\x79\x19\xe0\xfc\xb2\x32\x43\x9f\xef\x9b\x8a\x0d\x57\xc9\xb5\xf3\xfe\xab\x38\x81\x7b\xdd\xd4\x62\xd2\xf2\xe8\xc3\x20\xcd\xd8\xdc\x0f\x5d\xec\xe2\xab\xd7\x98\x0a\x5e\xcb\x61\xfe\x1f\xb7\x62\xd2\x43\xf8\x37\xea\xc7\x67\x4d\x2f\xab\x95\xd1\xca\x7b\xfe\xb8\x34\xff\x31\xfc\xf8\xa6\x9c\x93\xf3\x9f\x00\x00\x00\xff\xff\x0e\x37\x36\xd9\xd0\x05\x00\x00"

func privateforwarderCreate_account_private_forwarderCdcBytes() ([]byte, error) {
	return bindataRead(
		_privateforwarderCreate_account_private_forwarderCdc,
		"privateForwarder/create_account_private_forwarder.cdc",
	)
}

func privateforwarderCreate_account_private_forwarderCdc() (*asset, error) {
	bytes, err := privateforwarderCreate_account_private_forwarderCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "privateForwarder/create_account_private_forwarder.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xfd, 0x8b, 0x9, 0x1a, 0xfc, 0x24, 0x75, 0x89, 0x84, 0x9a, 0xf8, 0x8, 0x4c, 0xf0, 0xd5, 0xf9, 0xf5, 0xf3, 0x92, 0x3d, 0xd3, 0x49, 0x80, 0xc3, 0xd2, 0x3a, 0xee, 0x55, 0x53, 0xa4, 0x17, 0xe5}}
	return a, nil
}

var _privateforwarderCreate_private_forwarderCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x92\xcf\xca\xdb\x30\x10\xc4\xef\x7a\x8a\xe5\x3b\xb4\xfe\x20\xb1\xef\x26\x2d\x84\xd2\x1c\x4b\x68\x43\xef\x6b\x79\x6b\x8b\x38\x92\x59\xaf\x9d\x06\x93\x77\x2f\xf2\x3f\xec\x24\x2e\xa5\x3e\x18\x21\xcd\xfc\x46\x1a\xc9\x5c\x4a\xc7\x02\x87\xda\x66\x26\x29\xe8\xe4\xce\x64\xe1\x17\xbb\x0b\xbc\x85\x61\x14\x86\x91\x76\x56\x18\xb5\x54\xd1\x42\x13\xea\x54\xbf\xa9\xc1\xfd\xf5\x37\x5e\xca\xbf\x9b\xe7\x92\x85\xf7\xc8\xa6\x41\xa1\xef\xa4\xc9\x34\xc4\x07\xc7\x57\xe4\x94\x78\x85\xb3\x26\xef\x99\x2a\x8a\xe0\x94\x9b\x0a\x84\xd1\x56\xa8\xc5\x38\x0b\x9a\x09\x85\x2a\x40\xb0\x74\x85\xb2\x07\x00\x0f\x04\x30\x16\xd0\x02\x6a\xed\x6a\x2b\x20\x39\x0a\x78\x4c\xea\xa8\xb2\x1f\x05\xb0\x60\xc2\xf4\x06\x39\x36\x04\xf8\x6c\x77\xec\x67\xeb\xa4\x30\x1a\xa4\x2b\x60\x5c\xf2\x94\xa4\x96\x8e\xf4\x88\xf9\x89\x75\x21\x4a\xcd\xb7\xd9\x2a\x05\x00\x50\x32\x95\xc8\x14\x54\x26\xb3\xc4\x31\xec\x6b\xc9\xf7\xfd\xe6\xde\xa1\xed\x24\xfe\x1b\x43\xbe\x60\x89\x89\x29\x8c\xdc\xe0\x13\xf4\x9e\xb0\x30\xf6\xbc\xfb\xb0\x68\xbc\xcb\x6b\x97\x37\x38\x76\x78\xff\x1c\x4c\x58\xff\x45\xc3\x19\x23\x9a\x11\x46\xf1\x66\x21\x15\xe4\x8c\x24\x86\xe7\xac\x1f\xe2\x18\x33\x3a\xa2\xe4\x93\xe3\x5d\x4d\xc3\x82\x04\x1a\xaf\x83\xdd\x76\xf5\x09\x84\xfd\xcd\x7d\xa3\xeb\x34\x15\x30\x69\x53\x1a\xb2\x12\xbf\xa8\x60\x16\x30\x54\x51\x61\x43\xc1\x6e\xdb\x45\x6d\x40\x5c\xbc\x1e\xf6\xb0\x30\x3b\xc0\x33\xb6\x6f\xb8\x5d\x65\x4d\xa3\xc7\x6e\xff\x35\xfd\xd8\x3d\x28\x1f\xfe\xba\xf0\xff\x38\xc5\xec\x1a\xfc\xff\xae\xee\xea\x4f\x00\x00\x00\xff\xff\xbf\x3d\xfd\xff\xfd\x03\x00\x00"

func privateforwarderCreate_private_forwarderCdcBytes() ([]byte, error) {
	return bindataRead(
		_privateforwarderCreate_private_forwarderCdc,
		"privateForwarder/create_private_forwarder.cdc",
	)
}

func privateforwarderCreate_private_forwarderCdc() (*asset, error) {
	bytes, err := privateforwarderCreate_private_forwarderCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "privateForwarder/create_private_forwarder.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc5, 0x88, 0x3a, 0xd2, 0x71, 0xff, 0x71, 0x52, 0xd0, 0xa8, 0x51, 0x8b, 0xb6, 0xc5, 0xf1, 0x3f, 0xc4, 0xe5, 0xb1, 0x7a, 0xc6, 0x90, 0xe5, 0x75, 0xdc, 0xd0, 0x37, 0x28, 0x77, 0x98, 0x1f, 0xf2}}
	return a, nil
}

var _privateforwarderDeploy_forwarder_contractCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\x4d\x4b\x03\x31\x10\x86\xef\xf9\x15\x73\xdc\x42\xe8\x5e\x65\x6f\x05\x11\xbc\x48\xa1\x7a\x12\x0f\x63\x32\xee\x0e\xb6\x33\x61\x32\x4b\x11\xe9\x7f\x97\xed\x17\xab\x5e\x9a\x43\x48\x78\x9f\x64\xde\xa7\x6d\x5b\xb8\xa7\xb2\xd5\xaf\x0a\x3e\x10\x3c\xeb\x27\xc9\x83\xda\x1e\x2d\xb3\xf4\x90\x54\xdc\x30\x39\xec\xd9\x87\x23\x51\x0b\x25\xfe\x60\xca\xc0\xc2\x0e\x05\x0d\x77\xe4\x64\x35\x04\x37\x94\x8a\xc9\x59\xa5\xb9\x3c\x7c\xc2\x1d\x75\xb0\x71\x63\xe9\x63\x80\xd9\x4a\x9a\xa9\x83\xd7\x97\x47\xf1\xbb\xb7\xdf\x51\x25\xc9\x64\x1b\x57\xc3\x9e\xd6\xe8\xc3\xf4\xc3\xf5\xf2\x87\xbd\x89\x2a\xe3\xfb\x96\xd3\x09\x5a\x5f\xcf\x0b\xf8\x0e\x01\xa0\x18\x15\x34\x6a\x2a\xf7\x42\xd6\xc1\x6a\xf4\x61\x95\x92\x8e\xe2\x67\x02\xe0\x94\x2d\x2f\x5a\x75\x89\x39\x37\x72\x94\x9b\xab\xc6\xb3\xd6\xb4\xc7\xff\x1e\x71\x5e\x37\xce\x5a\x2d\xa6\x29\x87\x70\x08\x10\x7e\x02\x00\x00\xff\xff\xf7\x8a\xb2\xb8\x93\x01\x00\x00"

func privateforwarderDeploy_forwarder_contractCdcBytes() ([]byte, error) {
	return bindataRead(
		_privateforwarderDeploy_forwarder_contractCdc,
		"privateForwarder/deploy_forwarder_contract.cdc",
	)
}

func privateforwarderDeploy_forwarder_contractCdc() (*asset, error) {
	bytes, err := privateforwarderDeploy_forwarder_contractCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "privateForwarder/deploy_forwarder_contract.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x10, 0x63, 0x44, 0x17, 0x78, 0x41, 0x47, 0x73, 0xf, 0x19, 0xd3, 0x94, 0xb2, 0xd3, 0xfb, 0xbe, 0x5e, 0xe7, 0xd4, 0xa4, 0x53, 0x61, 0x2e, 0x62, 0x52, 0xcd, 0xb6, 0xd4, 0x6b, 0x79, 0xbb, 0x6e}}
	return a, nil
}

var _privateforwarderSetup_and_create_forwarderCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\xc1\x6e\xa3\x40\x0c\xbd\xf3\x15\x56\x0f\x15\x48\x29\xdc\x2b\x5a\xa9\x5b\xb5\xc7\x55\xb4\x5b\xed\xdd\x19\x1c\x18\x85\xcc\x20\x63\x92\x46\x51\xfe\x7d\xc5\x84\x10\x26\x84\x6e\x76\xb5\x9c\xa2\xd8\x7e\x7e\xf6\x7b\x9e\x40\xaf\x2b\xcb\x02\xef\x8d\xc9\xf5\xa2\xa4\x0f\xbb\x22\x03\x4b\xb6\x6b\xb8\x8b\xe3\x24\x8e\x13\x65\x8d\x30\x2a\xa9\x13\x2f\x27\x56\x99\xba\x3b\x55\xbf\x7d\xe2\xba\xfa\xba\x78\x98\xe2\xd5\xce\x59\x6f\x50\xe8\x07\x29\xd2\x1b\xe2\x77\xcb\x5b\xe4\x8c\x78\x02\x67\x2a\xfd\x88\x19\x24\x49\x02\x1f\x85\xae\x41\x18\x4d\x8d\x4a\xb4\x35\x80\x59\x56\x03\xc2\x2f\x6c\x4a\x99\x01\x42\x75\xc4\x00\xee\x40\x60\x79\x42\x71\xf5\x08\x0b\x2c\xd1\x28\x02\x85\x15\x2e\x74\xa9\x65\x37\x03\x34\x59\x5b\xda\x2c\x4a\xad\x06\x81\xb6\x16\xa4\x38\x83\x05\xc1\xb0\xf5\x3e\x08\x00\x00\x2a\xa6\x0a\x99\xc2\x5a\xe7\x86\xf8\x11\x5e\x1a\x29\x5e\x94\xb2\x8d\x91\x08\xf6\x2e\xa5\xfd\xf4\x12\x8e\x19\x71\x4e\xf2\xda\xf7\x48\xef\x27\xa7\xee\x7f\x3d\x87\x93\x39\x17\x81\xb9\x1b\x61\x8e\x52\x44\xb1\x2a\x48\xad\xc2\x21\x85\xf6\x4b\x92\x7e\x45\xfd\x66\x60\x8b\x35\x60\xc9\x84\xd9\x0e\x6a\x12\x68\x2a\xaf\x86\x49\x1a\x36\xfd\x5f\x87\xe0\xca\x50\x0b\xcb\x6c\xb7\xe9\xbd\xe7\x05\xa7\xca\x73\xd8\xaa\xfd\x08\xe3\xc8\x4f\xb1\x8c\x39\x39\xba\xf0\xf4\x04\x46\x97\x63\xb6\xaf\x4c\x2d\x59\x04\x43\x5b\xdf\x8c\x0e\xc3\x69\x57\x35\x02\x5a\x40\x1b\xa8\x8f\x90\x1e\x48\xc7\xb0\xc6\x0d\x85\x5e\xa0\xfd\xd2\x07\xdf\xbd\xae\xdb\xdb\xba\x92\x9d\x83\x0f\xa3\xd9\xa8\x44\xec\x1f\x86\xf1\x2a\xa2\x6b\x7b\xeb\x28\x95\xda\xac\xd2\xfb\xbd\x7f\x7c\x27\x2d\x0f\xcf\x3e\xdb\xa4\xd3\x2d\xa1\x41\xef\x53\xb2\xcf\x52\x90\x73\x92\x5b\x59\x46\x67\x5e\x25\x49\x6f\xf6\xb3\x47\xe1\x69\xc2\xba\xd3\xcc\xbf\x24\x3b\x68\x38\x14\x78\x7c\x7f\x62\xdd\xf9\x1d\x85\x96\x02\x05\xac\x29\x77\x40\x9f\x95\xad\xa9\x1e\x82\xb4\x69\xa7\xcb\x5e\x6a\x2a\x33\x90\x82\x6d\x93\x17\x2e\xf2\xad\x8b\x68\x23\xc4\x4b\x54\x74\x5d\x88\xf1\xba\x2e\x06\xec\x70\x2e\x95\x19\xd7\x9d\xef\xf0\x3f\x0a\x73\xbe\xd7\xf4\x61\xf2\x69\xed\x1c\xfc\x9d\xb6\xfd\x5f\x21\x93\xd2\x95\x26\x23\x8f\x57\xc4\x8d\x46\xae\x74\x87\x92\x3e\xf4\xed\x66\xce\xf1\xb7\x3e\x41\xc3\xa3\x9e\x30\xfc\x2d\x2f\x9e\xb7\xb6\xbf\x7f\xfe\xae\xaf\xfd\x1f\x66\x08\xfc\x3b\x3e\x04\x87\xe0\x77\x00\x00\x00\xff\xff\x8e\xaf\x77\x44\x58\x07\x00\x00"

func privateforwarderSetup_and_create_forwarderCdcBytes() ([]byte, error) {
	return bindataRead(
		_privateforwarderSetup_and_create_forwarderCdc,
		"privateForwarder/setup_and_create_forwarder.cdc",
	)
}

func privateforwarderSetup_and_create_forwarderCdc() (*asset, error) {
	bytes, err := privateforwarderSetup_and_create_forwarderCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "privateForwarder/setup_and_create_forwarder.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x6e, 0xb8, 0x59, 0x42, 0xdd, 0x2, 0x7f, 0xc5, 0x23, 0x1f, 0xb9, 0xf1, 0xf7, 0x6e, 0x2c, 0xa6, 0xe, 0x5b, 0x94, 0x1c, 0xb3, 0xb8, 0xd2, 0xd9, 0x49, 0xb1, 0x74, 0x76, 0xe7, 0x7c, 0x3f, 0x39}}
	return a, nil
}

var _privateforwarderTransfer_private_many_accountsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x53\xc1\x6e\xd3\x40\x10\x3d\xd7\x5f\x31\xcd\xa1\x24\x12\xac\x2f\x88\x83\x55\xa8\x22\x44\x38\x21\x55\x6d\xe1\x82\x38\x6c\x76\xc7\xf6\xaa\xce\x8e\x35\x3b\x4e\x52\x55\xf9\x77\x64\xef\x26\x8a\x09\x21\x17\x4e\xb6\xd6\xef\xbd\x7d\xef\xcd\xd8\xad\x5a\x62\x81\x45\xe7\x2b\xb7\x6c\xf0\x89\x9e\xd1\x43\xc9\xb4\x82\x89\x52\xb9\x52\xb9\x21\x2f\xac\x8d\x84\x7c\x84\x51\xc6\x9a\x49\x96\xd8\x5f\xb6\x7a\xd5\xfe\x9b\x7c\x0c\x19\x71\xef\xd9\xad\xb5\xe0\x03\x1a\x74\x6b\xe4\x05\xf1\x46\xb3\x45\x3e\xa3\x73\x0e\x1e\x35\xb3\x3c\xcf\xe1\xa9\x76\x01\x84\xb5\x0f\xda\x88\x23\x1f\xdf\x4b\xe4\x00\x42\xb0\xd2\xfe\x05\xb4\xb5\x8c\x21\x60\x00\xa9\x99\xba\xaa\x06\xa9\xd1\x31\xb4\x51\x1d\x38\xc9\x87\x2c\x3b\x12\x9a\x26\xda\x7c\x45\x9d\x97\x6f\xba\x2d\xe0\x75\x1e\x8f\x0a\xf8\xbe\x70\xdb\x0f\xef\x77\x33\x78\xcd\x32\x00\x80\xc1\x08\xc2\x0f\xdd\x35\x02\x8c\x81\x3a\x36\x08\x52\x6b\x81\x9a\x1a\xdb\xdf\x8c\x20\x7d\x1d\x21\x9e\x6a\x46\x58\xa2\xf3\xd5\xc1\x2f\xa3\x1d\xa4\x1a\x14\x58\xf7\x3a\x0f\x58\x16\x70\x33\xaa\x72\xd0\xcf\x0e\xb0\x14\x20\xd5\xe2\x7c\xf5\x88\xde\x22\x17\x70\x73\xb6\xb8\x88\x88\x12\x2d\x63\xab\x19\xa7\xc1\x55\xbe\x67\xcd\x3b\xa9\xe7\xc6\xf4\x71\x0f\xc1\x52\xb8\xaf\x28\xa0\x81\xb1\x44\x46\xdf\x27\xa3\x21\x51\x64\xbe\x09\x10\x84\x18\x6d\xf4\x7d\xe0\x05\x6c\x4a\xb5\x8f\x02\x1f\x13\x5a\x2d\x89\x99\x36\xb7\x7f\x49\xf6\x69\xda\xaf\x41\x01\xa7\x5f\x1e\x85\x58\x57\x78\xaf\xa5\x9e\x65\x57\x57\x57\x77\x77\xd0\x6a\xef\xcc\x74\xf2\x99\xba\xc6\x82\x27\x81\xa8\x7b\x6a\x92\x36\xd1\xe3\x20\x74\x3d\x99\x65\x63\x83\x67\x4a\x3c\xf5\x7b\xa1\xd3\xbd\xf9\x0b\xb0\xff\x9f\x64\x17\x1f\xb8\x45\xd3\x09\x1e\x0f\xae\x24\xde\x2f\x3f\x38\x0f\x7f\x2e\xb4\x7a\xc6\x97\x70\x8c\xbf\xd4\x89\x0a\xe8\x6d\xca\x37\x0c\x27\xec\x7f\x92\xb7\x69\xb9\x0b\xb8\x7d\x37\x1a\xbb\xda\x38\xa9\x2d\xeb\xcd\x54\x0f\xd7\x16\x27\x2e\x7e\xa6\x83\x5f\xd7\xb3\xa3\xd1\xec\x52\xb4\x5d\xf6\x3b\x00\x00\xff\xff\x1c\xeb\xe8\xe2\xb4\x04\x00\x00"

func privateforwarderTransfer_private_many_accountsCdcBytes() ([]byte, error) {
	return bindataRead(
		_privateforwarderTransfer_private_many_accountsCdc,
		"privateForwarder/transfer_private_many_accounts.cdc",
	)
}

func privateforwarderTransfer_private_many_accountsCdc() (*asset, error) {
	bytes, err := privateforwarderTransfer_private_many_accountsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "privateForwarder/transfer_private_many_accounts.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xcc, 0x36, 0x91, 0x18, 0x93, 0xa9, 0x46, 0xfa, 0xae, 0xa2, 0xa8, 0x7d, 0x37, 0x43, 0x27, 0x58, 0x39, 0x2b, 0xec, 0xda, 0xec, 0x64, 0xa, 0x60, 0xf2, 0x29, 0x37, 0x53, 0xe6, 0x84, 0xad, 0xf6}}
	return a, nil
}

var _scriptsGet_balanceCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x91\x31\x4f\xc3\x30\x10\x85\x77\xff\x8a\xa7\x0c\x90\x2e\xce\x82\x18\x2a\x4a\x55\x2a\x3a\x57\xa8\xb0\x3b\xce\xa5\xb5\x70\xec\xc8\x3e\x43\x51\xd5\xff\x8e\x92\x34\x85\x08\x32\x45\xf2\xf7\x3e\xdd\xbd\x2b\x0a\xec\x0e\x26\x22\xea\x60\x5a\x46\x20\x55\x45\xf0\x81\x50\x2a\xab\x9c\x26\xd4\x86\x6c\x05\x5f\x43\x39\x28\xad\x7d\x72\x7c\x1b\xf1\x7c\x54\x4d\x6b\x69\xe7\xdf\xc9\xe1\x69\x40\x85\x30\x4d\xeb\x03\x63\x93\xdc\xde\x94\xe3\x6b\x1d\x7c\x83\x4c\xca\x42\xca\x42\x7b\xc7\x41\x69\x8e\xc5\x84\x91\xba\xd2\xd9\x98\x9e\xa8\xff\x0f\xff\x46\x86\xac\x68\x53\x89\x3a\x39\x34\xca\xb8\xfc\x32\xe7\x1c\xab\xaa\x0a\x14\xe3\x6c\x8e\xd7\x8d\x39\xde\xdf\xe1\x24\x00\xc0\x12\x77\xbb\x30\x16\xd8\x13\xaf\x06\x7a\x4c\xcd\xae\xc8\x87\x4a\x96\x5f\xa8\xc6\xa2\xa7\xe5\x9e\x78\xad\x5a\x55\x1a\x6b\xf8\x2b\x9f\x0c\xf1\xd6\xa1\xdb\x54\x5a\xa3\xb7\x8a\x0f\x83\xa3\xfb\x64\xe9\x43\xf0\x9f\x0f\x37\x7f\xf1\xd3\xb4\x83\x4b\x8b\xe7\xc7\xfc\x27\xbd\x5c\xa2\x55\xce\xe8\x3c\x5b\xfb\x64\x2b\x38\xcf\x18\x84\x63\xe9\x08\x54\x53\xa0\xee\x8f\x7d\x7f\xb8\xde\x9d\xcd\x44\x2f\x09\xc4\x29\xb8\xeb\x26\xf2\x72\x55\x71\x16\xdf\x01\x00\x00\xff\xff\xb5\xf4\x46\xf7\xf9\x01\x00\x00"

func scriptsGet_balanceCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_balanceCdc,
		"scripts/get_balance.cdc",
	)
}

func scriptsGet_balanceCdc() (*asset, error) {
	bytes, err := scriptsGet_balanceCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_balance.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x4d, 0xfb, 0xa5, 0x73, 0xae, 0xb1, 0x9b, 0x2e, 0xb9, 0x87, 0x2e, 0xad, 0xc0, 0x97, 0x5f, 0xf8, 0x3d, 0x84, 0xef, 0xcb, 0x29, 0xd4, 0x1, 0x2a, 0x96, 0x98, 0x60, 0xfd, 0xbc, 0x5c, 0x60, 0x88}}
	return a, nil
}

var _scriptsGet_supplyCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xce\x4d\x4a\xc0\x30\x10\x05\xe0\xfd\x9c\xe2\xd1\x55\xbb\x49\x36\xe2\x42\x70\xa9\x17\xb0\x1e\x20\xa6\x89\x0d\xe6\x8f\xc9\x04\x2a\xe2\xdd\x85\xfe\x80\xdd\xce\xfb\x86\xf7\xb4\xc6\xbc\x86\x86\x66\x39\x54\x01\x3b\xb3\x34\xc8\xea\x20\x45\x4c\x44\xeb\xb5\xc6\x6f\xf8\xe0\xe2\x42\x5a\xa3\xf8\x3d\x7c\xd9\x4c\xaa\xd1\xcd\xe5\xcb\x65\xb4\x64\x58\x60\x4b\x16\x36\x56\x88\x42\xaa\x85\xe5\x6e\x3c\x97\x84\x41\x29\xad\x94\xbe\x64\xd3\xff\x89\xb2\x8b\x1d\x88\x6a\xff\x80\xef\x19\xc9\x84\x3c\x4e\x4f\x78\x7f\x0d\xdb\xe3\x03\x7e\x88\x00\x20\x3a\xb9\x26\x3d\xdf\x0a\xd4\x3e\xf7\x6d\x8f\x4e\x5a\x3e\xc7\x83\x4e\xc7\x81\x9d\x74\xce\xe7\x3b\xfd\xfe\x05\x00\x00\xff\xff\xa2\xfe\xee\xae\xf9\x00\x00\x00"

func scriptsGet_supplyCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_supplyCdc,
		"scripts/get_supply.cdc",
	)
}

func scriptsGet_supplyCdc() (*asset, error) {
	bytes, err := scriptsGet_supplyCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_supply.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xbc, 0x4c, 0xfc, 0x8d, 0xb8, 0x3b, 0xe9, 0x43, 0x2c, 0x85, 0x9d, 0xc5, 0x56, 0xda, 0x25, 0x45, 0x90, 0xf2, 0xd2, 0xc3, 0xf5, 0x14, 0x87, 0x1b, 0x57, 0xc8, 0xc3, 0xa1, 0xe1, 0xf0, 0xed, 0x39}}
	return a, nil
}

var _scriptsGet_token_metadataCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\xcf\x6a\xf2\x40\x14\xc5\xf7\x79\x8a\x43\x16\x1f\x71\x33\xee\xe5\xb3\x22\x52\x77\x05\x11\xe9\xfe\x66\x72\x13\x87\x4e\x66\xc2\xe4\x8e\xb6\x88\xef\x5e\x74\x12\xa9\x50\xa5\xab\xf9\x73\xcf\xf9\x71\xee\x31\x6d\xe7\x83\xe0\xf5\x93\xda\xce\xf2\xce\x7f\xb0\x43\x1d\x7c\x8b\x5c\xa9\xa9\x52\x53\xed\x9d\x04\xd2\xd2\x4f\x7f\x4a\x94\xae\x74\x9e\x0d\xde\x75\x74\x8d\x29\x87\xc9\x1b\x0b\x55\x24\xf4\x6e\xf8\xd8\x3f\x20\x3d\x36\xdc\x71\xff\x82\x8a\x62\xac\x91\xaf\xd5\xed\xe3\x17\x5c\xd6\xc5\x12\x75\x74\x68\xc9\xb8\x82\xaa\x2a\x70\xdf\xcf\xb0\x4c\x97\xc9\xec\xc9\x02\x6a\xbd\xbb\x9c\xa7\x0c\xb0\x2c\x20\xad\x7d\x74\x82\x39\x1a\x96\x65\x7a\x8c\xc0\x49\x36\x88\x0e\x14\xad\x6c\xb9\xc6\x7c\xd4\x67\x00\xa0\x1a\x96\x15\x75\x54\x5e\x03\x17\x77\x6d\x6e\xb9\xf7\xf6\xc0\x61\x13\x4b\x6b\xf4\x86\x64\x3f\x49\x9e\xd2\x87\xe0\x8f\xff\xff\x9d\xee\x53\x8d\xfa\xf3\x4b\x91\x84\x8b\x05\x3a\x72\x46\x17\xf9\xca\x47\x5b\xc1\x79\x41\xf2\x82\x10\xb8\xe6\xc0\x4e\x33\xc4\x43\xf6\x9c\x12\x22\x0c\x90\xfc\x96\xbc\x96\x0b\x1e\xf3\x67\x85\x34\x2c\xa9\x93\xe2\x60\xf8\x38\x06\x99\xdd\xb6\xbe\xc2\x02\x4b\x0c\x6e\xe0\x65\xd9\xf9\x3b\x00\x00\xff\xff\x34\xf4\x4a\x54\x65\x02\x00\x00"

func scriptsGet_token_metadataCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_token_metadataCdc,
		"scripts/get_token_metadata.cdc",
	)
}

func scriptsGet_token_metadataCdc() (*asset, error) {
	bytes, err := scriptsGet_token_metadataCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_token_metadata.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x4b, 0x3c, 0xe4, 0x39, 0xa6, 0x8b, 0x45, 0x83, 0x32, 0xe5, 0xb5, 0xb9, 0x2b, 0xd8, 0xf5, 0x29, 0x8f, 0x20, 0x63, 0x3e, 0x2c, 0x22, 0x2c, 0x72, 0x4c, 0x51, 0xd7, 0x51, 0x89, 0xf1, 0x3, 0xdd}}
	return a, nil
}

var _scriptsGet_vault_dataCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x41\x6f\xe2\x30\x14\x84\xef\xf9\x15\xa3\x1c\x56\xe1\x12\xee\x68\x59\x84\xd8\xe5\xb6\x12\x42\x88\xfb\x8b\xf3\x12\xac\x3a\x76\xe4\x3c\x43\x2b\xc4\x7f\xaf\xc0\x49\x4b\xaa\x82\x7a\x4b\xec\x99\xd1\x37\x23\xeb\xa6\x75\x5e\xf0\xef\x95\x9a\xd6\xf0\xce\xbd\xb0\x45\xe5\x5d\x83\x34\xcf\xa7\x79\x3e\x55\xce\x8a\x27\x25\xdd\xf4\x5e\x92\xab\x52\xa5\x49\xef\x5d\x07\x5b\xeb\xa2\xbf\xf9\xcf\x42\x25\x09\xed\x35\x9f\xba\x07\x49\x8f\x0d\xa3\xdc\x9f\x44\x05\xd1\x46\xcb\xdb\xea\xe3\xe0\x9b\xb8\xa4\x0d\x05\xaa\x60\xd1\x90\xb6\x19\x95\xa5\xe7\xae\x9b\x61\x19\x3f\x26\xb3\x27\x05\xf2\xf5\x6e\x4f\xc1\xc8\x5f\x12\x3a\x27\x80\x61\x01\x29\xe5\x82\x15\xcc\x51\xb3\x2c\xe3\xcf\x90\x3a\x49\x7a\xd1\xf1\xea\xda\x72\x85\xf9\xa0\x4f\x00\x20\xaf\x59\x56\xd4\x52\x71\xa3\xce\x46\x93\x6e\xb9\x73\xe6\xc8\x7e\x13\x0a\xa3\xd5\x86\xe4\x30\x89\x9e\xc2\x79\xef\x4e\xbf\x7f\x9d\xc7\x68\x83\xfe\xf2\x27\x8b\xc2\xc5\x02\x2d\x59\xad\xb2\x74\xe5\x82\x29\x61\x9d\x20\x7a\x41\xf0\x5c\xb1\x67\xab\x18\xe2\x20\x07\x8e\x84\xf0\x7d\x48\x3a\x26\xbf\xf6\xc5\xfc\xd9\x30\x35\xcb\xdd\x36\xd9\xd0\xf7\x2b\x49\x7c\x50\xa5\xe3\xee\x86\xa3\xaf\x75\x1b\xb6\x82\x3b\x33\x8e\x9a\x4f\x11\xc0\xb3\x04\x6f\x3f\x19\x92\xe4\xf2\x1e\x00\x00\xff\xff\x4a\xf8\xa1\x0c\xa1\x02\x00\x00"

func scriptsGet_vault_dataCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_vault_dataCdc,
		"scripts/get_vault_data.cdc",
	)
}

func scriptsGet_vault_dataCdc() (*asset, error) {
	bytes, err := scriptsGet_vault_dataCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_vault_data.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xcf, 0x87, 0x2b, 0x47, 0xd9, 0x4, 0xb8, 0xe7, 0xcc, 0x67, 0x76, 0x37, 0x43, 0x45, 0x21, 0x7d, 0x15, 0x97, 0xfd, 0x6a, 0x4b, 0xf3, 0x13, 0xa4, 0x89, 0x1f, 0x9, 0x78, 0xa2, 0x30, 0x34, 0xfe}}
	return a, nil
}

var _scriptsGet_vault_displayCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x31\x6f\xc2\x30\x10\x85\x77\xff\x8a\x53\x86\x2a\x2c\x66\x47\xa5\x08\xd1\xb2\x55\x42\x08\x75\xbf\x38\x97\x60\xd5\xb1\x23\xfb\x0c\x45\x88\xff\x5e\x15\x27\x69\x53\x15\xd4\x2d\xb1\xdf\x7b\xf7\xbd\x93\x75\xd3\x3a\xcf\xf0\xf2\x81\x4d\x6b\x68\xe7\xde\xc9\x42\xe5\x5d\x03\x99\x94\x53\x29\xa7\xca\x59\xf6\xa8\x38\x4c\x7f\x4a\xa4\x2a\x55\x26\x3a\xef\x3a\xda\x5a\x17\xdd\xcd\x2b\x31\x96\xc8\xf8\xa6\xe9\x18\x6e\x24\xdd\x36\x8c\x72\xff\x13\x15\x59\x1b\xcd\xa7\xd5\x70\xf0\x47\x9c\x68\x63\x01\x55\xb4\xd0\xa0\xb6\x39\x96\xa5\xa7\x10\x66\xb0\x4c\x1f\x93\xd9\x9d\x02\x72\xbd\x7b\xd6\xa1\x35\x78\x3a\x0b\x00\x43\x0c\xa8\x94\x8b\x96\x61\x0e\x35\xf1\x32\xfd\xf4\x99\x13\xd1\x89\x0e\x18\x0d\x6f\xa9\x82\x79\xaf\x17\x00\x00\xb2\x26\x5e\x61\x8b\xc5\x95\x39\x1f\x2d\x74\x4b\xc1\x99\x03\xf9\x4d\x2c\x8c\x56\x1b\xe4\xfd\x24\x79\x0a\xe7\xbd\x3b\x3e\x3e\x9c\xc7\x60\xbd\xfe\xf2\x94\x27\xe1\x62\x01\x2d\x5a\xad\xf2\x6c\xe5\xa2\x29\xc1\x3a\x86\xe4\x05\x04\x4f\x15\x79\xb2\x8a\x80\x1d\xf0\x9e\x12\x21\xf8\x2e\x24\x1b\xc8\x2b\xee\xfa\xc2\xfc\xde\x5a\x6a\xe2\x61\x33\x79\xdf\xf6\x37\x47\x7a\x4c\xa5\xa3\x70\x85\xd1\x5f\x65\x1b\xb2\x0c\x83\x15\x0e\x9a\x8e\x69\xb8\x27\x8e\xde\x7e\xcf\x17\xe2\xf2\x19\x00\x00\xff\xff\x91\x0e\xee\xc8\x9b\x02\x00\x00"

func scriptsGet_vault_displayCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_vault_displayCdc,
		"scripts/get_vault_display.cdc",
	)
}

func scriptsGet_vault_displayCdc() (*asset, error) {
	bytes, err := scriptsGet_vault_displayCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_vault_display.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xbf, 0x96, 0xe0, 0x36, 0x18, 0x50, 0x67, 0x32, 0x6b, 0x79, 0x0, 0x41, 0x69, 0x2a, 0xf0, 0xae, 0x10, 0xea, 0x78, 0x67, 0x3f, 0xe3, 0x91, 0xd4, 0xaa, 0x75, 0x8, 0xf2, 0xe, 0xfc, 0x28, 0x65}}
	return a, nil
}

var _scriptsSwitchboardGet_vault_typesCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\x41\x6b\xdd\x30\x10\x84\xef\xfa\x15\xc3\x3b\x14\xbf\x8b\x7d\x0f\x4d\x43\x08\xb4\xd7\x90\x3e\x7a\x29\x85\xc8\xd2\xda\x16\xb5\xb5\x66\xb5\x6a\x08\x21\xff\xbd\xc8\x6a\x1a\xbf\xd2\x40\x8c\x0f\xc6\xfa\x66\x46\xbb\x13\x96\x95\x45\xf1\x39\xc7\x31\xf4\x33\x9d\xf8\x27\x45\x0c\xc2\x0b\x0e\x6d\xdb\xd5\xd7\x71\x54\xb1\x4e\x53\x77\x86\xb5\xce\xbb\x83\xf9\x9f\xc1\xd7\x87\xa0\x6e\xea\xd9\x8a\x7f\xa7\xd7\x4e\x51\x6d\x4d\xd7\xe1\x34\x85\x84\xe4\x24\xac\x0a\x21\xeb\x13\x74\x22\x24\x65\x21\x8f\x5f\x36\xcf\x0a\x67\x57\xdb\x87\x39\x68\xa0\x54\xa3\x2c\xd2\x2e\x9d\x63\xd1\x14\xb3\xd5\xa6\x44\x1e\xd6\x39\xce\x51\xcd\x9a\x7b\x0c\x39\x62\xb1\x21\x36\x7f\x7e\x5e\xe0\xda\x7b\xa1\x94\x8e\x17\xf8\x7e\x7a\x5c\xe9\x07\x9e\x8c\x01\x80\x99\xb4\x28\x15\x97\x18\x49\xaf\x2b\xfe\x22\x3b\x56\xa6\xeb\xf0\xa5\x60\x10\x1a\x48\x28\x3a\x82\x72\xbd\xf1\xee\x42\x8e\xe3\xc0\xb2\x84\x38\x96\xd3\xdd\xd8\xb7\xb9\x9f\x83\xfb\x9b\xb6\xd3\xdc\xd1\x80\xcb\x2d\xbe\x1d\x49\x6f\x5e\x26\x7e\x6c\xde\xdc\x60\xf5\xba\xb5\x3a\x1d\x37\xc3\xf2\xb4\x3d\x8b\xf0\xc3\xc7\x0f\x6f\xaa\x76\xdf\x4f\xef\x81\x6a\xca\xf3\xa7\xe6\x35\xe4\xea\x0a\xab\x8d\xc1\x35\x87\x1b\xce\xb3\x47\x64\x45\xcd\x3d\xdf\xca\x6e\xba\xc3\xeb\xfa\xee\x48\xb3\x6c\x85\x41\x28\x95\x7a\x79\xc0\xfd\x48\xfa\xad\x74\x5d\x0a\x49\xcd\xf1\x7e\xa3\xa5\xa2\xe7\x5b\x6a\xff\x41\x8d\x79\x36\xbf\x03\x00\x00\xff\xff\x71\x17\x69\x75\xe0\x02\x00\x00"

func scriptsSwitchboardGet_vault_typesCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsSwitchboardGet_vault_typesCdc,
		"scripts/switchboard/get_vault_types.cdc",
	)
}

func scriptsSwitchboardGet_vault_typesCdc() (*asset, error) {
	bytes, err := scriptsSwitchboardGet_vault_typesCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/switchboard/get_vault_types.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa7, 0xa0, 0x24, 0xa9, 0x96, 0x49, 0x9c, 0xfc, 0x87, 0x3d, 0xed, 0xda, 0x8a, 0x6a, 0x3d, 0x24, 0x20, 0x8b, 0x27, 0x64, 0x76, 0xdd, 0x30, 0x44, 0xc0, 0x31, 0x43, 0xed, 0x19, 0xf0, 0xd0, 0xd3}}
	return a, nil
}

var _setup_accountCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x53\x41\x6b\xdb\x4c\x10\xbd\xeb\x57\xbc\x2f\x87\x0f\x1b\x52\xeb\x1e\xd2\x40\x1a\xd2\x5b\x21\xa4\x21\xf7\xf1\x6a\x2c\x2d\x59\xef\x8a\xd9\xd9\x38\x22\xf8\xbf\x17\xad\x65\xe1\x6d\x4c\x0b\xa5\x54\x37\xcd\xbe\x79\x33\xef\xcd\x4c\x5d\xe3\xa9\xb3\x11\x2a\xe4\x23\x19\xb5\xc1\xc3\x46\x10\x94\xb7\xbd\x23\x65\x6c\x82\x8c\xbf\x27\xef\x1a\x40\xce\x85\x1d\xaa\xba\x06\xf9\x21\x78\xce\xb1\xa6\x01\xe1\x99\x92\x53\x08\xc7\x90\xc4\xe4\xb8\x76\x6c\x05\x64\x4c\x48\x5e\x11\xc7\x00\x69\xce\xd5\x8e\x07\x18\xf2\x48\x91\xc7\x1f\xf0\x1b\x6d\x7b\xc7\x4f\xe1\x85\x7d\x55\xd9\x6d\x1f\x44\xf1\x35\xf9\xd6\xae\xa7\x28\x36\x12\xb6\xb8\x58\xd5\xab\x55\x6d\x82\x57\x21\xa3\xb1\x2e\x20\x2b\xd3\x98\x8b\x63\xf2\xfd\x09\xe3\xf9\xdc\x53\x44\x91\xfa\x8d\x95\x1a\x52\x7a\xb6\xbc\x8b\xe7\x73\x93\x5a\x67\x75\xb8\x9b\x03\x45\xce\x81\xad\x3a\xb5\x6e\xb1\xc4\x7b\x55\x01\x40\x2f\xdc\x93\xf0\x22\xda\xd6\xb3\x5c\xe1\x36\x69\x77\x7b\xf0\x68\xc6\x8c\x5f\x5d\xe3\x91\x35\x89\x07\x93\xb8\x01\x76\x93\x9d\x3a\xda\x49\x4e\x98\x9a\x01\x51\x83\xf0\x38\xb7\x42\x70\x1e\xc6\x4c\x65\x37\x38\x54\x5b\xad\x83\x48\xd8\x5d\xff\x5f\x68\xcf\xe0\x9b\xc5\x28\xf4\x0a\x1f\x5f\xbe\x6b\x10\x6a\xf9\x81\xb4\x5b\xe2\xbf\xcf\xf0\xd6\xe1\x7d\xe6\x1e\x3f\xc9\x7d\xce\xa1\x7d\x21\xe2\x4e\x78\xdc\x26\x82\xe7\xdd\x99\x26\x41\xbe\x41\x9f\x14\x56\x61\x7d\x96\x43\x2d\xcf\x04\x53\xdf\x91\x5e\x79\x51\xd4\xbc\xfe\x54\xce\x2f\x57\xb9\xdf\xf6\x3a\x64\xda\xc5\xf2\xb2\x80\x6b\xf8\x8d\xb4\x19\xbd\x3c\xdf\x7d\x9f\xd6\xce\x1a\x18\xea\x69\x9d\x67\x3f\x6d\xf8\xa4\x22\xaf\x76\xf0\x6e\x00\xbf\xf5\x21\x72\x3c\x25\x19\x61\x0d\xf7\x21\x5a\xc5\x26\xf9\xe9\x98\x3a\x09\xa9\xed\xf2\xe3\x23\x1b\xb6\xaf\x2c\xb0\x5e\x59\x36\x64\x3e\x18\xe0\xac\x7f\x39\x37\xb6\xf7\xf2\x02\x8e\x44\xfb\x9b\xd2\xad\x22\xf1\x08\x7a\xc8\x92\x46\xf1\x3f\x79\x45\xd2\xb2\xfe\x03\xbf\x26\xab\x72\xf8\x0b\x39\xf2\x86\xf3\x3a\x3c\x72\x0c\xae\xb0\x23\xfe\xa1\x1f\x13\xeb\x65\x79\xd3\xab\x63\x81\x5f\xda\x94\xf9\xfe\x96\x47\x87\xbb\xd8\x57\x3f\x02\x00\x00\xff\xff\x89\xb1\xc8\xb7\x77\x05\x00\x00"

func setup_accountCdcBytes() ([]byte, error) {
	return bindataRead(
		_setup_accountCdc,
		"setup_account.cdc",
	)
}

func setup_accountCdc() (*asset, error) {
	bytes, err := setup_accountCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "setup_account.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xca, 0xd5, 0x89, 0x2, 0x33, 0x91, 0xef, 0x3a, 0xb7, 0x26, 0x5d, 0x55, 0x19, 0x1b, 0xb0, 0x10, 0xf5, 0xa9, 0x34, 0xbf, 0xc1, 0xb0, 0x5e, 0x50, 0xc1, 0x2c, 0x51, 0x51, 0xdf, 0x6f, 0xe1, 0x95}}
	return a, nil
}

var _setup_account_from_vault_referenceCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x95\xcf\x6e\xdb\x30\x0c\xc6\xef\x7e\x0a\x22\x87\xce\x05\x52\xe7\x1e\xa4\x2d\xda\x6c\xdd\x69\x40\xd1\x65\xbb\x33\x32\x1d\x0b\xb5\x25\x83\xa2\xe3\x15\x45\xde\x7d\x90\xfc\x27\x76\x96\xb6\x03\xb6\x1c\x0a\x83\x26\x3f\xfd\xf8\x99\x54\x75\x59\x59\x16\x78\xa8\xcd\x4e\x6f\x0b\xda\xd8\x67\x32\x90\xb1\x2d\x61\x96\x24\x0b\x65\x8d\x30\x2a\x71\x8b\x49\x42\xa2\x52\x35\x8b\xce\x95\x7e\x23\xc1\x14\x05\x7f\x6a\x6a\xdc\x87\x3a\x93\xec\x89\xe8\x87\x3a\xb5\xe8\x42\xcb\xcb\x7a\x08\x9c\xd1\x8a\x16\x8b\x05\x6c\x72\xed\x40\x18\x8d\x43\x25\xda\x1a\xd0\x0e\x9a\x1c\x05\xd0\x00\x2a\x65\x6b\x23\xd0\xd8\xba\x48\x81\x6b\x13\x2a\xc4\x82\x23\x01\x2d\x8e\x8a\x0c\xea\xca\x07\x4a\x34\xb8\x23\xc8\x3a\x7a\x10\x8f\xef\x92\x56\x3d\xab\x4d\x90\x0e\xd5\xb5\x23\x07\xfb\x80\x2d\x16\x9e\x8d\x6d\xa0\xc9\x89\xa9\x97\xf5\x7a\x39\xc1\x1e\xeb\x42\x42\x81\x36\xe0\xc4\xb2\x97\x47\x93\xfa\x34\xc5\x84\x42\x21\x8d\xca\x4a\x5e\xda\xe4\x24\x8a\x46\x6d\xc4\x98\xa6\x4c\xce\x2d\xe1\xae\x7d\x98\x43\x55\x6f\x0b\xad\x1e\x51\xf2\x25\x3c\x0e\xcf\x97\xf0\x1a\x45\x00\x00\x15\x53\x85\x4c\xb1\xd3\x3b\x43\xbc\x84\xbb\x5a\xf2\xbb\xd6\x00\x9f\x03\xdd\x6f\xb1\x80\x7b\xcb\x6c\x1b\x40\x60\xca\x88\xc9\xa8\x00\x3f\x50\x07\x5c\x4a\xc1\x9a\x10\xab\xd0\x39\x4a\x07\x2f\x51\xc6\xd1\x23\xd3\xf8\x00\x6b\x8a\x17\x50\xc8\xda\xec\x00\xb7\xb6\xf6\x66\x83\xb2\x26\xb3\x5c\xfa\x58\x77\xda\xf4\x93\x3e\x91\xb3\xc5\x9e\x18\xb4\x11\xe2\x0c\x15\x0d\x92\x05\x09\x70\xf7\xfa\x89\x32\xb8\x86\x1d\x49\xd7\x5b\x6f\xd4\xe5\x90\xed\x7f\xc9\x8e\x64\x8d\x15\x6e\xc3\x14\xc5\x47\xcc\x93\xb4\x6d\xb0\x62\x75\xf1\x7a\x9e\xe5\x70\x13\x4f\x0b\x6e\x6f\xa1\x42\xa3\x55\x3c\x5b\x87\x99\x32\x56\x60\xfb\x81\x9d\x7e\x58\x06\x7c\x98\x5d\x46\x63\xab\x7e\x38\x3f\x08\x28\xd3\x62\x26\x61\x4d\xfb\x76\x46\x1e\x36\x1e\x0a\x26\x6e\x64\x12\x62\xd7\xef\x6c\xa7\xb7\xa0\x2d\x8d\x3d\x41\xdf\xd2\x72\xec\xe4\x94\xe5\x2b\x49\x7f\xa0\x07\xff\x8c\x82\x2d\x7c\xd8\xcf\xf0\xe7\xc8\x73\x8a\x33\x54\x5c\x77\x70\xc9\x38\xd8\xfb\x06\xf1\x6c\x93\x53\x3f\x61\xad\x3f\xa9\x4e\xcd\x27\x01\x5d\x56\x05\x95\x64\x64\x64\x5d\xda\x23\x9c\xb8\xb6\x6e\x37\x08\xc1\x50\x33\xde\x21\xa8\x5d\x98\xaf\x9c\xba\x25\xfb\xe2\xdf\x05\x8c\x61\x8b\x41\x1b\xa7\x53\x3a\xed\x74\xd2\x0f\x1d\xcb\x56\x57\xa3\x3e\x92\x53\xd5\x78\xca\xf5\x1d\xf7\xe4\x67\xbd\xfb\xfe\xdd\xce\x0c\x19\xed\x6a\x26\x0e\xf7\x14\xaf\xae\x8e\x87\xcc\x41\xec\x72\x6c\x62\xd2\xdd\x18\xed\xc4\x9e\xed\xbc\x1d\x69\x50\xc3\x90\x43\x66\x79\x64\x1d\xfd\xaa\xec\x60\x06\x93\x22\x7d\x7e\xb7\x3a\xa6\x42\x9b\xe7\xd5\xc5\xeb\xf4\xdf\xc0\x53\x57\x76\xb8\x89\x27\x5b\x30\x26\xed\xa5\x3d\xea\x7c\x92\x25\xc8\x3b\x92\x37\xfb\x1a\x72\xff\x47\x83\x5b\x2c\xd0\xef\x8e\xbf\x61\xf9\x8f\x8b\xc4\xfd\x55\xb7\xf7\xad\xc6\xfc\x8d\x7b\xe9\x3d\x13\xca\xae\xe2\x9f\x4d\x38\x44\x87\x08\x7e\x07\x00\x00\xff\xff\x3f\xe9\xc9\x9a\xb4\x07\x00\x00"

func setup_account_from_vault_referenceCdcBytes() ([]byte, error) {
	return bindataRead(
		_setup_account_from_vault_referenceCdc,
		"setup_account_from_vault_reference.cdc",
	)
}

func setup_account_from_vault_referenceCdc() (*asset, error) {
	bytes, err := setup_account_from_vault_referenceCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "setup_account_from_vault_reference.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x51, 0x88, 0x65, 0xae, 0x35, 0xfb, 0xb4, 0xae, 0x1f, 0x23, 0x7, 0xe3, 0xcd, 0x47, 0x7, 0x35, 0x37, 0xfd, 0xe, 0x8b, 0xff, 0x21, 0x11, 0x33, 0xac, 0xc1, 0x53, 0x89, 0x77, 0xdc, 0x4a, 0x72}}
	return a, nil
}

var _switchboardAdd_vault_capabilityCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x4d\x8b\xdb\x30\x10\xbd\xfb\x57\x0c\x39\x6c\x1d\x28\xf6\xdd\xec\x76\x09\xa1\xed\xad\x2c\x9b\xa5\xf7\xb1\x3c\xb6\xc5\xda\x92\x91\xc6\xf9\x60\xc9\x7f\x2f\x92\x13\x57\x6a\x93\x4d\x4c\x08\x09\x9e\x79\x7a\xef\xcd\x1b\xc9\x7e\xd0\x86\xe1\xc7\xa8\x1a\x59\x76\xf4\xa6\xdf\x49\x41\x6d\x74\x0f\x8b\x2c\xcf\xfc\x47\x68\xc5\x06\x05\xdb\x3c\xaa\xca\x44\x25\x16\xc9\xa5\xfe\xcd\x4e\xb2\x68\x4b\x8d\xa6\xba\x0f\x2a\x68\x88\x50\xbf\xef\xb1\x1f\x6e\x91\x0a\x8b\xa6\xee\x24\xcf\xe1\xad\x95\x16\xd8\xa0\xb2\x28\x58\x6a\x05\xd2\x02\x02\x53\x3f\x74\xc8\x04\xb5\x36\xee\x6f\xf0\x9e\x5b\x64\xd7\x28\xf4\xd8\x55\x50\x12\x8c\x96\x2a\x28\x0f\x80\xea\xa0\x15\x01\x6b\xc0\xaa\x02\x04\x45\x3b\xa8\x4f\xec\x81\x3d\xb5\x2d\x8e\xdd\xd4\x8c\x03\x96\xb2\x93\x7c\x70\xf5\xdc\x92\x34\x60\x03\x37\x0c\x59\x3d\x1a\x41\x49\x78\xf2\x47\x92\x00\x00\x74\xc4\x40\x81\x96\xdf\x0e\x74\x3d\x01\xf2\xa1\x80\xf5\x8c\xfd\xf8\xf0\x11\x4f\xe2\x95\x04\xc9\x2d\x99\xe3\xb7\x19\x29\x38\xf5\x95\xea\x02\xe0\xe1\xaa\xe3\xc1\xef\x89\xc9\x60\x68\x40\x43\xa9\x95\x8d\x22\x53\xc0\x6a\xe4\x76\x25\x84\x1e\x15\x2f\xcf\x6c\xdd\x93\xe7\xf0\x93\xd8\xc9\x3c\x13\x0f\xfd\x08\xcd\xf0\xb3\x73\x75\x13\xe4\x17\x0b\x38\xe1\xcd\x58\x96\xba\x3a\xbb\x2e\x1f\x9e\x60\x2e\xf5\xe5\x1e\x27\x6b\x88\xef\xb7\xe5\xb3\x27\x8d\x52\x74\x6e\x7c\x19\xcb\x4e\x8a\x17\xe4\x76\x39\x23\x84\xea\xd7\x2d\x89\x77\x90\xb5\x97\x66\x4e\x4d\xa1\x6e\xda\x4b\xcb\x76\x6e\x41\x6b\xc9\x70\x7a\x43\x6b\x26\x1c\x6c\xba\xfc\x1a\x4b\xee\xc9\x5a\x6c\xa8\x80\xc5\xc6\x8b\x87\x4a\x93\x05\xa5\x19\x5a\xdc\x12\xe0\x79\x5b\x60\x5a\x97\x0b\x74\x16\x97\x55\xb8\x19\x22\x18\xaa\xc9\x90\x12\x74\x4a\xee\xc9\x62\x1b\x26\x29\x9e\x56\x1c\x31\x78\x3a\x0f\xa5\xd4\xc6\xe8\xdd\xe3\x5d\x81\x8b\x27\x93\xba\x9c\x14\x57\x2f\x93\x6c\xc3\xda\x60\x43\x7e\x20\xb1\x39\xcf\xcf\x30\xa0\x92\x22\x5d\xac\xfd\xfe\x3a\x5b\x26\x1e\xb1\xb0\x80\xf3\xc9\x0d\xff\x75\x9c\x42\x4d\x7b\x12\x23\xd3\x3f\x19\x5f\x55\x95\x37\xe4\xbf\xe5\x8e\x56\x7b\xb4\x52\x35\xee\x8a\xf8\x45\x3b\x3f\x4f\xe8\x89\x5b\xfd\xa9\x67\x59\x50\x9e\xfe\x85\x2f\x6e\x6d\x43\xcc\xfc\x98\xfc\x09\x00\x00\xff\xff\x71\x1a\x26\xe4\xc5\x05\x00\x00"

func switchboardAdd_vault_capabilityCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardAdd_vault_capabilityCdc,
		"switchboard/add_vault_capability.cdc",
	)
}

func switchboardAdd_vault_capabilityCdc() (*asset, error) {
	bytes, err := switchboardAdd_vault_capabilityCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/add_vault_capability.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x39, 0xe0, 0x90, 0xa2, 0xf6, 0xae, 0xd6, 0x66, 0xbb, 0x70, 0x5, 0x42, 0xb2, 0xd3, 0x4c, 0x0, 0x38, 0xd2, 0xf3, 0x1c, 0xb2, 0xe1, 0xd6, 0xc9, 0xec, 0xd, 0x43, 0x9f, 0x50, 0x5c, 0x59, 0x98}}
	return a, nil
}

var _switchboardBatch_add_vault_capabilitiesCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x51\x6b\x1b\x3d\x10\x7c\xf7\xaf\x18\xfc\xf0\xe1\x40\x38\xbf\x9b\x2f\x0d\x6e\x69\xfb\x56\x42\x12\xfa\x12\x02\xd9\x93\xf6\x7c\xa2\x67\x49\x48\x7b\x76\x4c\xc9\x7f\x2f\xd2\x9d\x2f\x72\xb0\x4b\x0f\x63\x64\x6b\x77\x34\xb3\x33\x3a\xb3\xf5\x2e\x08\xbe\xf5\x76\x63\xea\x8e\x1f\xdd\x2f\xb6\x0f\x7b\x23\xaa\xad\x1d\x05\x8d\x26\xb8\x2d\xe6\xd5\xb2\xca\x1f\xe5\xac\x04\x52\x12\x97\x97\x1a\x2a\xa5\xd5\x7c\x36\xa2\x7e\x7d\xa5\xad\x1f\x6b\x2e\x22\x95\x45\x43\xf7\x6c\xb9\xc4\x63\x6b\x22\x24\x90\x8d\xa4\xc4\x38\x0b\x13\x41\x10\xde\xfa\x8e\x84\xd1\xb8\x90\x7e\x16\xfb\xd2\x92\x40\xb9\xbe\xd3\xa8\x19\x7d\x64\x8d\xfa\x00\xb2\x07\x67\x39\x01\x8a\x03\x69\x8d\xc8\x3b\x0e\xd4\xc1\xf2\x1e\xcd\xa8\x01\x92\x09\xee\xa8\xef\x24\x5e\xa3\xe6\xce\xd9\x8d\xb1\x9b\xdc\x03\xc5\x41\xc8\x58\xbc\xac\xb5\x0e\x1c\xe3\x4b\xfa\x3b\x23\xb6\x6c\x02\x62\x31\xac\xc0\xd1\xf5\x41\x71\x35\x2b\x99\x2d\x68\x68\x5c\x61\x44\xb8\xc2\xef\xd9\x0c\x00\x3a\x16\x70\x21\xff\x67\x62\x70\x47\xd2\xae\x70\xd7\xd7\x9d\x51\x69\x3d\x55\xee\x8e\xbb\x71\x85\xa7\xf7\xfd\xe7\xa9\xa0\xa0\x72\xcf\xcd\x0a\xf8\xef\xa2\x4b\xc5\x7a\xa0\xe2\x03\x7b\x0a\xbc\x88\x66\x63\x39\xac\xb0\xee\xa5\x5d\x2b\xe5\x7a\x2b\x13\xdd\xf4\x2c\x97\xf8\xce\x92\xb4\x1f\x99\x97\xd3\x83\x27\x69\x07\xa7\x53\xc5\xd1\xe4\xa9\x3b\x72\xd7\x54\x67\x15\xe3\xe6\x24\x2d\xd5\x3d\x2b\x36\x3b\x0e\x1f\xe6\x00\x94\x4c\xd6\x56\x23\x8a\x0b\x0c\x23\x30\x36\x9f\x49\x21\xd0\x01\xae\x81\xcf\x9d\x99\x51\x1c\xd2\xb1\x37\x5d\x97\xc2\xe1\x29\xa6\x78\x88\x4b\x0d\x25\x5e\xe9\xe5\x96\xa5\x75\xfa\x94\xf9\xbb\x03\xb8\xc1\xd3\xf3\xa5\xcd\x8a\xbc\x67\xab\x17\x97\xd5\x5e\x9d\x11\x93\xc6\x4a\x08\xdc\x70\x60\xab\x78\xa4\x87\xc1\x90\x58\x72\x3b\x3d\xf7\xd4\x75\xdc\x8c\x1d\x55\xed\x42\x70\xfb\xff\xff\x29\x03\x9f\x26\xc8\x73\xcf\x22\x19\xba\xba\xf8\x8e\xa8\x1e\xc4\x05\xda\x70\x16\x86\xbf\x22\xdd\xde\xc2\x93\x35\x6a\x31\xff\x92\x6f\xaa\x75\x82\x81\xe7\xa9\xf0\x42\xd3\x7c\x98\x55\xfe\x7a\x1b\x72\xc8\xaf\xac\x7a\xe1\xf7\x58\xa6\x28\x68\x3d\x44\x8e\x3c\xd5\xa6\x33\x72\x98\x06\x58\x98\xda\xc7\x74\xad\x49\xeb\x1f\xbc\xcf\x66\x9c\xda\x7c\x66\x9e\x55\x51\x1c\x3f\x1f\x72\x54\x17\x7e\xb8\x84\x1f\x6c\xbf\xc6\x74\xd1\xc7\xc5\xd5\xec\x48\xfb\xed\x4f\x00\x00\x00\xff\xff\x12\x90\x3f\xc3\x68\x05\x00\x00"

func switchboardBatch_add_vault_capabilitiesCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardBatch_add_vault_capabilitiesCdc,
		"switchboard/batch_add_vault_capabilities.cdc",
	)
}

func switchboardBatch_add_vault_capabilitiesCdc() (*asset, error) {
	bytes, err := switchboardBatch_add_vault_capabilitiesCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/batch_add_vault_capabilities.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb7, 0x5b, 0xa2, 0xff, 0x32, 0xb1, 0x4c, 0x1d, 0x39, 0x70, 0x29, 0xf3, 0xd, 0x8, 0xf3, 0xbf, 0x2e, 0x55, 0xf8, 0xbe, 0xd7, 0x46, 0x58, 0xa4, 0x52, 0xc6, 0xb1, 0xf9, 0x94, 0x8a, 0xa4, 0x5e}}
	return a, nil
}

var _switchboardRemove_vault_capabilityCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\x4d\x6f\xe2\x30\x14\xbc\xe7\x57\x8c\x38\x74\xe1\x92\xdc\x51\xb7\x55\x85\x76\xf7\x5a\xd1\x6a\xef\x8e\xf3\x92\x58\x9b\xd8\x91\xfd\x4c\x8b\x2a\xfe\xfb\x2a\x71\x20\xb6\x04\x6d\x11\x12\xc4\xf1\x8c\xe7\xe3\x59\xf5\x83\xb1\x8c\xdf\x5e\x37\xaa\xec\xe8\xd5\xfc\x23\x8d\xda\x9a\x1e\xab\xbc\xc8\xa7\xaf\x34\x9a\xad\x90\xec\x8a\x64\x57\x2e\x2b\xb9\xca\xae\xe1\x5f\xde\x14\xcb\xb6\x34\xc2\x56\xdf\xa3\x8a\x00\x09\xeb\xaf\x77\xd1\x0f\x5f\x89\x8a\x37\x05\x74\x56\x14\x78\x6d\x95\x03\x5b\xa1\x9d\x90\xac\x8c\x86\x72\x10\x60\xea\x87\x4e\x30\xa1\x36\x76\x7c\x8c\xde\x73\x2b\x78\x04\x4a\xe3\xbb\x0a\x25\xc1\x3b\xaa\x50\x1e\x21\xf4\xd1\x68\x02\x1b\x58\xea\xcd\x81\x50\xcf\xd2\xc1\x93\xae\x83\xf0\x5d\x40\x8a\x41\x94\xaa\x53\x7c\x0c\x5a\xb9\x25\x65\xe1\xa2\x30\x2c\x39\xe3\xad\xa4\x2c\x3e\xf8\x23\xcb\x00\xa0\x23\x06\x45\x56\xfe\x8e\xb4\xbb\x40\xc9\xc7\x2d\x76\x17\xf6\xfb\xbb\x8f\xb4\x88\x3d\x49\x52\x07\xb2\xa7\x87\x0b\x53\x74\xea\x9e\xea\x2d\x70\x77\x33\xf0\xe8\x7f\x50\x32\x58\x1a\x84\xa5\xb5\x53\x8d\x26\xbb\xc5\x93\xe7\xf6\x49\x4a\xe3\x35\x6f\xce\x6a\x81\xa2\xc0\x1f\xe2\xd1\xe4\x59\x76\x9c\xc7\xb5\x30\x10\x08\x7f\x38\x88\xc0\x36\x33\x39\xea\xea\xfc\xb6\x75\xfc\x9c\x81\x79\x43\xbc\xa4\x30\x83\xd3\xcf\x27\xd1\xac\x93\x39\x39\xaf\x3f\xfb\xb2\x53\xf2\x59\x70\xbb\x99\x09\x53\x7b\x02\x96\x6a\xb2\xa4\xe5\x34\x01\x8b\x0b\x97\x14\x8b\xd8\x4a\x9a\xfd\x22\xbf\x34\xd6\x9a\xb7\xfb\x6f\x35\xf1\x70\xb1\xb7\x1e\xe3\xdb\xde\xbc\x60\xf9\x0b\x1b\x2b\x1a\x9a\x2c\x20\x0a\xe5\xf1\x11\x83\xd0\x4a\xae\x57\xbb\x69\xa2\xb5\x61\x04\x05\xa9\xa5\x48\xed\x6a\x13\xca\x3d\x85\x1f\x7a\x27\xe9\x99\x92\xca\xf7\xe1\x0a\x8c\x39\x5c\x6d\x38\xca\xc4\x3b\xa5\x9b\x69\x75\x81\x87\x1b\x34\xf5\x8b\x9e\xb8\x35\xd5\xed\xe0\xf2\x68\xf3\x7a\x39\x6c\xfb\xd5\xbc\x84\x22\xcf\x46\x4e\xd9\xff\x00\x00\x00\xff\xff\xcc\x16\x42\xd8\xe2\x04\x00\x00"

func switchboardRemove_vault_capabilityCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardRemove_vault_capabilityCdc,
		"switchboard/remove_vault_capability.cdc",
	)
}

func switchboardRemove_vault_capabilityCdc() (*asset, error) {
	bytes, err := switchboardRemove_vault_capabilityCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/remove_vault_capability.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd3, 0x22, 0xd1, 0x28, 0x6, 0x45, 0x3e, 0x5d, 0x8f, 0xfe, 0x4, 0xb2, 0x26, 0xd5, 0x50, 0x86, 0x63, 0x74, 0x97, 0xa8, 0x7d, 0x38, 0x89, 0xf1, 0xf7, 0xa, 0xa0, 0x9, 0xb1, 0xf1, 0xde, 0xdb}}
	return a, nil
}

var _switchboardSafe_transfer_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x55\x4d\x6f\xdb\x38\x10\x3d\xc7\xbf\x62\xea\xc3\xc6\x06\x52\xf9\xb2\xd8\x83\x91\xb6\x1b\xb4\x9b\xbd\x16\x6d\x76\xf7\x4c\x91\x23\x89\x5b\x99\x23\x0c\x47\x51\x8c\x20\xff\xbd\x20\x29\xc9\x54\x3e\x50\x07\x41\x62\x92\xf3\xf5\x66\xde\x3c\xdb\x43\x47\x2c\x70\xdb\xbb\xda\x96\x2d\xde\xd1\x0f\x74\x50\x31\x1d\x60\x5d\xec\x8a\xf8\xab\xc9\x09\x2b\x2d\x7e\xb7\xb0\x2a\xb4\xd1\xeb\xd5\x6b\xfe\xdf\x07\x2b\xba\x29\x49\xb1\x39\x2f\x54\xe6\xb0\x88\xfa\xd7\x83\x3a\x74\xbf\x2a\x2a\x37\x4a\xde\xab\xdd\x0e\xee\x1a\xeb\x41\x58\x39\xaf\xb4\x58\x72\x60\x3d\x28\x10\x3c\x74\xad\x12\x84\x8a\x38\x1c\xb3\x77\x69\x94\x80\xa6\xbe\x35\x50\x22\xf4\x1e\x0d\x94\x47\x50\xee\x48\x0e\x21\x44\x14\x02\x8f\xce\x80\x84\x44\x3e\x1c\x95\x23\x69\x90\x41\x69\x4d\xbd\x13\x90\x86\xa9\xaf\x1b\x50\xe0\xb3\x0e\xf4\xde\xba\x1a\xa4\x41\xf0\xaa\xc2\x2f\xd8\x91\xb7\x12\x02\x1e\x50\x1a\x32\x45\x2a\x35\x1d\x60\xb0\x6d\x0b\x8e\x04\x3a\xe5\xac\x06\x5b\x25\xc7\x2c\x9c\x21\xf4\xd1\xa2\x51\xf7\x18\x5e\x43\x28\xad\x3a\x55\xda\xd6\xca\x31\x96\x29\xc4\xf1\x09\x0c\x7a\xcb\x68\xe0\xf6\xee\x0a\x18\xa5\x67\x37\xd5\x62\x52\x1d\x68\xe0\x5e\xf5\xad\x80\x75\x5e\x50\x99\x22\xf5\x0e\x61\xb0\xd2\x18\x56\x03\xa8\x43\xc4\xa6\x02\xf2\x06\x67\xac\x71\x1a\x35\xca\xcd\x78\x1e\xa6\xce\x05\xa3\x4e\xb1\x3a\xa0\x20\xfb\xa9\x73\xe1\x36\xeb\x76\xb1\xca\x0e\x1b\xa1\x3d\xdc\x18\xc3\xe8\xfd\xd5\x98\x6f\x0f\xff\xdc\xda\x87\x3f\x7e\xdf\xc2\xe3\x0a\x00\x20\xfe\x19\x4b\x63\xac\x90\xd1\x69\x9c\x02\x27\x04\xb1\xa2\x94\xfd\x88\x7c\xe9\xa7\x52\xa3\x6b\x8b\x92\xcc\xbe\x61\xb5\x87\xdf\x16\x9c\xf9\x37\xdc\xe7\x09\xe2\x05\x30\x7a\xea\x39\x64\x09\xcc\x68\xa8\x35\x3e\xc1\x18\xe7\x1f\x6e\x15\x23\x94\x18\x7b\x1a\xf0\x54\xc8\x8c\x66\x4e\xe8\xd1\x49\x8c\xb5\x87\x3f\x97\xab\x93\x52\x46\xc3\x8e\xb1\x53\x8c\x1b\x6f\x6b\x87\xbc\x87\x9b\x5e\x9a\xb1\xa9\x01\x7c\xb4\x19\x6b\xfb\x1b\x05\xd4\x4b\xf8\xc9\xf3\xd2\xa7\xb9\x8f\x03\x9d\xfd\x3c\xb6\x55\x31\x41\x87\x0f\xa3\x75\x51\x12\x33\x0d\xd7\xaf\x74\xe2\xe3\x26\x74\x72\x0f\x2f\x5f\xbe\x0b\xb1\xaa\xf1\xab\x92\x66\xbb\xba\xb8\xb8\xf8\xf4\x29\xd1\x74\xb3\xfe\x1c\xa7\x1f\x58\x99\xe2\xbe\x2c\x92\x86\x54\x63\x0c\xf4\x6e\xbd\x5d\x00\xfb\x6f\x22\xdb\xd8\xdb\x79\x94\x67\x40\x9b\x9b\x0c\xd7\xef\x17\x58\x8b\x89\xc2\x9b\x89\x52\xe9\xff\xf6\x44\xa8\xa7\x54\x05\x3e\xa0\xee\x05\x5f\xe9\xb6\x44\xba\x69\xdb\x59\x74\x72\xe9\xa1\xeb\xcb\xd6\xea\x79\x09\xa8\xfc\x1f\xf5\xa9\x9e\x30\xf3\xd9\x1a\x3e\x64\xeb\xb1\x11\xda\x9e\x33\xca\x3c\x57\xae\xa2\xdf\x50\xa3\xbd\x47\x5e\xa4\xca\x54\x21\x8d\x76\xf6\x2e\x6a\x94\xcf\xb3\x24\x6c\xde\xd4\xda\xaf\x11\x4e\x9a\x27\x64\x3f\x33\x3b\xde\xf4\xcc\x3e\x3f\x9e\x63\x94\x32\x3d\x7d\xdc\xfc\x9a\x38\x09\xe9\xb2\x37\x19\xd4\x77\xeb\xed\x3c\xbf\xc5\x87\xdd\x0e\x46\x71\x8d\xad\xac\x7a\x67\x3c\x44\x61\x5f\x08\xe8\xd5\x24\xaa\xa3\x02\x9e\x04\x55\x53\xe0\xbb\x60\x1e\x31\x18\xe6\xd2\x9c\x44\x34\x4b\x30\xea\x26\x50\x95\x20\xfd\xb0\xae\xbe\x02\x4f\x30\xe0\xa8\xd0\x94\xc7\x63\xd4\x14\xd0\x49\x43\x7e\x0c\x31\x3f\xdb\x2a\x8e\xd5\x91\x7c\x99\xc4\x79\x26\xf6\x62\xd4\x45\xf6\x45\x32\x2e\xeb\xf5\xfb\x67\xdb\xf0\x26\xfb\xb7\x8f\x8b\x51\x2f\x57\xc6\x3c\x0b\xfa\xa2\x96\x13\x4f\x9e\x4e\x7c\x36\xe8\x85\xe9\xf8\xac\x82\xc5\x9a\x3d\xad\x7e\x06\x00\x00\xff\xff\x59\xa7\x85\x8a\x69\x08\x00\x00"

func switchboardSafe_transfer_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardSafe_transfer_tokensCdc,
		"switchboard/safe_transfer_tokens.cdc",
	)
}

func switchboardSafe_transfer_tokensCdc() (*asset, error) {
	bytes, err := switchboardSafe_transfer_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/safe_transfer_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x44, 0xf5, 0x64, 0xe, 0x14, 0x3a, 0x20, 0xd9, 0xac, 0x33, 0x27, 0xea, 0x8b, 0x30, 0x98, 0x7f, 0xe, 0x1b, 0xb7, 0x78, 0x38, 0x25, 0xea, 0xd1, 0x16, 0x2d, 0x97, 0xf0, 0x94, 0x95, 0xef, 0xce}}
	return a, nil
}

var _switchboardSetup_accountCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x53\x4f\x6b\xe3\x3e\x14\xbc\xfb\x53\x0c\x3d\xfc\x48\xa0\xbf\xf8\x5e\xda\x42\x29\xec\xb9\x6c\xcb\xde\x9f\xe5\x67\x5b\x44\x91\x8c\xf4\xd4\x6c\x08\xf9\xee\x8b\xec\x24\x6b\x27\xf1\xe2\x1e\x6a\x04\xd1\xbf\x19\xbd\x99\x79\xd1\x9b\xd6\x79\xc1\x8f\x68\x6b\x5d\x18\xfe\x70\x6b\xb6\xef\x5b\x2d\xaa\x29\x1c\xf9\x12\x95\x77\x1b\xdc\xad\xf2\x55\x37\x94\xb3\xe2\x49\x49\xc8\xa7\x00\x2b\x55\xaa\xbb\xec\x16\xeb\x3c\xaa\x1e\x9f\xe5\x39\x3e\x1a\x1d\x20\x9e\x6c\x20\x25\xda\x59\xe8\x00\x82\xf0\xa6\x35\x24\x8c\xca\xf9\xb4\x1c\x9c\x4b\x43\x02\xe5\xa2\x29\x51\x30\x62\xe0\x12\xc5\x0e\x89\x8a\xec\xce\x59\x86\xb8\x34\xa8\x2c\x41\x18\x6a\xf4\x1c\x5c\xf4\xaa\xbf\xd0\xb0\xf6\x20\xa5\x5c\xb4\x82\xe0\x7a\x56\x69\x78\x07\x45\x36\x91\x79\x56\xac\x3f\x19\x9b\x68\x44\xb7\x86\x51\x1d\xeb\x87\x24\x01\x01\x31\x68\x5b\x83\x90\x7e\x0c\x63\x3f\xd6\xf7\xb3\x87\xfb\x43\x36\xac\x7d\x9f\x65\x00\xd0\x7a\x6e\xc9\xf3\x82\x94\x92\x07\xbc\x44\x69\x5e\xfa\x4a\x96\xa7\x1b\xe9\xcb\x73\xbc\x36\xac\xd6\xd0\x55\xaa\xec\x5c\x2d\x19\xcf\x54\xee\xd0\x50\x98\x50\x78\xa6\xd0\x55\x42\xc9\xaa\x70\xde\xbb\xed\xe3\x7f\x93\x71\x0e\xe6\xcf\x67\x34\xb0\x48\x61\x3e\x4c\xb6\xcd\xea\x5d\x9c\xa7\x9a\xdf\x48\x9a\x25\x9e\x9e\x60\xb5\xc1\x7e\x80\x07\x46\x8b\xa4\xc8\x73\x8a\x95\x60\x79\x7b\x3b\x1d\xb2\x25\xda\x28\xd0\x02\x6d\xc5\x21\xf4\x6f\x8c\x88\x3a\x51\x81\x3e\x79\x31\xda\x4e\xdf\xe3\xff\xd3\xe5\xaa\xee\xf1\xc1\xce\x62\x79\x8f\x2b\x06\x71\x33\x15\x67\x93\xe2\xda\x58\x18\xad\xa0\xa8\xa5\x42\x1b\x2d\xbb\x63\xcf\x8d\x14\xf3\xef\xd6\x75\x3d\x94\x0e\x4a\x4e\x0b\xb9\x64\xac\xa2\x3d\x75\xbd\x77\xb1\x6e\xba\xbb\x53\xad\x96\xfc\x62\x5f\x91\xba\x61\x96\xd1\x76\x3d\x2f\xff\x29\xf6\xe7\x6b\xaf\x27\xe9\x4e\xa0\xb7\xce\x87\x64\xd6\xfd\xb5\xcd\xe4\x6b\x96\x79\x56\x8f\xc0\xcb\x79\x0d\xf6\xb5\x0c\x0a\x27\x9d\xb9\x97\x74\xc7\x5c\xfe\x06\x91\xda\x33\xb1\xd4\x2c\xbf\x28\x1a\x79\x3d\xf1\x6b\x0e\x37\xe3\xba\x64\xdc\xcf\x09\xa1\x37\xee\x5b\x12\xfd\xf7\x8b\x5f\x49\xf9\x9b\xd3\x3d\x4f\x0e\xfd\x1f\xed\x90\x65\x87\xec\x4f\x00\x00\x00\xff\xff\x9f\xf3\xa6\x5c\xc9\x06\x00\x00"

func switchboardSetup_accountCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardSetup_accountCdc,
		"switchboard/setup_account.cdc",
	)
}

func switchboardSetup_accountCdc() (*asset, error) {
	bytes, err := switchboardSetup_accountCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/setup_account.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x38, 0xbb, 0x19, 0xd2, 0xa7, 0x5a, 0xd3, 0xc3, 0xaa, 0x19, 0x2b, 0x9, 0x76, 0xba, 0x7c, 0xe4, 0xaf, 0x43, 0x7e, 0xd9, 0x81, 0xec, 0x6a, 0x5a, 0xec, 0x50, 0x3b, 0x5, 0xbe, 0x3c, 0xb5, 0x14}}
	return a, nil
}

var _switchboardTransfer_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x4d\x6f\xdb\x48\x0c\x3d\xc7\xbf\x82\xeb\xc3\x46\x06\x1c\xf9\xb2\xd8\x83\x91\x8f\x0d\xb2\x4d\xaf\x41\x9a\xb6\x67\x6a\x44\x4b\xd3\xca\x43\x81\x43\xc5\x31\x82\xfc\xf7\x62\x66\x24\x45\x4a\x0a\xa4\x41\x60\x59\x1c\x3e\xf2\xf1\xf1\x8d\xed\xbe\x65\x51\xb8\xed\x5c\x65\x8b\x86\x1e\xf8\x27\x39\xd8\x09\xef\x61\x99\x6f\xf2\xf8\x6f\xd8\xa9\xa0\x51\xbf\x99\x65\xe5\xa6\x34\xcb\x45\x8f\xff\xf4\x84\xfb\xf6\x23\xf8\x34\x29\xa1\x17\x9b\x0d\x3c\xd4\xd6\x83\x0a\x3a\x8f\x46\x2d\x3b\xb0\x1e\x10\x94\xf6\x6d\x83\x4a\xb0\x63\x09\xaf\x93\x73\xad\x51\x03\xd0\x70\xd7\x94\x50\x10\x74\x9e\x4a\x28\x8e\x80\xee\xc8\x8e\x40\x19\x3c\xb9\x12\x34\xf4\xf1\xe1\x15\x1d\x6b\x4d\x02\x68\x0c\x77\x2e\x82\xb5\x16\xee\xaa\x1a\x10\xfc\xc1\xaa\xa9\x0b\x46\x29\xd7\x80\x1e\x1a\x76\x55\x78\x6a\x4d\x47\xa8\xf1\x91\xc0\x93\x42\xd7\x86\x80\x95\x80\x9d\x20\x00\x5d\x99\x92\xb0\x2c\x43\x06\xb4\xc2\x2d\x09\x18\x6c\xb1\xb0\x8d\xd5\x63\x20\x60\x43\xcf\x34\x6c\xcc\x14\xf2\x1e\x78\x17\x01\x42\x86\xec\xe3\x2b\xbb\x75\x8c\xe2\x3e\x7c\x0f\xd8\x38\xfa\x8e\x62\xe7\xd0\x2d\x9c\xde\x75\x45\x63\xcd\x1d\x6a\x1d\xf5\x09\xa1\x8a\x1c\x89\x35\x70\xfb\xf0\x5a\xf1\x60\x9b\x26\x08\xa4\x35\x05\x74\x8b\x82\x7b\x52\x12\xbf\x98\xe8\x99\x29\x6f\xe1\x3a\x71\x5a\xf7\x7d\xb7\xf0\xf5\xd6\x3e\xfd\xfb\xcf\x7a\xac\x15\x7a\x6d\x27\x7d\x57\xf0\xbc\x58\x00\x00\xf4\x43\x3d\x62\xd7\x28\x08\x79\xee\xc4\x50\xdc\x11\xd4\xdc\x94\x51\xc7\x71\x15\x21\x8a\x42\x50\x90\x75\xd5\x38\x99\x50\x19\x4b\x35\xa4\x61\x73\xfa\x2d\xd4\xda\xc2\x7f\x73\xbb\xc5\x68\xea\xd9\x0a\xb5\x28\x94\x79\x5b\x39\x92\x2d\x5c\x77\x5a\x5f\x27\xf5\x46\x5e\x3d\xb7\xcf\xa4\x80\x20\xb4\x23\x21\x67\xa2\x39\x02\xa1\x84\x3c\xf5\xe0\x95\x85\xca\x44\x7f\xc4\x05\x22\x31\x72\x4f\x3b\xb8\xe8\x93\xf3\x82\x45\xf8\x70\xfe\xf7\xcc\xc6\x91\xd5\x65\x16\x2c\xbf\x85\xf7\x27\x5f\x94\x05\x2b\x8a\x8a\x2d\x4e\x4e\x4e\xae\xae\xa0\x45\x67\x4d\xb6\xbc\x89\xee\x75\xac\x90\xea\xbe\xe7\xc8\x87\x44\x31\x16\xfa\x6b\xb9\x9a\xcd\xf5\xdd\x6a\x5d\x0a\x1e\x06\x69\xe3\x9d\xfb\x78\x32\x4f\xcd\x2e\x1f\x35\x86\xf3\xb3\x71\xce\xfc\xd0\x57\xcc\x06\x0b\xa4\xe7\x2a\x62\xe3\xc7\x4b\x62\x40\x4f\x64\x3a\xa5\xdf\x08\xdd\xdb\xd9\xb6\x96\x9c\x9e\x7a\x68\xa3\x5d\x06\x63\x03\x17\x3f\xc8\xcc\x55\x1e\xb3\xe1\x02\x2a\xd2\x7e\x89\x99\xf2\xea\x4f\xb6\x38\xed\x75\xdf\x1b\xf5\x6d\xf9\x18\x4c\x7b\x1c\xd3\xc7\x9c\xf0\x97\x57\xa4\x37\xe3\x6d\xcd\xa6\x86\x5f\xcd\x13\x07\x03\x3c\xcf\x8d\x39\x74\x7e\xb9\xcc\x3e\xde\x71\x7f\x33\x67\xa3\x4c\x7e\x4f\xde\xae\xf9\x7f\x6a\xd9\xdb\xa4\xec\xb0\x20\x37\xec\xdc\xba\x77\x2a\xc8\x5b\x15\x26\x0a\xe4\x65\x2a\xd6\x9b\xf5\xfc\x6c\x6e\x86\xf9\xa2\x5f\x16\xbf\x02\x00\x00\xff\xff\x0a\xbd\xa7\xe3\x1a\x06\x00\x00"

func switchboardTransfer_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardTransfer_tokensCdc,
		"switchboard/transfer_tokens.cdc",
	)
}

func switchboardTransfer_tokensCdc() (*asset, error) {
	bytes, err := switchboardTransfer_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/transfer_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb3, 0x83, 0x7a, 0x50, 0x75, 0x15, 0x12, 0x66, 0x9, 0x4f, 0x79, 0xe7, 0x81, 0x84, 0xbd, 0xea, 0x8, 0x1c, 0x18, 0x53, 0x59, 0x9b, 0x0, 0x23, 0x7b, 0x90, 0x78, 0xc9, 0x31, 0xaa, 0x6c, 0x48}}
	return a, nil
}

var _transfer_many_accountsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x54\x3d\x6f\xdb\x30\x10\x9d\xa3\x5f\x71\xf1\xd0\xc8\x43\xe4\xa5\xe8\x20\xe4\x03\x46\xda\x74\x2a\x10\xa4\x69\x3b\x14\x05\x42\x51\x27\x89\x8d\x4c\x12\xc7\x53\x9c\x20\xf0\x7f\x2f\x28\x52\x82\x1c\x19\xae\x17\x03\x3c\xbe\x77\xef\xee\x3d\x51\x6d\xac\x21\x86\xdb\x4e\xd7\xaa\x68\xf1\xc1\x3c\xa1\x86\x8a\xcc\x06\x16\x59\xb6\x92\x46\x33\x09\xc9\x6e\xb5\x77\x21\x93\xa5\x5c\x24\x11\xfa\xe5\x45\x6c\xec\x11\xe4\xb4\x1e\x80\xc9\x6a\xb5\x82\x07\x12\xda\x55\x48\x0e\xd8\x57\xfc\x1f\x08\x68\x95\x63\x30\x15\x88\xb2\x24\x74\x0e\x1d\x38\x8b\x52\x55\x0a\x4b\x50\x1a\xb8\x41\x78\x8c\xb5\xf5\xc6\x74\x9a\xbf\x09\xfb\x08\x56\x90\xd8\x20\x23\x25\x09\x7b\x5a\x21\x59\x19\x9d\xbe\xbf\x98\xc3\xdb\x3a\x1c\xe5\xf0\xe3\x56\xbd\x7c\xfa\xb8\x5b\xc2\x5b\x92\x00\x00\x78\x45\x0d\xc2\x4f\xd1\xb5\x0c\x84\xce\x74\x24\x11\xb8\x11\x0c\x8d\x69\x4b\xd7\xb7\x1e\x94\xfa\x53\x41\x08\x05\x2a\x5d\x03\xc7\x49\x08\xcb\x9e\xaa\x45\x86\x67\xcf\x73\x8f\x55\x0e\x1f\xf6\xe6\xef\xf9\x43\x47\x4b\x68\x05\x61\xea\x54\xad\x91\x72\x58\x77\xdc\xac\xa5\xf4\x5a\x47\x55\x51\xd9\x57\x64\x10\x40\x58\x21\xa1\xf6\xb2\x4c\x2f\x27\x20\xcf\x1c\x38\x36\x84\x65\x68\x3a\xe2\x1c\xb6\x55\x36\xe8\x80\xcb\x78\x3b\x2b\x0c\x91\xd9\x5e\x1c\x90\x75\x95\x7a\xf7\x72\x98\x57\xbe\xb3\x21\x51\xe3\x9d\xe0\x66\x99\x9c\x9c\x9c\x5c\x5f\x83\x15\x5a\xc9\x74\x71\x63\xba\xb6\x04\x6d\x18\x02\xef\x5c\xa4\xd9\x06\x8d\x3d\xd1\xe9\x62\xd9\xeb\xdb\x85\xf1\xf0\x05\x65\xc7\x38\x9d\xb6\x32\x34\x98\xef\x0d\x7f\x6f\x61\xf6\x84\xaf\x6e\x7a\x3f\x6e\xe8\x97\xe2\xa6\x24\xb1\x1d\x2c\xea\x73\xf8\xff\x1d\x0d\x76\x39\xd4\x1c\xac\xbf\x38\xdf\x5f\x5c\xb6\x8d\xcc\xa9\xe8\x35\xe4\x33\x49\xbf\xe3\xc1\x9f\xd3\xe5\x4c\x96\x37\xce\xab\x20\x94\xca\x2a\xd4\x7c\xe6\xc0\x76\x45\xab\x24\x88\x60\x35\x98\xe2\x2f\xca\xb9\xa2\x11\x01\x97\x50\x23\xc7\x60\x0c\x91\x3e\xdc\xe9\x40\x44\xa6\x8d\xef\x51\xa2\x7a\x46\x3a\xd4\xab\x2f\x84\x9c\x8c\x90\xac\x46\xbe\x11\x56\x14\xaa\x55\xfc\x9a\xee\xc5\x62\xe0\xba\xeb\x87\x09\xc1\x80\x77\xbf\x31\x6a\x6f\xfb\x8f\xc7\x80\xdd\x5d\xa5\x73\xd0\xd1\x68\x05\xdc\xf1\x29\x7b\x1b\x17\xf3\x05\x7d\x46\x6b\x9c\x0a\x76\x0c\x9e\xea\x21\x2e\xf1\x69\x99\xf2\xd0\xa1\x6d\x4d\x36\x95\x95\x81\x30\x7e\x34\x17\xe7\x63\x86\x26\xbd\x77\x31\xed\xbb\xe4\x5f\x00\x00\x00\xff\xff\x02\x0b\xab\x7a\x68\x05\x00\x00"

func transfer_many_accountsCdcBytes() ([]byte, error) {
	return bindataRead(
		_transfer_many_accountsCdc,
		"transfer_many_accounts.cdc",
	)
}

func transfer_many_accountsCdc() (*asset, error) {
	bytes, err := transfer_many_accountsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transfer_many_accounts.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x5b, 0x3d, 0x6b, 0xf4, 0xc2, 0xb, 0x1e, 0xf4, 0x57, 0x15, 0xa1, 0xa1, 0x3f, 0xe4, 0xf5, 0x0, 0xc6, 0xb4, 0xf2, 0x6c, 0xf8, 0xdf, 0x50, 0x25, 0x72, 0xf, 0x28, 0x15, 0xd, 0xdf, 0x95, 0xc5}}
	return a, nil
}

var _transfer_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\x4d\x4f\xdc\x4c\x0c\x3e\x93\x5f\xe1\x77\x0f\x2f\x59\xa9\x24\x97\xaa\x87\x15\x1f\x45\xb4\xf4\x8a\x28\x6d\xcf\xce\xc4\xbb\x99\x36\x99\x89\x3c\x0e\x0b\x42\xfc\xf7\x6a\x66\x32\x69\xc2\x56\xd0\xbd\xac\xe2\xd8\x8f\x9f\x0f\xa7\x2c\xe1\xae\xd1\x0e\x84\xd1\x38\x54\xa2\xad\x01\xed\x00\x41\xa8\xeb\x5b\x14\x82\xad\x65\xff\x38\x7b\x2f\x0d\x4a\x56\x96\xa0\xec\xd0\xd6\x50\x11\x0c\x8e\x6a\xa8\x1e\x01\xcd\xa3\x35\x04\x62\xc1\x91\xa9\x41\xec\x2f\x32\xce\x3f\xa2\xb1\xd2\x10\x03\x2a\x65\x07\x13\x86\x3d\x08\x34\xe8\xa0\x22\x32\xe0\x48\x60\xe8\x7d\x2b\x93\x22\x7d\x4f\xe3\x70\x91\x95\x65\x16\x38\x12\xec\xb5\x34\x35\xe3\x1e\xb0\xf3\x20\x80\x7e\x45\x43\x09\x14\xb6\x6c\x3b\xd8\x91\x5c\xfe\x59\xb2\x4f\x0c\x7d\x5f\x8f\x8c\x1d\x09\x71\xa0\xe4\x2b\x33\x51\x59\xa6\xbb\xde\xb2\xc0\xf5\x60\x76\xba\x6a\xe9\xce\xef\x8f\x98\xab\xa2\x2c\x8a\x52\x59\x23\x8c\x4a\x5c\xb9\x68\x29\x54\xad\x56\x69\xf8\xf3\x03\x76\xfd\xab\xb3\xf3\x8e\x38\x9a\xcd\x58\xe4\x51\xda\x06\xbe\x5d\xeb\x87\x0f\xef\xdf\x81\xd8\x0d\x5c\xd6\x35\x93\x73\x6b\x78\xca\x32\x00\x80\xd1\x8e\xef\x38\xb4\x02\x4c\xce\x0e\xac\x68\xf4\xd3\xb6\xb5\x8b\xd2\x46\xef\x7d\x15\x99\xa0\x22\x6d\x76\x51\xf0\x96\x98\xa9\x0e\x50\x2d\x89\x8f\x4a\x02\xd6\x06\x3e\x2e\x95\x85\x6a\xdc\xd9\x33\xf5\xc8\x94\x3b\xbd\x33\xc4\x1b\xb8\x1c\xa4\x19\x7d\x9e\x78\x8d\xdc\xbe\x90\x00\x02\xd3\x96\x98\x8c\xa2\xe4\x75\x9c\x3c\x76\xe0\xc4\x32\xd5\x70\x1f\xc0\xd3\x9c\x27\x12\x2a\xb7\xb4\x85\xb3\xb1\xb9\xa8\x2c\xb3\xdd\x9f\xfe\xbf\x30\x2d\xb0\x3a\xcf\xbd\xbb\x1b\x38\x7c\xf3\x55\x2c\xe3\x8e\x6e\x50\x9a\x75\x76\x74\x74\x74\x71\x01\x3d\x1a\xad\xf2\xd5\x55\x38\x06\x63\x05\x22\xee\x21\x47\xbb\x8f\x14\x03\xd0\x7f\xab\xf5\x42\xd7\x8f\x74\x7e\xa3\xb5\x21\xde\xb7\x95\x39\x6a\xb7\xc5\xe4\x31\x9c\x9e\x4c\x3a\x8b\x74\xd0\x53\xea\xf1\x7f\x1d\x66\x9f\xe3\x72\x7a\x20\x35\x08\xfd\xc5\x63\xbf\x9a\x49\xe9\x5e\x93\x91\x63\x07\xfd\x50\xb5\x5a\x4d\x5f\x83\xad\x7e\x92\x5a\x1a\x3c\x75\xc3\xd9\xec\x3b\xc9\xc5\xae\xff\x25\xc0\xf9\xae\xdb\xf8\x91\xf2\x4b\xf8\x50\x8c\x11\x4e\xed\xc5\x8e\xe4\x0a\x7b\xac\x74\xab\xe5\x31\x5f\x24\x96\x70\x6e\x02\xf7\x98\x19\xcc\x7e\xd3\x05\x3c\x2d\x2f\x33\xcd\x3d\x9f\xe7\x6f\x87\x1c\x5b\x5f\x17\x14\xc2\x79\x11\xf8\x27\xea\xad\xd3\xd1\xe8\x14\x95\x49\xe9\x6b\x73\x80\xc1\x2f\x4d\x99\x19\x52\xd4\x11\x6c\x3c\xdb\xd3\x93\xe5\x59\xa4\xc8\x9f\xb3\xdf\x01\x00\x00\xff\xff\xda\x16\xdb\x1d\x90\x05\x00\x00"

func transfer_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_transfer_tokensCdc,
		"transfer_tokens.cdc",
	)
}

func transfer_tokensCdc() (*asset, error) {
	bytes, err := transfer_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transfer_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x55, 0xed, 0x8d, 0x8f, 0x8e, 0x8d, 0x1f, 0x3a, 0x84, 0xe3, 0x68, 0x98, 0xc3, 0xa7, 0x92, 0xa1, 0x55, 0x2b, 0x13, 0x95, 0x10, 0x6e, 0x82, 0x54, 0xd1, 0xb8, 0x22, 0x28, 0xe9, 0xc0, 0xea, 0xce}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"burn_tokens.cdc":      burn_tokensCdc,
	"create_forwarder.cdc": create_forwarderCdc,
	"generic_transfer.cdc": generic_transferCdc,
	"mint_tokens.cdc":      mint_tokensCdc,
	"privateForwarder/create_account_private_forwarder.cdc": privateforwarderCreate_account_private_forwarderCdc,
	"privateForwarder/create_private_forwarder.cdc":         privateforwarderCreate_private_forwarderCdc,
	"privateForwarder/deploy_forwarder_contract.cdc":        privateforwarderDeploy_forwarder_contractCdc,
	"privateForwarder/setup_and_create_forwarder.cdc":       privateforwarderSetup_and_create_forwarderCdc,
	"privateForwarder/transfer_private_many_accounts.cdc":   privateforwarderTransfer_private_many_accountsCdc,
	"scripts/get_balance.cdc":                               scriptsGet_balanceCdc,
	"scripts/get_supply.cdc":                                scriptsGet_supplyCdc,
	"scripts/get_token_metadata.cdc":                        scriptsGet_token_metadataCdc,
	"scripts/get_vault_data.cdc":                            scriptsGet_vault_dataCdc,
	"scripts/get_vault_display.cdc":                         scriptsGet_vault_displayCdc,
	"scripts/switchboard/get_vault_types.cdc":               scriptsSwitchboardGet_vault_typesCdc,
	"setup_account.cdc":                                     setup_accountCdc,
	"setup_account_from_vault_reference.cdc":                setup_account_from_vault_referenceCdc,
	"switchboard/add_vault_capability.cdc":                  switchboardAdd_vault_capabilityCdc,
	"switchboard/batch_add_vault_capabilities.cdc":          switchboardBatch_add_vault_capabilitiesCdc,
	"switchboard/remove_vault_capability.cdc":               switchboardRemove_vault_capabilityCdc,
	"switchboard/safe_transfer_tokens.cdc":                  switchboardSafe_transfer_tokensCdc,
	"switchboard/setup_account.cdc":                         switchboardSetup_accountCdc,
	"switchboard/transfer_tokens.cdc":                       switchboardTransfer_tokensCdc,
	"transfer_many_accounts.cdc":                            transfer_many_accountsCdc,
	"transfer_tokens.cdc":                                   transfer_tokensCdc,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"burn_tokens.cdc": {burn_tokensCdc, map[string]*bintree{}},
	"create_forwarder.cdc": {create_forwarderCdc, map[string]*bintree{}},
	"generic_transfer.cdc": {generic_transferCdc, map[string]*bintree{}},
	"mint_tokens.cdc": {mint_tokensCdc, map[string]*bintree{}},
	"privateForwarder": {nil, map[string]*bintree{
		"create_account_private_forwarder.cdc": {privateforwarderCreate_account_private_forwarderCdc, map[string]*bintree{}},
		"create_private_forwarder.cdc": {privateforwarderCreate_private_forwarderCdc, map[string]*bintree{}},
		"deploy_forwarder_contract.cdc": {privateforwarderDeploy_forwarder_contractCdc, map[string]*bintree{}},
		"setup_and_create_forwarder.cdc": {privateforwarderSetup_and_create_forwarderCdc, map[string]*bintree{}},
		"transfer_private_many_accounts.cdc": {privateforwarderTransfer_private_many_accountsCdc, map[string]*bintree{}},
	}},
	"scripts": {nil, map[string]*bintree{
		"get_balance.cdc": {scriptsGet_balanceCdc, map[string]*bintree{}},
		"get_supply.cdc": {scriptsGet_supplyCdc, map[string]*bintree{}},
		"get_token_metadata.cdc": {scriptsGet_token_metadataCdc, map[string]*bintree{}},
		"get_vault_data.cdc": {scriptsGet_vault_dataCdc, map[string]*bintree{}},
		"get_vault_display.cdc": {scriptsGet_vault_displayCdc, map[string]*bintree{}},
		"switchboard": {nil, map[string]*bintree{
			"get_vault_types.cdc": {scriptsSwitchboardGet_vault_typesCdc, map[string]*bintree{}},
		}},
	}},
	"setup_account.cdc": {setup_accountCdc, map[string]*bintree{}},
	"setup_account_from_vault_reference.cdc": {setup_account_from_vault_referenceCdc, map[string]*bintree{}},
	"switchboard": {nil, map[string]*bintree{
		"add_vault_capability.cdc": {switchboardAdd_vault_capabilityCdc, map[string]*bintree{}},
		"batch_add_vault_capabilities.cdc": {switchboardBatch_add_vault_capabilitiesCdc, map[string]*bintree{}},
		"remove_vault_capability.cdc": {switchboardRemove_vault_capabilityCdc, map[string]*bintree{}},
		"safe_transfer_tokens.cdc": {switchboardSafe_transfer_tokensCdc, map[string]*bintree{}},
		"setup_account.cdc": {switchboardSetup_accountCdc, map[string]*bintree{}},
		"transfer_tokens.cdc": {switchboardTransfer_tokensCdc, map[string]*bintree{}},
	}},
	"transfer_many_accounts.cdc": {transfer_many_accountsCdc, map[string]*bintree{}},
	"transfer_tokens.cdc": {transfer_tokensCdc, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
