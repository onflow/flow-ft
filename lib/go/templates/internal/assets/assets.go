// Code generated by go-bindata. DO NOT EDIT.
// sources:
// ../../../transactions/burn_tokens.cdc (1.446kB)
// ../../../transactions/create_forwarder.cdc (2.176kB)
// ../../../transactions/mint_tokens.cdc (1.741kB)
// ../../../transactions/privateForwarder/create_account_private_forwarder.cdc (1.488kB)
// ../../../transactions/privateForwarder/create_private_forwarder.cdc (1.021kB)
// ../../../transactions/privateForwarder/deploy_forwarder_contract.cdc (403B)
// ../../../transactions/privateForwarder/setup_and_create_forwarder.cdc (1.882kB)
// ../../../transactions/privateForwarder/transfer_private_many_accounts.cdc (1.204kB)
// ../../../transactions/scripts/get_balance.cdc (504B)
// ../../../transactions/scripts/get_supply.cdc (249B)
// ../../../transactions/setup_account.cdc (1.307kB)
// ../../../transactions/transfer_many_accounts.cdc (1.384kB)
// ../../../transactions/transfer_tokens.cdc (1.424kB)

package assets

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	clErr := gz.Close()
	if clErr != nil {
		return nil, clErr
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _burn_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x54\xc1\x6e\xd4\x40\x0c\xbd\xe7\x2b\x4c\x0e\x68\x7b\x68\x02\x12\xe2\xb0\xea\x52\xda\x8a\x1e\x11\xa2\x0b\x9c\x27\x13\x67\x33\x90\xcc\x44\x1e\x87\xdd\x55\xd5\x7f\x47\xe3\x49\xb2\x09\xed\x36\x87\x46\x5d\xdb\xcf\xef\x3d\xdb\xc9\x73\xd8\xd6\xc6\x03\x93\xb2\x5e\x69\x36\xce\x82\xf1\xa0\x80\xb1\xed\x1a\xc5\x08\x95\xa3\xf0\xef\x2c\xce\xb5\xe2\x24\xcf\x41\xbb\xbe\x29\xa1\x40\xe8\x3d\x96\x50\x1c\x81\x6b\x04\x55\xb6\xc6\x82\xd2\xda\xf5\x96\x81\x1d\x14\x3d\x59\x60\xf7\x07\xad\x0f\x45\x15\xb9\x36\x24\x1a\x02\xcf\x8e\xb0\x84\x9f\xaa\x6f\x02\x5e\x22\x5c\x50\x0a\x8c\xdd\x81\x6a\x05\x62\x3f\x76\x51\xd0\x29\x52\x2d\x32\x52\xc0\x0d\xcd\x66\xac\x92\xc4\xb4\x9d\x23\x86\xfb\xde\xee\x4c\xd1\xe0\x36\xb4\x8c\xed\xd2\x2c\xcb\xb5\xb3\x4c\x4a\xb3\xcf\x17\x09\x99\x2e\x75\x3a\x96\x7e\x39\xa8\xb6\x7b\xa5\x72\x1e\x8f\x85\xc9\x8c\xc1\x2a\x12\x5e\xc3\x8f\x7b\x73\xf8\xf8\xe1\x02\x1e\x93\x04\x00\x20\xcf\xf3\xa8\x11\x08\xbd\xeb\x49\xa3\x38\x08\xb5\x6b\x4a\x1f\x65\x88\x3b\xf1\x57\x45\x08\x05\x06\xfd\xc1\x07\x2c\x05\xa2\x41\x86\xbf\x01\x62\x0d\x9f\x97\xf4\xa3\x79\x53\x9f\xef\x58\x21\xa1\x0d\x2d\xa2\x43\x0b\x49\x37\x32\x1b\x57\xfc\x46\xcd\x13\xae\x0c\x6c\x0d\x6f\x17\xe2\x24\xd3\x78\x26\xc5\x8e\x4e\xf0\x5b\x21\xcb\xaa\x01\xdf\x77\x5d\x73\x04\x57\x8d\xe4\x0b\xac\x1c\xa1\xf4\x0c\xc4\x27\xf8\x98\x78\x2b\xd1\xd1\x9a\x08\xd8\x11\x76\x8a\x70\xe5\xcd\xce\x22\xad\xe1\xa6\xe7\xfa\x26\xee\xcd\xe4\x5d\x78\x3c\x36\x55\x36\x87\x81\xcd\x42\x56\x26\x8c\x1e\x24\xe1\x54\x95\xe7\xf0\xcb\x70\x5d\x92\xda\xc3\xfb\x77\x23\xcb\x71\xfb\x86\x35\x15\x4f\xc1\x58\x59\x45\xb5\xc3\x65\xcf\x18\xbd\xba\x84\xc8\x30\x2b\x1c\x91\xdb\x5f\x2d\x9d\x92\x01\x7c\x5a\x05\xe0\x35\x3c\x8f\x3c\x44\xe0\x6f\x8a\xeb\x8b\x37\x13\x7c\x78\xb2\xfd\x40\x6f\xda\x9b\xf8\xbe\x58\x68\xb8\x23\x0c\x47\xa8\x80\xfe\x9f\xec\x70\x68\xf2\x77\x5a\xac\x73\x52\x62\xda\xe6\x55\x25\x8b\x99\xbf\xa8\x48\x32\xe6\x8a\x16\x82\xae\xaf\xa1\x53\xd6\xe8\x55\x7a\x27\x27\x6b\x1d\x43\x6c\x74\x9e\xfe\x48\x3c\x8d\x50\x4f\x51\x3b\x1e\x50\xf7\x8c\xf0\x38\xe1\x87\x4d\x92\x7b\x20\x99\xc7\x24\x29\xd3\xe2\xcf\x57\xdc\xdf\x4a\x74\x35\x73\x2f\xe6\x67\xe1\x25\xf4\xfd\x20\xe9\xea\xf2\x34\xdd\x59\x7a\x89\x9e\xc9\x1d\x87\xb2\x39\x9d\xce\x79\x9e\x71\x39\xb7\x7b\xb0\xd9\xbc\xb0\xab\x97\x30\x8e\x37\x7d\x76\x3d\x6d\xef\x39\x7c\xd9\x4a\x0c\x32\xe6\x1f\x51\x29\x49\x07\x12\x4f\xc9\xbf\x00\x00\x00\xff\xff\x80\x74\x15\xd4\xa6\x05\x00\x00"

func burn_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_burn_tokensCdc,
		"burn_tokens.cdc",
	)
}

func burn_tokensCdc() (*asset, error) {
	bytes, err := burn_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "burn_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x38, 0x9, 0xd3, 0x1a, 0x53, 0x50, 0x2a, 0x8b, 0x53, 0xe7, 0xc6, 0x88, 0xdd, 0xbd, 0x68, 0xe0, 0xd9, 0x2f, 0x63, 0x1a, 0xaf, 0x2b, 0x41, 0x10, 0x9f, 0xf4, 0x2f, 0xe6, 0xff, 0xc1, 0x69, 0x2}}
	return a, nil
}

var _create_forwarderCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x54\x5d\x6b\x2b\x37\x10\x7d\xd7\xaf\x18\xf2\xd0\x3a\xc1\x59\xd3\xaf\x17\x93\x16\x42\xda\x94\x42\x29\x97\x36\xed\x6b\xef\x58\x1a\x5b\x6a\x76\xa5\x45\x9a\xf5\x5e\x13\xf2\xdf\x8b\xa4\x5d\x59\x1b\x42\xec\x27\xaf\x34\x1f\xe7\xcc\x39\x9a\xcd\xcd\x8d\x10\x4f\xda\x04\x60\x8f\x36\xa0\x64\xe3\x2c\x98\x00\x08\x4c\x5d\xdf\x22\x13\xec\x9d\x8f\x9f\xd5\x3d\x6b\x64\x90\x6e\x68\x15\xec\x08\x86\x40\x4a\xb0\x83\x40\x0c\x43\x0f\x68\x01\xa5\x74\x83\x65\x60\x17\x93\x47\xf4\x0a\x14\xf5\x2e\x18\x26\x05\xec\x9e\xc9\x86\x78\x87\xd6\xb1\x26\x0f\x9e\x24\x99\x23\xf9\x46\x88\xdf\xf6\x80\xf6\xe4\x2c\x41\x20\xab\x42\x1d\x1c\xfb\xf8\xaf\x03\x3c\xe6\x8a\xe4\xe1\xcf\x29\x6f\x2d\x58\x53\xf9\x82\xd1\xb4\x2d\xfc\x37\x04\x2e\xcd\x59\xbb\x40\x55\xad\x18\xfe\x0f\x0e\x2d\x67\x26\x1a\x03\xec\x88\xac\x88\x0c\x30\xa4\x6b\x4f\xd2\xf4\x86\x2c\x03\x5a\x05\xd4\x99\xf8\x07\xe8\x18\x4f\x52\x92\xb1\xca\x48\x64\x0a\x62\xd4\x46\xea\x84\x6e\x6e\x18\x59\xea\xb9\x61\x33\x0d\x78\xc4\xd3\x1a\x4c\xe4\x07\x6e\xbf\xbf\x95\x1a\x8d\x85\x40\xfe\x68\x24\xc1\x88\x96\x13\xb4\xce\x59\xc3\xce\xc3\xa8\x5d\x94\x61\x2a\x68\xec\x41\x9c\xe1\x1b\x5e\x83\x61\x90\x68\x61\x44\x96\x3a\xc3\x4a\x57\x81\x08\x46\x4d\x9e\x2a\x00\x20\xb1\x23\xd8\x7b\xd7\x35\x42\xfc\xc5\xd4\x4f\x91\x59\xad\x2c\x55\x80\xd1\xb0\xce\x09\x85\x85\xdf\x0a\xf1\x4d\x03\x4f\x9a\xe0\x71\xb0\x07\xb3\x6b\x09\x9e\x52\x84\x74\x96\x3d\xca\x38\x05\x26\xbf\x47\x49\x10\x74\xf2\x03\xb6\x9e\x50\x9d\xa2\x2f\x14\xf5\xad\x3b\x91\x82\xe0\x3a\x4a\xa0\xc4\xb7\xb9\x1a\xf6\x7d\x6b\x24\xc6\x7a\xbc\xac\x37\x55\xa9\xb2\x1b\xf1\x5d\x4e\xaa\x14\x99\xec\x35\x05\x6b\x3c\x12\xe0\x24\x68\x34\x2b\x27\x3f\xe7\xc2\x9e\x90\x49\x09\x00\x48\x42\x06\x76\x9e\x14\x18\x0b\x86\x43\xfa\xc2\x03\x65\xee\x08\xfd\xb0\x6b\x4d\xd0\xa4\x8a\x97\xc4\xf7\x0d\xfc\x9c\x80\xa4\x79\x7e\x4e\xec\x1f\x8b\x26\x8d\x54\xf2\xf3\x19\x7c\x72\xa9\x32\xfb\x3d\xf9\x0a\xa6\xf8\xa1\x89\x9e\x05\x04\x4b\x23\xdc\xe7\xc3\x2d\x3c\x24\x64\xa9\xec\xcc\xc7\x3a\xdf\x61\xdb\x9e\xd6\x09\x2e\x6b\xb2\xe0\x07\x9b\x3b\x67\x22\xff\x16\x69\x72\xeb\xea\x51\xe6\xa4\x03\x31\x1b\x7b\x80\xc5\x83\x88\xd2\x2f\x1a\x65\x03\xbf\x31\x7a\x23\x6e\x36\x42\x98\xae\x77\x9e\x8b\xde\x59\xee\x54\xe0\xaa\x69\x36\x33\xd5\xb0\x59\x04\x44\x30\x57\x73\xea\x2f\x5f\xb0\xeb\x3f\xc8\xac\xef\x17\x89\x6f\x86\xfb\x5e\xee\xc0\xa6\x35\x7c\x7a\x28\x07\xef\x08\x72\x25\x44\x35\x96\xd5\xbc\x5c\xb6\x70\xaf\x94\xa7\x10\xae\xe1\x45\xa4\x59\xf5\x9e\x7a\xf4\xb4\x42\x29\x79\x0b\xf7\x03\xeb\x49\x9c\x12\x11\x7f\x9b\x0d\xfc\x4a\x3c\x8f\x2a\x0f\x54\x62\x8f\xbb\x84\x64\xf2\xdb\x79\xb4\x3b\x4a\xd0\xcf\x7b\xc0\x95\x4a\x2d\x71\x65\xe2\x1f\xa3\x56\x53\xc3\x02\xf2\xba\x04\xc7\x5f\x73\x20\x7e\x28\xad\xee\xbe\x7a\x59\x0e\x7d\xd6\xf7\xf5\xa7\xd5\x62\xa6\xf3\xf9\xa7\x68\x67\xf9\x09\x59\x5f\x2f\xe8\x54\xce\x2b\x76\xca\x8f\x23\x3e\x24\xc3\xf3\x86\x7c\xeb\x16\xe5\x66\x67\x55\x5b\xa9\x26\x77\x4c\x2f\xf0\xee\xf6\xad\x92\x4d\x36\xef\x1f\x34\x96\xdd\xbd\x2a\x83\xd8\x9e\x67\x72\x66\x1f\x25\x69\x22\x9c\xd5\xdd\x6d\xaa\xba\x06\x76\x5b\xd8\x4c\x0f\x76\x43\x15\xdf\x52\x73\xc9\xf2\x6f\xdb\x1a\xfb\x9c\xe0\xd2\x17\x13\xd2\xab\x78\x47\xc0\x92\x12\x37\x73\xec\xba\x98\xf9\xc5\xc1\x36\x52\x93\x7c\xfe\x48\x9a\x68\xa6\x5a\xd4\xd4\x64\x48\xe0\x2e\xcb\x36\x27\xbd\x2e\xa8\xfd\x3e\x13\x8b\x0b\xe5\xac\xc5\x87\xf4\x52\xdb\xd8\xf4\x23\xac\x0b\xa0\x17\xc0\xad\x17\xc1\x8c\xfe\x40\x7c\x49\xa1\x92\x92\x99\xbd\x8a\xd7\xff\x03\x00\x00\xff\xff\xdf\x8c\x99\x8e\x80\x08\x00\x00"

func create_forwarderCdcBytes() ([]byte, error) {
	return bindataRead(
		_create_forwarderCdc,
		"create_forwarder.cdc",
	)
}

func create_forwarderCdc() (*asset, error) {
	bytes, err := create_forwarderCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "create_forwarder.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe8, 0xf6, 0x28, 0x68, 0xfd, 0xd5, 0x15, 0x5f, 0xc5, 0x77, 0x5a, 0x54, 0xeb, 0xc4, 0x16, 0x89, 0x62, 0x21, 0x21, 0xe4, 0x87, 0xf, 0x10, 0xfe, 0x9f, 0x76, 0xff, 0x96, 0x0, 0xfa, 0x2c, 0x3d}}
	return a, nil
}

var _mint_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x54\x4d\x6f\xdb\x48\x0c\xbd\xfb\x57\x10\x3a\x04\x32\x36\x91\x2e\x8b\x3d\x18\x71\x02\x27\xdb\xf4\xd4\x22\xc8\x47\xef\xa3\x11\x65\x4f\x2b\xcd\x08\x1c\x2a\x8e\x11\xe4\xbf\x17\xf3\x21\x59\xb2\x63\xfb\x62\x40\xf3\xf8\x48\x3e\x3e\x52\x35\xad\x21\x86\x87\x4e\xaf\x55\x51\xe3\x8b\xf9\x83\x1a\x2a\x32\x0d\x24\x59\x96\x4b\xa3\x99\x84\x64\x9b\x4f\x00\x99\x2c\x65\x32\x8b\xa1\xdf\xde\x45\xd3\x9e\x89\x1c\xbf\x87\xc0\x59\x9e\xe7\xf0\xb2\x51\x16\x98\x84\xb6\x42\xb2\x32\x1a\x94\x85\xed\x46\x30\xf0\x06\xa1\x51\x9a\x91\x60\x25\xa5\xe9\x34\x43\x67\xd1\x02\x1b\xff\x19\x34\x6e\x81\x1d\x99\x8d\x3c\xb8\x83\x96\xcc\x9b\x2a\xd1\xc7\x12\x4a\xd5\x2a\xd4\x0c\xa2\x2c\x09\xad\x05\xa1\x4b\x10\x8d\x67\x8a\x24\x97\xfe\x9b\x43\x8f\x98\x04\x61\x28\xa8\x42\x22\x2c\x1d\xd6\x21\x06\x96\xca\x95\xe4\xa2\x95\x5e\xcf\x66\xa3\xd2\xd3\x21\xe5\x02\x56\x01\x7d\x19\x13\x2e\xe0\xf5\x41\xbd\xff\xf7\xef\x1c\x3e\x66\x33\x00\x00\x97\xe8\x09\x2b\x24\xd4\x12\xfb\x14\x51\x22\x08\x1a\xae\xca\x46\x69\x78\x42\x6b\x3a\x92\x08\xa6\xf8\x8d\x92\x7d\x70\x8d\x1c\x0a\xf6\x90\x05\x5c\x4c\xb4\xf5\x1f\x95\x65\x12\x6c\xe8\x4c\xb6\x7e\x94\x31\xdd\x13\x4a\x54\x6f\x48\x60\xaa\xa9\x7e\xd3\x94\x3d\x6c\x01\x17\x1f\x53\x33\xf4\x2f\x9f\xfb\x9c\x2f\x5e\x59\x16\x35\xd8\xae\x6d\xeb\x9d\xe7\xf6\x4a\x43\x81\x95\xa1\x30\xa9\xa2\x23\x3d\x24\x09\xc0\x3b\xff\xda\xab\x16\x08\x5b\xc2\x56\x10\xa6\x56\xad\xb5\xcb\xbf\xea\x78\x13\x9d\xe1\x64\x85\xf8\xb3\x58\x57\xd9\x98\x05\x96\x13\x6f\x66\xbe\xa0\x67\x0f\x98\x0d\x51\x79\x0e\x77\x86\xc8\x6c\x41\x00\x1d\x2a\x25\xfc\x24\x46\x03\x18\xf2\xec\xa7\x00\x4b\x08\x85\x65\x85\xe7\xb9\x3e\x33\x94\x9b\xd4\xed\xc7\x02\x8e\x11\xcf\x6c\x48\xac\xf1\x51\xf0\x66\x3e\x64\x72\xbf\xdb\x5b\x68\x85\x56\x32\x4d\x9e\x7d\x16\xb7\x26\xda\xf0\xde\xbb\xa1\xc8\x64\x3e\x69\xe9\x3b\x06\x84\x88\x0b\x74\x38\x5a\x6f\xff\xe2\x54\xdf\x8a\x1c\xd2\xcf\xf4\x8b\xae\x07\xbf\x2c\x61\x8d\x1c\x07\xb1\x5f\x81\x69\xf9\xd9\x1a\xf9\x5e\xb4\xa2\x50\xb5\xe2\x5d\x3a\x69\xbc\x27\x7a\xec\x8a\x5a\xc9\xe3\xd6\x07\x41\x4f\xf9\xed\x26\x3d\xa5\xd5\xab\x16\xce\xe0\x6c\xfa\x26\xfb\x7e\xf6\xbd\x26\x21\x36\x9a\x16\xdf\x51\x76\x8c\xfd\x96\x46\x19\xef\x09\x05\x23\x88\xfe\x1e\x39\xd5\xfc\x0d\x8a\x57\xa3\x87\x3a\xff\x46\xc8\xf5\xd5\xa1\x41\x32\xe9\x59\x7e\xe2\xf6\x87\x87\xa4\xa2\xae\xcd\x16\xcb\x55\x3c\x10\xe1\x50\xcc\x8f\xc9\xca\x5f\xa2\xab\xd9\x31\x06\xee\xcc\xfd\x79\x09\x6c\x2a\x0e\x82\xc7\x55\xff\x8f\xad\xb1\xca\x1b\xa0\xe9\x9d\xec\xfb\xc7\xf3\x03\xcd\xca\x10\x18\x4d\x7a\x7d\x35\xaa\x62\x94\xa1\x44\xcb\x64\x76\xb1\xa8\xb1\x88\xad\xb1\x3c\x5a\xc8\x53\xcb\x07\xcb\xe5\x17\xcb\xfa\xcf\x70\x31\x93\xa3\xeb\xd1\x74\x96\xa1\x40\x50\xda\x69\x69\xb1\x84\x62\x17\xfc\xed\x43\x92\x58\xc4\xe7\xdf\x00\x00\x00\xff\xff\x72\xee\xdb\x6b\xcd\x06\x00\x00"

func mint_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_mint_tokensCdc,
		"mint_tokens.cdc",
	)
}

func mint_tokensCdc() (*asset, error) {
	bytes, err := mint_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "mint_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb6, 0x75, 0x27, 0xec, 0x9, 0xbf, 0x6f, 0xc2, 0x5f, 0xe1, 0xc, 0x24, 0xfc, 0xd8, 0xd6, 0x6e, 0xa, 0x4c, 0x95, 0x1f, 0xa3, 0xc9, 0xf, 0x70, 0x60, 0x53, 0x49, 0x4d, 0x12, 0xe0, 0x8d, 0xcc}}
	return a, nil
}

var _privateforwarderCreate_account_private_forwarderCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x53\xcb\x6e\xdb\x30\x10\xbc\xeb\x2b\xb6\x39\xb4\x36\x90\x48\xf7\x20\x29\x10\x04\xf1\xa9\x08\x8c\x26\xed\x7d\x4d\xaf\x2d\xc2\xb4\x28\x2c\x57\x56\x0c\xc3\xff\x5e\x50\x0f\x46\x94\xa3\x36\xa8\x2e\xb6\xa8\x99\xe1\xec\x70\xa8\xf7\xa5\x65\x81\x45\x55\x6c\xf5\xca\xd0\xab\xdd\x51\x01\x1b\xb6\x7b\xb8\x4a\xd3\x2c\x4d\x33\x65\x0b\x61\x54\xe2\xb2\x08\x93\xaa\xb5\xba\x4a\x3a\xf6\xd3\x1b\xee\xcb\xbf\x93\x87\x90\x88\xbb\x64\x7d\x40\xa1\x9f\xa4\x48\x1f\x88\x17\x96\x6b\xe4\x35\xf1\x84\xce\x14\xbc\xd5\x4c\xb2\x2c\x83\xd7\x5c\x3b\x10\xc6\xc2\xa1\x12\x6d\x0b\xd0\x0e\x2a\x47\x6b\x10\x0b\x8a\x09\x85\x00\xfd\x02\x7f\x73\xb0\x30\xb6\x06\x54\xca\x56\x85\x40\xad\x25\x07\x84\xb2\xdd\x02\x36\xbd\x76\x92\x0c\xd5\x4e\x49\x02\x00\xe0\x77\x7a\xa6\x1a\x1e\x3a\xb2\xe4\xe8\x15\x8c\x81\xdc\x9a\x35\x48\x3e\x14\xf0\x04\x43\x02\x05\xd5\x1d\xfe\x16\x1e\x2a\xc9\xbb\x97\x56\xb1\x64\x2a\x91\x69\x56\xe2\x91\x38\xfa\x3e\x87\x53\x83\xf0\x8f\x23\xb3\x49\xdf\x75\xe0\x7e\x08\xec\xb9\xcd\xcf\xbc\xe1\x9c\x5b\x71\x7a\x23\x55\x09\xf5\xee\xdb\x09\xe0\x05\x0f\x3e\x0c\xa6\x6d\x65\x90\xe1\x80\x95\x11\x1f\x93\x77\x5f\x50\x48\x66\x6a\xf3\xd4\xe1\x81\x66\x77\x37\xf1\xe1\x36\x11\x3f\xed\x4b\x39\xfe\xf6\x7a\xb3\xf9\x75\xe0\xfb\x47\xec\x6d\x54\x98\xb4\x41\xbd\x88\x65\xdc\xd2\x12\x25\x0f\xe8\x79\xe4\xf5\xb1\x3f\xba\xfe\x7c\xb8\xeb\x40\x00\xf9\x84\xfb\xc5\x47\x2c\x71\xa5\x8d\x96\x23\xdc\x5f\xd8\x36\xba\xd8\xdd\x7d\x3d\xc5\x85\xee\x2b\x75\xfe\x3e\x8b\xfc\x66\xdd\x7e\x19\x0d\x4c\xf7\xe0\xd1\x68\xc8\x5b\x92\x4f\x8f\xf7\x25\x9a\xef\x97\xa3\x26\xf7\xf1\x78\x51\x6d\x2f\xbb\x39\x1c\x3e\xac\xc2\xdd\xcd\xe4\xc5\xea\x0e\xe8\x99\xea\xb0\x34\x63\x52\xba\xd4\xe4\x6b\x79\x19\xe0\xfc\xb2\x32\x43\x9f\xef\x9b\x8a\x0d\x57\xc9\xb5\xf3\xfe\xab\x38\x81\x7b\xdd\xd4\x62\xd2\xf2\xe8\xc3\x20\xcd\xd8\xdc\x0f\x5d\xec\xe2\xab\xd7\x98\x0a\x5e\xcb\x61\xfe\x1f\xb7\x62\xd2\x43\xf8\x37\xea\xc7\x67\x4d\x2f\xab\x95\xd1\xca\x7b\xfe\xb8\x34\xff\x31\xfc\xf8\xa6\x9c\x93\xf3\x9f\x00\x00\x00\xff\xff\x0e\x37\x36\xd9\xd0\x05\x00\x00"

func privateforwarderCreate_account_private_forwarderCdcBytes() ([]byte, error) {
	return bindataRead(
		_privateforwarderCreate_account_private_forwarderCdc,
		"privateForwarder/create_account_private_forwarder.cdc",
	)
}

func privateforwarderCreate_account_private_forwarderCdc() (*asset, error) {
	bytes, err := privateforwarderCreate_account_private_forwarderCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "privateForwarder/create_account_private_forwarder.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xfd, 0x8b, 0x9, 0x1a, 0xfc, 0x24, 0x75, 0x89, 0x84, 0x9a, 0xf8, 0x8, 0x4c, 0xf0, 0xd5, 0xf9, 0xf5, 0xf3, 0x92, 0x3d, 0xd3, 0x49, 0x80, 0xc3, 0xd2, 0x3a, 0xee, 0x55, 0x53, 0xa4, 0x17, 0xe5}}
	return a, nil
}

var _privateforwarderCreate_private_forwarderCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x92\xcf\xca\xdb\x30\x10\xc4\xef\x7a\x8a\xe5\x3b\xb4\xfe\x20\xb1\xef\x26\x2d\x84\xd2\x1c\x4b\x68\x43\xef\x6b\x79\x6b\x8b\x38\x92\x59\xaf\x9d\x06\x93\x77\x2f\xf2\x3f\xec\x24\x2e\xa5\x3e\x18\x21\xcd\xfc\x46\x1a\xc9\x5c\x4a\xc7\x02\x87\xda\x66\x26\x29\xe8\xe4\xce\x64\xe1\x17\xbb\x0b\xbc\x85\x61\x14\x86\x91\x76\x56\x18\xb5\x54\xd1\x42\x13\xea\x54\xbf\xa9\xc1\xfd\xf5\x37\x5e\xca\xbf\x9b\xe7\x92\x85\xf7\xc8\xa6\x41\xa1\xef\xa4\xc9\x34\xc4\x07\xc7\x57\xe4\x94\x78\x85\xb3\x26\xef\x99\x2a\x8a\xe0\x94\x9b\x0a\x84\xd1\x56\xa8\xc5\x38\x0b\x9a\x09\x85\x2a\x40\xb0\x74\x85\xb2\x07\x00\x0f\x04\x30\x16\xd0\x02\x6a\xed\x6a\x2b\x20\x39\x0a\x78\x4c\xea\xa8\xb2\x1f\x05\xb0\x60\xc2\xf4\x06\x39\x36\x04\xf8\x6c\x77\xec\x67\xeb\xa4\x30\x1a\xa4\x2b\x60\x5c\xf2\x94\xa4\x96\x8e\xf4\x88\xf9\x89\x75\x21\x4a\xcd\xb7\xd9\x2a\x05\x00\x50\x32\x95\xc8\x14\x54\x26\xb3\xc4\x31\xec\x6b\xc9\xf7\xfd\xe6\xde\xa1\xed\x24\xfe\x1b\x43\xbe\x60\x89\x89\x29\x8c\xdc\xe0\x13\xf4\x9e\xb0\x30\xf6\xbc\xfb\xb0\x68\xbc\xcb\x6b\x97\x37\x38\x76\x78\xff\x1c\x4c\x58\xff\x45\xc3\x19\x23\x9a\x11\x46\xf1\x66\x21\x15\xe4\x8c\x24\x86\xe7\xac\x1f\xe2\x18\x33\x3a\xa2\xe4\x93\xe3\x5d\x4d\xc3\x82\x04\x1a\xaf\x83\xdd\x76\xf5\x09\x84\xfd\xcd\x7d\xa3\xeb\x34\x15\x30\x69\x53\x1a\xb2\x12\xbf\xa8\x60\x16\x30\x54\x51\x61\x43\xc1\x6e\xdb\x45\x6d\x40\x5c\xbc\x1e\xf6\xb0\x30\x3b\xc0\x33\xb6\x6f\xb8\x5d\x65\x4d\xa3\xc7\x6e\xff\x35\xfd\xd8\x3d\x28\x1f\xfe\xba\xf0\xff\x38\xc5\xec\x1a\xfc\xff\xae\xee\xea\x4f\x00\x00\x00\xff\xff\xbf\x3d\xfd\xff\xfd\x03\x00\x00"

func privateforwarderCreate_private_forwarderCdcBytes() ([]byte, error) {
	return bindataRead(
		_privateforwarderCreate_private_forwarderCdc,
		"privateForwarder/create_private_forwarder.cdc",
	)
}

func privateforwarderCreate_private_forwarderCdc() (*asset, error) {
	bytes, err := privateforwarderCreate_private_forwarderCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "privateForwarder/create_private_forwarder.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc5, 0x88, 0x3a, 0xd2, 0x71, 0xff, 0x71, 0x52, 0xd0, 0xa8, 0x51, 0x8b, 0xb6, 0xc5, 0xf1, 0x3f, 0xc4, 0xe5, 0xb1, 0x7a, 0xc6, 0x90, 0xe5, 0x75, 0xdc, 0xd0, 0x37, 0x28, 0x77, 0x98, 0x1f, 0xf2}}
	return a, nil
}

var _privateforwarderDeploy_forwarder_contractCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\x4d\x4b\x03\x31\x10\x86\xef\xf9\x15\x73\xdc\x42\xe8\x5e\x65\x6f\x05\x11\xbc\x48\xa1\x7a\x12\x0f\x63\x32\xee\x0e\xb6\x33\x61\x32\x4b\x11\xe9\x7f\x97\xed\x17\xab\x5e\x9a\x43\x48\x78\x9f\x64\xde\xa7\x6d\x5b\xb8\xa7\xb2\xd5\xaf\x0a\x3e\x10\x3c\xeb\x27\xc9\x83\xda\x1e\x2d\xb3\xf4\x90\x54\xdc\x30\x39\xec\xd9\x87\x23\x51\x0b\x25\xfe\x60\xca\xc0\xc2\x0e\x05\x0d\x77\xe4\x64\x35\x04\x37\x94\x8a\xc9\x59\xa5\xb9\x3c\x7c\xc2\x1d\x75\xb0\x71\x63\xe9\x63\x80\xd9\x4a\x9a\xa9\x83\xd7\x97\x47\xf1\xbb\xb7\xdf\x51\x25\xc9\x64\x1b\x57\xc3\x9e\xd6\xe8\xc3\xf4\xc3\xf5\xf2\x87\xbd\x89\x2a\xe3\xfb\x96\xd3\x09\x5a\x5f\xcf\x0b\xf8\x0e\x01\xa0\x18\x15\x34\x6a\x2a\xf7\x42\xd6\xc1\x6a\xf4\x61\x95\x92\x8e\xe2\x67\x02\xe0\x94\x2d\x2f\x5a\x75\x89\x39\x37\x72\x94\x9b\xab\xc6\xb3\xd6\xb4\xc7\xff\x1e\x71\x5e\x37\xce\x5a\x2d\xa6\x29\x87\x70\x08\x10\x7e\x02\x00\x00\xff\xff\xf7\x8a\xb2\xb8\x93\x01\x00\x00"

func privateforwarderDeploy_forwarder_contractCdcBytes() ([]byte, error) {
	return bindataRead(
		_privateforwarderDeploy_forwarder_contractCdc,
		"privateForwarder/deploy_forwarder_contract.cdc",
	)
}

func privateforwarderDeploy_forwarder_contractCdc() (*asset, error) {
	bytes, err := privateforwarderDeploy_forwarder_contractCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "privateForwarder/deploy_forwarder_contract.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x10, 0x63, 0x44, 0x17, 0x78, 0x41, 0x47, 0x73, 0xf, 0x19, 0xd3, 0x94, 0xb2, 0xd3, 0xfb, 0xbe, 0x5e, 0xe7, 0xd4, 0xa4, 0x53, 0x61, 0x2e, 0x62, 0x52, 0xcd, 0xb6, 0xd4, 0x6b, 0x79, 0xbb, 0x6e}}
	return a, nil
}

var _privateforwarderSetup_and_create_forwarderCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\xc1\x6e\xa3\x40\x0c\xbd\xf3\x15\x56\x0f\x15\x48\x29\xdc\x2b\x5a\xa9\x5b\xb5\xc7\x55\xb4\x5b\xed\xdd\x19\x1c\x18\x85\xcc\x20\x63\x92\x46\x51\xfe\x7d\xc5\x84\x10\x26\x84\x6e\x76\xb5\x9c\xa2\xd8\x7e\x7e\xf6\x7b\x9e\x40\xaf\x2b\xcb\x02\xef\x8d\xc9\xf5\xa2\xa4\x0f\xbb\x22\x03\x4b\xb6\x6b\xb8\x8b\xe3\x24\x8e\x13\x65\x8d\x30\x2a\xa9\x13\x2f\x27\x56\x99\xba\x3b\x55\xbf\x7d\xe2\xba\xfa\xba\x78\x98\xe2\xd5\xce\x59\x6f\x50\xe8\x07\x29\xd2\x1b\xe2\x77\xcb\x5b\xe4\x8c\x78\x02\x67\x2a\xfd\x88\x19\x24\x49\x02\x1f\x85\xae\x41\x18\x4d\x8d\x4a\xb4\x35\x80\x59\x56\x03\xc2\x2f\x6c\x4a\x99\x01\x42\x75\xc4\x00\xee\x40\x60\x79\x42\x71\xf5\x08\x0b\x2c\xd1\x28\x02\x85\x15\x2e\x74\xa9\x65\x37\x03\x34\x59\x5b\xda\x2c\x4a\xad\x06\x81\xb6\x16\xa4\x38\x83\x05\xc1\xb0\xf5\x3e\x08\x00\x00\x2a\xa6\x0a\x99\xc2\x5a\xe7\x86\xf8\x11\x5e\x1a\x29\x5e\x94\xb2\x8d\x91\x08\xf6\x2e\xa5\xfd\xf4\x12\x8e\x19\x71\x4e\xf2\xda\xf7\x48\xef\x27\xa7\xee\x7f\x3d\x87\x93\x39\x17\x81\xb9\x1b\x61\x8e\x52\x44\xb1\x2a\x48\xad\xc2\x21\x85\xf6\x4b\x92\x7e\x45\xfd\x66\x60\x8b\x35\x60\xc9\x84\xd9\x0e\x6a\x12\x68\x2a\xaf\x86\x49\x1a\x36\xfd\x5f\x87\xe0\xca\x50\x0b\xcb\x6c\xb7\xe9\xbd\xe7\x05\xa7\xca\x73\xd8\xaa\xfd\x08\xe3\xc8\x4f\xb1\x8c\x39\x39\xba\xf0\xf4\x04\x46\x97\x63\xb6\xaf\x4c\x2d\x59\x04\x43\x5b\xdf\x8c\x0e\xc3\x69\x57\x35\x02\x5a\x40\x1b\xa8\x8f\x90\x1e\x48\xc7\xb0\xc6\x0d\x85\x5e\xa0\xfd\xd2\x07\xdf\xbd\xae\xdb\xdb\xba\x92\x9d\x83\x0f\xa3\xd9\xa8\x44\xec\x1f\x86\xf1\x2a\xa2\x6b\x7b\xeb\x28\x95\xda\xac\xd2\xfb\xbd\x7f\x7c\x27\x2d\x0f\xcf\x3e\xdb\xa4\xd3\x2d\xa1\x41\xef\x53\xb2\xcf\x52\x90\x73\x92\x5b\x59\x46\x67\x5e\x25\x49\x6f\xf6\xb3\x47\xe1\x69\xc2\xba\xd3\xcc\xbf\x24\x3b\x68\x38\x14\x78\x7c\x7f\x62\xdd\xf9\x1d\x85\x96\x02\x05\xac\x29\x77\x40\x9f\x95\xad\xa9\x1e\x82\xb4\x69\xa7\xcb\x5e\x6a\x2a\x33\x90\x82\x6d\x93\x17\x2e\xf2\xad\x8b\x68\x23\xc4\x4b\x54\x74\x5d\x88\xf1\xba\x2e\x06\xec\x70\x2e\x95\xf1\xea\xba\x9c\xf3\x25\xfe\x47\x69\xce\x17\x9b\x3e\x4c\x3e\xae\x9d\x87\xbf\xd3\xb6\xff\x2b\x64\x52\xba\xd2\x64\xe4\xf1\x8a\xbc\xd1\xc8\x97\xee\x54\xd2\x87\xbe\xdd\xcc\x79\xfe\xd6\x47\x68\x78\xd6\x13\x96\xbf\xe5\xcd\xf3\xd6\xf6\xf7\x0f\xe0\xf5\xb5\xff\xc3\x0c\x81\x7f\xc9\x87\xe0\x10\xfc\x0e\x00\x00\xff\xff\x4d\x81\x6e\xef\x5a\x07\x00\x00"

func privateforwarderSetup_and_create_forwarderCdcBytes() ([]byte, error) {
	return bindataRead(
		_privateforwarderSetup_and_create_forwarderCdc,
		"privateForwarder/setup_and_create_forwarder.cdc",
	)
}

func privateforwarderSetup_and_create_forwarderCdc() (*asset, error) {
	bytes, err := privateforwarderSetup_and_create_forwarderCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "privateForwarder/setup_and_create_forwarder.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xdd, 0x72, 0x20, 0xae, 0x16, 0x1, 0xde, 0x64, 0x71, 0x72, 0x1f, 0x1c, 0xdb, 0xd7, 0xf1, 0x53, 0x6e, 0x2f, 0xc3, 0x2, 0x9e, 0xa6, 0x4f, 0xf3, 0xf0, 0xeb, 0xba, 0x13, 0xed, 0x97, 0x25, 0x5a}}
	return a, nil
}

var _privateforwarderTransfer_private_many_accountsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x53\xc1\x6e\xd3\x40\x10\x3d\xd7\x5f\x31\xcd\xa1\x24\x12\xac\x2f\x88\x83\x55\xa8\x22\x44\x38\x21\x55\x6d\xe1\x82\x38\x6c\x76\xc7\xf6\xaa\xce\x8e\x35\x3b\x4e\x52\x55\xf9\x77\x64\xef\x26\x8a\x09\x21\x17\x4e\xb6\xd6\xef\xbd\x7d\xef\xcd\xd8\xad\x5a\x62\x81\x45\xe7\x2b\xb7\x6c\xf0\x89\x9e\xd1\x43\xc9\xb4\x82\x89\x52\xb9\x52\xb9\x21\x2f\xac\x8d\x84\x7c\x84\x51\xc6\x9a\x49\x96\xd8\x5f\xb6\x7a\xd5\xfe\x9b\x7c\x0c\x19\x71\xef\xd9\xad\xb5\xe0\x03\x1a\x74\x6b\xe4\x05\xf1\x46\xb3\x45\x3e\xa3\x73\x0e\x1e\x35\xb3\x3c\xcf\xe1\xa9\x76\x01\x84\xb5\x0f\xda\x88\x23\x1f\xdf\x4b\xe4\x00\x42\xb0\xd2\xfe\x05\xb4\xb5\x8c\x21\x60\x00\xa9\x99\xba\xaa\x06\xa9\xd1\x31\xb4\x51\x1d\x38\xc9\x87\x2c\x3b\x12\x9a\x26\xda\x7c\x45\x9d\x97\x6f\xba\x2d\xe0\x75\x1e\x8f\x0a\xf8\xbe\x70\xdb\x0f\xef\x77\x33\x78\xcd\x32\x00\x80\xc1\x08\xc2\x0f\xdd\x35\x02\x8c\x81\x3a\x36\x08\x52\x6b\x81\x9a\x1a\xdb\xdf\x8c\x20\x7d\x1d\x21\x9e\x6a\x46\x58\xa2\xf3\xd5\xc1\x2f\xa3\x1d\xa4\x1a\x14\x58\xf7\x3a\x0f\x58\x16\x70\x33\xaa\x72\xd0\xcf\x0e\xb0\x14\x20\xd5\xe2\x7c\xf5\x88\xde\x22\x17\x70\x73\xb6\xb8\x88\x88\x12\x2d\x63\xab\x19\xa7\xc1\x55\xbe\x67\xcd\x3b\xa9\xe7\xc6\xf4\x71\x0f\xc1\x52\xb8\xaf\x28\xa0\x81\xb1\x44\x46\xdf\x27\xa3\x21\x51\x64\xbe\x09\x10\x84\x18\x6d\xf4\x7d\xe0\x05\x6c\x4a\xb5\x8f\x02\x1f\x13\x5a\x2d\x89\x99\x36\xb7\x7f\x49\xf6\x69\xda\xaf\x41\x01\xa7\x5f\x1e\x85\x58\x57\x78\xaf\xa5\x9e\x65\x57\x57\x57\x77\x77\xd0\x6a\xef\xcc\x74\xf2\x99\xba\xc6\x82\x27\x81\xa8\x7b\x6a\x92\x36\xd1\xe3\x20\x74\x3d\x99\x65\x63\x83\x67\x4a\x3c\xf5\x7b\xa1\xd3\xbd\xf9\x0b\xb0\xff\x9f\x64\x17\x1f\xb8\x45\xd3\x09\x1e\x0f\xae\x24\xde\x2f\x3f\x38\x0f\x7f\x2e\xb4\x7a\xc6\x97\x70\x8c\xbf\xd4\x89\x0a\xe8\x6d\xca\x37\x0c\x27\xec\x7f\x92\xb7\x69\xb9\x0b\xb8\x7d\x37\x1a\xbb\xda\x38\xa9\x2d\xeb\xcd\x54\x0f\xd7\x16\x27\x2e\x7e\xa6\x83\x5f\xd7\xb3\xa3\xd1\xec\x52\xb4\x5d\xf6\x3b\x00\x00\xff\xff\x1c\xeb\xe8\xe2\xb4\x04\x00\x00"

func privateforwarderTransfer_private_many_accountsCdcBytes() ([]byte, error) {
	return bindataRead(
		_privateforwarderTransfer_private_many_accountsCdc,
		"privateForwarder/transfer_private_many_accounts.cdc",
	)
}

func privateforwarderTransfer_private_many_accountsCdc() (*asset, error) {
	bytes, err := privateforwarderTransfer_private_many_accountsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "privateForwarder/transfer_private_many_accounts.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xcc, 0x36, 0x91, 0x18, 0x93, 0xa9, 0x46, 0xfa, 0xae, 0xa2, 0xa8, 0x7d, 0x37, 0x43, 0x27, 0x58, 0x39, 0x2b, 0xec, 0xda, 0xec, 0x64, 0xa, 0x60, 0xf2, 0x29, 0x37, 0x53, 0xe6, 0x84, 0xad, 0xf6}}
	return a, nil
}

var _scriptsGet_balanceCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x91\x3f\x4f\xc3\x30\x10\xc5\x77\x7f\x8a\xa7\x0c\x90\x2e\xce\x82\x18\x2a\x4a\x55\x2a\x3a\x57\xa8\xb0\x3b\xce\xa5\xb5\x70\xec\xc8\x3e\xd3\xa2\xaa\xdf\x1d\xe5\x4f\x0b\x59\xc8\x14\xc9\xef\xf7\xd3\xdd\xbb\xa2\xc0\xee\x60\x22\xa2\x0e\xa6\x65\x04\x52\x55\x04\x1f\x08\xa5\xb2\xca\x69\x42\x6d\xc8\x56\xf0\x35\x94\x83\xd2\xda\x27\xc7\xf7\x11\x1b\xeb\x8f\x3b\xff\x49\x0e\x2f\x43\x4e\x08\xd3\xb4\x3e\x30\x36\xc9\xed\x4d\x69\x69\x78\xad\x83\x6f\x90\x49\x59\x48\x59\x68\xef\x38\x28\xcd\xb1\x98\x64\xa4\xae\x74\x76\xa5\x5f\x4f\xaa\x69\xff\x87\xff\x46\x06\x56\xb4\xa9\x44\x9d\x1c\x1a\x65\x5c\x3e\x0e\x39\xc7\xaa\xaa\x02\xc5\x38\x9b\xe3\x7d\x63\x4e\x8f\x0f\x38\x0b\x00\xb0\xc4\xdd\x22\x8c\x05\xf6\xc4\xab\x21\x7d\xa5\x66\xb7\xc8\x97\x4a\x96\xdf\xa8\xc6\xa2\x4f\xcb\x3d\xf1\x5a\xb5\xaa\x34\xd6\xf0\x77\x3e\x19\x62\xac\x60\x9b\x4a\x6b\xf4\x56\xf1\x61\xb0\x74\x9f\x2c\x7d\x08\xfe\xf8\x74\x37\x01\x3e\x3a\xf7\x79\xda\xc2\x28\xb9\x3c\xe7\xbf\xf4\x72\x89\x56\x39\xa3\xf3\x6c\xed\x93\xad\xe0\x3c\x63\x10\x5e\x6b\x47\xa0\x9a\x02\x75\x7f\xec\xfb\xbb\xf5\xee\x6c\x26\x7a\x49\x20\x4e\xc1\xdd\x76\x91\xe3\x51\xc5\x45\xfc\x04\x00\x00\xff\xff\xc9\xee\xfc\xac\xf8\x01\x00\x00"

func scriptsGet_balanceCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_balanceCdc,
		"scripts/get_balance.cdc",
	)
}

func scriptsGet_balanceCdc() (*asset, error) {
	bytes, err := scriptsGet_balanceCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_balance.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x26, 0xc4, 0xa9, 0xdd, 0x88, 0x42, 0x6a, 0x6d, 0xfb, 0xc9, 0xe5, 0x9d, 0x85, 0xac, 0xd2, 0x21, 0x3e, 0x6c, 0x86, 0x9a, 0x57, 0x61, 0xb4, 0x7e, 0x83, 0x6e, 0x1c, 0x1d, 0x44, 0x55, 0x8a, 0x41}}
	return a, nil
}

var _scriptsGet_supplyCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xce\x4d\x4a\xc0\x30\x10\x05\xe0\xfd\x9c\xe2\xd1\x55\xbb\x49\x36\xe2\x42\x70\xa9\x17\xb0\x1e\x20\xa6\x89\x0d\xe6\x8f\xc9\x04\x2a\xe2\xdd\x85\xfe\x80\xdd\xce\xfb\x86\xf7\xb4\xc6\xbc\x86\x86\x66\x39\x54\x01\x3b\xb3\x34\xc8\xea\x20\x45\x4c\x44\xeb\xb5\xc6\x6f\xf8\xe0\xe2\x42\x5a\xa3\xf8\x3d\x7c\xd9\x4c\xaa\xd1\xcd\xe5\xcb\x65\xb4\x64\x58\x60\x4b\x16\x36\x56\x88\x42\xaa\x85\xe5\x6e\x3c\x97\x84\x41\x29\xad\x94\xbe\x64\xd3\xff\x89\xb2\x8b\x1d\x88\x6a\xff\x80\xef\x19\xc9\x84\x3c\x4e\x4f\x78\x7f\x0d\xdb\xe3\x03\x7e\x88\x00\x20\x3a\xb9\x26\x3d\xdf\x0a\xd4\x3e\xf7\x6d\x8f\x4e\x5a\x3e\xc7\x83\x4e\xc7\x81\x9d\x74\xce\xe7\x3b\xfd\xfe\x05\x00\x00\xff\xff\xa2\xfe\xee\xae\xf9\x00\x00\x00"

func scriptsGet_supplyCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_supplyCdc,
		"scripts/get_supply.cdc",
	)
}

func scriptsGet_supplyCdc() (*asset, error) {
	bytes, err := scriptsGet_supplyCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_supply.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xbc, 0x4c, 0xfc, 0x8d, 0xb8, 0x3b, 0xe9, 0x43, 0x2c, 0x85, 0x9d, 0xc5, 0x56, 0xda, 0x25, 0x45, 0x90, 0xf2, 0xd2, 0xc3, 0xf5, 0x14, 0x87, 0x1b, 0x57, 0xc8, 0xc3, 0xa1, 0xe1, 0xf0, 0xed, 0x39}}
	return a, nil
}

var _setup_accountCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x53\xc1\x6e\x13\x31\x10\xbd\xef\x57\x3c\x7a\x40\x89\x04\xd9\x7b\x55\x2a\x15\x54\xce\x55\xa9\xb8\x4f\xbc\xb3\x59\xab\x8e\x6d\x8d\xc7\x6d\x57\x55\xfe\x1d\x79\xb3\x09\x31\x8d\xe0\x00\x12\x7b\xf3\xcc\x9b\xe7\xf7\x9e\x67\x9b\xb6\xc5\xc3\x60\x13\x54\xc8\x27\x32\x6a\x83\x87\x4d\x20\x28\x6f\xa3\x23\x65\xf4\x41\xca\xf1\x67\xbf\xcc\x68\x00\x75\x1d\x08\xdf\x29\x3b\x85\x70\x0a\x59\x0c\x97\xba\x0e\x6c\x05\x64\x4c\xc8\x5e\x0b\x36\x95\x1a\x69\x69\x8c\x30\xe4\x91\x13\x97\x03\xf8\x85\xb6\xd1\xf1\x43\x78\x64\xdf\x34\x76\x1b\x83\x28\xbe\x66\xbf\xb1\xeb\xb9\x8a\x5e\xc2\x16\x17\xab\x76\xb5\x6a\x4d\xf0\x2a\x64\x34\xb5\x15\x64\x65\x3a\x73\x71\x18\xbe\x3d\x61\x3c\x3f\x7b\x8a\xd8\x8f\x36\xa7\xd6\x5f\x9b\x06\x00\xa2\x70\x24\xe1\x45\xb2\x1b\xcf\x72\x89\x9b\xac\xc3\xcd\xde\xd1\xf2\x80\x29\x5f\xdb\xe2\x9e\x35\x8b\x07\x93\xb8\x11\xb6\x9f\x8c\xcd\xe6\x41\x4e\x98\xba\x11\x49\x83\x70\x09\xb5\xd2\x37\x45\x77\xa4\xb2\x3d\xf6\xb7\xad\xd6\x41\x24\x3c\x5f\xbd\xaf\xa4\x4e\xe0\xeb\x45\xf1\x74\x89\xb7\x9d\x6f\x1a\x84\x36\x7c\x47\x3a\x2c\xf1\xee\x13\xbc\x75\x78\x3d\x72\x97\x4f\x26\x9d\xc7\xd2\xae\x32\xf1\x45\xb8\x3c\x35\xc1\xf3\xf3\x19\x91\x20\xdf\x21\x66\x85\x55\x58\x3f\xd9\xa1\x0d\x1f\x09\x66\xdd\x89\x9e\x78\x51\xdd\x79\xf5\xb1\x8e\x7b\xba\xe5\x76\x1b\x75\x9c\x68\x17\xcb\x0f\x15\x5c\xc3\x1f\xac\x1d\xd1\xcb\xf3\xea\x63\x5e\x3b\x6b\x60\x28\xd2\xda\x3a\xab\xe3\xbc\x8f\xb3\x8b\x69\x0b\x83\x77\x23\xf8\x25\x86\xc4\xe9\x94\xa4\xc0\x3a\x8e\x21\x59\x45\x9f\xfd\x7e\x1d\x74\x90\x90\x37\xc3\xd4\xbc\x67\xc3\xf6\x89\x05\xd6\x2b\x4b\x4f\xe6\x4d\x00\xce\xfa\xc7\x73\xcf\xf6\x5a\x2f\xec\x81\x68\x77\x5d\xa7\x55\x0d\x1e\x40\x77\x93\xa5\x62\xfe\x97\xac\x48\x36\xac\xff\x39\xaf\x35\x39\xf2\x86\xd1\x5b\x76\x5d\x15\xd6\xe7\xb9\xf3\xb7\x59\xcd\x3c\xbf\x8d\x6a\xc6\xfc\xab\xa4\xf6\x7f\xc7\xae\xf9\x11\x00\x00\xff\xff\x1d\xc1\x62\x8c\x1b\x05\x00\x00"

func setup_accountCdcBytes() ([]byte, error) {
	return bindataRead(
		_setup_accountCdc,
		"setup_account.cdc",
	)
}

func setup_accountCdc() (*asset, error) {
	bytes, err := setup_accountCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "setup_account.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa5, 0x64, 0xbb, 0x17, 0x52, 0xb7, 0xb0, 0xb, 0x89, 0x41, 0x33, 0xd3, 0xf9, 0x48, 0x2c, 0x32, 0x2, 0x41, 0xaa, 0x44, 0x23, 0xac, 0x9f, 0xdd, 0x46, 0x6, 0xf2, 0x9b, 0xe, 0x86, 0xb6, 0xf3}}
	return a, nil
}

var _transfer_many_accountsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x54\x3d\x6f\xdb\x30\x10\x9d\xa3\x5f\x71\xf1\xd0\xc8\x43\xe4\xa5\xe8\x20\xe4\x03\x46\xda\x74\x2a\x10\xa4\x69\x3b\x14\x05\x42\x51\x27\x89\x8d\x4c\x12\xc7\x53\x9c\x20\xf0\x7f\x2f\x28\x52\x82\x1c\x19\xae\x17\x03\x3c\xbe\x77\xef\xee\x3d\x51\x6d\xac\x21\x86\xdb\x4e\xd7\xaa\x68\xf1\xc1\x3c\xa1\x86\x8a\xcc\x06\x16\x59\xb6\x92\x46\x33\x09\xc9\x6e\xb5\x77\x21\x93\xa5\x5c\x24\x11\xfa\xe5\x45\x6c\xec\x11\xe4\xb4\x1e\x80\xc9\x6a\xb5\x82\x07\x12\xda\x55\x48\x0e\xd8\x57\xfc\x1f\x08\x68\x95\x63\x30\x15\x88\xb2\x24\x74\x0e\x1d\x38\x8b\x52\x55\x0a\x4b\x50\x1a\xb8\x41\x78\x8c\xb5\xf5\xc6\x74\x9a\xbf\x09\xfb\x08\x56\x90\xd8\x20\x23\x25\x09\x7b\x5a\x21\x59\x19\x9d\xbe\xbf\x98\xc3\xdb\x3a\x1c\xe5\xf0\xe3\x56\xbd\x7c\xfa\xb8\x5b\xc2\x5b\x92\x00\x00\x78\x45\x0d\xc2\x4f\xd1\xb5\x0c\x84\xce\x74\x24\x11\xb8\x11\x0c\x8d\x69\x4b\xd7\xb7\x1e\x94\xfa\x53\x41\x08\x05\x2a\x5d\x03\xc7\x49\x08\xcb\x9e\xaa\x45\x86\x67\xcf\x73\x8f\x55\x0e\x1f\xf6\xe6\xef\xf9\x43\x47\x4b\x68\x05\x61\xea\x54\xad\x91\x72\x58\x77\xdc\xac\xa5\xf4\x5a\x47\x55\x51\xd9\x57\x64\x10\x40\x58\x21\xa1\xf6\xb2\x4c\x2f\x27\x20\xcf\x1c\x38\x36\x84\x65\x68\x3a\xe2\x1c\xb6\x55\x36\xe8\x80\xcb\x78\x3b\x2b\x0c\x91\xd9\x5e\x1c\x90\x75\x95\x7a\xf7\x72\x98\x57\xbe\xb3\x21\x51\xe3\x9d\xe0\x66\x99\x9c\x9c\x9c\x5c\x5f\x83\x15\x5a\xc9\x74\x71\x63\xba\xb6\x04\x6d\x18\x02\xef\x5c\xa4\xd9\x06\x8d\x3d\xd1\xe9\x62\xd9\xeb\xdb\x85\xf1\xf0\x05\x65\xc7\x38\x9d\xb6\x32\x34\x98\xef\x0d\x7f\x6f\x61\xf6\x84\xaf\x6e\x7a\x3f\x6e\xe8\x97\xe2\xa6\x24\xb1\x1d\x2c\xea\x73\xf8\xff\x1d\x0d\x76\x39\xd4\x1c\xac\xbf\x38\xdf\x5f\x5c\xb6\x8d\xcc\xa9\xe8\x35\xe4\x33\x49\xbf\xe3\xc1\x9f\xd3\xe5\x4c\x96\x37\xce\xab\x20\x94\xca\x2a\xd4\x7c\xe6\xc0\x76\x45\xab\x24\x88\x60\x35\x98\xe2\x2f\xca\xb9\xa2\x11\x01\x97\x50\x23\xc7\x60\x0c\x91\x3e\xdc\xe9\x40\x44\xa6\x8d\xef\x51\xa2\x7a\x46\x3a\xd4\xab\x2f\x84\x9c\x8c\x90\xac\x46\xbe\x11\x56\x14\xaa\x55\xfc\x9a\xee\xc5\x62\xe0\xba\xeb\x87\x09\xc1\x80\x77\xbf\x31\x6a\x6f\xfb\x8f\xc7\x80\xdd\x5d\xa5\x73\xd0\xd1\x68\x05\xdc\xf1\x29\x7b\x1b\x17\xf3\x05\x7d\x46\x6b\x9c\x0a\x76\x0c\x9e\xea\x21\x2e\xf1\x69\x99\xf2\xd0\xa1\x6d\x4d\x36\x95\x95\x81\x30\x7e\x34\x17\xe7\x63\x86\x26\xbd\x77\x31\xed\xbb\xe4\x5f\x00\x00\x00\xff\xff\x02\x0b\xab\x7a\x68\x05\x00\x00"

func transfer_many_accountsCdcBytes() ([]byte, error) {
	return bindataRead(
		_transfer_many_accountsCdc,
		"transfer_many_accounts.cdc",
	)
}

func transfer_many_accountsCdc() (*asset, error) {
	bytes, err := transfer_many_accountsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transfer_many_accounts.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x5b, 0x3d, 0x6b, 0xf4, 0xc2, 0xb, 0x1e, 0xf4, 0x57, 0x15, 0xa1, 0xa1, 0x3f, 0xe4, 0xf5, 0x0, 0xc6, 0xb4, 0xf2, 0x6c, 0xf8, 0xdf, 0x50, 0x25, 0x72, 0xf, 0x28, 0x15, 0xd, 0xdf, 0x95, 0xc5}}
	return a, nil
}

var _transfer_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\x4d\x4f\xdc\x4c\x0c\x3e\x93\x5f\xe1\x77\x0f\x2f\x59\xa9\x24\x97\xaa\x87\x15\x1f\x45\xb4\xf4\x8a\x28\x6d\xcf\xce\xc4\xbb\x99\x36\x99\x89\x3c\x0e\x0b\x42\xfc\xf7\x6a\x66\x32\x69\xc2\x56\xd0\xbd\xac\xe2\xd8\x8f\x9f\x0f\xa7\x2c\xe1\xae\xd1\x0e\x84\xd1\x38\x54\xa2\xad\x01\xed\x00\x41\xa8\xeb\x5b\x14\x82\xad\x65\xff\x38\x7b\x2f\x0d\x4a\x56\x96\xa0\xec\xd0\xd6\x50\x11\x0c\x8e\x6a\xa8\x1e\x01\xcd\xa3\x35\x04\x62\xc1\x91\xa9\x41\xec\x2f\x32\xce\x3f\xa2\xb1\xd2\x10\x03\x2a\x65\x07\x13\x86\x3d\x08\x34\xe8\xa0\x22\x32\xe0\x48\x60\xe8\x7d\x2b\x93\x22\x7d\x4f\xe3\x70\x91\x95\x65\x16\x38\x12\xec\xb5\x34\x35\xe3\x1e\xb0\xf3\x20\x80\x7e\x45\x43\x09\x14\xb6\x6c\x3b\xd8\x91\x5c\xfe\x59\xb2\x4f\x0c\x7d\x5f\x8f\x8c\x1d\x09\x71\xa0\xe4\x2b\x33\x51\x59\xa6\xbb\xde\xb2\xc0\xf5\x60\x76\xba\x6a\xe9\xce\xef\x8f\x98\xab\xa2\x2c\x8a\x52\x59\x23\x8c\x4a\x5c\xb9\x68\x29\x54\xad\x56\x69\xf8\xf3\x03\x76\xfd\xab\xb3\xf3\x8e\x38\x9a\xcd\x58\xe4\x51\xda\x06\xbe\x5d\xeb\x87\x0f\xef\xdf\x81\xd8\x0d\x5c\xd6\x35\x93\x73\x6b\x78\xca\x32\x00\x80\xd1\x8e\xef\x38\xb4\x02\x4c\xce\x0e\xac\x68\xf4\xd3\xb6\xb5\x8b\xd2\x46\xef\x7d\x15\x99\xa0\x22\x6d\x76\x51\xf0\x96\x98\xa9\x0e\x50\x2d\x89\x8f\x4a\x02\xd6\x06\x3e\x2e\x95\x85\x6a\xdc\xd9\x33\xf5\xc8\x94\x3b\xbd\x33\xc4\x1b\xb8\x1c\xa4\x19\x7d\x9e\x78\x8d\xdc\xbe\x90\x00\x02\xd3\x96\x98\x8c\xa2\xe4\x75\x9c\x3c\x76\xe0\xc4\x32\xd5\x70\x1f\xc0\xd3\x9c\x27\x12\x2a\xb7\xb4\x85\xb3\xb1\xb9\xa8\x2c\xb3\xdd\x9f\xfe\xbf\x30\x2d\xb0\x3a\xcf\xbd\xbb\x1b\x38\x7c\xf3\x55\x2c\xe3\x8e\x6e\x50\x9a\x75\x76\x74\x74\x74\x71\x01\x3d\x1a\xad\xf2\xd5\x55\x38\x06\x63\x05\x22\xee\x21\x47\xbb\x8f\x14\x03\xd0\x7f\xab\xf5\x42\xd7\x8f\x74\x7e\xa3\xb5\x21\xde\xb7\x95\x39\x6a\xb7\xc5\xe4\x31\x9c\x9e\x4c\x3a\x8b\x74\xd0\x53\xea\xf1\x7f\x1d\x66\x9f\xe3\x72\x7a\x20\x35\x08\xfd\xc5\x63\xbf\x9a\x49\xe9\x5e\x93\x91\x63\x07\xfd\x50\xb5\x5a\x4d\x5f\x83\xad\x7e\x92\x5a\x1a\x3c\x75\xc3\xd9\xec\x3b\xc9\xc5\xae\xff\x25\xc0\xf9\xae\xdb\xf8\x91\xf2\x4b\xf8\x50\x8c\x11\x4e\xed\xc5\x8e\xe4\x0a\x7b\xac\x74\xab\xe5\x31\x5f\x24\x96\x70\x6e\x02\xf7\x98\x19\xcc\x7e\xd3\x05\x3c\x2d\x2f\x33\xcd\x3d\x9f\xe7\x6f\x87\x1c\x5b\x5f\x17\x14\xc2\x79\x11\xf8\x27\xea\xad\xd3\xd1\xe8\x14\x95\x49\xe9\x6b\x73\x80\xc1\x2f\x4d\x99\x19\x52\xd4\x11\x6c\x3c\xdb\xd3\x93\xe5\x59\xa4\xc8\x9f\xb3\xdf\x01\x00\x00\xff\xff\xda\x16\xdb\x1d\x90\x05\x00\x00"

func transfer_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_transfer_tokensCdc,
		"transfer_tokens.cdc",
	)
}

func transfer_tokensCdc() (*asset, error) {
	bytes, err := transfer_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transfer_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x55, 0xed, 0x8d, 0x8f, 0x8e, 0x8d, 0x1f, 0x3a, 0x84, 0xe3, 0x68, 0x98, 0xc3, 0xa7, 0x92, 0xa1, 0x55, 0x2b, 0x13, 0x95, 0x10, 0x6e, 0x82, 0x54, 0xd1, 0xb8, 0x22, 0x28, 0xe9, 0xc0, 0xea, 0xce}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"burn_tokens.cdc":      burn_tokensCdc,
	"create_forwarder.cdc": create_forwarderCdc,
	"mint_tokens.cdc":      mint_tokensCdc,
	"privateForwarder/create_account_private_forwarder.cdc": privateforwarderCreate_account_private_forwarderCdc,
	"privateForwarder/create_private_forwarder.cdc":         privateforwarderCreate_private_forwarderCdc,
	"privateForwarder/deploy_forwarder_contract.cdc":        privateforwarderDeploy_forwarder_contractCdc,
	"privateForwarder/setup_and_create_forwarder.cdc":       privateforwarderSetup_and_create_forwarderCdc,
	"privateForwarder/transfer_private_many_accounts.cdc":   privateforwarderTransfer_private_many_accountsCdc,
	"scripts/get_balance.cdc":                               scriptsGet_balanceCdc,
	"scripts/get_supply.cdc":                                scriptsGet_supplyCdc,
	"setup_account.cdc":                                     setup_accountCdc,
	"transfer_many_accounts.cdc":                            transfer_many_accountsCdc,
	"transfer_tokens.cdc":                                   transfer_tokensCdc,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"burn_tokens.cdc": {burn_tokensCdc, map[string]*bintree{}},
	"create_forwarder.cdc": {create_forwarderCdc, map[string]*bintree{}},
	"mint_tokens.cdc": {mint_tokensCdc, map[string]*bintree{}},
	"privateForwarder": {nil, map[string]*bintree{
		"create_account_private_forwarder.cdc": {privateforwarderCreate_account_private_forwarderCdc, map[string]*bintree{}},
		"create_private_forwarder.cdc": {privateforwarderCreate_private_forwarderCdc, map[string]*bintree{}},
		"deploy_forwarder_contract.cdc": {privateforwarderDeploy_forwarder_contractCdc, map[string]*bintree{}},
		"setup_and_create_forwarder.cdc": {privateforwarderSetup_and_create_forwarderCdc, map[string]*bintree{}},
		"transfer_private_many_accounts.cdc": {privateforwarderTransfer_private_many_accountsCdc, map[string]*bintree{}},
	}},
	"scripts": {nil, map[string]*bintree{
		"get_balance.cdc": {scriptsGet_balanceCdc, map[string]*bintree{}},
		"get_supply.cdc": {scriptsGet_supplyCdc, map[string]*bintree{}},
	}},
	"setup_account.cdc": {setup_accountCdc, map[string]*bintree{}},
	"transfer_many_accounts.cdc": {transfer_many_accountsCdc, map[string]*bintree{}},
	"transfer_tokens.cdc": {transfer_tokensCdc, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
