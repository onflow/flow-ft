// Code generated by go-bindata. DO NOT EDIT.
// sources:
// ../../../transactions/burn_tokens.cdc (1.123kB)
// ../../../transactions/create_forwarder.cdc (1.898kB)
// ../../../transactions/mint_tokens.cdc (1.467kB)
// ../../../transactions/privateForwarder/create_account_private_forwarder.cdc (1.169kB)
// ../../../transactions/privateForwarder/create_private_forwarder.cdc (1.014kB)
// ../../../transactions/privateForwarder/deploy_forwarder_contract.cdc (354B)
// ../../../transactions/privateForwarder/setup_and_create_forwarder.cdc (1.865kB)
// ../../../transactions/privateForwarder/transfer_private_many_accounts.cdc (1.2kB)
// ../../../transactions/scripts/get_balance.cdc (501B)
// ../../../transactions/scripts/get_supply.cdc (249B)
// ../../../transactions/setup_account.cdc (1.289kB)
// ../../../transactions/transfer_many_accounts.cdc (1.378kB)
// ../../../transactions/transfer_tokens.cdc (1.418kB)

package assets

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	clErr := gz.Close()
	if clErr != nil {
		return nil, clErr
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _burn_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x52\xc1\x6e\xdb\x3a\x10\xbc\xeb\x2b\xe6\xf9\xf0\x60\x1f\x22\xb6\x40\xd1\x83\xe1\x36\x75\x83\xe6\xd8\x53\xda\x9e\x29\x6a\x6d\x11\x95\x48\x61\xb9\xaa\x1d\x04\xf9\xf7\x82\xa4\xa4\x48\x28\x12\x1f\x2c\x48\x3b\x3b\x3b\x33\xbb\x4a\xe1\xa1\xb1\x01\xc2\xda\x05\x6d\xc4\x7a\x07\x1b\xa0\x21\xd4\xf5\xad\x16\xc2\xc9\x73\x7c\x5d\xd4\xa5\xd1\x52\x28\x05\xe3\x87\xb6\x46\x45\x18\x02\xd5\xa8\x1e\x21\x0d\x41\xd7\x9d\x75\xd0\xc6\xf8\xc1\x09\xc4\xa3\x1a\xd8\x41\xfc\x6f\x72\x21\x36\x9d\xd8\x77\x11\x68\x19\x41\x3c\x53\x8d\x9f\x7a\x68\x23\x5f\x91\xb4\x50\x6a\xb0\xee\x0c\xdd\x25\x8a\xcb\x34\x45\xa3\xd7\xac\x3b\x12\xe2\xc8\x1b\x87\x2d\x54\x15\x85\xed\x7a\xcf\x82\xfb\xc1\x9d\x6d\xd5\xd2\x43\x1c\x99\xc7\x6d\xca\x52\x95\xa5\x32\xde\x09\x6b\x23\x41\xad\x30\xa5\xa9\xcd\x66\xea\xfe\x76\xd5\x5d\xff\x4f\xf3\x4b\xe7\xb2\x9e\x1b\x8b\x85\x88\x6d\xd6\xbc\xc7\x8f\x7b\x7b\xfd\xf8\x61\x87\xa7\xa2\x00\x00\xa5\xb2\x4b\x30\x05\x3f\xb0\xa1\x94\x21\x1a\xdf\xd6\x21\x1b\x49\xf9\xe4\xaf\x9a\x09\x15\xc5\x04\x62\x12\x54\x27\x86\x96\x04\x7f\x22\xc5\x1e\x5f\xd6\xea\x73\x7c\x33\x28\xe5\xbf\xc7\xff\x2b\xa1\xc7\xf8\xd1\x06\x61\x2d\x9e\x33\xb6\x67\xea\x35\xd3\x36\xd8\xb3\x23\xde\xe3\x38\x48\x73\xcc\x5b\x9b\x65\x8f\xd2\x7f\x59\x69\x6a\xd6\x17\xbc\x7f\x37\x09\x9d\xb6\x38\xae\x3b\x29\x83\x75\x69\xa5\xfa\x4c\x73\x77\xa0\xf6\x54\xe6\xea\xe1\x06\x79\x56\x59\x79\x66\x7f\x39\xac\x25\x26\x1b\x9f\xb7\x91\x78\x0f\x35\xf2\x28\x5a\x40\x12\x62\xf7\xdf\xcc\x1d\x7f\xe5\x65\xd4\x36\x27\x9f\x9f\xbb\x95\x81\x3b\xa6\x78\xc9\x1a\x4c\x27\x62\x72\x31\x7f\xbf\xbc\xd6\xf4\x3f\xef\xe6\x35\x1f\x19\xf6\xe9\x4d\x1b\xab\xa4\xdf\xb4\x93\x90\xbb\x95\x9b\xdb\x5b\xf4\xda\x59\xb3\xdd\xdc\xa5\xa3\x77\x5e\x90\xa7\xbc\xae\x7d\x52\xbd\xc9\x54\xcf\xd9\x38\x5d\xc9\x0c\x42\x78\x9a\xf9\xe3\x6d\xa4\x7b\xe2\xb4\x89\xd9\x4f\x69\x52\x38\xdf\xe9\xf2\x35\x55\xb7\x8b\xe8\x32\xbe\x8c\x8f\x24\x39\x8c\x7e\x0e\x37\x2f\x7b\x5d\xc0\x6b\x0a\xc2\xfe\x71\x6c\x1b\xe5\x3c\x17\x7f\x03\x00\x00\xff\xff\x96\xe8\xd5\x2e\x63\x04\x00\x00"

func burn_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_burn_tokensCdc,
		"burn_tokens.cdc",
	)
}

func burn_tokensCdc() (*asset, error) {
	bytes, err := burn_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "burn_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xdd, 0xe0, 0x92, 0xb9, 0x6e, 0x2c, 0xd5, 0x1f, 0xe7, 0x73, 0xe7, 0x52, 0x2f, 0x34, 0xcc, 0x61, 0x28, 0xd1, 0x3d, 0x56, 0xf0, 0xa7, 0x55, 0xf1, 0xa8, 0xea, 0xee, 0xf4, 0x38, 0xf0, 0x55, 0x29}}
	return a, nil
}

var _create_forwarderCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x54\x4d\x6f\xe3\x36\x10\xbd\xf3\x57\x0c\x72\x68\xbd\x81\x43\xa1\x5f\x17\x23\x2d\x10\xa4\x0d\xd0\x4b\x0f\xdb\xa0\xd7\xee\x98\x1c\x99\x6c\x24\x52\x20\x47\x56\x8d\x45\xfe\x7b\x41\x52\xa2\xa5\x74\x91\xf5\xc9\x12\xe7\xbd\x79\x33\xef\x89\xcd\xed\xad\x10\xcf\xc6\x46\xe0\x80\x2e\xa2\x62\xeb\x1d\xd8\x08\x08\x4c\xfd\xd0\x21\x13\xb4\x3e\xa4\xc7\xd5\x39\x1b\x64\x50\x7e\xec\x34\x1c\x09\xc6\x48\x5a\xb0\x87\x48\x0c\xe3\x00\xe8\x00\x95\xf2\xa3\x63\x60\x9f\xc0\x13\x06\x0d\x9a\x06\x1f\x2d\x93\x06\xf6\x2f\xe4\x62\x3a\x43\xe7\xd9\x50\x80\x40\x8a\xec\x99\x82\x14\xe2\xf7\x16\xd0\x5d\xbc\x23\x88\xe4\x74\x5c\x17\xa7\x3e\xe1\xdb\x08\x4f\x85\x91\x02\x7c\x9c\x71\x7b\xc1\x86\xea\x13\x4c\xb6\xeb\xe0\x9f\x31\x72\x6d\xce\xc6\x47\x5a\x71\xa5\xf2\xbf\x70\xec\xb8\x4c\x62\x30\xc2\x91\xc8\x89\x34\x01\xc6\x7c\x1c\x48\xd9\xc1\x92\x63\x40\xa7\x81\x7a\x9b\xfe\x00\x9d\xd3\x9b\x0c\xb2\x4e\x5b\x85\x4c\x51\x4c\xc6\x2a\x93\xd5\x2d\x0d\xd3\x94\x66\x69\x28\xe7\x05\x4f\x78\xd9\x83\x4d\xf3\x81\x6f\xdb\x3b\x65\xd0\x3a\x88\x14\xce\x56\x11\x4c\xe8\x38\x4b\xeb\xbd\xb3\xec\x03\x4c\xc6\x27\x1b\x66\x42\xeb\x4e\xe2\x2a\xdf\xf2\x1e\x2c\x83\x42\x07\x13\xb2\x32\x45\x56\x3e\x8a\x44\x30\x19\x0a\xb4\x12\x00\x0a\x7b\x82\x36\xf8\x5e\x0a\xf1\x27\xd3\x30\x57\x16\xb7\x8a\x55\x11\x26\xcb\xa6\x00\xea\x14\xe1\x20\xc4\x77\x12\x9e\x0d\xc1\xd3\xe8\x4e\xf6\xd8\x11\x3c\xe7\x0a\xe5\x1d\x07\x54\x69\x0b\x4c\xa1\x45\x45\x10\x4d\xce\x03\x76\x81\x50\x5f\x52\x2e\x34\x0d\x9d\xbf\x90\x86\xe8\x7b\xca\xa2\xc4\xf7\x85\x0d\x87\xa1\xb3\x0a\x13\x1f\x6f\xf9\x66\x96\x15\x5a\x8a\x1f\x0a\x68\xe5\xc8\x1c\xaf\xb9\xd8\xe0\x99\x00\x67\x43\x53\x58\x39\xe7\xb9\x10\x07\x42\x26\x2d\x00\x20\x1b\x19\xd9\x07\xd2\x60\x1d\x58\x8e\xf9\x09\x4f\x54\x66\x47\x18\xc6\x63\x67\xa3\x21\x5d\xb3\x24\x7e\x94\xf0\x6b\x16\x92\xf7\xf9\x29\x4f\xff\x54\x3d\x91\x4a\xab\x4f\x57\xf1\x39\xa5\xda\xb6\x2d\x85\x95\x4c\xf1\x93\x4c\x99\x05\x04\x47\x13\x3c\x94\x97\x07\x78\xcc\xca\x32\xed\x32\x8f\xf3\xa1\xc7\xae\xbb\xec\xb3\x5c\x36\xe4\x20\x8c\xae\x74\x2e\x83\xfc\x5d\xad\x29\xad\x57\x1f\x65\x01\x9d\x88\xd9\xba\x13\x6c\x3e\x88\x64\xfd\xa6\x51\x09\xf0\x9b\xa0\x4b\x71\xdb\x08\x61\xfb\xc1\x07\xae\x7e\x17\xbb\x33\xc1\x8d\x94\x8d\x94\xcd\x32\x6d\x6c\x36\x35\x49\xcf\xcd\x82\xfe\xed\x5f\xec\x87\xff\x81\xaf\xc8\xf5\xf9\x06\xf8\x66\xbf\x5f\xc2\x8e\x6c\x3b\xcb\x97\xc7\xfa\xe2\x0b\x9e\xdc\x08\xb1\xda\xcc\x6e\xb9\x5f\x0e\xf0\xa0\x75\xa0\x18\x3f\xc0\x67\x91\xd7\x35\x04\x1a\x30\xd0\x0e\x95\xe2\x03\x3c\x8c\x6c\x66\x7f\x52\x05\xcc\xbf\x8e\x78\x15\xbe\x9f\xd3\x8e\xe7\xaa\xca\xfc\xa1\x16\xa7\x9f\x3c\x11\x3f\xe2\x80\xc7\xac\xf4\xfe\x9b\xcf\xdb\x4d\x2d\xbe\xbc\xfe\xb2\x6b\x72\xe4\x54\x43\xab\x85\x7c\xac\x9c\x1b\x05\xe7\x1c\xef\xfb\xbb\xb7\x3b\x92\x25\x19\x7f\xd0\x54\x2f\xc6\x5d\x55\x7b\xb8\x0a\xbf\x4a\x4c\xc3\xca\x88\x67\xda\xdd\xdf\x65\xd6\x3d\xb0\x3f\x40\x33\x7f\x0d\x1b\x31\x95\x73\xa5\x26\xdd\x61\x89\x62\x33\xe5\xfb\xa3\x48\x65\x48\xbd\xbc\xb7\x89\xf5\xc2\xab\xc8\xd1\x75\xd6\xbd\x7c\x65\x4b\x0b\xe2\x55\x6c\x27\x4c\xd0\xf7\x3a\x6e\xda\xbd\xd7\x62\xbf\xa9\x64\x0c\x27\xe2\xaf\xad\xab\x42\x8a\xbe\x57\xf1\xfa\x5f\x00\x00\x00\xff\xff\x91\x8c\xb9\xa4\x6a\x07\x00\x00"

func create_forwarderCdcBytes() ([]byte, error) {
	return bindataRead(
		_create_forwarderCdc,
		"create_forwarder.cdc",
	)
}

func create_forwarderCdc() (*asset, error) {
	bytes, err := create_forwarderCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "create_forwarder.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x75, 0xef, 0x66, 0xf6, 0x84, 0xa5, 0x39, 0xb2, 0xa8, 0xba, 0x90, 0x78, 0xf0, 0x27, 0x2c, 0x6e, 0xad, 0x77, 0x23, 0xdd, 0x9f, 0xc6, 0x7c, 0x7c, 0xc1, 0xa4, 0x26, 0x14, 0xc5, 0x4a, 0x61, 0x57}}
	return a, nil
}

var _mint_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x54\xcd\x6e\xdb\x3c\x10\xbc\xeb\x29\x16\x3e\x04\x32\x90\x48\x97\x0f\xdf\xc1\xc8\x0f\xdc\xb4\xe9\xa9\x3d\xa4\x49\xef\x6b\x6a\x6d\xb3\x95\x48\x61\xb9\x8a\x13\x04\x79\xf7\x82\x7f\xb6\xe4\xd6\xe6\xc5\x00\x35\x3b\xb3\x3b\x3b\xb4\xee\x7a\xcb\x02\x0f\x83\xd9\xe8\x55\x4b\x4f\xf6\x37\x19\x58\xb3\xed\x60\x56\x55\xb5\xb2\x46\x18\x95\xb8\x7a\x02\xa8\x54\xa3\x66\x45\x2a\xfd\xf2\x8a\x5d\x7f\xa6\x72\xfc\x3d\x16\x16\x75\x5d\xc3\xd3\x56\x3b\x10\x46\xe3\x50\x89\xb6\x06\xb4\x83\xdd\x16\x05\x64\x4b\xd0\x69\x23\xc4\xb0\x54\xca\x0e\x46\x60\x70\xe4\x40\x6c\xb8\x06\x43\x3b\x10\x4f\xe6\x12\x0f\xbd\x41\xcf\xf6\x45\x37\x14\x6a\x99\x94\xee\x35\x19\x01\x6c\x1a\x26\xe7\x00\x4d\x03\xd8\x05\xa6\x44\x72\x19\xee\x3c\x7a\xc4\x84\x4c\xb1\xa1\x35\x31\x53\xe3\xb1\x1e\xb1\x67\x59\xfb\x96\x7c\xb5\x36\x9b\xa2\x18\xb5\x5e\xee\x25\x17\xb0\x8c\xe8\xcb\x24\xb8\x80\xe7\x07\xfd\xfa\xff\x7f\x73\x78\x2f\x0a\x00\x00\x2f\xf4\x48\x6b\x62\x32\x8a\xb2\x44\xb2\x08\xa2\x87\xcb\xa6\xd3\x06\x1e\xc9\xd9\x81\x15\x81\x5d\xfd\x22\x25\xa1\xb8\x25\x89\x0d\x07\xc8\x02\x2e\x26\xde\x86\x4b\xed\x84\x51\x2c\x9f\x51\xcb\xab\x4c\x72\x8f\xa4\x48\xbf\x10\x83\x5d\x4f\xfd\x9b\x4a\x66\xd8\x02\x2e\xde\xa7\x61\xc8\x5f\x3e\xa2\x66\xcf\xd4\x23\x53\xe9\xf4\xc6\x78\xf8\x72\x90\x6d\x5a\xa4\x77\x01\xd2\xa9\x6b\xf8\x64\x99\xed\x0e\x10\xf8\xb8\x45\x0c\x16\x8c\x26\xf7\xc7\x51\xbb\xae\x0e\xe3\xc3\x0d\x44\x89\x6a\x15\x78\xae\xcf\xb8\x71\x5b\xfa\x60\x2e\xa0\x76\x62\x19\x37\x54\xd3\x08\x1a\x90\xf3\xbd\x8c\x3f\x77\x77\xd0\xa3\xd1\xaa\x9c\xfd\x08\x12\x3e\x9c\xc6\xca\x21\x31\xb1\xc3\xd9\xbc\x18\xcf\xf3\x95\x22\x02\x53\x6c\x8f\x0d\x0d\xa1\x5b\x9d\x1a\x5a\xb3\x47\x06\x27\xff\x31\xf2\x7e\x4b\x37\xb0\x21\x49\x7e\x1e\x82\x37\x6d\xbf\xda\x90\xdc\x63\x8f\x2b\xdd\x6a\x79\x2b\xeb\x7e\x58\xb5\x5a\x4d\x86\xce\x7c\x47\x85\xd9\xca\x53\x2b\xbe\x2d\x4f\x19\xf5\x6c\xd0\x67\x4a\x6c\x9e\x30\x0f\x73\x18\x74\x16\x6b\x53\x4e\xe8\x95\xd4\x20\x94\x1f\x46\xf2\xf0\x9e\x09\x85\x00\xf3\x5f\x80\xb7\x2c\x3c\xfb\xf4\x50\x33\xd4\xe7\x32\x41\xae\xaf\x8e\xa3\x51\xa9\xc0\xf2\x9d\x76\xdf\x02\xa4\xc4\xb6\xb5\x3b\x6a\x96\xe9\x4d\xc6\xb7\x39\xff\x9b\xac\xf9\x89\x43\x2b\x9e\x31\x72\x57\xfe\x27\x58\xe0\x4a\x3c\x2a\x1e\x77\xfd\x99\x7a\xeb\x74\xd8\x7e\x97\x33\x1c\xe6\xa7\xf3\xdb\xac\x9a\x58\x98\xe2\x79\x7d\x35\xea\x62\xa4\xd0\x90\x13\xb6\x6f\xa9\xa9\x64\xe2\xc7\x9f\x00\x00\x00\xff\xff\x71\x98\x92\xb0\xbb\x05\x00\x00"

func mint_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_mint_tokensCdc,
		"mint_tokens.cdc",
	)
}

func mint_tokensCdc() (*asset, error) {
	bytes, err := mint_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "mint_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf3, 0x44, 0x9c, 0x32, 0xe3, 0x7b, 0xdf, 0x5f, 0x12, 0x61, 0x57, 0x96, 0xbb, 0x41, 0x7e, 0xc4, 0x5b, 0x25, 0xdb, 0x93, 0x90, 0x75, 0x20, 0xaf, 0x88, 0x3, 0x52, 0xcf, 0x26, 0xa7, 0x31, 0x72}}
	return a, nil
}

var _privateforwarderCreate_account_private_forwarderCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x52\x4d\x6f\xdb\x30\x0c\xbd\xfb\x57\x70\x3d\x6c\x0e\xd0\x5a\xf7\x20\x1d\x50\x14\xcd\x71\x08\xb6\x6e\x77\x46\x61\x63\xa1\xb6\x24\x50\x74\xbc\xa0\xc8\x7f\x1f\xfc\x09\xcb\xad\x87\xa0\x3a\xd8\x06\xfd\xf8\x1e\x1f\x9f\x4c\xe9\x1d\x0b\x6c\x2b\x7b\x34\xfb\x82\x9e\xdd\x2b\x59\x78\x61\x57\xc2\x4d\x96\xa9\x2c\x53\xda\x59\x61\xd4\x12\x54\x84\xc9\xf4\x41\xdf\x24\x7d\xf7\xd3\x5f\x2c\xfd\xff\x9b\xa7\x90\xa8\x77\xc7\xe6\x84\x42\x3f\x49\x93\x39\x11\x6f\x1d\xd7\xc8\x07\xe2\x05\x9e\x25\x78\xc7\x99\x28\x05\xcf\xb9\x09\x20\x8c\x36\xa0\x16\xe3\x2c\x98\x00\x55\xa0\x03\x88\x03\xcd\x84\x42\x80\x4d\x81\xbf\x05\xd8\x16\xae\x06\xd4\xda\x55\x56\xa0\x36\x92\x03\x82\xef\x14\xe0\x65\xa0\x4e\x92\x29\xdb\x5b\x02\x00\xe0\x99\x3c\x32\xa5\x1e\xcf\xc4\x6b\x78\xa8\x24\x7f\xe8\x68\x56\x3d\xa2\x39\x05\x49\xc3\x2e\x70\x3f\x45\x0c\x4d\xed\x6b\x95\x8c\xe8\x06\x99\x05\x3c\x51\xba\xb9\x8b\xd7\xd5\x4e\xfd\x54\x7a\x39\xff\xc1\xaa\x90\x74\x75\x3b\x36\x35\x47\xdc\x1a\x54\x10\xc7\x78\x24\x45\x93\xce\x16\x3d\x42\x27\x52\x4a\xc1\xe3\xb0\x8a\xc1\x2f\xf7\x2b\x8d\xa6\x1f\x8a\x8f\xe8\x71\x6f\x0a\x23\x67\xb8\xef\x06\x2d\x8c\x7d\xdd\x7c\x7d\x8b\x2f\xc5\x10\xcb\xe5\x7b\x1a\x4d\xa8\x7a\x91\x68\xba\x01\x3c\x33\x83\x7c\x24\xb9\xce\xd0\x97\xc8\xd1\xef\x40\x20\x39\xbd\x33\x14\x05\xff\x3e\xdd\xa9\xdd\xb1\x0a\x9b\xbb\xc5\x9b\xd9\xe7\xf1\x83\xea\xb1\x94\x32\x69\xe3\x0d\x59\x59\x7f\xb0\xb2\x85\x8c\x47\xb1\xdb\x36\xc1\x45\xb9\xd9\x8f\x5f\xdd\x5e\x76\x28\xf9\x9c\xb8\xcb\x64\x91\x68\xfc\x9a\xa5\x73\xad\xf2\xae\xda\x17\x46\x37\xc2\x1f\x47\xf6\x09\x07\x93\xcb\xd9\x3c\x2f\xc9\xe5\x5f\x00\x00\x00\xff\xff\x9c\x11\xa9\x8f\x91\x04\x00\x00"

func privateforwarderCreate_account_private_forwarderCdcBytes() ([]byte, error) {
	return bindataRead(
		_privateforwarderCreate_account_private_forwarderCdc,
		"privateForwarder/create_account_private_forwarder.cdc",
	)
}

func privateforwarderCreate_account_private_forwarderCdc() (*asset, error) {
	bytes, err := privateforwarderCreate_account_private_forwarderCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "privateForwarder/create_account_private_forwarder.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf, 0x7e, 0xc4, 0xb4, 0xb2, 0x35, 0xd0, 0x4d, 0x1d, 0x9f, 0x36, 0x2d, 0x9, 0xd8, 0xc5, 0x2c, 0x60, 0xfe, 0xa1, 0xe5, 0xa4, 0x37, 0xd4, 0xbd, 0x4c, 0xac, 0x9d, 0x6a, 0xa8, 0x75, 0x64, 0xc1}}
	return a, nil
}

var _privateforwarderCreate_private_forwarderCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x92\x41\x6b\xdc\x30\x10\x85\xef\xfa\x15\x43\x0e\xed\x06\x12\xe9\x6e\xb6\x85\x50\x9a\x63\x59\xda\xd0\xfb\x58\x9e\xda\x22\x5e\xc9\x8c\xc6\xde\x06\xb3\xff\xbd\xc8\x5e\x1b\x7b\xbb\x2e\x25\x3a\x18\x21\xbd\xf9\x9e\xe6\x8d\xdd\xb1\x09\x2c\xf0\xdc\xfa\xd2\xe5\x35\xbd\x84\x57\xf2\xf0\x8b\xc3\x11\xee\xb4\x36\x5a\x1b\x1b\xbc\x30\x5a\x89\x66\xa5\xd1\xb6\xb0\x77\xea\x52\xfd\xf5\x37\x1e\x9b\x7f\x17\x2f\x25\xab\xda\x03\xbb\x0e\x85\xbe\x93\x25\xd7\x11\x3f\x07\x3e\x21\x17\xc4\x1b\x9c\x2d\xf9\xc8\x54\xc6\xc0\x4b\xe5\x22\x08\xa3\x8f\x68\xc5\x05\x0f\x96\x09\x85\x22\x20\x78\x3a\x41\x33\x02\x80\x2f\x04\x70\x1e\xd0\x03\x5a\x1b\x5a\x2f\x20\x15\x0a\x24\x4c\x11\x28\xfa\x8f\x02\x58\x33\x61\xf1\x06\x15\x76\x04\xf8\x77\x79\xe0\x74\xda\xe6\xb5\xb3\x20\x43\x00\xd3\x55\xa2\xe4\xad\x0c\xa4\x6b\xcc\x4f\x6c\x6b\x51\x6a\xf9\xcc\x5e\x29\x00\x80\x86\xa9\x41\xa6\x1d\x5a\x2b\x19\x3c\xb5\x52\x3d\x8d\x4f\xbb\x87\x7e\x10\xa4\x35\x59\x7c\xc1\x06\x73\x57\x3b\x79\x83\x4f\x10\x5d\xe9\x89\x75\xed\xfc\xeb\xfe\xc3\x2a\xef\xc1\xad\x5f\xcf\x6f\x4a\xf0\xfc\x79\x37\x63\xd3\x32\x97\x0e\x0d\x2d\x08\x93\xf8\x61\x25\x15\xe4\x92\x24\x03\x13\x25\x30\x96\xeb\x92\xb1\xc3\x49\x7a\xaf\xe6\x6d\x4d\x02\x5d\xba\x84\xfd\xe3\xe6\xf4\xf5\x38\xb4\x6f\x74\x9a\x8f\x76\x4c\xd6\x35\x8e\xbc\x64\x37\xfa\x5f\x18\xa4\xe4\x74\xc4\x8e\x76\xfb\xc7\xc1\xe8\x01\x24\x64\xdb\x56\x57\x17\x3f\xc6\x66\x0e\x28\xd5\x02\xba\x0a\xb7\xdf\x64\xcd\xbb\xeb\x58\xff\xd7\xfd\x30\xfc\x49\xc9\xfc\x76\xd6\xef\xe8\x62\x31\x84\xf4\x3d\xab\xb3\xfa\x13\x00\x00\xff\xff\xa7\x43\x29\x99\xf6\x03\x00\x00"

func privateforwarderCreate_private_forwarderCdcBytes() ([]byte, error) {
	return bindataRead(
		_privateforwarderCreate_private_forwarderCdc,
		"privateForwarder/create_private_forwarder.cdc",
	)
}

func privateforwarderCreate_private_forwarderCdc() (*asset, error) {
	bytes, err := privateforwarderCreate_private_forwarderCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "privateForwarder/create_private_forwarder.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x3d, 0x84, 0x7, 0xaa, 0x7, 0x61, 0x1c, 0x66, 0x64, 0x2f, 0x5f, 0x25, 0x2, 0x66, 0xa7, 0x7d, 0xda, 0x62, 0x9e, 0x78, 0x6f, 0x5a, 0x3b, 0xb4, 0x63, 0x44, 0xb5, 0x35, 0x19, 0x9, 0xfa, 0xce}}
	return a, nil
}

var _privateforwarderDeploy_forwarder_contractCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xce\x41\x4b\x03\x41\x0c\x05\xe0\xfb\xfc\x8a\x77\xdc\xc2\xd2\x5e\x65\x6f\x05\x11\xbc\x48\xa1\x7a\x12\x0f\x71\x26\xee\x06\xdb\xcc\x90\xc9\x52\x44\xfa\xdf\x65\x5b\xb7\x54\xb0\x97\x61\xc2\x7b\x21\xdf\x6a\x85\x7b\x2e\xbb\xfc\x55\xe1\x03\xe3\x39\x7f\xb2\x3e\x64\x3b\x90\x25\xd1\x1e\x31\xab\x1b\x45\xc7\x41\x7c\x38\x35\x6a\xe1\x28\x1f\xc2\x09\xa2\xe2\x28\x64\xb4\x67\x67\xab\x21\xb8\x91\x56\x8a\x2e\x59\x9b\x79\xf1\x89\xf6\xdc\x61\xeb\x26\xda\xb7\x88\x39\x71\x87\xd7\x97\x47\xf5\xbb\xb7\x16\x95\x35\xb1\x6d\x3d\x1b\xf5\xbc\x21\x1f\xa6\xe6\x65\x68\x51\x6f\x26\x65\x7c\xdf\x49\x3c\x07\x9b\xcb\x7f\x81\xef\x10\x80\x62\x5c\xc8\xb8\xa9\xd2\x2b\x5b\x87\xf5\xe8\xc3\x3a\xc6\x3c\xaa\xff\x36\x80\x73\xb6\x9c\x99\x75\x49\x29\x35\x7a\xc2\x5e\xd3\x67\xf2\xf4\xfe\xe3\xfd\x43\xbc\x56\x2d\xa6\x2b\xc7\x70\x0c\x08\x3f\x01\x00\x00\xff\xff\xfa\xc9\xca\x4c\x62\x01\x00\x00"

func privateforwarderDeploy_forwarder_contractCdcBytes() ([]byte, error) {
	return bindataRead(
		_privateforwarderDeploy_forwarder_contractCdc,
		"privateForwarder/deploy_forwarder_contract.cdc",
	)
}

func privateforwarderDeploy_forwarder_contractCdc() (*asset, error) {
	bytes, err := privateforwarderDeploy_forwarder_contractCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "privateForwarder/deploy_forwarder_contract.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x97, 0xc6, 0x18, 0x3, 0x50, 0x17, 0xf, 0x28, 0x42, 0xb1, 0x37, 0xd3, 0x78, 0x54, 0xd9, 0xcf, 0x38, 0x13, 0x6c, 0x41, 0x3, 0x4c, 0x43, 0x9e, 0x1d, 0x8f, 0x22, 0x4c, 0xb1, 0xe4, 0x78, 0x74}}
	return a, nil
}

var _privateforwarderSetup_and_create_forwarderCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\x41\x6f\xa3\x4c\x0c\xbd\xf3\x2b\xac\x1e\x2a\x90\x52\xb8\x57\x34\x52\xbf\xaa\x3d\x7e\x8a\x76\xab\xbd\x3b\x83\x03\xa3\x90\x19\x64\x4c\xd2\x28\xca\x7f\x5f\x31\x21\x84\x29\x21\xca\xae\x76\x4e\x88\x79\xb6\x9f\xe7\x3d\x3b\xd0\x9b\xca\xb2\xc0\x47\x63\x72\xbd\x2c\xe9\xd3\xae\xc9\xc0\x8a\xed\x06\x1e\xe2\x38\x89\xe3\x44\x59\x23\x8c\x4a\xea\xc4\xc3\xc4\x2a\x53\x0f\xe7\xe8\xf7\x2f\xdc\x54\xb7\x83\x87\x10\x2f\x76\xc1\x7a\x8b\x42\x3f\x48\x91\xde\x12\x7f\x58\xde\x21\x67\xc4\x13\x79\xa6\xe0\xa7\x9c\x41\x92\xc0\x67\xa1\x6b\x10\x46\x53\xa3\x12\x6d\x0d\x60\x96\xd5\x80\xf0\x0b\x9b\x52\x66\x80\x50\x9d\x52\x00\x77\x39\x60\x75\x4e\xd2\x86\x23\x2c\xb1\x44\xa3\x08\x14\x56\xb8\xd4\xa5\x96\xfd\x0c\xd0\x64\x6d\x64\xb3\x2c\xb5\x1a\x5c\xb4\xa1\x20\xc5\x25\x57\x10\x0c\x2b\x1f\x82\x00\x00\xa0\x62\xaa\x90\x29\xac\x75\x6e\x88\x9f\xe1\xb5\x91\xe2\x55\x29\xdb\x18\x89\xe0\xe0\x20\xed\xd1\x2b\x38\x21\xe2\x9c\xe4\xad\xaf\x91\x3e\x4e\xf6\xdc\x7f\xcd\xc3\x49\xcc\xb7\x8b\x85\x6b\x61\x81\x52\x44\xb1\x2a\x48\xad\xc3\x21\x85\xf6\x24\x49\xff\x42\xfd\xc3\xc0\x0e\x6b\xc0\x92\x09\xb3\x3d\xd4\x24\xd0\x54\x5e\x0c\x93\x34\x6c\xfa\x5f\xc7\xe0\x4a\x53\x4b\xcb\x6c\x77\xe9\xa3\xe7\x04\x27\xca\x3c\x6c\xb5\x7e\x86\xa4\x16\xcb\x98\x53\x42\x03\x88\x43\x44\xf0\xf2\x02\x46\x97\x63\xaa\x6f\x4c\x2d\x53\x04\x43\x3b\xdf\x87\x2e\xd0\x09\x57\x35\x02\x5a\x40\x1b\xe8\x0a\x78\x49\x3a\x7a\x35\x6e\x29\xf4\x2e\xda\x93\x3e\xf9\xc6\x75\xd5\xde\x37\x95\xec\x5d\xfa\x30\x9a\x8d\x42\xc4\xde\xea\xc4\x83\x47\xd7\x5e\xac\xe3\x53\x6a\xb3\x4e\x1f\x0f\xfe\xd0\x9d\x55\x3c\xce\x7d\xaa\x49\xa7\x98\x57\xef\x0c\xf6\x29\x0a\x72\x4e\x72\x17\xc5\xe8\x42\xaa\x24\xe9\x3d\x7e\xb1\x26\xbc\x4c\x38\x76\x9a\xf6\x4d\xa6\x83\x82\x43\x69\xc7\x63\x27\xd6\x4d\xdd\x49\x62\x29\x50\xc0\x9a\x72\x0f\xf4\x55\xd9\x9a\xea\x61\x92\x16\x76\x1e\xe8\x95\xa6\x32\x03\x29\xd8\x36\x79\xe1\x6e\xfe\xeb\x6e\xb4\x11\xe2\x15\x2a\xba\xae\xc2\xd8\xb2\xdf\x1a\xec\xf2\x8c\x65\x71\xcc\xbd\x5e\x3b\xe8\xbf\x12\xe5\x32\xa2\xe9\xd3\xe4\x2e\xed\x7c\xfb\x3f\xed\xfa\x5f\x21\x93\xd2\x95\x26\x23\xcf\x57\x84\x8d\x46\x76\x74\xe3\x91\x3e\xf5\xe5\x66\xce\xe7\xf7\x6e\x9d\x9f\xa7\xb6\xdc\xda\x99\x70\xfa\x3d\x4b\xce\x7b\xb3\x3f\xdf\x78\xd7\xdf\xfc\x2f\x7a\x08\xfc\x01\x3e\x06\xc7\xe0\x77\x00\x00\x00\xff\xff\x0f\x07\xa2\x5d\x49\x07\x00\x00"

func privateforwarderSetup_and_create_forwarderCdcBytes() ([]byte, error) {
	return bindataRead(
		_privateforwarderSetup_and_create_forwarderCdc,
		"privateForwarder/setup_and_create_forwarder.cdc",
	)
}

func privateforwarderSetup_and_create_forwarderCdc() (*asset, error) {
	bytes, err := privateforwarderSetup_and_create_forwarderCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "privateForwarder/setup_and_create_forwarder.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x62, 0x2f, 0x18, 0xb4, 0x7c, 0xd3, 0xee, 0x77, 0xe7, 0xd, 0x5f, 0x65, 0x22, 0x96, 0x29, 0x13, 0xb1, 0xaa, 0xa, 0x39, 0xcf, 0x45, 0x82, 0x83, 0xdf, 0x8a, 0xd8, 0x56, 0xc1, 0x19, 0x2a, 0x16}}
	return a, nil
}

var _privateforwarderTransfer_private_many_accountsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x53\xb1\x6e\xdb\x30\x10\x9d\xc3\xaf\xb8\x78\x48\x6d\xa0\xa5\x96\xa2\x83\x90\x36\x30\x8a\xba\x53\x81\x20\x49\xbb\x14\x1d\x68\xf2\x24\x11\x91\x49\xe1\x78\xb2\x1c\x04\xfe\xf7\x42\x22\x6d\x48\x75\x5d\x2f\x9d\x6c\x1c\xde\x7b\x7c\xef\xdd\xc9\x6e\x1a\x4f\x0c\xab\xd6\x95\x76\x5d\xe3\x93\x7f\x46\x07\x05\xf9\x0d\xcc\xa4\xcc\xa4\xcc\xb4\x77\x4c\x4a\x73\xc8\x26\x18\xa9\x8d\x9e\x89\xc4\xfe\xb2\x53\x9b\xe6\xdf\xe4\x31\x64\xc2\xbd\x27\xbb\x55\x8c\x0f\xa8\xd1\x6e\x91\x56\x9e\x3a\x45\x06\xe9\x8c\xce\x39\x78\xd4\x14\x59\x06\x4f\x95\x0d\xc0\xa4\x5c\x50\x9a\xad\x77\xf1\x7f\x81\x14\x80\x3d\x6c\x94\x7b\x01\x65\x0c\x61\x08\x18\x80\x2b\xf2\x6d\x59\x01\x57\x68\x09\x9a\x28\x0e\x94\xd4\x83\x10\x23\xa1\x79\xa2\x2d\x37\xbe\x75\xfc\x4d\x35\x39\xbc\x2e\xe3\x28\x87\xef\x2b\xbb\xfb\xf0\x7e\xbf\x80\x57\x21\x00\x00\x06\x23\x08\x3f\x54\x5b\x33\x10\x06\xdf\x92\x46\xe0\x4a\x31\x54\xbe\x36\xfd\xcb\x08\xdc\xb7\x11\xe2\x54\x11\xc2\x1a\xad\x2b\x8f\x7e\x09\xcd\x20\x55\x23\xc3\xb6\xd7\x79\xc0\x22\x87\x9b\x49\x93\x83\xbe\x38\xc2\x52\x80\xd4\x8a\x75\xe5\x23\x3a\x83\x94\xc3\xcd\xd9\xde\x22\x22\x4a\x34\x84\x8d\x22\x9c\x07\x5b\xba\x9e\xb5\x6c\xb9\x5a\x6a\xdd\xc7\x3d\x06\x4b\xe1\xbe\x22\x83\x02\xc2\x02\x09\x5d\x9f\xcc\x0f\x89\x22\xf3\x4d\x80\xc0\x9e\xd0\x44\xdf\x47\x5e\xc0\xba\x90\x87\x28\xf0\x31\xa1\xe5\xda\x13\xf9\xee\xf6\x2f\xc9\x3e\xcd\xfb\x2b\xc8\x21\xeb\xe5\x54\x89\x19\x8e\x20\x03\x62\x21\xae\xae\xae\xee\xee\xa0\x51\xce\xea\xf9\xec\xb3\x6f\x6b\x03\xce\x33\x44\xd1\x53\x87\xbe\x8b\x06\x07\xf6\xf5\x6c\x21\xa6\xee\xce\x34\x78\x6a\xf6\x42\xa1\x07\xe7\x17\x60\x8f\x31\xd7\xbd\xe2\xea\x3f\x25\xd9\xc7\x1f\xdc\xa1\x6e\x19\xc7\x5b\x2b\x3c\x1d\x2e\x1f\xac\x83\x3f\xaf\x59\x3e\xe3\x4b\x18\xe3\x2f\x75\x22\x03\x3a\x93\xf2\x0d\x0b\x09\x87\x2f\xe4\x6d\xba\xec\x1c\x6e\xdf\x4d\x76\x2e\x3b\xcb\x95\x21\xd5\xcd\xd5\xf0\x6c\x7e\xe2\xe2\x67\x1a\xfc\xba\x5e\x8c\x56\xb3\x4f\xd1\xf6\xe2\x77\x00\x00\x00\xff\xff\x91\x93\x35\x13\xb0\x04\x00\x00"

func privateforwarderTransfer_private_many_accountsCdcBytes() ([]byte, error) {
	return bindataRead(
		_privateforwarderTransfer_private_many_accountsCdc,
		"privateForwarder/transfer_private_many_accounts.cdc",
	)
}

func privateforwarderTransfer_private_many_accountsCdc() (*asset, error) {
	bytes, err := privateforwarderTransfer_private_many_accountsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "privateForwarder/transfer_private_many_accounts.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x71, 0xd6, 0xa5, 0x49, 0x1f, 0x49, 0x61, 0xc1, 0x93, 0x5a, 0x54, 0x73, 0x9e, 0xf, 0x9f, 0xdb, 0x68, 0xd8, 0x30, 0x49, 0x61, 0x82, 0x38, 0x3f, 0x6f, 0xe5, 0x4c, 0xf6, 0xe7, 0xdc, 0xc0, 0xc4}}
	return a, nil
}

var _scriptsGet_balanceCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x91\xcd\x6e\xea\x30\x10\x85\xf7\x79\x8a\xa3\x2c\xee\x0d\x1b\x7b\x53\x75\x81\x4a\x11\x45\xe5\x01\x2a\xda\xbd\xe3\x4c\xc0\xaa\x63\x5b\xf6\xb8\x50\x21\xde\xbd\xca\x0f\x14\x36\xcd\x2a\x92\xbf\xef\x68\xe6\x8c\x94\xd8\xee\x4d\x42\xd2\xd1\x04\x46\x24\xd5\x24\xf0\x9e\x50\x2b\xab\x9c\x26\xb4\x86\x6c\x03\xdf\x42\x39\x28\xad\x7d\x76\xfc\x3f\x61\x63\xfd\x61\xeb\x3f\xc9\xe1\x65\xe4\x8a\xc2\x74\xc1\x47\xc6\x26\xbb\x9d\xa9\x2d\x8d\xaf\x6d\xf4\x1d\x4a\x21\xa4\x10\x52\x7b\xc7\x51\x69\x4e\xf2\x8e\x11\xba\xd1\xe5\xc5\x7e\x3d\xaa\x2e\xfc\x2d\xdf\x22\xa3\x5b\x84\x5c\xa3\xcd\x0e\x9d\x32\xae\x9a\x86\x9c\x63\xd5\x34\x91\x52\x9a\xcd\xf1\xbe\x31\xc7\xc7\x07\x9c\x0a\x00\xb0\xc4\xfd\x22\x8c\x05\x76\xc4\xab\x91\xbe\x58\xb3\x2b\xf2\xa5\xb2\xe5\x37\x6a\xb1\x18\x68\xb1\x23\x5e\xab\xa0\x6a\x63\x0d\x7f\x57\x32\xe4\xda\x1a\x2d\xe9\x66\x98\xa9\x89\x31\xa2\xff\x44\xed\x63\xf4\x87\xa7\x7f\x77\x23\x7f\xf4\xc1\xa7\xfb\x0a\x26\xf5\xfc\x5c\xfd\xda\xcb\x25\x82\x72\x46\x57\xe5\xda\x67\xdb\xc0\x79\xc6\x18\x78\xe9\x1c\x91\x5a\x8a\xd4\xff\xb1\x1f\x8e\x36\x64\x97\xb3\x62\x08\x89\xc4\x39\xba\xeb\x22\x62\xba\x68\x71\x2e\x7e\x02\x00\x00\xff\xff\x9d\x23\x0d\xe0\xf5\x01\x00\x00"

func scriptsGet_balanceCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_balanceCdc,
		"scripts/get_balance.cdc",
	)
}

func scriptsGet_balanceCdc() (*asset, error) {
	bytes, err := scriptsGet_balanceCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_balance.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc4, 0xe9, 0xf9, 0xca, 0xf3, 0x2f, 0x8a, 0xdd, 0x5c, 0xc8, 0xe4, 0x5a, 0x25, 0xc1, 0x89, 0x33, 0x30, 0xb9, 0x94, 0x2, 0x6f, 0x3c, 0xd3, 0xa1, 0xa4, 0x3a, 0x52, 0x50, 0x6d, 0x72, 0x87, 0x40}}
	return a, nil
}

var _scriptsGet_supplyCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xce\x4d\x4a\xc0\x30\x10\x05\xe0\xfd\x9c\xe2\xd1\x55\xbb\x49\x36\xe2\x42\x70\xa9\x17\xb0\x1e\x20\xa6\x89\x0d\xe6\x8f\xc9\x04\x2a\xe2\xdd\x85\xfe\x80\xdd\xce\xfb\x86\xf7\xb4\xc6\xbc\x86\x86\x66\x39\x54\x01\x3b\xb3\x34\xc8\xea\x20\x45\x4c\x44\xeb\xb5\xc6\x6f\xf8\xe0\xe2\x42\x5a\xa3\xf8\x3d\x7c\xd9\x4c\xaa\xd1\xcd\xe5\xcb\x65\xb4\x64\x58\x60\x4b\x16\x36\x56\x88\x42\xaa\x85\xe5\x6e\x3c\x97\x84\x41\x29\xad\x94\xbe\x64\xd3\xff\x89\xb2\x8b\x1d\x88\x6a\xff\x80\xef\x19\xc9\x84\x3c\x4e\x4f\x78\x7f\x0d\xdb\xe3\x03\x7e\x88\x00\x20\x3a\xb9\x26\x3d\xdf\x0a\xd4\x3e\xf7\x6d\x8f\x4e\x5a\x3e\xc7\x83\x4e\xc7\x81\x9d\x74\xce\xe7\x3b\xfd\xfe\x05\x00\x00\xff\xff\xa2\xfe\xee\xae\xf9\x00\x00\x00"

func scriptsGet_supplyCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_supplyCdc,
		"scripts/get_supply.cdc",
	)
}

func scriptsGet_supplyCdc() (*asset, error) {
	bytes, err := scriptsGet_supplyCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_supply.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xbc, 0x4c, 0xfc, 0x8d, 0xb8, 0x3b, 0xe9, 0x43, 0x2c, 0x85, 0x9d, 0xc5, 0x56, 0xda, 0x25, 0x45, 0x90, 0xf2, 0xd2, 0xc3, 0xf5, 0x14, 0x87, 0x1b, 0x57, 0xc8, 0xc3, 0xa1, 0xe1, 0xf0, 0xed, 0x39}}
	return a, nil
}

var _setup_accountCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x53\xc1\x6e\xdb\x30\x0c\xbd\xfb\x2b\xde\x7a\x18\x12\x60\x8b\xef\x45\x57\xa0\x1b\xba\x0f\x28\x8a\xdd\x19\x99\x4e\x84\x2a\x92\x40\x51\x6d\x8d\x22\xff\x3e\xc8\x76\x32\x6b\x0b\x86\x01\x3d\xcc\x37\x93\x8f\x8f\xef\x3d\xd3\x4d\xdb\xe2\x71\x6f\x13\x54\xc8\x27\x32\x6a\x83\x87\x4d\x20\x28\x1f\xa2\x23\x65\xf4\x41\xca\xeb\xaf\x7e\x99\xd1\x00\xea\x3a\x10\x7e\x50\x76\x0a\xe1\x14\xb2\x18\x2e\x75\xdd\xb3\x15\x90\x31\x21\x7b\x2d\xd8\x54\x6a\xa4\xa5\x31\xc0\x90\x47\x4e\x5c\x5e\xc0\xaf\x74\x88\x8e\x1f\xc3\x13\xfb\xa6\xb1\x87\x18\x44\xf1\x3d\xfb\x9d\xdd\xce\x55\xf4\x12\x0e\xb8\xda\xb4\x9b\x4d\x6b\x82\x57\x21\xa3\xa9\xad\x20\x1b\xd3\x99\xab\xd3\xf0\xfd\x82\xf1\xf2\xec\x12\x31\x8d\x36\x4b\xeb\x6f\x4d\x03\x00\x51\x38\x92\xf0\x2a\xd9\x9d\x67\xb9\xc6\x5d\xd6\xfd\xdd\xe4\x68\x7d\xc2\x94\xa7\x6d\xf1\xc0\x9a\xc5\x83\x49\xdc\x00\xdb\x8f\xc6\x66\xf3\x20\x27\x4c\xdd\x80\xa4\x41\xb8\x84\x5a\xe9\x1b\xa3\x3b\x53\xd9\x1e\xd3\xb6\xcd\x36\x88\x84\x97\x9b\x8f\x95\xd4\x11\x7c\xbb\x2a\x9e\xae\xd1\x16\x42\xda\x71\xbb\x4c\x70\x44\xac\xf1\xe1\x0b\xbc\x75\x78\x3b\x13\x97\x47\x46\x91\xe7\xd2\xb1\x72\xf0\x4d\xb8\x7c\x67\x82\xe7\x97\x0b\x0a\x41\xbe\x43\xcc\x0a\xab\xb0\x1e\xf3\xea\x33\xc1\x2c\x3a\xd1\x33\xaf\xaa\x9d\x37\x9f\xeb\xac\xc7\x2d\xf7\x87\xa8\xc3\x48\xbb\x5a\x7f\xaa\xe0\x1a\xfe\xe6\xeb\x0c\x5d\x5f\x96\x1e\xf3\xd6\x59\x03\x43\x91\xb6\xd6\x59\x1d\xe6\x4b\x9c\x2d\x8c\xf7\x17\xbc\x1b\xc0\xaf\x31\x24\x4e\x4b\x92\x02\xeb\x38\x86\x64\x15\x7d\xf6\xd3\x21\xe8\x5e\x42\xde\xed\xc7\xe6\x03\x1b\xb6\xcf\x2c\xb0\x5e\x59\x7a\x32\x7f\xb8\x77\xd6\x3f\x5d\xfa\x60\x6f\xf5\xa9\x9e\x88\x8e\xb7\x75\x54\xed\x24\xbf\xb2\x7d\xc2\xfe\x96\x12\xc9\x8e\xf5\x7f\x26\xb5\x25\x47\xde\x30\x7a\xcb\xae\xab\x62\xfa\x3a\x77\xde\x9b\xd2\xcc\xf3\x2f\x21\xcd\xd0\x77\x64\x34\xfd\x0e\xc7\xe6\x67\x00\x00\x00\xff\xff\x85\x2b\x74\xf9\x09\x05\x00\x00"

func setup_accountCdcBytes() ([]byte, error) {
	return bindataRead(
		_setup_accountCdc,
		"setup_account.cdc",
	)
}

func setup_accountCdc() (*asset, error) {
	bytes, err := setup_accountCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "setup_account.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x71, 0x3c, 0xf5, 0x14, 0x8e, 0x30, 0xe3, 0x52, 0xb1, 0x1d, 0xed, 0xd3, 0x0, 0x47, 0x8c, 0x91, 0x36, 0x39, 0xc2, 0x89, 0xd1, 0xf7, 0xf3, 0x9f, 0x32, 0x45, 0x95, 0x9c, 0x48, 0x4, 0x18, 0xa2}}
	return a, nil
}

var _transfer_many_accountsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x54\xcd\x6e\xdb\x3c\x10\x3c\x47\x4f\xb1\xf1\xe1\x8b\x7c\x88\x74\xf9\xd0\x83\x91\x1f\x18\x69\xd3\x53\x2f\x41\xda\x1e\x8a\x02\xa1\xa8\x95\xc4\x46\x26\x89\xe5\x2a\x4e\x10\xf8\xdd\x0b\x8a\x94\x20\x45\x86\xeb\x8b\x01\x72\x67\x76\x76\x67\x44\xb5\xb3\x86\x18\xee\x3b\x5d\xab\xa2\xc5\x47\xf3\x8c\x1a\x2a\x32\x3b\x58\x65\x59\x2e\x8d\x66\x12\x92\x5d\x3e\x2b\xc8\x64\x29\x57\x49\x84\x7e\x79\x15\x3b\x7b\x02\x39\xbd\x0f\xc0\x24\xcf\x73\x78\x24\xa1\x5d\x85\xe4\x80\xfd\x8d\xff\x03\x01\xad\x72\x0c\xa6\x02\x51\x96\x84\xce\xa1\x03\x67\x51\xaa\x4a\x61\x09\x4a\x03\x37\x08\x4f\xf1\x6e\xbb\x33\x9d\xe6\x6f\xc2\x3e\x81\x15\x24\x76\xc8\x48\x49\xc2\x9e\x56\x48\x56\x46\xa7\x1f\x0b\x37\xf0\xbe\x0d\x47\x1b\xf8\x7e\xaf\x5e\x3f\xfd\x7f\x58\xc3\x7b\x92\x00\x00\x78\x45\x0d\xc2\x0f\xd1\xb5\x0c\x84\xce\x74\x24\x11\xb8\x11\x0c\x8d\x69\x4b\xd7\xb7\x1e\x94\xfa\x53\x41\x08\x05\x2a\x5d\x03\xc7\x49\x08\xcb\x9e\xaa\x45\x86\x17\xcf\xf3\x80\xd5\x06\xfe\x9b\xcd\xdf\xf3\x87\x8e\x96\xd0\x0a\xc2\xd4\xa9\x5a\x23\x6d\x60\xdb\x71\xb3\x95\xd2\x6b\x1d\x55\x45\x65\x5f\x91\x41\x00\x61\x85\x84\xda\xcb\x32\xbd\x9c\x80\xbc\x70\xe0\xd8\x10\x96\xa1\xe9\x88\x73\xd8\x56\xd9\xa0\x03\xae\x63\x75\x56\x18\x22\xb3\xbf\x3a\x22\xeb\x26\xf5\xee\x6d\x20\xf7\x74\xa2\xc6\x1c\x27\x25\x7d\xc5\x3a\x39\x3b\x3b\xbb\xbd\x05\x2b\xb4\x92\xe9\xea\xce\x74\x6d\x09\xda\x30\x04\xd2\xa5\x42\xb3\x0f\x02\x7b\xf4\xf9\x6a\xdd\x8b\x3b\x84\xd9\xf0\x15\x65\xc7\x38\x1d\xb5\x32\x34\x38\xef\xdd\xfe\xe8\x5f\xf6\x8c\x6f\x6e\x5a\x1f\xd7\xf3\x53\x71\x53\x92\xd8\x0f\xfe\xf4\x21\xfc\xf7\x82\x06\xaf\x1c\x6a\x0e\xbe\x5f\x5d\xce\xb7\x96\xed\x23\x73\x2a\x7a\x0d\x9b\x85\xa4\x5f\xf1\xe0\xf7\xf9\x7a\x21\xcb\xbb\xe6\x55\x10\x4a\x65\x15\x6a\xbe\x70\x60\xbb\xa2\x55\x12\x44\xf0\x19\x4c\xf1\x07\xe5\x52\xd1\x88\x80\x6b\xa8\x91\x63\x2a\x86\x3c\x1f\xef\x74\x24\x1f\xd3\xc6\x0f\x28\x51\xbd\x20\x1d\xeb\xd5\x5f\x84\x90\x8c\x90\xac\x46\xbe\x13\x56\x14\xaa\x55\xfc\x96\xe6\x41\xf8\x2c\x12\x03\xe5\x7a\xc6\xe9\x7f\x63\xc8\xde\xe7\xcf\xc6\x80\x38\xdc\xa4\x4b\xd0\xc9\x5c\x05\xdc\xe9\x11\x7b\x0f\x57\xcb\xed\x7c\x46\x6b\x9c\x0a\x5e\x0c\x86\xea\x21\x2b\xf1\x51\x99\xf2\xd0\xb1\x55\x4d\xd6\x94\x95\x81\x30\x7e\x2e\x57\x97\x63\x80\x26\xbd\x0f\x31\xea\x87\xe4\x6f\x00\x00\x00\xff\xff\x4a\xaf\x74\xbf\x62\x05\x00\x00"

func transfer_many_accountsCdcBytes() ([]byte, error) {
	return bindataRead(
		_transfer_many_accountsCdc,
		"transfer_many_accounts.cdc",
	)
}

func transfer_many_accountsCdc() (*asset, error) {
	bytes, err := transfer_many_accountsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transfer_many_accounts.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x84, 0x81, 0xa6, 0x7f, 0x35, 0x53, 0x3c, 0xbd, 0x17, 0x18, 0xd5, 0x17, 0x1e, 0x7f, 0xb3, 0xbd, 0xb1, 0x31, 0x54, 0x9, 0xf9, 0x6d, 0x70, 0x99, 0xe9, 0xd9, 0xda, 0xb1, 0xe0, 0xc, 0x1e, 0x19}}
	return a, nil
}

var _transfer_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\x4d\x4f\xdc\x30\x10\x3d\x93\x5f\x31\xdd\x43\xc9\x4a\x25\xb9\x54\x3d\xac\xf8\x28\xa2\xa5\x77\x44\xdb\xb3\xe3\xbc\xdd\xb8\xcd\xda\xd1\x78\xc2\x82\x10\xff\xbd\xb2\x9d\xa4\x09\x54\x50\x2e\x28\xb3\x6f\xde\xbc\x79\x6f\x5c\x96\x74\xdb\x18\x4f\xc2\xca\x7a\xa5\xc5\x38\x4b\xc6\x93\x22\xc1\xbe\x6b\x95\x80\xb6\x8e\xc3\xe7\xec\x77\x69\x94\x64\x65\x49\xda\xf5\x6d\x4d\x15\xa8\xf7\xa8\xa9\x7a\x20\x65\x1f\x9c\x05\x89\x23\x0f\x5b\x93\xb8\xdf\xb0\x3e\x7c\x2a\xeb\xa4\x01\x93\xd2\xda\xf5\x36\x36\x07\x12\x6a\x94\xa7\x0a\xb0\xe4\x21\xd4\x77\x01\xca\xd0\x30\x77\x18\x9a\x8b\xac\x2c\xb3\xa8\x11\x74\x30\xd2\xd4\xac\x0e\xa4\xf6\x81\x84\x54\x18\xd1\x60\x24\xa5\x2d\xbb\x3d\xed\x20\x97\x7f\x87\x1c\x46\x85\x01\xd7\x29\x56\x7b\x08\x38\x4a\x0a\x95\xd9\x52\x59\x66\xf6\x9d\x63\xa1\xeb\xde\xee\x4c\xd5\xe2\x36\xcc\x4f\x9c\xab\xa2\x2c\x8a\x52\x3b\x2b\xac\xb4\xf8\x72\x01\x29\x74\xad\x57\x63\xf3\xd7\x7b\xb5\xef\x5e\xed\x9d\x23\x52\x6b\x36\x53\x91\xa7\xd5\x36\xf4\xfd\xda\xdc\x7f\xfa\xf8\x81\xc4\x6d\xe8\xb2\xae\x19\xde\xaf\xe9\x31\xcb\x88\x88\x06\x3b\x7e\xa8\xbe\x15\x62\x78\xd7\xb3\xc6\xe0\xa7\x6b\x6b\x9f\x56\x1b\xbc\x0f\x55\xc5\xa0\x0a\xc6\xee\xd2\xc2\x5b\x30\xa3\x8e\x54\x2d\x24\x44\x25\x91\x6b\x43\x9f\x97\x9b\xc5\x6a\x9a\xd9\x31\x3a\xc5\xc8\xbd\xd9\x59\xf0\x86\x2e\x7b\x69\x06\x9f\x27\x5d\x83\xb6\x6f\x10\x52\xc4\xd8\x82\x61\x35\x46\xaf\x53\xe7\xb1\x27\x2f\x8e\x51\xd3\x5d\x24\x1f\xfb\x82\x90\x58\xb9\xc1\x96\xce\x06\x70\x51\x39\x66\x77\x38\x7d\xbf\x30\x2d\xaa\x3a\xcf\x83\xbb\x1b\x2a\x03\x9b\xda\xa1\xc4\x0c\x12\x11\xeb\xec\xe8\xe8\xe8\xe2\x82\x3a\x65\x8d\xce\x57\x57\xf1\x12\xac\x13\x4a\xa4\x2f\x05\xba\x43\xd2\x17\xbb\xdf\xad\xd6\x8b\xa5\x7e\x8e\xb7\x37\xf8\x1a\xb3\x7d\x7b\x2d\x8f\x76\x5b\x4c\x06\xd3\xe9\xc9\xb4\x64\x31\x5e\xf3\x14\x79\xfa\xbf\x8e\xbd\x4f\x69\x38\xee\xa1\x7b\xc1\x3f\x0c\x0e\xa3\x19\xda\x74\x06\x56\x8e\x3d\x75\x7d\xd5\x1a\x3d\x3d\x05\x57\xfd\x82\x5e\xba\x3b\xa1\xe9\x6c\xf6\x48\x72\x71\xeb\xff\x49\x6f\x3e\xeb\x26\xbd\x50\x7e\x4e\x1f\x8b\x29\xbf\x09\x5e\xec\x20\x57\xaa\x53\x95\x69\x8d\x3c\xe4\x65\xd2\xb9\x48\x6b\xa4\x5b\x4f\x7c\xe1\x6f\xca\xfe\x71\x79\x93\x23\xfa\xe9\x3c\x7f\x3b\xe1\x04\x7d\x7d\x9b\x98\xcc\xb3\xb4\xbf\xa0\x73\xde\x24\x97\xc7\x9c\xec\x18\xbd\xb1\x2f\x38\xf8\xb9\x23\x33\x37\x8a\x3a\x91\x0d\x07\x7b\x7a\xb2\xbc\x89\x31\xef\xa7\xec\x4f\x00\x00\x00\xff\xff\xe3\xfe\x46\x3b\x8a\x05\x00\x00"

func transfer_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_transfer_tokensCdc,
		"transfer_tokens.cdc",
	)
}

func transfer_tokensCdc() (*asset, error) {
	bytes, err := transfer_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transfer_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf1, 0x10, 0xa2, 0x40, 0x68, 0xd6, 0xab, 0xf4, 0x29, 0x5, 0x71, 0xc3, 0x77, 0x37, 0x39, 0x2f, 0x98, 0x49, 0xeb, 0x71, 0xa1, 0x26, 0x5, 0x28, 0x6d, 0x24, 0xc1, 0xe6, 0x4f, 0x44, 0x37, 0xf9}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"burn_tokens.cdc":      burn_tokensCdc,
	"create_forwarder.cdc": create_forwarderCdc,
	"mint_tokens.cdc":      mint_tokensCdc,
	"privateForwarder/create_account_private_forwarder.cdc": privateforwarderCreate_account_private_forwarderCdc,
	"privateForwarder/create_private_forwarder.cdc":         privateforwarderCreate_private_forwarderCdc,
	"privateForwarder/deploy_forwarder_contract.cdc":        privateforwarderDeploy_forwarder_contractCdc,
	"privateForwarder/setup_and_create_forwarder.cdc":       privateforwarderSetup_and_create_forwarderCdc,
	"privateForwarder/transfer_private_many_accounts.cdc":   privateforwarderTransfer_private_many_accountsCdc,
	"scripts/get_balance.cdc":                               scriptsGet_balanceCdc,
	"scripts/get_supply.cdc":                                scriptsGet_supplyCdc,
	"setup_account.cdc":                                     setup_accountCdc,
	"transfer_many_accounts.cdc":                            transfer_many_accountsCdc,
	"transfer_tokens.cdc":                                   transfer_tokensCdc,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"burn_tokens.cdc": {burn_tokensCdc, map[string]*bintree{}},
	"create_forwarder.cdc": {create_forwarderCdc, map[string]*bintree{}},
	"mint_tokens.cdc": {mint_tokensCdc, map[string]*bintree{}},
	"privateForwarder": {nil, map[string]*bintree{
		"create_account_private_forwarder.cdc": {privateforwarderCreate_account_private_forwarderCdc, map[string]*bintree{}},
		"create_private_forwarder.cdc": {privateforwarderCreate_private_forwarderCdc, map[string]*bintree{}},
		"deploy_forwarder_contract.cdc": {privateforwarderDeploy_forwarder_contractCdc, map[string]*bintree{}},
		"setup_and_create_forwarder.cdc": {privateforwarderSetup_and_create_forwarderCdc, map[string]*bintree{}},
		"transfer_private_many_accounts.cdc": {privateforwarderTransfer_private_many_accountsCdc, map[string]*bintree{}},
	}},
	"scripts": {nil, map[string]*bintree{
		"get_balance.cdc": {scriptsGet_balanceCdc, map[string]*bintree{}},
		"get_supply.cdc": {scriptsGet_supplyCdc, map[string]*bintree{}},
	}},
	"setup_account.cdc": {setup_accountCdc, map[string]*bintree{}},
	"transfer_many_accounts.cdc": {transfer_many_accountsCdc, map[string]*bintree{}},
	"transfer_tokens.cdc": {transfer_tokensCdc, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
