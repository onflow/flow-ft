// Code generated by go-bindata. DO NOT EDIT.
// sources:
// ../../../transactions/burn_tokens.cdc (1.412kB)
// ../../../transactions/create_forwarder.cdc (2.319kB)
// ../../../transactions/generic_transfer.cdc (1.216kB)
// ../../../transactions/metadata/setup_account_from_vault_reference.cdc (1.839kB)
// ../../../transactions/mint_tokens.cdc (1.707kB)
// ../../../transactions/privateForwarder/create_account_private_forwarder.cdc (1.428kB)
// ../../../transactions/privateForwarder/create_private_forwarder.cdc (961B)
// ../../../transactions/privateForwarder/deploy_forwarder_contract.cdc (403B)
// ../../../transactions/privateForwarder/setup_and_create_forwarder.cdc (1.82kB)
// ../../../transactions/privateForwarder/transfer_private_many_accounts.cdc (1.144kB)
// ../../../transactions/safe_generic_transfer.cdc (1.831kB)
// ../../../transactions/scripts/get_balance.cdc (474B)
// ../../../transactions/scripts/get_supply.cdc (187B)
// ../../../transactions/scripts/get_supported_vault_types.cdc (971B)
// ../../../transactions/scripts/metadata/get_token_metadata.cdc (554B)
// ../../../transactions/scripts/metadata/get_vault_data.cdc (618B)
// ../../../transactions/scripts/metadata/get_vault_display.cdc (612B)
// ../../../transactions/scripts/metadata/get_vault_supply_view.cdc (695B)
// ../../../transactions/scripts/switchboard/check_receiver_by_type.cdc (562B)
// ../../../transactions/scripts/switchboard/get_vault_types.cdc (690B)
// ../../../transactions/scripts/switchboard/get_vault_types_and_address.cdc (721B)
// ../../../transactions/scripts/tokenForwarder/is_recipient_valid.cdc (436B)
// ../../../transactions/setup_account.cdc (1.323kB)
// ../../../transactions/switchboard/add_vault_capability.cdc (1.415kB)
// ../../../transactions/switchboard/add_vault_wrapper_capability.cdc (1.443kB)
// ../../../transactions/switchboard/batch_add_vault_capabilities.cdc (1.34kB)
// ../../../transactions/switchboard/batch_add_vault_wrapper_capabilities.cdc (1.591kB)
// ../../../transactions/switchboard/remove_vault_capability.cdc (1.184kB)
// ../../../transactions/switchboard/safe_deposit_to_lnf.cdc (4.493kB)
// ../../../transactions/switchboard/safe_transfer_tokens.cdc (2.087kB)
// ../../../transactions/switchboard/safe_transfer_tokens_v2.cdc (1.866kB)
// ../../../transactions/switchboard/setup_account.cdc (1.685kB)
// ../../../transactions/switchboard/setup_royalty_account.cdc (5.883kB)
// ../../../transactions/switchboard/setup_royalty_account_by_paths.cdc (5.958kB)
// ../../../transactions/switchboard/transfer_tokens.cdc (1.518kB)
// ../../../transactions/transfer_many_accounts.cdc (1.35kB)
// ../../../transactions/transfer_tokens.cdc (1.404kB)

package assets

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	clErr := gz.Close()
	if clErr != nil {
		return nil, clErr
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _burn_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x54\x4f\x6f\x9b\x4e\x10\xbd\xf3\x29\xe6\xc7\xe1\x27\xe7\x10\x68\xa5\xaa\x07\x2b\x6e\xea\x44\xcd\xb1\xaa\x1a\xb7\x3d\x2f\x30\x98\x6d\x61\x17\xcd\x0e\xb5\xad\x28\xdf\xbd\xda\x59\xc0\x4b\x13\x97\x83\x91\x77\xdf\xbc\x79\x6f\xfe\x90\xe7\xb0\x6b\xb4\x03\x26\x65\x9c\x2a\x59\x5b\x03\xda\x81\x02\xc6\xae\x6f\x15\x23\xd4\x96\xfc\xdf\xe8\x9e\x1b\xc5\x49\x9e\x43\x69\x87\xb6\x82\x02\x61\x70\x58\x41\x71\x02\x6e\x10\x54\xd5\x69\x03\xaa\x2c\xed\x60\x18\xd8\x42\x31\x90\x01\xb6\xbf\xd0\x38\x1f\x54\x93\xed\x3c\x50\x13\x38\xb6\x84\x15\x7c\x57\x43\xeb\xf9\x12\xd1\x82\x12\xa0\xcd\x1e\x54\x27\x14\x87\x29\x8b\x82\x5e\x91\xea\x90\x91\x3c\xaf\x4f\x16\xa9\x4a\x12\xdd\xf5\x96\x18\x1e\x06\xb3\xd7\x45\x8b\x3b\x9f\x32\xa4\x4b\x17\x67\xe9\x84\xfc\x74\x54\x5d\xbf\x04\xc6\x47\x69\x92\x44\xfc\xab\x20\x67\x0d\xdf\x1e\xf4\xf1\xfd\xbb\x2b\x78\x4a\x12\x00\x80\x3c\xcf\x83\x03\x20\x74\x76\xa0\x12\xa5\x3e\xd0\xd8\xb6\x72\x41\xa4\x78\x0f\xa7\x8a\x10\x0a\xf4\xee\xbc\x4b\xac\x84\xa2\x45\x86\xdf\x9e\x62\x0d\x1f\x17\x4a\xb3\x50\x9a\x39\xcf\x57\xac\x91\xd0\xf8\x14\xc1\xff\xc2\xc1\x56\x2a\x6f\x8b\x9f\x58\xf2\xcc\x2b\xed\x58\xc3\xff\x31\x32\x13\xa4\x76\x4c\x8a\x2d\x9d\xe9\x77\x22\x96\x55\x0b\x6e\xe8\xfb\xf6\x04\xb6\x9e\xc4\x17\x58\x5b\x42\xc9\xe9\x85\xcf\xf4\x01\x78\x27\xb7\x53\x69\x02\x61\x4f\xd8\x2b\xc2\x95\xd3\x7b\x83\xb4\x86\xed\xc0\xcd\x36\x4c\xc5\x5c\x3b\xff\x38\x6c\xeb\x2c\xa6\x81\xcd\xc2\x56\x26\x8a\x1e\x05\x70\x8e\xca\x73\xf8\xa1\xb9\xa9\x48\x1d\xe0\xed\x9b\x49\xe5\x34\x5b\xe3\x10\x4a\x4d\x41\x1b\x19\x34\xb5\xc7\x65\xce\x70\x7b\x73\x0d\x41\x61\x56\x58\x22\x7b\xb8\x59\x56\x4a\x1a\xf0\x61\xe5\x89\xd7\xf0\xf2\xe6\x31\x10\x7f\x51\xdc\x5c\xfd\x37\xd3\xfb\x27\x3b\x8c\xf2\xe6\xb9\x09\xef\xab\x85\x87\x7b\x42\xbf\x62\x0a\xe8\xef\xce\x8e\x6b\x24\xbf\xf3\x60\x5d\xb2\x12\x60\x9b\x7f\x3a\x59\xf4\xfc\x55\x47\x82\x88\x1d\x2d\x0c\xdd\xde\x42\xaf\x8c\x2e\x57\xe9\xbd\x2c\xa4\xb1\x0c\x21\xd1\x65\xf9\x93\xf0\x34\x50\x3d\x07\xef\x78\xc4\x72\x60\x84\xa7\x99\xdf\x4f\x92\xec\x03\x49\x3f\x66\x4b\x59\x29\xf5\xf9\x8c\x87\x3b\xb9\x5d\x45\xd5\x0b\xf8\xcc\xbf\x44\xbe\x1b\x2d\xdd\x5c\x9f\xbb\x1b\xc1\x2b\x74\x4c\xf6\x34\x86\xc5\x72\x7a\xeb\x38\xd2\x72\x69\xf6\x60\xb3\x79\x65\x56\xaf\x61\x6a\x6f\xfa\x62\x7b\xba\xc1\xb1\xff\x6e\x55\xe8\x6d\xc4\x9f\x48\x09\x49\x47\x11\xcf\xc9\x9f\x00\x00\x00\xff\xff\xe2\xec\xe9\x43\x84\x05\x00\x00"

func burn_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_burn_tokensCdc,
		"burn_tokens.cdc",
	)
}

func burn_tokensCdc() (*asset, error) {
	bytes, err := burn_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "burn_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xbe, 0x91, 0xe, 0x82, 0x84, 0xc4, 0xe2, 0x8f, 0x0, 0xc0, 0x5, 0x19, 0x4d, 0x9a, 0x77, 0x5a, 0xed, 0x97, 0x1, 0xc5, 0xd6, 0x8, 0x0, 0x0, 0x57, 0x2a, 0x64, 0x4f, 0xb5, 0xc0, 0xf9, 0x77}}
	return a, nil
}

var _create_forwarderCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x54\x4d\x6f\xe3\x36\x10\xbd\xf3\x57\x0c\x72\x68\x9d\xc0\x91\xd1\xaf\x8b\x91\x16\x08\xb6\x4d\x51\xa0\x28\x16\x6d\xda\x6b\x77\x4c\x8e\x4d\x36\x12\x29\x90\x23\x6b\x8d\x45\xfe\x7b\x41\x52\xa2\x29\x63\x1b\x1f\xea\x93\x45\xce\xc7\x7b\xf3\x1e\x67\x73\x77\x27\xc4\xb3\x36\x01\xd8\xa3\x0d\x28\xd9\x38\x0b\x26\x00\x02\x53\xd7\xb7\xc8\x04\x7b\xe7\xe3\x67\x75\xcf\x1a\x19\xa4\x1b\x5a\x05\x3b\x82\x21\x90\x12\xec\x20\x10\xc3\xd0\x03\x5a\x40\x29\xdd\x60\x19\xd8\xc5\xe4\x11\xbd\x02\x45\xbd\x0b\x86\x49\x01\xbb\x17\xb2\x21\xde\xa1\x75\xac\xc9\x83\x27\x49\xe6\x48\xbe\x11\xe2\x97\x3d\xa0\x3d\x39\x4b\x10\xc8\xaa\x50\x07\xc7\x3e\xfe\xcb\x00\x4f\xb9\x22\x79\xf8\x7d\xca\x5b\x0b\xd6\x54\xbe\x60\x34\x6d\x0b\xff\x0c\x81\x4b\x73\xd6\x2e\x50\x55\x2b\x86\xff\x85\x43\xcb\x99\x89\xc6\x00\x3b\x22\x2b\x22\x03\x0c\xe9\xda\x93\x34\xbd\x21\xcb\x80\x56\x01\x75\x26\xfe\x01\x3a\xc6\x93\x94\x64\xac\x32\x12\x99\x82\x18\xb5\x91\x3a\xa1\x9b\x1b\x46\x96\x7a\x6e\xd8\x4c\x03\x1e\xf1\xb4\x06\x13\xf9\x81\xdb\xef\xef\xa5\x46\x63\x21\x90\x3f\x1a\x49\x30\xa2\xe5\x04\xad\x73\xd6\xb0\xf3\x30\x6a\x17\x65\x98\x0a\x1a\x7b\x10\x67\xf8\x86\xd7\x60\x18\x24\x5a\x18\x91\xa5\xce\xb0\xd2\x55\x20\x82\x51\x93\xa7\x0a\x00\x48\xec\x08\xf6\xde\x75\x8d\x10\x7f\x30\xf5\x53\x64\x56\x2b\x4b\x15\x60\x34\xac\x73\x42\x61\xe1\xb7\x42\x7c\xd5\xc0\xb3\x26\x78\x1a\xec\xc1\xec\x5a\x82\xe7\x14\x21\x9d\x65\x8f\x32\x4e\x81\xc9\xef\x51\x12\x04\x9d\xfc\x80\xad\x27\x54\xa7\xe8\x0b\x45\x7d\xeb\x4e\xa4\x20\xb8\x8e\x12\x28\xf1\x75\xae\x86\x7d\xdf\x1a\x89\xb1\x1e\x2f\xeb\x4d\x55\xaa\xec\x46\x7c\x93\x93\x2a\x45\x26\x7b\x4d\xc1\x1a\x8f\x04\x38\x09\x1a\xcd\xca\xc9\xcf\xb9\xb0\x27\x64\x52\x02\x00\x92\x90\x81\x9d\x27\x05\xc6\x82\xe1\x90\xbe\xf0\x40\x99\x3b\x42\x3f\xec\x5a\x13\x34\xa9\xe2\x25\xf1\x6d\x03\x3f\x26\x20\x69\x9e\x1f\x12\xfb\xa7\xa2\x49\x23\x95\xfc\x70\x06\x9f\x5c\xaa\xcc\x7e\x4f\xbe\x82\x29\xbe\x6b\xa2\x67\x01\xc1\xd2\x08\x8f\xf9\x70\x0b\xef\x12\xb2\x54\x76\xe6\x63\x9d\xef\xb0\x6d\x4f\xeb\x04\x97\x35\x59\xf0\x83\xcd\x9d\x33\x91\xbf\x8b\x34\xb9\x75\xf5\x28\x73\xd2\x81\x98\x8d\x3d\xc0\xe2\x41\x44\xe9\x17\x8d\xb2\x81\x2f\x8c\xde\x88\xbb\x8d\x10\xa6\xeb\x9d\xe7\xa2\x77\x96\x3b\x15\xb8\x59\x9c\xdd\xcc\x91\x3f\x7d\xc4\xae\x5f\x06\xd6\x47\x25\xee\x62\x74\x53\xe8\xc5\xe9\x8d\x10\x15\xa5\xd5\xbc\x18\xb6\xf0\xa8\x94\xa7\x10\x6e\xe1\x93\x48\x3c\x7b\x4f\x3d\x7a\x5a\xa1\x94\xbc\x85\xc7\x81\xf5\x34\xd8\x12\x11\x7f\x9b\x0d\xfc\x4c\x3c\xd3\xcc\xc3\x90\xd8\xe3\xce\xb4\x86\x4f\x93\x57\xce\x63\xd9\x51\x02\x76\x7e\xc3\xae\x54\x6a\x89\x2b\x03\x7e\x1f\xe7\x3c\x35\x2c\x20\x6f\x4b\x70\xfc\x35\x07\xe2\x77\xa5\xd5\xc3\x17\x9f\x16\xd3\x6b\x66\x6d\x5e\x7f\x58\xd5\xd3\x2a\xe7\xef\xa3\x15\xe5\x7b\x64\x7d\xbb\xa0\x53\xb9\xa6\x58\x21\x1b\x3b\x3e\x02\xc3\xf3\x76\xbb\x54\x5a\xb9\xd9\x15\xd5\x46\xa9\xc9\x1d\xd3\xeb\x79\xb8\xbf\xd4\xa9\xc9\xc6\xfb\x8d\xc6\xb2\x77\x57\x65\x10\xdb\xf3\x4c\xce\xec\xa3\x24\x4d\x84\xb3\x7a\xb8\x4f\x55\xd7\xc0\x6e\x0b\x9b\xe9\xb1\x6d\xa8\xe2\x5b\x6a\x2e\x59\xfe\x69\x5b\x63\x5f\x12\x5c\xfa\x68\x42\x72\xf4\x67\x04\x2c\x29\x71\xab\xc6\xae\x8b\x99\x5f\x1d\x6c\x23\x35\xc9\x97\xb7\xa4\x89\x66\xaa\x45\x4d\x4d\x86\x04\xee\xba\x6c\x73\xd2\xeb\x82\xda\xaf\x33\xb1\xb8\x0c\xce\x5a\xbc\x49\x2f\xb5\x8d\x4d\xdf\xc2\xba\x00\x7a\x05\xdc\x7a\x11\xcc\xe8\x0f\xc4\xd7\x14\x2a\x29\xb7\xff\xcd\xa7\x04\xe7\x56\xd7\xb8\x5c\x5a\xed\x22\xfd\x92\xd4\x26\xed\x67\xf9\x79\x78\xff\x93\x52\x16\xea\xf5\xdf\x00\x00\x00\xff\xff\x66\x2e\x02\x56\x0f\x09\x00\x00"

func create_forwarderCdcBytes() ([]byte, error) {
	return bindataRead(
		_create_forwarderCdc,
		"create_forwarder.cdc",
	)
}

func create_forwarderCdc() (*asset, error) {
	bytes, err := create_forwarderCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "create_forwarder.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x6c, 0xb, 0x4f, 0x5, 0xa7, 0x5a, 0xc1, 0x1a, 0x19, 0xbb, 0xe4, 0xc5, 0x2b, 0xb4, 0xdb, 0x55, 0xa8, 0x60, 0x5, 0x5e, 0xa, 0xc9, 0x86, 0xf8, 0xdf, 0xf8, 0x64, 0x3b, 0xea, 0xdd, 0x7, 0x2b}}
	return a, nil
}

var _generic_transferCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x54\x4d\x6f\xe3\x38\x0c\x3d\x37\xbf\xe2\x35\x87\xdd\x04\x48\xd3\xcb\x62\x0f\x41\x3f\x36\x28\xd0\xbd\x16\x9d\xce\xdc\x19\x89\xb6\x35\x75\x24\x83\xa2\xe3\x06\x45\xfe\xfb\x40\xb2\xe3\x24\x53\x4c\x2e\x56\x68\xf2\xf1\xf1\xf1\x59\x6e\xdb\x04\x51\x3c\xb7\xbe\x74\x9b\x9a\xdf\xc2\x3b\x7b\x14\x12\xb6\x98\x5e\xc4\xa6\x93\xc9\xed\xed\x2d\x9e\xc8\xa3\xa1\x18\xe1\x3c\xc8\xef\x11\x35\x08\x95\x8c\x86\xb4\x02\x79\x0b\x61\xc3\x6e\xc7\xd2\x47\x9c\x8f\xca\x64\x11\x0a\xfc\x6c\xa3\x42\x2b\x86\xe5\x82\xda\x5a\x97\x19\xef\xad\x72\x11\x35\x6b\xc4\x3e\xb4\x30\x55\x08\x91\x73\x96\x66\x22\x29\xd8\x91\x57\x68\x40\x64\x6f\x41\x11\x1d\xd7\x75\x4e\x31\xd4\xd0\xc6\xd5\x4e\xf7\x5f\xf3\x5c\x3a\xe6\x16\xb9\xcd\xda\xef\x07\xc4\x4c\xcb\x90\xc7\x86\xf3\x20\x9c\x31\xc9\x83\xa4\x6c\xb7\xec\x15\x15\x0b\x2f\x10\x03\x3a\xaa\x33\xb3\x58\x85\xb6\xb6\x19\xa7\x3f\xc2\x54\x6c\xde\x4f\x15\x3b\xaa\x5b\x8e\xa9\xf7\x96\xde\x19\xb1\x95\x7e\x06\xe7\x95\xbd\x65\x7b\xde\xda\xc5\x63\x5b\xe7\x33\x3d\x15\xf2\x91\x8c\xba\xe0\x67\xb4\x0d\xad\xd7\x15\xbe\x3f\xbb\x8f\x7f\xff\x59\x40\xc3\x0a\x6b\x6b\x85\x63\x5c\xe4\xb9\x58\x5e\x48\xab\x15\xbe\xf5\xb2\xa7\x3f\x8b\x51\xf2\xfe\xd5\x4b\xbb\xa9\x9d\x49\xe7\x39\x3e\x27\x13\x00\xc8\x3a\x33\x7e\x24\xd9\x21\x1c\x43\x2b\x26\x31\x24\x45\x15\x6a\x1b\x4f\x82\xc7\x3e\x4a\xc2\xd8\xb0\xf3\x25\x32\xbb\x82\x45\xd8\x66\xa8\x9a\x15\xca\xdb\x26\x63\xad\xf0\xdf\x85\x47\x96\x39\xda\xf7\x6c\x84\x1b\x12\x9e\x45\x57\x7a\x96\x15\xd6\xad\x56\x6b\x63\xd2\x7c\x23\xaf\x81\xdb\xff\xac\x20\x08\x17\x2c\xec\x13\xb1\x90\x09\xf5\x95\x7f\xc7\xec\x31\xb6\xd8\x65\xf0\x63\x5d\x22\x92\x23\xaf\x5c\xe0\x7e\x48\x5e\x6e\x82\x48\xe8\xee\xfe\xfa\xbc\xe4\xf5\x22\x61\xe7\x2c\xcb\xe1\x61\x96\xac\xbd\x3a\xd3\x72\x3e\xb9\xba\xba\x7a\x7c\x44\x43\xde\x99\xd9\xf4\x29\xef\xd7\x07\x45\x0f\xf5\x95\x56\xe8\x7a\x56\x79\xd6\xeb\xe9\xfc\x34\x4a\xe4\xba\x58\x8e\xe2\xe0\xee\x66\x24\xb8\xec\x9c\x56\x56\xa8\x1b\x37\xdc\x3f\x87\xe2\x43\xff\xe0\x0f\x36\xad\xf2\xb9\x3a\x69\x4a\x61\xe3\x1a\x97\x7c\x76\x8f\x92\x75\x10\x71\xa6\x61\xfe\x7b\x5a\x76\x41\xaf\xc7\x58\xb4\x2c\x59\x9f\xc6\x0f\xe5\x8b\x32\xaf\x43\xd5\xe1\x61\x76\x6e\xa3\x13\x74\xfa\x0d\xb2\xce\xe6\xd7\x17\x7b\x7b\x1b\xbc\x71\xb4\x4e\xbe\x35\xfe\xb8\xb9\xa3\x7e\xe3\x05\x71\xfa\x7c\x47\xd0\xb3\x19\x96\x96\x9b\x10\x9d\x0e\x0b\xbb\xbb\xb9\x54\x77\x3e\x08\x77\xf8\x15\x00\x00\xff\xff\xad\x94\x66\x8c\xc0\x04\x00\x00"

func generic_transferCdcBytes() ([]byte, error) {
	return bindataRead(
		_generic_transferCdc,
		"generic_transfer.cdc",
	)
}

func generic_transferCdc() (*asset, error) {
	bytes, err := generic_transferCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generic_transfer.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x5b, 0x68, 0xc3, 0xf5, 0x27, 0xf, 0xe0, 0x8f, 0x1b, 0xce, 0xc8, 0xc2, 0xc4, 0x41, 0x1e, 0x30, 0x28, 0x2c, 0xb5, 0x73, 0xbd, 0x65, 0xb8, 0x49, 0xd7, 0x4, 0x76, 0xba, 0xdc, 0x41, 0xee, 0x78}}
	return a, nil
}

var _metadataSetup_account_from_vault_referenceCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x94\x41\x6f\x9b\x4c\x10\x86\xef\xfc\x8a\x91\x0f\xf9\x88\xe4\xc0\xdd\x72\x12\x25\xf9\x9a\x9e\x2a\x45\xa9\xdb\xfb\x18\x06\x58\x05\x76\xd1\xee\x60\x1a\x45\xfe\xef\xd5\xee\xc2\x1a\x90\xdd\x56\x6a\x39\x58\x68\x3c\xef\xec\x33\xef\xce\x20\x9a\x56\x69\x86\xe7\x4e\x96\x62\x5f\xd3\x4e\xbd\x91\x84\x42\xab\x06\x56\xb3\xd8\x2a\x3a\x97\xf9\x85\x18\x73\x64\xfc\x2e\xa8\x37\xe7\x64\xb3\x84\x50\xe3\x9c\x2c\x53\x92\x35\x66\x6c\xd2\x8e\x45\x2d\xf8\x3d\x5d\x68\xa3\x34\x4d\x61\x57\x09\x03\xac\x51\x1a\xcc\x58\x28\x09\xc2\x40\x5f\x21\x03\x4a\xc0\x2c\x53\x9d\x64\xe8\x55\x57\xe7\xa0\x3b\xe9\x14\xac\xc0\x10\x83\x60\x43\x75\x01\x5d\x6b\x03\x0d\x4a\x2c\x09\x8a\x81\x14\xd8\xa2\x9a\xc4\x57\x2f\x3a\xe9\x4a\x3b\x75\x67\xc8\xc0\xc1\x61\xb2\x82\x37\xa9\x7a\xe8\x2b\xd2\x34\x96\xb5\xf5\x2a\x82\x03\x76\x35\x3b\x81\x90\x60\x58\x69\x5b\x1e\x65\x6e\xd3\x32\x4d\xc8\xe4\xd2\xa8\x69\xf9\xdd\x27\x27\x51\x34\x69\x23\xc6\x3c\xd7\x64\xcc\x06\x1e\xfc\xcb\x1a\xda\x6e\x5f\x8b\xec\x05\xb9\xda\xc0\x4b\x78\xbf\x86\x8f\x28\x02\x00\x68\x35\xb5\xa8\x29\x36\xa2\x94\xa4\x37\xf0\xd0\x71\xf5\xe0\x0d\xb0\x39\x30\x3c\x69\x0a\x8f\x4a\x6b\xd5\x03\x82\xa6\x82\x34\xc9\xcc\xc1\x07\x6a\x87\x4b\x39\x28\xe9\x62\x2d\x1a\x43\x79\xf0\x12\x79\x1a\x3d\x31\x85\x03\x6a\x62\xd0\x64\x54\x7d\x20\xfd\x4a\x05\xdc\x42\x49\x3c\x80\x8c\x5d\x5d\x87\x6c\xfb\x24\x25\xf1\x13\xb6\xb8\x77\xb7\x1c\x9f\x6a\x2e\xd2\xf6\x8e\x7b\x7b\xf5\x31\x9b\x83\xe4\x75\x38\xec\x78\x17\xcf\x05\xf7\xf7\xd0\xa2\x14\x59\xbc\x7a\x72\x03\x20\x15\xc3\xfe\x37\xbd\xdb\x9b\x0d\xf8\xb0\xba\x8e\xa6\xc6\x7d\x33\xf6\xd6\x90\xe7\x62\x4d\xac\x05\x1d\xfc\x85\x3e\xef\x2c\x14\xcc\xdc\x28\xd8\xc5\x6e\x7f\xb1\x29\xd6\x02\x2f\x8d\x2d\xc1\xd8\xd2\x66\xea\xe4\x9c\xe5\x33\xf1\x78\xa0\x05\xff\x1f\x19\x3d\xbc\x5b\x1e\xf7\x73\xe2\x59\xe2\x04\xc5\xed\x00\x97\x4c\x83\xa3\x6f\x10\xaf\x76\x15\x8d\xe3\xe0\xfd\xc9\x45\x2e\xff\x63\x10\x4d\x5b\x53\x43\x92\x27\xd6\xe5\x23\xc2\xc2\xb5\x27\x3f\xee\x08\x92\xfa\xe9\xc0\x43\x67\x84\x2c\x5d\x01\xbf\x11\x9f\xec\x7f\x0e\x23\xac\x1c\x08\x69\x44\x4e\xcb\x4e\x67\xfd\xd0\x49\xb6\xbd\x99\xf4\x91\x2c\xab\xc6\x73\xae\xaf\x78\x20\x10\x3c\xde\xff\x30\xe0\x21\xc3\xef\x51\x62\xf0\x40\xf1\xf6\xe6\x74\xc8\x1a\x58\x6d\xa6\x26\x26\xc3\x7a\xfb\x89\x3d\xdb\xb9\x1f\x69\xc8\xc2\x90\x43\xa1\xf4\xc4\x3a\xfa\xd1\xaa\x60\x86\xa6\x8c\x84\x9d\x3e\x21\x99\x74\x81\x19\x2d\x99\x6a\x21\xdf\xb6\x57\x1f\xb3\x71\x4a\x5e\x07\xd9\xf1\x2e\x9e\x6d\xc1\x94\x74\x2c\x6d\x51\xd7\xb3\x2c\x46\x5d\x12\x5f\xec\x2b\xe4\xfe\x8b\x06\xf7\x58\xa3\xdd\x1d\xfb\x39\x0c\xab\x16\x9a\x35\x7f\xd4\xed\xa3\xaf\xb1\x86\x8b\xdf\x82\x8b\x26\x34\x83\xe2\xaf\x4d\x38\x46\xc7\x08\x7e\x06\x00\x00\xff\xff\x05\xda\xfa\x5c\x2f\x07\x00\x00"

func metadataSetup_account_from_vault_referenceCdcBytes() ([]byte, error) {
	return bindataRead(
		_metadataSetup_account_from_vault_referenceCdc,
		"metadata/setup_account_from_vault_reference.cdc",
	)
}

func metadataSetup_account_from_vault_referenceCdc() (*asset, error) {
	bytes, err := metadataSetup_account_from_vault_referenceCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metadata/setup_account_from_vault_reference.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x11, 0x57, 0x6c, 0xcd, 0x92, 0xe8, 0xa, 0x42, 0xf7, 0x79, 0x7a, 0x78, 0x52, 0x41, 0x12, 0xb9, 0x60, 0xec, 0x5a, 0xef, 0x2, 0x92, 0x3f, 0x63, 0x1e, 0x3a, 0x36, 0x98, 0xa, 0x43, 0xab, 0x81}}
	return a, nil
}

var _mint_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x54\xcb\x6e\xdb\x40\x0c\xbc\xeb\x2b\x08\x1d\x02\x19\x4d\xe4\x4b\xd1\x83\x11\x27\x70\xd2\xa6\xa7\x16\x41\x1e\xbd\xaf\x24\xca\xde\x56\xda\x15\xb8\x54\x1c\x23\xc8\xbf\x17\xfb\x92\x25\x3b\x8e\x2f\x06\x56\xc3\x21\x39\x1c\x52\xb6\x9d\x26\x86\xbb\x5e\xad\x65\xd1\xe0\x93\xfe\x87\x0a\x6a\xd2\x2d\xa4\x93\xb7\x34\x09\xc8\x1f\xaf\xa2\xed\xa6\xc0\xf1\x53\x9a\x24\xf3\xf9\x1c\x9e\x36\xd2\x00\x93\x50\x46\x94\x2c\xb5\x02\x69\x60\xbb\x11\x0c\xbc\x41\x68\xa5\x62\x24\x58\x95\xa5\xee\x15\x43\x6f\xd0\x00\x6b\xf7\x0c\x0a\xb7\xc0\x96\xc8\x04\x1e\xdc\x41\x47\xfa\x45\x56\xe8\x62\x09\x4b\xd9\x49\x54\x0c\xa2\xaa\x08\x8d\x01\xa1\x2a\x10\xad\x63\x0a\x24\xe7\xee\xcd\xa2\x47\x4c\x82\xd0\x17\x54\x23\x11\x56\x16\x6b\x11\x03\x4b\x6d\x4b\xb2\xd1\x52\xad\x93\x64\x54\x7a\x36\xa4\x5c\xc0\xca\xa3\xcf\x43\xc2\x05\x3c\xdf\xc9\xd7\x6f\x5f\x67\xf0\x96\x24\x00\x00\x36\xd1\x03\xd6\x48\xa8\x4a\x8c\x29\x82\x3c\xe0\x25\x5b\x55\xad\x54\xf0\x80\x46\xf7\x54\x22\xe8\xe2\x2f\x96\xec\x82\x1b\x64\x5f\xb0\x83\x2c\xe0\x6c\xac\x6b\xee\x1e\xa5\x61\x12\xac\xe9\x93\x6c\x71\x6a\x21\xdd\x03\x96\x28\x5f\x90\x40\xd7\x53\xfd\xa6\x29\x23\x6c\x01\x67\x6f\x93\xb9\xe7\xf1\xcb\xfb\x3e\xe7\x93\x53\x96\x45\x03\xa6\xef\xba\x66\xe7\xb8\x9d\xd2\x50\x60\xad\xc9\x4f\xaa\xe8\x49\x0d\x49\x3c\xf0\xc6\x7d\x8d\xaa\x79\xc2\x8e\xb0\x13\x84\x99\x91\x6b\x65\xf3\xaf\x7a\xde\x04\x67\x58\x59\x21\xfc\x0c\x36\x75\x3e\x66\x81\xe5\xc4\x8a\xb9\x2b\xe8\xd1\x01\x92\x21\x6a\x3e\x87\x1b\x4d\xa4\xb7\x20\x80\x0e\x95\x12\x6e\x12\xa3\x01\x0c\x79\xf6\x53\x80\x25\xf8\xc2\xf2\xc2\xf1\x5c\x7e\x32\x94\xab\xcc\xae\xc3\x02\x8e\x11\x8f\xac\x49\xac\xf1\x5e\xf0\x66\x36\x64\xb2\xbf\xeb\x6b\xe8\x84\x92\x65\x96\x3e\xba\x2c\x76\x4d\x94\xe6\xbd\x77\x7d\x91\xe9\x6c\xd2\xd2\x4f\xf4\x08\x11\x16\xe8\x70\xb4\xce\xfe\xc5\xa9\xbe\x25\x59\xa4\x9b\xe9\x07\x5d\x0f\x7e\x59\xc2\x1a\x39\x0c\x62\xbf\x02\xd3\xf2\xf3\x35\xf2\xad\xe8\x44\x21\x1b\xc9\xbb\x6c\xd2\x78\x24\xba\xef\x8b\x46\x96\xc7\xad\x0f\x82\x9e\xf2\xdb\x55\x76\x4a\xab\x67\x25\xac\xc1\x59\xc7\x26\x63\x3f\xfb\x5e\x53\x1f\x1b\x4c\x8b\xaf\x58\xf6\x8c\x71\x4b\x83\x8c\xb7\x84\x82\x11\x44\xbc\x47\x56\x35\x77\x83\xc2\xd5\x88\x50\xeb\xdf\x00\xb9\xbc\x38\x34\x48\x5e\x3a\x96\xdf\xb8\xfd\xe5\x20\x99\x68\x1a\xbd\xc5\x6a\x15\x0e\x84\x3f\x14\xb3\x63\xb2\xea\x8f\xe8\x1b\xb6\x8c\x9e\x3b\xb7\x7f\x4e\x02\x93\x89\x83\xe0\x71\xd5\xdf\xb1\xd3\x46\x3a\x03\xb4\xd1\xc9\xae\x7f\xfc\x7c\xa0\x79\xe5\x03\x83\x49\x2f\x2f\x46\x55\x8c\x32\x54\x68\x98\xf4\x2e\x14\x35\x16\xb1\xd3\x86\x47\x0b\x79\x6a\xf9\x60\xb9\xfc\x60\x59\xbf\x0c\x17\x33\x3d\xba\x1e\x6d\x6f\x18\x0a\x04\xa9\xac\x96\x06\x2b\x28\x76\xde\xdf\x2e\x24\x0d\x45\xbc\xff\x0f\x00\x00\xff\xff\xee\xc5\x65\x61\xab\x06\x00\x00"

func mint_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_mint_tokensCdc,
		"mint_tokens.cdc",
	)
}

func mint_tokensCdc() (*asset, error) {
	bytes, err := mint_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "mint_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x4a, 0xc0, 0xaf, 0x31, 0xa, 0x7f, 0x60, 0x76, 0xe3, 0xd, 0xeb, 0xc7, 0x4, 0x8b, 0x85, 0x48, 0xf4, 0x4a, 0x4c, 0xf3, 0xcb, 0x7e, 0xa7, 0x4c, 0xe0, 0xd8, 0x2b, 0x64, 0xc0, 0xdf, 0xa0, 0x9f}}
	return a, nil
}

var _privateforwarderCreate_account_private_forwarderCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x53\x4d\x6f\xdb\x30\x0c\xbd\xfb\x57\x70\x39\x6c\x36\xd0\xda\xf7\x22\x1d\x50\x14\xcd\x69\x28\x82\xb5\xdb\x9d\x71\x98\x58\x88\x62\x09\x32\x6d\x37\x08\xf2\xdf\x07\xf9\x43\x95\x9c\x1a\x2b\xea\x4b\x1b\xea\xf1\xe9\xf1\xf1\x49\x1c\xb5\x32\x0c\xab\xba\xdc\x8b\x8d\xa4\x57\x75\xa0\x12\x76\x46\x1d\x61\x11\xd4\x16\xd1\x80\x7c\x7a\xc3\xa3\x0e\x81\x7e\xc9\xe1\xd6\x46\x34\xc8\xf4\x9b\x72\x12\x0d\x99\x95\x32\x2d\x9a\x2d\x99\xa1\x67\xee\x78\x11\x45\x59\x96\xc1\x6b\x21\x2a\x60\x83\x65\x85\x39\x0b\x55\x82\xa8\xa0\xae\x68\x0b\xac\x20\x37\x84\x4c\x80\xb6\x60\x7e\x54\xb0\x92\xaa\x05\xcc\x73\x55\x97\x0c\xad\xe0\x02\x10\x74\x4f\x0f\xbb\x91\x37\x8a\x7c\xb6\x73\x14\x01\x00\xd8\x9b\x9e\xa9\x85\x87\xa1\x99\x0b\xb4\x0c\x52\x42\xa1\xe4\x16\xb8\xf0\x09\x6c\x83\x24\x86\x92\xda\x01\x7f\x07\x0f\x35\x17\xc3\x8f\x9e\x51\x1b\xd2\x68\x28\xd6\x78\x22\x13\x9c\x27\x70\xee\x10\xf6\xab\x48\xee\xd2\x77\x1e\xb8\xf7\x81\x63\x6f\xf7\x27\xe9\x7a\x2e\x3d\x39\xbd\x51\x5e\x33\x8d\xea\xfb\x09\xe0\x05\x1b\x6b\x86\xa1\x7d\x2d\xd1\x40\x83\xb5\x64\x6b\x93\x55\x5f\x92\x73\x66\xee\xf2\xb4\xc2\x86\xe2\xe5\xad\xbf\xc4\xb4\xb7\xf8\xe9\xa8\xf9\xf4\xd7\xf2\xc5\xc9\x8d\xeb\xb7\x1f\xab\xbb\x20\x08\x69\x87\x7a\x61\x65\x70\x4f\x6b\xe4\xc2\xa1\x93\x40\xeb\xe3\xb8\xba\x71\x3f\x66\xd8\xbf\x03\x59\x87\xc7\xe2\x23\x6a\xdc\x08\x29\xf8\x04\xf7\x57\xb2\xa5\x28\x0f\xcb\xef\xe7\x20\xa4\xe9\x18\xa7\xcb\xcf\x38\xd0\x9b\x0d\xf7\x65\xe4\x89\x1e\xc1\x93\xd1\xd0\xec\x89\x3f\x3d\xde\xb7\x60\xbe\x3f\x15\x75\xbe\x4f\xc7\x0b\x62\x7b\x9d\x4d\x7f\x78\x57\x85\xe5\xed\xec\x23\x1a\x16\xf4\x4c\xad\x2b\xc5\x86\x72\xa1\x05\xd9\x58\x5e\x1b\x98\x5c\x47\xc6\xd7\xf9\x7e\x29\x2b\xf7\x94\xaa\x7e\xde\xff\x05\xc7\xf5\xde\x74\xb1\x98\x95\x3c\x39\xf0\xdc\x0c\xc5\xfd\x12\xe5\x21\x7c\x7a\x9d\x28\xa7\x55\xfb\xfe\x7f\x9c\x8a\x59\x0d\xee\xbf\x49\x3e\x3e\x2b\x7a\x5d\x6f\xa4\xc8\xad\xe6\x8f\x43\xf3\x85\xe1\xa7\x2f\xe5\x12\x5d\xfe\x05\x00\x00\xff\xff\x94\xdc\x66\x5c\x94\x05\x00\x00"

func privateforwarderCreate_account_private_forwarderCdcBytes() ([]byte, error) {
	return bindataRead(
		_privateforwarderCreate_account_private_forwarderCdc,
		"privateForwarder/create_account_private_forwarder.cdc",
	)
}

func privateforwarderCreate_account_private_forwarderCdc() (*asset, error) {
	bytes, err := privateforwarderCreate_account_private_forwarderCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "privateForwarder/create_account_private_forwarder.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xdc, 0xae, 0x85, 0xaa, 0x7c, 0xb6, 0x13, 0x58, 0x3, 0x26, 0xd6, 0x65, 0xed, 0xe9, 0x24, 0xa8, 0x29, 0xe3, 0x4f, 0x83, 0x97, 0x77, 0xe9, 0x6f, 0xf0, 0x1b, 0x90, 0x3b, 0xc8, 0xb, 0xb3, 0x96}}
	return a, nil
}

var _privateforwarderCreate_private_forwarderCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x52\xcd\x8a\xa3\x40\x10\xbe\xf7\x53\x14\x39\xec\x1a\x48\xf4\x2e\xd9\x85\xb0\x6c\x8e\x43\x98\x09\x73\x2f\x4d\x8d\x36\x31\xdd\x52\x96\x66\x82\xe4\xdd\x87\xf6\x0f\x4d\x22\x0c\xd3\x07\x69\xaa\xbe\x9f\xae\xaf\xd4\xe7\xdc\xb2\xc0\xae\x34\x89\x8e\x32\x3a\xd8\x13\x19\xf8\x60\x7b\x86\xc5\xa4\xb6\x50\x1d\xf2\xff\x27\x9e\xf3\x29\x70\x5c\x1a\x70\x7b\xd6\x15\x0a\xbd\x52\x4c\xba\x22\xde\x59\xbe\x20\x1f\x89\x3b\xce\x5c\x7b\xa1\x54\x10\xc0\x21\xd5\x05\x08\xa3\x29\x30\x16\x6d\x0d\xc4\x4c\x28\x54\x00\x82\xa1\x0b\xe4\x2d\x19\xb8\x63\x83\x36\x80\x06\x30\x8e\x6d\x69\x04\x24\x45\x01\x27\x73\xb4\x54\x98\xdf\x02\x98\x31\xe1\xf1\x0a\x29\x56\x04\xf8\x48\xb7\xec\xaa\x65\x94\xe9\x18\xa4\x19\xac\x6f\x39\x95\xa8\x94\x46\xe9\x5e\xe6\x1d\xcb\x4c\x94\x1a\x3f\xb3\x56\x0a\x00\x20\x67\xca\x91\xc9\x2b\x74\x62\x88\x43\xd8\x96\x92\x6e\xdb\xc7\x2d\xa1\x6e\x20\xee\xf4\x26\xff\x30\xc7\x48\x67\x5a\xae\xf0\x07\x5a\x8e\x9f\x69\x73\xda\xfc\x1a\x27\xeb\x37\x7e\xf5\x64\x2b\x7e\x9f\xdf\xed\xaf\x37\xc8\xba\x13\x74\x33\x06\x34\x52\xe8\xc1\xab\x09\x54\x90\x13\x92\x10\x1e\xbd\xde\xc4\x32\x26\xb4\x47\x49\x07\xc6\x52\x0d\xd7\x8c\x04\x2a\x87\x83\xcd\x7a\x76\xdd\x7e\xbb\xb9\x17\xba\x0c\x25\x8f\x29\xd6\xb9\x26\x23\xe1\x93\x08\x46\x06\x5d\x14\x05\x56\xe4\x6d\xd6\x8d\xd5\x0a\xc4\x86\xf3\x66\x77\x8d\xd1\x00\x8f\xb2\x6d\xc2\xf5\xac\xd6\x70\xbb\xcf\xf6\xbb\xee\xfb\xe6\x87\x72\xe6\xcf\x03\xff\xc1\x14\xa3\x35\xb8\xef\x4d\xdd\xd4\x57\x00\x00\x00\xff\xff\x21\x07\xb3\xdd\xc1\x03\x00\x00"

func privateforwarderCreate_private_forwarderCdcBytes() ([]byte, error) {
	return bindataRead(
		_privateforwarderCreate_private_forwarderCdc,
		"privateForwarder/create_private_forwarder.cdc",
	)
}

func privateforwarderCreate_private_forwarderCdc() (*asset, error) {
	bytes, err := privateforwarderCreate_private_forwarderCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "privateForwarder/create_private_forwarder.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc9, 0x4e, 0xba, 0x8, 0xf3, 0x78, 0x7c, 0xcc, 0x89, 0x26, 0x9c, 0x27, 0xee, 0xbf, 0x6c, 0xac, 0xf, 0x4e, 0xa6, 0x77, 0x19, 0x5b, 0x1a, 0x91, 0xd0, 0xda, 0xff, 0xa5, 0x82, 0x37, 0x2a, 0xc6}}
	return a, nil
}

var _privateforwarderDeploy_forwarder_contractCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\x4d\x4b\x03\x31\x10\x86\xef\xf9\x15\x73\xdc\x42\xe8\x5e\x65\x6f\x05\x11\xbc\x48\xa1\x7a\x12\x0f\x63\x32\xee\x0e\xb6\x33\x61\x32\x4b\x11\xe9\x7f\x97\xed\x17\xab\x5e\x9a\x43\x48\x78\x9f\x64\xde\xa7\x6d\x5b\xb8\xa7\xb2\xd5\xaf\x0a\x3e\x10\x3c\xeb\x27\xc9\x83\xda\x1e\x2d\xb3\xf4\x90\x54\xdc\x30\x39\xec\xd9\x87\x23\x51\x0b\x25\xfe\x60\xca\xc0\xc2\x0e\x05\x0d\x77\xe4\x64\x35\x04\x37\x94\x8a\xc9\x59\xa5\xb9\x3c\x7c\xc2\x1d\x75\xb0\x71\x63\xe9\x63\x80\xd9\x4a\x9a\xa9\x83\xd7\x97\x47\xf1\xbb\xb7\xdf\x51\x25\xc9\x64\x1b\x57\xc3\x9e\xd6\xe8\xc3\xf4\xc3\xf5\xf2\x87\xbd\x89\x2a\xe3\xfb\x96\xd3\x09\x5a\x5f\xcf\x0b\xf8\x0e\x01\xa0\x18\x15\x34\x6a\x2a\xf7\x42\xd6\xc1\x6a\xf4\x61\x95\x92\x8e\xe2\x67\x02\xe0\x94\x2d\x2f\x5a\x75\x89\x39\x37\x72\x94\x9b\xab\xc6\xb3\xd6\xb4\xc7\xff\x1e\x71\x5e\x37\xce\x5a\x2d\xa6\x29\x87\x70\x08\x10\x7e\x02\x00\x00\xff\xff\xf7\x8a\xb2\xb8\x93\x01\x00\x00"

func privateforwarderDeploy_forwarder_contractCdcBytes() ([]byte, error) {
	return bindataRead(
		_privateforwarderDeploy_forwarder_contractCdc,
		"privateForwarder/deploy_forwarder_contract.cdc",
	)
}

func privateforwarderDeploy_forwarder_contractCdc() (*asset, error) {
	bytes, err := privateforwarderDeploy_forwarder_contractCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "privateForwarder/deploy_forwarder_contract.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x10, 0x63, 0x44, 0x17, 0x78, 0x41, 0x47, 0x73, 0xf, 0x19, 0xd3, 0x94, 0xb2, 0xd3, 0xfb, 0xbe, 0x5e, 0xe7, 0xd4, 0xa4, 0x53, 0x61, 0x2e, 0x62, 0x52, 0xcd, 0xb6, 0xd4, 0x6b, 0x79, 0xbb, 0x6e}}
	return a, nil
}

var _privateforwarderSetup_and_create_forwarderCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\x4f\x8f\xa2\x4e\x10\xbd\xf3\x29\x2a\x73\x98\x40\xe2\xc8\xdd\xa0\xc9\xfc\x26\x33\xc7\x5f\xcc\xee\x64\xef\x65\x53\x42\x47\xec\x26\x45\xa1\x63\x8c\xdf\x7d\x43\x8b\x48\x8b\xec\xba\x9b\xe5\x44\xba\xfe\xbd\xaa\x57\xaf\x02\xbd\x2d\x2d\x0b\x7c\xd4\x26\xd3\xab\x82\x3e\xed\x86\x0c\xac\xd9\x6e\xe1\xc9\x7b\x7b\xba\x78\xbe\x7f\xe1\xb6\xf4\x1d\xfb\x4f\x9d\xdf\x92\xf5\x0e\x85\xbe\x91\x22\xbd\x23\xfe\xb0\xbc\x47\x4e\x89\xdb\x98\x31\xf3\x53\x10\xc4\x71\x0c\x9f\xb9\xae\x40\x18\x4d\x85\x4a\xb4\x35\x80\x69\x5a\x01\xc2\x0f\xac\x0b\x99\x00\x42\x79\x8e\x07\x6e\x13\xc0\xfa\x92\xc1\xc5\x23\xac\xb0\x40\xa3\x08\x14\x96\xb8\xd2\x85\x96\xc3\x04\xd0\xa4\x4d\x68\xbd\x2a\xb4\xea\x19\x9a\x58\x90\xfc\x9a\x2c\x08\xfa\xa5\x8f\x41\x00\x00\x50\x32\x95\xc8\x14\x56\x3a\x33\xc4\x33\x78\xad\x25\x7f\x55\xca\xd6\x46\x22\x38\x3a\x97\xe6\xd3\x6b\x38\x7b\x4c\x33\x92\xb7\xae\x46\xf2\x3c\xd6\xf1\xb4\xfb\x5b\x84\xa3\x3e\x37\x86\xa5\x6b\x61\x89\x92\x47\x53\x95\x93\xda\x84\x7d\x08\xcd\x17\xc7\xdd\x88\xba\xc9\xc0\x1e\x2b\xc0\x82\x09\xd3\x03\x54\x24\x50\x97\x5e\x0c\x93\xd4\x6c\xba\xa7\x53\x70\xa7\xa9\x95\x65\xb6\xfb\xe4\xb9\xcf\xf9\xd4\xb1\xb2\x08\x1b\x66\x67\x30\xb4\x7c\x17\xcb\x98\x91\x83\x0b\xf3\x39\x18\x5d\x0c\xd1\xbe\x31\x35\x60\x11\x0c\xed\xfd\x25\x73\x39\x1c\x77\x65\x2d\xa0\x05\xb4\x81\xea\x9c\xd2\x4b\xd2\x22\xac\x70\x47\xa1\x67\x68\xbe\xe4\xc5\xc3\xa5\x5c\xb5\xf7\x6d\x29\x07\x97\x3e\x8c\x26\x83\x10\xb1\xbf\x69\xc6\x8b\x88\xee\xcd\xad\x85\x54\x68\xb3\x49\x9e\x8f\x9e\xa0\xa6\x17\x2e\x4f\x0b\x1f\x6d\xdc\xf2\x16\x53\xaf\xf6\xc5\xd9\x47\x29\xc8\x19\xc9\xa3\x28\xa3\x2b\xae\x82\xa4\x5b\xf6\xeb\x8e\xc2\x7c\x64\x75\xc7\x91\xff\x12\x6c\xaf\x60\x9f\xe0\xa1\xfe\xc4\x3a\xf9\x9d\x89\x96\x1c\x05\xac\x29\x0e\x40\x5f\xa5\xad\xa8\xea\x27\x69\xdc\x2e\xca\x5e\x6b\x2a\x52\x90\x9c\x6d\x9d\xe5\xce\xf2\x5f\x6b\xd1\x46\x88\xd7\xa8\xe8\x3e\x11\xc3\x71\xdd\x34\xd8\xe6\xb9\x65\x66\x18\x77\xd5\xe1\x3f\x24\xe6\xaa\xd7\xe4\x65\xf4\x8c\xb6\x1b\xfc\x3f\xed\xbb\xa7\x90\x49\xe9\x52\x93\x91\xd9\x1d\x72\xa3\xc1\x56\x3a\xa1\x24\x2f\x5d\xb9\x89\xdb\xf8\x47\x4f\x50\x5f\xd4\x23\x0b\xff\xc8\xc5\xf3\xc6\xf6\xe7\xe7\xef\xfe\xd8\xff\xa2\x87\xc0\xd7\xf1\x29\x38\x05\x3f\x03\x00\x00\xff\xff\xa7\xc6\xef\xf9\x1c\x07\x00\x00"

func privateforwarderSetup_and_create_forwarderCdcBytes() ([]byte, error) {
	return bindataRead(
		_privateforwarderSetup_and_create_forwarderCdc,
		"privateForwarder/setup_and_create_forwarder.cdc",
	)
}

func privateforwarderSetup_and_create_forwarderCdc() (*asset, error) {
	bytes, err := privateforwarderSetup_and_create_forwarderCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "privateForwarder/setup_and_create_forwarder.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf0, 0x8, 0x6, 0xa0, 0xee, 0x62, 0x7e, 0x1f, 0xc8, 0xb4, 0xf4, 0xe4, 0xf0, 0x3c, 0x15, 0xd2, 0x12, 0xf6, 0xcc, 0x38, 0x19, 0x38, 0x62, 0x89, 0x46, 0xc1, 0x4e, 0x16, 0xb, 0xb4, 0xcd, 0x7}}
	return a, nil
}

var _privateforwarderTransfer_private_many_accountsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x93\x41\x6f\xda\x4e\x10\xc5\xcf\xec\xa7\x78\xe1\x90\x3f\x48\xff\x9a\x4b\xd5\x83\x95\x36\x42\x55\xe9\xa9\x52\x94\xa4\xbd\x54\x3d\x2c\xf6\xd8\x5e\xc5\xec\x5a\xb3\x63\x20\x8a\xf8\xee\x95\xbd\x8b\x65\x4a\x11\x97\x9e\x40\xb3\x6f\xde\xbe\xdf\xcc\xda\x6c\x1a\xc7\x82\x55\x6b\x4b\xb3\xae\xe9\xd9\xbd\x90\x45\xc1\x6e\x83\xe9\x49\x6d\xaa\xa2\xf2\xcb\x5e\x6f\x9a\x53\xe1\xb8\x34\xe8\x1e\xd8\x6c\xb5\xd0\x23\x65\x64\xb6\xc4\x2b\xc7\x3b\xcd\x39\x71\xec\xb9\x74\x3c\x55\x6a\xb1\x58\xe0\xb9\x32\x1e\xc2\xda\x7a\x9d\x89\x71\x36\xfc\x2f\x88\x3d\xc4\x61\xa3\xed\x2b\x74\x9e\x33\x79\x4f\x1e\x52\xb1\x6b\xcb\x0a\x52\x91\x61\x34\xc1\x19\x1c\xad\xbd\x52\x23\xa3\x59\x6c\x5b\x6e\x5c\x6b\xe5\x9b\x6e\x52\xbc\x2d\x43\x29\xc5\xf7\x95\xd9\x7f\x78\x7f\x98\xe3\x4d\x29\x00\xe8\x83\x10\x7e\xe8\xb6\x16\x30\x79\xd7\x72\x46\x90\x4a\x0b\x2a\x57\xe7\xdd\xcd\x04\xe9\xb0\x7d\xa8\x6a\x26\xac\xc9\xd8\x72\xc8\xcb\x94\xf7\x56\x35\x09\xb6\x9d\xcf\x23\x15\x29\x6e\xc7\x23\x4b\x7a\x7f\x35\xc8\x22\x40\x1c\x89\xb1\xe5\x13\xd9\x9c\x38\xc5\xed\xa5\xa1\x25\x41\x11\x2c\x1a\xa6\x46\x33\xcd\xbc\x29\x6d\xd7\xb5\x6c\xa5\x5a\x66\x59\x87\x3b\x80\x45\xb8\xaf\x24\xd0\x60\x2a\x88\xc9\x76\x64\xae\x27\x0a\x9d\xff\x79\x78\x71\x4c\x79\xc8\x3d\xf4\x79\xaa\x8b\xe4\x88\x82\x8f\x51\x9d\xac\x1d\xb3\xdb\xdd\xfd\x85\xec\xd3\xac\x5b\x79\x8a\xf3\x93\x27\x71\xac\x4b\x7a\xd0\x52\xcd\xd5\x64\x32\xb9\xbf\x47\xa3\xad\xc9\x66\xd3\xcf\xae\xad\x73\x58\x27\x08\xbe\xe7\x21\xdd\x2e\x64\xec\x8d\x6e\xa6\x73\x75\x1a\xf0\xc2\x10\xcf\xf3\x5e\x99\xe9\x31\xfc\x15\xd9\xbf\x27\x39\x84\x1f\xda\x53\xd6\x0a\x8d\x17\x57\x38\x3e\x3e\x7e\x18\x8b\x3f\x1f\x74\xf2\x42\xaf\x7e\xac\xbf\x36\x93\xc4\x93\xcd\x23\x5f\xbf\x1c\x7f\xfc\x48\xfe\x8f\x8f\x3b\xc5\xdd\xbb\x93\xb5\x27\x3b\x23\x55\xce\x7a\x37\xd3\xfd\xb5\xe9\x59\x8a\x9f\xb1\xf0\xeb\x66\x3e\x5a\xcd\x21\xa2\x1d\xd4\xef\x00\x00\x00\xff\xff\x92\x7f\xff\x83\x78\x04\x00\x00"

func privateforwarderTransfer_private_many_accountsCdcBytes() ([]byte, error) {
	return bindataRead(
		_privateforwarderTransfer_private_many_accountsCdc,
		"privateForwarder/transfer_private_many_accounts.cdc",
	)
}

func privateforwarderTransfer_private_many_accountsCdc() (*asset, error) {
	bytes, err := privateforwarderTransfer_private_many_accountsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "privateForwarder/transfer_private_many_accounts.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x55, 0x3f, 0x3f, 0x6a, 0x6c, 0x28, 0x39, 0x37, 0x44, 0xea, 0xf7, 0x2c, 0xaa, 0x34, 0xb6, 0x13, 0x4b, 0x70, 0xab, 0x38, 0x36, 0x94, 0xe7, 0xdd, 0xd6, 0xf6, 0x84, 0x5, 0x69, 0xc, 0x1d, 0xc0}}
	return a, nil
}

var _safe_generic_transferCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x95\xc1\x6e\xe3\x36\x10\x86\xcf\xf1\x53\xcc\xfa\xb0\x2b\x01\x5e\xe5\x52\xf4\x60\x24\x4d\xdd\x00\xe9\xa1\x87\x06\x89\xdb\x3b\x2d\x8e\x24\x36\x34\x29\x70\x46\x56\x0c\xc3\xef\x5e\x90\x94\x68\x2b\x4e\xda\xec\xc9\xf4\x98\x9c\xff\x9b\x9f\x33\xb4\xda\xb6\xd6\x31\x3c\x74\xa6\x56\x1b\x8d\x6b\xfb\x82\x06\x2a\x67\xb7\x30\x9f\xc4\xe6\xb3\xd9\xf5\xf5\x35\xdc\x0b\x03\xad\x20\x02\x65\x40\x98\x3d\x10\x5b\x27\x6a\x84\x56\x70\x03\xc2\x48\x70\x58\xa2\xda\xa1\x8b\x11\x65\x88\x51\x48\xb0\x15\xfc\xd3\x11\x03\x37\x08\x12\x2b\xd1\x69\x2e\x42\xbe\x75\xa3\x08\x34\x32\xc1\xde\x76\x50\x36\xd6\x12\x86\x5d\x1c\x40\x7c\xb0\x17\x86\x81\x2d\x10\x1a\x09\x82\xa0\x47\xad\xc3\x96\x52\xb4\x62\xa3\xb4\xe2\xfd\xe5\x3e\xe5\x97\x41\x22\xc8\xac\xcc\x7e\xc8\x18\xb0\x4a\x61\x60\x83\xa1\x10\x0c\x39\x85\x01\xe1\xea\x6e\x8b\x86\xa1\x41\x87\x0b\x20\x0b\xbd\xd0\x81\x8c\x1a\xdb\x69\x19\xf2\xc4\x25\x94\x0d\x96\x2f\xa7\x13\x3b\xa1\x3b\x24\xaf\xbd\x15\x2f\x08\xd4\xb9\x58\x83\x32\x8c\x46\xa2\x3c\x97\x56\x34\xca\x2a\x13\xf0\xd8\x09\x43\xa2\x64\x65\x4d\x26\xb6\xb6\x33\xbc\x84\xbf\x1e\xd4\xeb\xcf\x3f\x2d\x80\xed\x12\x56\x52\x3a\x24\x5a\x84\xba\xd0\x3d\x0a\x6e\x96\xf0\x1c\x6d\xf7\x5f\x16\xc9\xf2\xf8\xd3\x63\xb7\xd1\xaa\xf4\xeb\x1c\x0e\xb3\x19\x00\x40\xf0\x19\xe1\x6f\x6f\x3b\x38\x24\xdb\xb9\xd2\x13\x0a\x86\xc6\x6a\x49\x27\xc3\x29\x46\x85\x43\xd8\xa0\x32\x35\x04\xba\x0a\x9d\x43\x19\x52\x69\x64\x60\xdc\xb6\x21\xd7\x12\x7e\x9d\xf4\x48\x11\xa2\x49\xf3\x37\xeb\x9c\xed\x7d\xf9\x58\xa1\x43\x53\xe2\x88\x3a\x8a\xa9\x6a\x88\x78\x29\x51\x96\xbe\x7a\x90\x16\xc9\x7c\x63\xa0\xae\x0d\xad\xe9\xe1\x7c\xed\x01\xc7\x9f\x4b\x20\xd1\x91\xa7\xa1\xfc\x27\xac\x96\xf0\xf5\x10\x49\xc6\xe0\x31\xd2\xb4\x0e\x5b\xe1\x30\x23\x55\x1b\x74\x4b\x58\x75\xdc\xac\xa2\x5e\x72\x69\xa0\xfe\x1d\x19\x04\xb8\x84\xcc\x36\x12\x84\x93\xdf\x28\x74\x3c\x4a\xd8\x85\x52\xc7\x73\x9e\x26\x44\x9e\xb0\x82\xdb\x61\x73\xb1\x09\x06\xdc\x7c\x3d\x4c\x5d\x7a\x74\x76\xa7\x24\xba\xe3\x2f\x99\x1f\xb4\xe5\xd9\xcd\xe6\xb3\xab\xab\xab\xbb\x3b\x68\x85\x51\x65\x36\xbf\x0f\xdd\x66\x2c\x43\x4c\x75\x89\x65\xfb\x48\x15\x9c\xff\x32\xcf\x13\x51\x5a\x10\xea\xaa\xb8\x70\xea\x7f\x21\x93\x81\x3f\x0e\xf9\x51\xa6\x4f\xd0\x4f\xa9\x53\xa3\xc1\xcd\xf7\x64\x6f\xd1\x2b\x6e\xa4\x13\x7d\x9a\x96\xf8\x19\x4b\x1f\xee\x1b\x5f\xb1\xec\x18\xe1\x30\xb9\x21\x37\xa9\xbf\x46\x1e\x5a\x20\x63\x9b\x17\x35\xf2\x7d\x7a\x50\xfe\xcb\x8e\xf3\x71\xcb\x07\xfb\xb2\xfc\xcb\x44\x69\xe8\x5d\x94\x01\x7f\xbd\x6f\x91\xe0\xf6\x5c\xdf\xcb\x3d\x5f\x6e\xca\xf2\xf3\x56\xfc\xd3\xe8\x7d\x9a\xc0\x71\x66\xfa\x06\x4d\x30\x2f\xbd\xb4\x8a\xa0\x57\x5a\xc7\xf9\x38\x8d\x98\x9f\x69\xe1\x6a\x64\x94\xf0\xb0\x2e\x52\x62\x55\xbd\x87\x57\x94\xd6\xb0\x50\x86\xfe\xc0\x7d\x36\x75\xdf\xb3\xfa\x3d\x59\x9e\x9f\x19\x3a\x3e\x2c\x6f\xf0\xc2\x5f\xc7\x87\x03\x33\x5e\x7c\x62\x3f\xbd\xe1\x93\xc4\xe7\x4e\x49\x6c\x2d\x29\x1e\xda\xf0\xe6\xfb\x14\xee\x64\xd8\x11\x50\x13\xbe\x21\x7c\xbf\xfb\x3f\x9f\x73\x68\xaa\xe3\xbf\x01\x00\x00\xff\xff\x4c\xf3\x0f\xb7\x27\x07\x00\x00"

func safe_generic_transferCdcBytes() ([]byte, error) {
	return bindataRead(
		_safe_generic_transferCdc,
		"safe_generic_transfer.cdc",
	)
}

func safe_generic_transferCdc() (*asset, error) {
	bytes, err := safe_generic_transferCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "safe_generic_transfer.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe7, 0x43, 0xff, 0xd2, 0xb1, 0x4c, 0xd0, 0x65, 0x16, 0x78, 0xc7, 0x6a, 0xb1, 0x54, 0x83, 0x87, 0x59, 0x2d, 0x90, 0x42, 0x4e, 0x45, 0xd4, 0x4d, 0x2b, 0x54, 0xf2, 0x49, 0x52, 0x91, 0x7, 0x14}}
	return a, nil
}

var _scriptsGet_balanceCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x91\x3f\x6f\xc2\x30\x10\xc5\x77\x7f\x8a\xa7\x0c\x6d\x58\x92\xa5\xea\x80\x4a\x11\x45\x65\x46\x15\xed\x7e\x49\x2e\x60\xd5\xb1\x23\xe7\xdc\x52\x21\xbe\x7b\x05\xc6\x94\xa8\x9e\xce\x77\xbf\xf7\x74\x7f\xca\x12\x9b\x9d\x1e\x30\xd4\x5e\xf7\x02\xcf\xd4\x0c\x90\x1d\xa3\x22\x43\xb6\x66\xb4\x9a\x4d\xa3\xca\x12\xae\x05\x59\x50\x5d\xbb\x60\xe5\x7e\xc0\xeb\x9e\xba\xde\xf0\xc6\x7d\xb2\xc5\x4b\xa4\x95\xd2\x5d\xef\xbc\x60\x15\xec\x56\x57\xa9\xda\x7a\xd7\x21\x1b\xe5\xb2\x44\x8e\x6c\x22\x78\x9b\xca\x94\xea\x43\x85\x36\x58\x74\xa4\x6d\x4e\x4d\xe3\x79\x18\xa6\x58\xc4\x60\x32\xc5\xfb\x4a\xef\x1f\x1f\x70\x50\x00\x60\x58\x52\x8f\x98\x61\xcb\xb2\x88\x9f\x24\x9c\x5c\xa9\x2f\x0a\x46\xde\xb8\xc5\x2c\x09\x8a\x2d\xcb\x92\x7a\xaa\xb4\xd1\xf2\x93\xdf\xb6\x51\x7c\x9c\xe8\x75\xa8\x8c\xae\xd7\x24\xbb\x68\x73\x7a\x45\xe5\xbc\x77\xdf\x4f\x77\xff\xf1\xc3\x68\xe2\xe2\xb2\xa3\xe3\x73\xfe\xa7\x9e\xcf\xd1\x93\xd5\x75\x9e\x2d\x5d\x30\x0d\xac\x13\x44\xc3\xb4\x52\x78\x6e\xd9\xf3\x29\x12\x77\xbe\xcc\xd9\x3b\x9b\xa8\xb3\x89\x67\x09\xde\x5e\x87\x29\x2e\x67\x53\x47\xf5\x1b\x00\x00\xff\xff\x86\x1f\x84\xe5\xda\x01\x00\x00"

func scriptsGet_balanceCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_balanceCdc,
		"scripts/get_balance.cdc",
	)
}

func scriptsGet_balanceCdc() (*asset, error) {
	bytes, err := scriptsGet_balanceCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_balance.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf5, 0x57, 0xbd, 0xcd, 0x3e, 0x2e, 0x5b, 0x5, 0xd, 0x3d, 0x3d, 0xdd, 0x7e, 0x9, 0x75, 0x67, 0x29, 0xcd, 0x32, 0x13, 0x3c, 0x9, 0xd4, 0x3b, 0x68, 0xa6, 0x10, 0x15, 0xd, 0x15, 0x67, 0x95}}
	return a, nil
}

var _scriptsGet_supplyCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xce\x31\xae\xc2\x30\x10\x04\xd0\x7e\x4f\x31\x4a\xf5\x7f\x83\x1b\x44\x41\x0f\x17\x20\x1c\xc0\x24\xb6\x62\x61\x7b\x57\xeb\xb5\x14\x84\xb8\x3b\x52\x2a\xd2\xce\x8c\x46\xcf\x39\x8c\x4b\x6a\x68\x93\x26\x31\x68\xf0\x73\x83\x2d\x01\xc6\xe6\x33\x5a\x17\xc9\x2f\xc4\x14\xf2\x4c\xce\x81\xe3\x56\x5e\x56\x5f\x24\x87\x91\x9f\xa1\xa2\x15\xaf\x86\x89\xab\xa9\x9f\x8c\x28\x15\x61\xb5\xfd\x26\x2a\x17\x0c\xbf\xd1\x40\x24\xfd\x81\xd8\x2b\x8a\x4f\xf5\xef\xff\x8c\xfb\x35\xad\xa7\x23\xde\x04\x00\x1a\xac\x6b\xdd\xbd\x1c\x36\xd3\x6d\x23\xd1\x87\xbe\x01\x00\x00\xff\xff\x06\xc5\x37\x4e\xbb\x00\x00\x00"

func scriptsGet_supplyCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_supplyCdc,
		"scripts/get_supply.cdc",
	)
}

func scriptsGet_supplyCdc() (*asset, error) {
	bytes, err := scriptsGet_supplyCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_supply.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xbc, 0x3d, 0xd7, 0x2a, 0x1b, 0x2a, 0xd5, 0xeb, 0x39, 0x29, 0x29, 0x35, 0x13, 0xe0, 0x15, 0x56, 0xe1, 0x9c, 0xfa, 0x75, 0x51, 0x75, 0x93, 0x6b, 0x36, 0xd0, 0x9c, 0x42, 0xcf, 0xfc, 0x87, 0x98}}
	return a, nil
}

var _scriptsGet_supported_vault_typesCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x53\x4f\x6b\xdb\x4e\x10\xbd\xeb\x53\x3c\x7c\xf8\x45\x82\x1f\xf2\xdd\xb4\x0d\x69\xa1\xf4\x18\x92\xb4\x67\xad\x56\x23\xef\x92\x95\x46\xcc\x8e\x22\x8c\xf1\x77\x2f\x2b\xd9\x8d\x65\x12\x9f\xcc\x68\xde\x9f\x7d\x33\xe3\xbb\x81\x45\xf1\x73\xec\xf7\xbe\x0e\xf4\xc2\xaf\xd4\xa3\x15\xee\xb0\x59\xd5\x36\x59\xb6\xdd\x6e\xf1\xe2\x7c\x44\xb4\xe2\x07\x8d\x10\xd2\x51\xfa\x08\x75\x84\x38\x0e\x89\x88\x9a\x35\xd5\x5d\x84\x1e\x06\x42\x7d\x98\xbb\x06\xe1\x37\xdf\x50\x83\x4a\x8d\xec\x49\x2b\x98\xa6\x11\x8a\xb1\x9c\xd9\x6f\xab\x88\x8e\xc7\xd0\xc0\x71\x68\x66\xbc\x35\x83\xa9\x7d\xf0\x7a\xc0\xe4\xbc\x75\xb0\xdc\xb7\x2c\x5d\xc4\xe4\xd5\xad\xa5\xcb\x27\xb2\xe4\xdf\x48\x20\x14\x55\xbc\x4d\xe6\x92\x99\x59\x6a\x72\x3e\x10\xbc\xa2\x61\x8a\xfd\x9d\xa2\x33\xaa\x24\x98\x1c\xa9\x23\xb9\x56\x12\x6a\x49\x22\x94\xd1\x9e\xf9\xa1\x73\x4c\x2c\x30\xb0\x63\x54\xee\x20\x17\xb1\xe0\x5f\x09\xcb\x6b\x56\x76\x9e\x27\xaf\xd6\xd5\x6c\xa4\xa9\x12\xb2\x9a\xab\x17\x8f\x55\x89\x5f\x3c\x51\x22\x38\x87\xf0\x68\xd4\x55\x50\x0a\x21\x26\x53\x42\xb7\x01\x44\x65\xa1\x98\x0d\x63\x9d\x7c\xa1\x33\xbe\xcf\x17\xe8\x0e\x0f\x4b\x7e\xff\xe3\x9d\x6b\x87\xc7\xb1\x0e\xde\xa6\xff\xc5\x0e\xc7\x97\xc3\x40\x3b\x7c\x67\x0e\x27\x1c\xb3\x0c\x00\xb6\x5b\x3c\x58\x9b\x72\xbf\x91\x6a\x59\xd6\xe3\x5b\x68\x2f\x63\x9a\xc1\x81\xf4\x0a\xf2\x44\x2d\xbe\x62\x4f\xfa\x60\x2d\x8f\xbd\x9e\x9d\x15\x73\xeb\xed\xaf\xdc\x93\xfe\xf8\x07\xfd\xf2\xdf\xf1\xe3\x39\x9e\xbe\xe5\xef\xcf\xf9\x84\xa9\x66\x11\x9e\xf2\x02\x1f\x7e\xbe\xbf\xc7\x60\x7a\x6f\xf3\xcd\xef\xde\x2c\x73\xc4\x82\x58\x6d\x56\x5a\xa5\xab\x9d\x89\x63\xbd\x2c\xf1\x67\xbe\x96\x7b\x19\x8c\xba\x4d\x69\xb9\xb7\x46\xaf\x8c\x96\xca\xcf\x2a\xbe\xdf\xe7\x45\x51\x5c\x62\x7e\x9a\x2f\xe7\xe6\x70\xde\xcc\x18\x74\x56\x8a\xe5\xdc\xb8\xdc\xd7\x3a\xd5\x94\xd5\xf3\x05\xf2\x27\x21\xd2\x20\x63\x5e\x64\xa7\xbf\x01\x00\x00\xff\xff\x4f\x63\x8b\x60\xcb\x03\x00\x00"

func scriptsGet_supported_vault_typesCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_supported_vault_typesCdc,
		"scripts/get_supported_vault_types.cdc",
	)
}

func scriptsGet_supported_vault_typesCdc() (*asset, error) {
	bytes, err := scriptsGet_supported_vault_typesCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_supported_vault_types.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x86, 0x41, 0x9, 0x4e, 0xa9, 0xac, 0x75, 0xc, 0x1d, 0x13, 0xf3, 0xf8, 0x1a, 0xc, 0xec, 0x9a, 0x27, 0x4f, 0x77, 0x1c, 0xd1, 0x65, 0x9f, 0x27, 0xd2, 0x91, 0x3e, 0x83, 0xa9, 0x98, 0xc2, 0xfb}}
	return a, nil
}

var _scriptsMetadataGet_token_metadataCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xc1\x6e\xf2\x30\x10\x84\xef\x7e\x8a\x51\x0e\xbf\xc2\x85\x07\x40\x3f\x45\x08\x95\x5b\x25\x84\x10\xf7\x4d\xb2\x09\x56\x1d\x3b\x72\xd6\xd0\x0a\xf1\xee\x55\x88\x13\xd2\xaa\x25\x97\xd8\xeb\xf9\x46\xb3\xa3\xeb\xc6\x79\xc1\xeb\x07\xd5\x8d\xe1\x83\x7b\x67\x8b\xd2\xbb\x1a\xc9\x74\x94\xa8\xa8\xdb\x06\x5b\xe9\x2c\x4e\xdf\x58\xa8\x20\xa1\xa3\xe6\x4b\x1b\xa9\xbf\x05\xa3\xc7\x6f\xd8\x0f\xa5\x6a\x42\x86\x32\x58\xd4\xa4\x6d\x4a\x45\xe1\xb9\x6d\x17\x58\xf7\x87\xd9\xe2\x49\x8e\xf9\xf6\xd0\xfd\x71\x55\x00\x60\x58\x40\x79\xee\x82\x15\x2c\x51\xb1\xac\xfb\xcb\xe0\x39\x53\xa3\xec\x4c\xc1\xc8\x9e\x4b\x2c\x07\xe2\xfe\xd4\x7d\xf3\x8a\x65\x43\x0d\x65\xda\x68\xf9\x4c\xa7\xcd\xcc\x8f\x1d\xb6\x0b\x99\xd1\xf9\x8e\xe4\x34\x7b\x40\x99\xf3\xde\x5d\xfe\xff\xbb\x7e\xcf\xb7\xe7\xd6\x99\x33\xfb\xdb\x4b\xfa\x10\xaf\x56\x68\xc8\xea\x3c\x4d\x36\x2e\x98\x02\xd6\x09\x7a\x1e\x04\xcf\x25\x7b\xb6\x39\x43\x1c\xe4\xc4\x7d\x54\xf8\x68\x94\x4c\x96\x28\xe5\xbe\xfc\xf2\x59\x41\x15\x4b\xdf\x51\x7a\xd6\x7c\x19\xe2\x2c\xc6\x02\xa2\x9d\x67\x09\xde\x46\x47\x75\x53\x5f\x01\x00\x00\xff\xff\xb0\x79\xad\x83\x2a\x02\x00\x00"

func scriptsMetadataGet_token_metadataCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsMetadataGet_token_metadataCdc,
		"scripts/metadata/get_token_metadata.cdc",
	)
}

func scriptsMetadataGet_token_metadataCdc() (*asset, error) {
	bytes, err := scriptsMetadataGet_token_metadataCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/metadata/get_token_metadata.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2e, 0x89, 0xb8, 0x68, 0xb4, 0x7b, 0x3a, 0xf1, 0x23, 0xb6, 0xba, 0xd6, 0x20, 0xb4, 0xe5, 0x36, 0x8d, 0xa, 0xda, 0x17, 0xe9, 0x2, 0x38, 0x9c, 0x1b, 0x23, 0x3f, 0xf3, 0xca, 0xe2, 0x63, 0x66}}
	return a, nil
}

var _scriptsMetadataGet_vault_dataCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\xcd\x6e\xc2\x30\x10\x84\xef\x7e\x8a\x51\x0e\x55\xb8\xf0\x00\xa8\x14\x21\x5a\x6e\x95\x10\x42\xdc\x37\xc9\x26\x58\x75\xec\xc8\x59\x43\x2b\xc4\xbb\x57\xe4\x87\xa4\x88\x92\x53\xb2\x99\x59\x7f\x33\xb2\x2e\x2b\xe7\x05\x1f\xdf\x54\x56\x86\x77\xee\x8b\x2d\x72\xef\x4a\x44\xe3\x51\xa4\x3a\xdd\x3a\xd8\x42\x27\xdd\xf4\x93\x85\x32\x12\xda\x6b\x3e\xd5\x9d\xeb\x7f\xc1\x6d\xc7\x23\xdb\x9d\x52\x55\x21\x41\x1e\x2c\x4a\xd2\x36\xa6\x2c\xf3\x5c\xd7\x33\x2c\xdb\x97\xc9\xec\x09\xc7\x74\xbd\xdb\x53\x30\xf2\x4e\x42\x38\x2b\x00\x30\x2c\xa0\x34\x75\xc1\x0a\xe6\x28\x58\x96\xed\x47\xbf\x78\xa2\x6e\xb2\xe3\xd5\xba\xe5\x1c\xf3\xde\xd1\xfc\xba\x3e\xd3\x82\x65\x45\x15\x25\xda\x68\xf9\x89\xc7\xf5\x4c\x9b\x13\x37\x21\x31\x3a\xdd\x90\x1c\x26\x83\x29\x71\xde\xbb\xd3\xeb\xcb\xf9\x2f\xe4\x96\x6b\x67\x8e\xec\x2f\x6f\xf1\x20\x5e\x2c\x50\x91\xd5\x69\x1c\xad\x5c\x30\x19\xac\x13\xb4\x7e\x10\x3c\xe7\xec\xd9\xa6\x0c\x71\x90\x03\xb7\xa8\xf0\xdd\xa2\xe8\x3e\x44\x93\x7f\xfe\xac\xa8\x82\x65\xd4\x55\xdc\x47\x7f\xc4\xd3\xde\x8b\xcc\x71\xdd\x40\xe9\x6b\xf2\x92\xad\x60\x5c\xf6\x51\xf3\xa9\xc7\xf0\x2c\xc1\xdb\x81\x44\x5d\xd4\x6f\x00\x00\x00\xff\xff\x7c\x3d\xc8\xc1\x6a\x02\x00\x00"

func scriptsMetadataGet_vault_dataCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsMetadataGet_vault_dataCdc,
		"scripts/metadata/get_vault_data.cdc",
	)
}

func scriptsMetadataGet_vault_dataCdc() (*asset, error) {
	bytes, err := scriptsMetadataGet_vault_dataCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/metadata/get_vault_data.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd1, 0x5d, 0x35, 0x37, 0x9c, 0x20, 0x9d, 0x73, 0xe, 0x3d, 0x27, 0x8c, 0xc3, 0x42, 0xe, 0xda, 0x6e, 0x97, 0xb7, 0xef, 0x97, 0xc1, 0x94, 0x44, 0x1, 0x48, 0xae, 0x3b, 0xc1, 0xc9, 0x9, 0xfd}}
	return a, nil
}

var _scriptsMetadataGet_vault_displayCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\xc1\x6e\xc2\x30\x10\x44\xef\xf9\x8a\x51\x0e\x55\xb8\xf0\x01\xa8\x14\x21\x5a\x6e\x95\x10\x42\xdc\x37\xc9\x26\x58\x75\x6c\xcb\x5e\x43\x11\xe2\xdf\x2b\x48\x42\x68\x45\xc9\x29\x5e\xcf\xac\xde\x8c\xac\x1a\x67\xbd\xe0\xe3\x9b\x1a\xa7\x79\x63\xbf\xd8\xa0\xf2\xb6\x41\x7a\x3f\x4a\x93\x4e\xb7\x8c\xa6\x56\x79\x37\xfd\x64\xa1\x92\x84\xb6\x8a\x0f\xa1\x73\xfd\x2f\xb8\xed\x78\x64\xfb\xa3\x4c\x5c\xcc\x51\x45\x83\x86\x94\xc9\xa8\x2c\x3d\x87\x30\xc1\xbc\xfd\x19\x4d\x9e\x70\x8c\x97\x9b\x77\x15\x9c\xa6\x23\x4e\x09\x00\x68\x16\x50\x51\xd8\x68\x04\x53\xd4\x2c\xf3\xf6\xd0\xaf\x1d\x25\x37\xd9\x9e\xa2\x96\x35\x57\x98\xf6\x8e\xeb\xd5\xe5\x1b\xd7\x2c\x0b\x72\x94\x2b\xad\xe4\x98\xdd\x97\x33\xde\x5e\x6c\xab\x98\x6b\x55\xac\x48\x76\xa3\xc1\x94\x5b\xef\xed\xe1\xf5\xe5\xf4\x1b\x71\xcd\xc1\xea\x3d\xfb\xf3\x5b\x36\x88\x67\x33\x38\x32\xaa\xc8\xd2\x85\x8d\xba\x84\xb1\x82\xd6\x0f\x82\xe7\x8a\x3d\x9b\x82\x21\x16\xb2\xe3\x16\x15\xbe\x5b\x94\xde\x85\xa8\xa4\xcf\x3f\x7d\x56\x53\xcd\x72\x6b\x2a\xeb\x83\x3f\xa2\x69\xdf\x44\x69\x39\x5c\x91\xd4\x25\x77\xc3\x46\x30\x14\xbd\x57\x7c\xe8\x11\x3c\x4b\xf4\x66\xa0\x48\xce\xc9\x4f\x00\x00\x00\xff\xff\x0a\x42\x8f\xe8\x64\x02\x00\x00"

func scriptsMetadataGet_vault_displayCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsMetadataGet_vault_displayCdc,
		"scripts/metadata/get_vault_display.cdc",
	)
}

func scriptsMetadataGet_vault_displayCdc() (*asset, error) {
	bytes, err := scriptsMetadataGet_vault_displayCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/metadata/get_vault_display.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2b, 0x88, 0xc5, 0xf0, 0xf3, 0x55, 0x38, 0xcc, 0xbc, 0x76, 0xcb, 0xd1, 0x4d, 0x6, 0xc7, 0x35, 0xf1, 0x9f, 0x3c, 0x68, 0x4e, 0xb0, 0x5f, 0x41, 0x46, 0x28, 0x24, 0xe0, 0x82, 0xc1, 0xe4, 0xad}}
	return a, nil
}

var _scriptsMetadataGet_vault_supply_viewCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\x41\xef\x9a\x40\x10\xc5\xef\xfb\x29\x46\x0e\x2d\x5c\xf0\xd2\xf4\x60\x44\x63\x4c\xed\xa9\x89\xb1\xd6\xfb\x02\x83\x6e\xba\xec\x6e\x76\x67\x55\x62\xfc\xee\x0d\x2c\x02\x6d\xea\x9f\xd3\x32\xfb\xde\x6f\x98\x37\x88\xda\x68\x4b\xf0\xed\xce\x6b\x23\xf1\xa8\x7f\xa3\x82\xca\xea\x1a\xa2\x69\x29\x62\xbd\x6e\xe7\xd5\x59\xe4\x7d\xf5\x07\x12\x2f\x39\xf1\x93\xc0\x9b\xeb\x5d\xef\x05\x03\xe3\x7f\xb6\x7f\x94\x6c\x3e\x9f\xc3\x77\x24\x07\x74\x41\x20\x4d\x5c\x82\xf3\xc6\xc8\x06\x74\xd5\xd5\xae\xdc\x4b\xfa\xec\x80\xba\x2f\x2e\x85\xc5\x82\x64\x13\x68\xc3\x3d\x63\xc6\xe7\x50\x79\x05\x35\x17\x2a\xe6\x65\x69\xd1\xb9\x05\x6c\xc2\x21\x59\xc0\xaf\x9d\xb8\x7f\xfd\x02\x0f\x06\x00\x20\x91\x80\x17\x85\xf6\x8a\x20\x83\x33\xd2\x26\xbc\xbc\x8c\x09\x1b\x64\x1d\xfe\x80\x15\x64\x2f\x47\x77\xd5\x3e\xe9\x19\x69\xcb\x0d\xcf\x85\x14\xd4\xc4\xd3\x18\xd3\x53\x6b\xdb\xfb\x5c\x8a\x62\xcf\xe9\x92\x8c\xa6\x5c\x5b\xab\x6f\xcb\x4f\x8f\xbf\x92\x48\x0f\xe8\xb4\xbc\xa2\x7d\xae\xe2\x51\xbc\x5e\x83\xe1\x4a\x14\x71\xb4\xd5\x5e\x96\xa0\x34\x41\xf0\x03\x07\x8b\x15\x5a\x54\x45\x1b\xdb\x98\x04\xd8\x1e\x14\x4d\x86\xa8\xe8\x67\xc8\x34\x1b\xe6\x49\x7b\x5d\xdb\x3d\x3e\x36\x06\x97\xef\x17\x9a\x1e\xdb\xbd\x04\xc4\x2a\x4e\x92\xd9\x48\x0e\xbb\x6a\x55\x90\x8d\x6d\xb8\x9b\x7d\xf0\x03\x4d\x71\x81\x64\x91\xbc\x55\x13\x58\x1a\x8e\xec\xc9\xfe\x04\x00\x00\xff\xff\x64\xda\x15\x73\xb7\x02\x00\x00"

func scriptsMetadataGet_vault_supply_viewCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsMetadataGet_vault_supply_viewCdc,
		"scripts/metadata/get_vault_supply_view.cdc",
	)
}

func scriptsMetadataGet_vault_supply_viewCdc() (*asset, error) {
	bytes, err := scriptsMetadataGet_vault_supply_viewCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/metadata/get_vault_supply_view.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa9, 0xf4, 0x97, 0x7, 0x1a, 0x5a, 0xb3, 0x78, 0x62, 0xda, 0xea, 0x72, 0xcd, 0x10, 0xe3, 0x91, 0x7b, 0xcd, 0x30, 0xb, 0x80, 0x58, 0xac, 0xef, 0x93, 0xab, 0x5f, 0xe9, 0x99, 0x1c, 0x8f, 0xc7}}
	return a, nil
}

var _scriptsSwitchboardCheck_receiver_by_typeCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x91\xc1\x6e\xe3\x20\x18\x84\xef\x7e\x8a\x91\x0f\x2b\x73\xf1\x03\x44\xd9\x64\x93\x55\x7b\x8e\x92\xb4\x77\xc0\xbf\x6d\x14\x0c\x08\xff\x34\xb5\xa2\xbc\x7b\x95\xda\x6d\xdd\x4a\x39\xf4\xf6\xc3\xcc\xc0\xc7\x60\xba\xe0\x23\xe3\x31\xb9\xc6\x28\x4b\x47\x7f\x22\x77\x38\x1b\xd6\xad\xf2\x32\x56\xa8\xa3\xef\x90\xdf\x93\xf3\x6c\xca\x3f\xbc\xca\x2e\x4c\xfa\x94\x99\x6f\xe5\x59\x16\x92\x42\x9d\x1c\x3a\x69\x5c\xd1\x7f\x1d\xb1\xc0\xa6\xaa\x22\xf5\xbd\x58\x60\xeb\xbd\xc5\x25\xb3\xc4\x98\x39\xf6\x54\xe3\x2f\x1a\xe2\x8d\xd6\x3e\x39\x9e\xa7\x45\x06\x00\x65\x43\xfc\x5f\x06\xa9\x8c\x35\x3c\x2c\xff\x5c\xee\xf1\x96\xb3\x79\x97\x94\x35\xfa\xba\x2a\xee\x9a\x47\xc7\x4e\x72\x3b\x5d\xa3\x7c\x8c\xfe\x5c\x08\xbc\x2f\xd7\x6b\x04\xe9\x8c\x2e\xf2\x27\x27\x95\x25\xb0\xc7\xe8\x80\xfe\x84\xc1\xd9\x70\x8b\x48\x3d\x47\xa3\x99\x2a\xf0\x10\x08\xbe\xc6\x6f\x18\xa7\x46\x4b\xed\x9d\x96\xdf\xde\x5f\xb2\x3f\x70\x34\xae\x29\x84\xf8\x90\x91\xcb\xb1\xa8\x5c\x8c\xdc\x91\x38\x45\xf7\xa3\xd2\x52\xb7\xa4\x4f\x7b\xd2\x64\x5e\x28\x6e\x87\xe3\x10\xa8\xb8\xc1\x2d\x70\x1b\x97\xff\xe6\xff\x57\x3e\xcb\x64\x79\x55\x08\x91\x5d\xdf\x02\x00\x00\xff\xff\xfb\xcb\x2f\x00\x32\x02\x00\x00"

func scriptsSwitchboardCheck_receiver_by_typeCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsSwitchboardCheck_receiver_by_typeCdc,
		"scripts/switchboard/check_receiver_by_type.cdc",
	)
}

func scriptsSwitchboardCheck_receiver_by_typeCdc() (*asset, error) {
	bytes, err := scriptsSwitchboardCheck_receiver_by_typeCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/switchboard/check_receiver_by_type.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2a, 0x6a, 0x82, 0xa3, 0xd9, 0xd7, 0x0, 0x73, 0xa9, 0xff, 0x8d, 0x6b, 0x2b, 0x4b, 0xa6, 0x55, 0x22, 0xfd, 0x77, 0x7, 0x8f, 0xbd, 0xb6, 0xdd, 0x72, 0xa1, 0x29, 0xeb, 0xcc, 0xd3, 0x61, 0x83}}
	return a, nil
}

var _scriptsSwitchboardGet_vault_typesCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\x31\x0b\xdb\x30\x14\x84\x77\xfd\x8a\xc3\x43\xb1\x17\x7b\x0f\x4d\x43\x08\xb4\x6b\x48\x43\x97\x52\x88\x2c\x3f\xdb\xa2\xb6\x64\xa4\xa7\x86\x10\xf2\xdf\x8b\xac\xa6\x71\x4a\x02\xf5\x64\xa4\xef\xde\xe9\xdd\xe9\x71\xb2\x8e\xf1\x39\x98\x4e\xd7\x03\x1d\xed\x4f\x32\x68\x9d\x1d\x91\x3d\x9d\x65\xe2\x15\xf9\xf5\xac\x59\xf5\xb5\x95\xae\x79\x25\x5a\x5c\x67\x42\x54\x15\x8e\xbd\xf6\xf0\xca\xe9\x89\xe1\x48\x36\x1e\xdc\x13\x3c\x5b\x47\x0d\x7e\xc9\x30\x30\x94\x9c\x64\xad\x07\xcd\x9a\x7c\x9a\x29\xe1\x17\x36\xd6\x44\x4d\x1c\x36\x49\xef\xa9\x81\x54\xca\x06\xc3\x62\x0a\x35\xda\x60\x30\x4a\x6d\xf2\x3f\x87\x2b\x6c\x9b\xc6\x91\xf7\xc5\x0a\xdf\x8f\x97\x89\x7e\xe0\x2a\x04\x00\x0c\xc4\x51\xc9\x58\xa3\x23\xde\x26\xfc\x2e\x2b\x12\x53\x55\xf8\x12\x31\x38\x6a\xc9\x91\x51\x04\xb6\xe9\xc5\x8b\x07\x29\x6b\x5a\xeb\x46\x6d\xba\x78\xbb\x58\x79\x1f\xea\x41\xab\xbf\x6e\x0b\xcd\x81\x5a\xac\x67\xfb\xb2\x23\xde\xdd\x37\xbe\xe4\xef\xd2\x2b\xd3\xac\xbd\xe4\xbe\x98\x07\xc6\xaf\xac\xad\x73\xf6\xfc\xf1\xc3\x5b\xd5\xe2\xff\xfa\x3f\x50\x72\xb9\x7d\xca\x1f\x26\x9b\x0d\x26\x69\xb4\xca\xb3\x9d\x0d\x43\x03\x63\x19\xc9\xf7\x39\x95\xc5\x76\xd9\x23\xbe\x03\x71\x70\x73\x61\x70\xe4\x63\xbd\xb6\xc5\xa9\x23\xfe\x16\xbb\x8e\x85\xf8\xbc\x38\xcd\xb4\x4b\xe8\x73\x4a\xe5\x3f\xa8\x10\x37\xf1\x3b\x00\x00\xff\xff\xfb\x2b\x45\x36\xb2\x02\x00\x00"

func scriptsSwitchboardGet_vault_typesCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsSwitchboardGet_vault_typesCdc,
		"scripts/switchboard/get_vault_types.cdc",
	)
}

func scriptsSwitchboardGet_vault_typesCdc() (*asset, error) {
	bytes, err := scriptsSwitchboardGet_vault_typesCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/switchboard/get_vault_types.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x69, 0xfb, 0xd8, 0x58, 0x9d, 0x15, 0x34, 0x8a, 0xe2, 0xfb, 0x58, 0x75, 0x8d, 0xe6, 0x9e, 0x1b, 0x57, 0xc3, 0x55, 0x9e, 0x21, 0x35, 0x9a, 0xd7, 0x46, 0x47, 0xcd, 0x80, 0x37, 0x2b, 0xc0, 0x1a}}
	return a, nil
}

var _scriptsSwitchboardGet_vault_types_and_addressCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\xcf\xca\xdb\x30\x10\xc4\xef\x7a\x8a\xc1\x87\x62\x5f\xec\xfb\x47\xbf\x86\x10\x68\xaf\x21\x0d\xed\x35\xb2\xbc\xb6\x45\x6d\xc9\x48\xab\x86\x10\xf2\xee\x45\x56\xfe\x38\x90\x40\x7d\x32\xab\xfd\xcd\xec\xee\xe8\x71\xb2\x8e\xf1\x3d\x98\x4e\xd7\x03\xed\xed\x1f\x32\x68\x9d\x1d\x91\x3d\xd5\x32\xf1\xaa\xf3\xe7\x51\xb3\xea\x6b\x2b\x5d\xf3\x0a\x5a\x3c\x67\x42\x54\x15\xf6\xbd\xf6\xf0\xca\xe9\x89\xe1\x48\x36\x1e\xdc\x13\x3c\x5b\x47\x0d\xfe\xca\x30\x30\x94\x9c\x64\xad\x07\xcd\x9a\x7c\xd2\x94\xf0\x0b\x1b\x6b\x22\x13\xc5\x26\xe9\x3d\x35\x90\x4a\xd9\x60\x58\x4c\xa1\x46\x1b\x0c\x46\xa9\x4d\x7e\x2d\x7e\x60\xdd\x34\x8e\xbc\x2f\x3e\x70\xde\x9f\x26\xba\x17\x2e\x38\x0b\x01\x00\x03\x71\x94\x60\x7c\xa2\x23\x5e\x27\xee\xc6\x17\xa9\xa7\xaa\xf0\x23\xb6\xc1\x51\x4b\x8e\x8c\x22\xb0\x4d\xa3\x2f\x26\x53\xd6\xb4\xd6\x8d\xda\x74\xf1\x75\xb1\xfb\x36\xd4\x83\x56\x77\xb7\x05\xb3\xa3\x16\x9f\xb3\x7d\xd9\x11\x6f\x6e\xab\x9f\xf2\x77\x67\x2c\x93\xd6\x56\x72\x5f\xcc\x82\xf1\x2b\x6b\xeb\x9c\x3d\x7e\xfd\xf2\x96\x5a\xfc\x9f\xff\xa7\x29\xb9\x5c\xbe\xe5\x0f\x93\xd5\x0a\x93\x34\x5a\xe5\xd9\xc6\x86\xa1\x81\xb1\x8c\xe4\xfb\x7c\x95\xc5\x76\xd9\xe3\x7c\x3b\xe2\xe0\xe6\xe4\xe0\xc8\xc7\x9c\x6d\x8b\x43\x47\xfc\x2b\x86\x1e\x93\xf1\xbf\x35\xf7\xd7\x70\xf2\xe2\x30\x83\x2e\x51\xcf\x07\x2b\xdf\x53\x42\x5c\xc4\xbf\x00\x00\x00\xff\xff\x3b\x85\x5a\x09\xd1\x02\x00\x00"

func scriptsSwitchboardGet_vault_types_and_addressCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsSwitchboardGet_vault_types_and_addressCdc,
		"scripts/switchboard/get_vault_types_and_address.cdc",
	)
}

func scriptsSwitchboardGet_vault_types_and_addressCdc() (*asset, error) {
	bytes, err := scriptsSwitchboardGet_vault_types_and_addressCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/switchboard/get_vault_types_and_address.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xbb, 0x85, 0x7a, 0x8d, 0xe8, 0x53, 0x96, 0x74, 0xb7, 0x16, 0xcf, 0x4b, 0x9e, 0xba, 0x84, 0x74, 0xf3, 0xc9, 0xee, 0x30, 0x27, 0x8d, 0x28, 0xff, 0xe2, 0xe3, 0xb1, 0x25, 0x3e, 0x9, 0x9a, 0xad}}
	return a, nil
}

var _scriptsTokenforwarderIs_recipient_validCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\x51\x6a\xc3\x30\x10\x44\xff\x7d\x8a\xc1\x1f\xc5\x86\xe2\x03\x98\xb6\x21\x2d\xe4\x3b\x94\xf6\x00\xb2\xb4\x76\x44\x64\xad\x58\xaf\x08\x21\xe4\xee\xa5\x36\x2d\x24\x24\x44\x5f\x62\x79\x3b\x33\x3b\x7e\x4c\x2c\x8a\x2f\xde\x53\xdc\xb0\x1c\x8c\x38\x1f\x07\xf4\xc2\x23\xca\xab\x69\x59\x14\x29\x77\xe8\x73\xc4\x68\x7c\xac\x8c\x73\xd2\x62\xed\x9c\xd0\x34\x3d\x43\x2f\xe9\xad\xd1\x5d\x8b\x6d\xee\x82\xb7\xbf\xff\xba\xc5\x3b\x73\xc0\xa9\x00\x80\x40\x8a\x7e\x61\x49\x3e\xa9\xc7\x2b\x06\xd2\xb5\xb5\x9c\xa3\xce\xca\xf5\xcc\xdd\x78\xcd\x40\xfa\x61\x92\xe9\x7c\xf0\x7a\x7c\x79\x3a\x5d\xc5\x6c\x36\x7f\xba\x8b\xf9\xf9\xad\xba\x11\xed\xbe\x7c\xc7\x22\x7c\xa8\xee\x02\xab\x15\x92\x89\xde\x56\xe5\x77\x34\x5d\x20\x28\x63\xd9\xc1\xc3\x28\x10\x9a\x54\xbc\x55\xe8\x31\xd1\x52\xb3\x81\xfd\xbf\xa6\xac\x8b\xd9\x56\x48\xb3\xc4\x8b\x86\x1a\xbb\x23\xbb\xaf\xea\xe2\xfc\x13\x00\x00\xff\xff\xb3\xce\xc9\xb2\xb4\x01\x00\x00"

func scriptsTokenforwarderIs_recipient_validCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsTokenforwarderIs_recipient_validCdc,
		"scripts/tokenForwarder/is_recipient_valid.cdc",
	)
}

func scriptsTokenforwarderIs_recipient_validCdc() (*asset, error) {
	bytes, err := scriptsTokenforwarderIs_recipient_validCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/tokenForwarder/is_recipient_valid.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb6, 0xad, 0x9e, 0x22, 0xd4, 0xc2, 0x63, 0x91, 0x2a, 0xff, 0xe3, 0x37, 0x70, 0xe5, 0xa, 0x40, 0x70, 0xa3, 0xb5, 0x5f, 0x14, 0xc3, 0x8, 0x79, 0xd4, 0xb9, 0xf6, 0x7, 0xd7, 0x51, 0x7a, 0xc8}}
	return a, nil
}

var _setup_accountCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x53\xc1\x6a\xdc\x30\x10\xbd\xfb\x2b\x5e\x73\x28\xbb\x90\xae\xef\x21\x0d\xa4\x25\xbd\x15\x42\x1a\x72\x9f\xb5\xc7\xb6\x88\x56\x32\xa3\x71\x36\x26\xec\xbf\x17\x69\xbd\xc6\x6a\x96\x16\x4a\xa9\x6f\x7a\x7a\x7a\x33\xef\x79\xa6\x2c\xf1\xd8\x99\x00\x15\x72\x81\x2a\x35\xde\xc1\x04\x10\x94\x77\xbd\x25\x65\x34\x5e\xe2\x71\x71\xaf\x1e\x64\xad\xdf\x17\x65\x09\x72\xa3\x77\x9c\xa0\xba\x06\xe1\x89\x06\xab\x10\x0e\x7e\x90\x2a\xe1\xda\xb1\x11\x50\x55\xf9\xc1\x29\x42\x04\x48\xe3\x53\xed\x78\x44\x45\x0e\x43\xe0\x78\x00\xbf\xd2\xae\xb7\xfc\xe8\x9f\xd9\x15\x85\xd9\xf5\x5e\x14\xdf\x06\xd7\x9a\xed\x84\xa2\x11\xbf\xc3\x45\x86\x5d\x9c\x98\x77\x8b\xe7\x13\x71\x09\xcd\xbc\xef\xac\x54\x93\xd2\x93\xe1\x7d\x98\x88\x19\x76\x51\x14\x4b\xbb\xab\x35\xde\x8a\x02\x00\x7a\xe1\x9e\x84\x57\xc1\xb4\x8e\xe5\x0a\xb7\x83\x76\xb7\x47\x63\x33\x27\x7e\x65\x89\x07\xd6\x41\x1c\x98\xc4\x8e\x30\x4d\xf2\x77\xca\x80\xac\x30\xd5\x23\x82\x7a\xe1\x98\x75\xd6\x79\x4a\x70\x96\x32\x0d\x8e\xd5\x36\x5b\x2f\xe2\xf7\xd7\x1f\x97\xe4\x4d\x22\xdf\xac\xa2\x89\x2b\xbc\xbf\xf9\xa1\x5e\xa8\xe5\x7b\xd2\x6e\x8d\x0f\x9f\xe1\x8c\xc5\xdb\xac\x1d\x3f\x49\x7d\xce\xd0\x21\x33\xf1\x55\x38\x4e\x00\xc1\xf1\xfe\x4c\x93\x20\x57\xa3\x1f\x14\x46\x61\x5c\xb2\x43\x2d\xcf\x02\x53\xdf\x81\x5e\x78\x95\xd5\xbc\xfe\x94\x75\x5a\xa5\x2a\x77\xbb\x5e\xc7\x24\xbb\x5a\x5f\x66\x74\xf5\x7f\xb0\x36\xb3\xd7\xe7\xbb\xef\x87\xad\x35\x15\x2a\xea\x69\x6b\xac\xd1\x71\x1a\xcb\xc9\x45\x9c\x47\x78\x67\x47\xf0\x6b\xef\x03\x87\xa5\x48\xa4\xd5\xdc\xfb\x60\x14\xcd\xe0\xa6\x05\xe8\xc4\x0f\x6d\x97\x2e\x1f\xb8\x62\xf3\xc2\x02\xe3\x94\xa5\xa1\xea\x5d\x00\xd6\xb8\xe7\x73\xbf\xed\x2d\x1b\xe3\xcd\x49\xe8\x70\x93\xa7\x95\x3d\x3c\x91\xee\x93\xa5\x68\xfe\x97\xac\x48\x5a\xd6\xff\x90\xd7\x14\x55\x82\xbf\x90\x25\x57\x71\x1a\x87\x07\x0e\xde\x66\x71\x84\xbf\xcc\x63\x52\xbd\xcc\xf7\x75\x73\x2a\xf0\xdb\x98\x92\xde\xbf\xca\xe8\xb8\x17\x87\xe2\x67\x00\x00\x00\xff\xff\xd1\xd3\xfa\x7f\x2b\x05\x00\x00"

func setup_accountCdcBytes() ([]byte, error) {
	return bindataRead(
		_setup_accountCdc,
		"setup_account.cdc",
	)
}

func setup_accountCdc() (*asset, error) {
	bytes, err := setup_accountCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "setup_account.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x9e, 0x15, 0xa6, 0xb4, 0xe3, 0x94, 0x35, 0x36, 0xea, 0x97, 0xd0, 0x1a, 0xdb, 0xf6, 0x88, 0x5a, 0x71, 0x39, 0xa1, 0x41, 0xca, 0x9a, 0x62, 0xd4, 0x1b, 0xf1, 0x6c, 0x42, 0x62, 0xb9, 0xa0, 0x8b}}
	return a, nil
}

var _switchboardAdd_vault_capabilityCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x4d\x6f\x9b\x40\x10\xbd\xf3\x2b\x9e\x38\xa4\x44\xaa\xf0\xdd\x4a\x1a\x45\x51\xdb\x5b\x15\x25\x51\xef\xc3\x32\xc0\x2a\xb0\x8b\x76\x07\x7f\x28\xf2\x7f\xaf\x16\x6c\xba\xb4\x8e\x13\x0e\x16\x86\x99\xb7\xef\xbd\x79\x83\xee\x7a\xeb\x04\x3f\x06\x53\xeb\xa2\xe5\x17\xfb\xca\x06\x95\xb3\x1d\xd2\xc5\xb3\x34\x39\x57\xf9\xbc\xd5\xa2\x9a\xc2\x92\x2b\xcf\x35\x45\xaf\xe7\xfe\xef\x3b\xea\xfa\xe5\x41\xf1\xa3\x34\x49\x56\x2b\xbc\x34\xda\x43\x1c\x19\x4f\x4a\xb4\x35\xd0\x1e\x04\xe1\xae\x6f\x49\x18\x95\x75\xe1\x6f\xf4\x5e\x1a\x92\xd0\xa8\xec\xd0\x96\x28\x18\x83\xe7\x12\xc5\x1e\x64\xf6\xd6\x30\xc4\x82\xca\x12\x04\xc3\x5b\x54\x47\x8e\x90\x91\xc4\x86\x86\x76\x6a\xa6\x9e\x0a\xdd\x6a\xd9\x87\x7a\x69\x58\x3b\xf8\x48\xa1\x63\x6f\x07\xa7\x38\x89\x4f\x7e\x4b\x12\x00\x68\x59\xc0\x91\x8e\xdf\x01\xf4\x61\x06\x5c\xe3\xef\xfd\xcd\xd5\xdb\xc2\xa5\xfc\x89\x15\xeb\x0d\xbb\xc3\xb7\x19\x2a\x3a\xf6\x89\xab\x35\x70\xf5\x9e\xb1\x79\x74\x3f\x51\xe9\x1d\xf7\xe4\x38\xf3\xba\x36\xec\xd6\xb8\x1f\xa4\xb9\x57\xca\x0e\x46\xae\x4f\x74\xc3\xb5\x5a\xe1\x27\x4b\xd0\x79\x62\x1e\x1b\x12\xbb\x31\x8e\x29\xd4\x4d\x90\x5f\x3c\x68\xc2\x9b\xb1\x3c\xb7\x55\x7e\x41\x3f\x6e\x31\xd7\x8e\xf5\x23\x50\x5e\xb3\x7c\xde\x97\x4b\x57\x16\x67\x68\x6e\x7c\x1c\x8a\x56\xab\x47\x92\xe6\x7a\x46\x88\xe5\x3f\x34\xac\x5e\xa1\xab\x51\x9b\x3b\x36\xc5\xc2\x79\xa7\xbd\xf8\xb9\x85\xbc\x67\x27\xd9\x47\x62\x73\x15\x70\xb3\xeb\xaf\x4b\xcd\x1d\x7b\x4f\x35\xaf\x91\x3e\x8f\xea\x51\x5a\xf6\x30\x56\xd0\xd0\x86\x41\xa7\xd5\xc0\xb4\x1b\x67\xf8\xa4\xe7\x65\x84\x29\x12\x1c\x57\xec\xd8\x28\x3e\x86\xf7\xe8\xb1\x8f\xb3\xb4\x9c\xd7\x32\x64\xb8\x3d\x4d\xa5\xb0\xce\xd9\xed\xcd\xa7\x22\xb7\x1c\x4d\x16\x92\xb2\x7e\xf7\x1b\x91\x3f\x8b\x75\x54\xf3\x38\x91\xa5\x39\x77\x77\xe8\xc9\x68\x95\xa5\x0f\xe3\x0a\x07\x5b\x26\x1e\x4b\x61\x11\xe7\xa3\x1b\xe3\xcf\x61\x8a\x35\xef\x58\x0d\xc2\xff\xa4\xfc\xbe\x2c\x47\x43\xfe\xdb\xef\xc5\x76\x0f\x5e\x9b\x3a\x7c\x25\x7e\xf1\x76\x1c\x28\x3a\x96\xc6\x5e\xf4\x2c\x8f\xca\x33\x15\x6d\xfb\x47\x11\x59\x52\x3f\x24\x7f\x02\x00\x00\xff\xff\xde\x10\x3c\x68\x87\x05\x00\x00"

func switchboardAdd_vault_capabilityCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardAdd_vault_capabilityCdc,
		"switchboard/add_vault_capability.cdc",
	)
}

func switchboardAdd_vault_capabilityCdc() (*asset, error) {
	bytes, err := switchboardAdd_vault_capabilityCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/add_vault_capability.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xaf, 0x1b, 0x91, 0x9c, 0x2d, 0x7, 0x8c, 0xba, 0x72, 0x99, 0x5d, 0xd0, 0xd8, 0x0, 0xf0, 0xd, 0x43, 0x69, 0x1e, 0xcd, 0x9, 0x7d, 0x70, 0xf7, 0x1e, 0xb2, 0x37, 0x90, 0xe8, 0x12, 0x64, 0x58}}
	return a, nil
}

var _switchboardAdd_vault_wrapper_capabilityCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\xcd\x6e\xa4\x3c\x10\xbc\xf3\x14\xad\x39\xe4\x63\xa4\x88\xb9\x8f\xf2\xf3\x45\xd1\x66\x6f\xab\x28\x89\x76\xcf\x8d\x69\xc0\x0a\xd8\xa8\xdd\x84\x8c\xa2\xbc\xfb\xca\x86\xb0\xf6\xee\x64\x14\x0e\x23\x06\x77\x97\xab\xaa\xcb\xd6\xfd\x60\x59\xe0\x6e\x34\x8d\x2e\x3b\x7a\xb2\xcf\x64\xa0\x66\xdb\xc3\x26\xf9\xb6\xc9\x8e\x55\x3e\x4e\x5a\x54\x5b\x5a\xe4\xea\x58\x53\xb4\xbc\xf6\x7f\x7b\xc5\x7e\x48\x37\x8a\x3f\x6d\xb2\x6c\xb7\x83\xa7\x56\x3b\x10\x46\xe3\x50\x89\xb6\x06\xb4\x03\x04\xa1\x7e\xe8\x50\x08\x6a\xcb\xfe\x6f\xb4\x2e\x2d\x8a\x6f\x54\x76\xec\x2a\x28\x09\x46\x47\x15\x94\x07\x40\x73\xb0\x86\x40\x2c\x60\x55\x01\x82\xa1\x09\x5e\x70\xec\x04\x26\xc6\x61\x20\x0e\x5d\x38\x60\xa9\x3b\x2d\x07\x5f\x28\x2d\x69\x06\x17\x49\x63\x72\x76\x64\x45\x59\xbc\xe5\x5b\x96\x01\x00\x74\x24\x20\x9e\xf9\x9d\xe5\x09\xb9\x22\xbe\x5d\xd1\xf6\xf0\xe7\xfd\xe2\xec\x2d\xf1\xa6\x78\x20\x45\xfa\x85\xf8\xfd\x6a\xc5\x89\xf6\x7c\xa0\x7a\x0f\x70\xf6\x99\x9d\x45\xf4\x3e\xf3\x18\x98\x06\x64\xca\x9d\x6e\x0c\xf1\x1e\x6e\x46\x69\x6f\x94\xb2\xa3\x91\xed\x07\x57\xff\xec\x76\xf0\xdd\x53\x6e\x69\xa6\xed\xcd\x9c\x79\xc7\x36\x84\xc1\xf8\x9a\x19\xee\x3f\x07\x38\x63\xad\x38\x8e\xba\xba\xf8\x4c\x38\x5c\xc2\x5a\x18\x8a\x03\x4a\xd1\x90\x7c\xdd\x90\x53\x4f\x1e\x47\x66\x6d\xbc\x1f\xcb\x4e\xab\x7b\x94\x76\xbb\x22\xc4\xba\x6f\x5b\x52\xcf\xa0\xeb\x20\x8c\x97\xa6\x58\x35\xbd\x6a\x27\x6e\x6d\x41\xe7\x88\x25\x3f\xa9\xb4\x50\x1e\x34\xdf\x9e\xa7\x82\x7b\x72\x0e\x1b\xda\xc3\xe6\x31\x48\x87\xca\x92\x03\x63\x05\x5a\x7c\x21\x40\x98\x2c\x3f\x6b\xd3\x40\xbd\x58\xb0\x0c\xe3\x08\xab\xcd\x71\x31\x7e\x88\x08\x4c\x35\x31\x19\x45\x4b\x70\x17\xa7\x5d\x1c\xa5\x74\x64\x69\xc6\xe0\xf2\x63\x36\xa5\x65\xb6\xd3\xc5\x97\x12\x97\x0e\x28\xf7\x61\xd9\x7f\x7a\x31\x14\x8f\x62\x19\x1b\x0a\x73\x49\x5d\xba\xbe\x86\x01\x8d\x56\xf9\xe6\x36\x9c\x5b\xef\xcf\xcc\x23\x15\x16\x71\x5e\xdc\x08\x3f\xef\x73\xaa\xe9\x95\xd4\x28\xf4\x57\xc8\x6f\xaa\x2a\x18\xf2\xcf\xd9\x4e\x4e\xf6\xe8\xfc\x10\xb0\xaa\x7e\xd0\xf4\x33\x5c\x0b\x3d\x49\x6b\x4f\x7a\x56\x44\xe5\xbf\xe6\x4b\x24\x57\xd1\x99\x3f\x99\x97\x73\x90\xc3\x40\x7b\x78\x3a\x0c\x74\xf1\x7f\x12\xe3\x00\x78\x95\x6f\x53\x85\xef\xd9\xef\x00\x00\x00\xff\xff\x36\x7e\xb8\x46\xa3\x05\x00\x00"

func switchboardAdd_vault_wrapper_capabilityCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardAdd_vault_wrapper_capabilityCdc,
		"switchboard/add_vault_wrapper_capability.cdc",
	)
}

func switchboardAdd_vault_wrapper_capabilityCdc() (*asset, error) {
	bytes, err := switchboardAdd_vault_wrapper_capabilityCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/add_vault_wrapper_capability.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xac, 0xe9, 0x7a, 0x55, 0xa, 0x8a, 0xf4, 0x72, 0xbd, 0xd7, 0x2f, 0x41, 0xe6, 0x48, 0xd, 0x3e, 0x1e, 0x4, 0xd7, 0x8, 0x57, 0x68, 0x93, 0x92, 0x3c, 0xe0, 0xf6, 0xec, 0xfd, 0x79, 0x1, 0xaa}}
	return a, nil
}

var _switchboardBatch_add_vault_capabilitiesCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\x41\x6b\xdb\x4c\x10\xbd\xeb\x57\x3c\x7c\xf8\x70\x20\xc8\x77\xf3\xa5\xc1\x2d\x6d\x6f\x25\x24\xa1\x97\x10\xc8\x68\x77\x64\x2d\x95\x77\x97\xdd\x91\x1d\x53\xf2\xdf\xcb\x4a\x8a\xbc\x0a\x76\xa9\x0e\x66\xad\xd9\x37\x7a\x6f\xde\x1b\xb3\xf3\x2e\x08\xbe\x75\x76\x6b\xaa\x96\x1f\xdd\x2f\xb6\x0f\x07\x23\xaa\xa9\x1c\x05\x8d\x3a\xb8\x1d\x16\x97\xca\x8b\x62\xc4\x7f\x7d\xa5\x9d\x1f\xeb\x23\x26\x7f\xb5\x28\x8a\xd5\x0a\x8f\x8d\x89\x90\x40\x36\x92\x12\xe3\x2c\x4c\x04\x41\x78\xe7\x5b\x12\x46\xed\x42\xfa\x9b\xd5\xa5\x21\x81\x72\x5d\xab\x51\x31\xba\xc8\x1a\xd5\x11\x64\x8f\xce\x72\x6a\x28\x0e\xa4\x35\x22\xef\x39\x50\x0b\xcb\x07\xd4\x23\x53\x48\x4f\x65\x4f\x5d\x2b\xf1\x1a\x15\xb7\xce\x6e\x8d\xdd\xf6\x18\x28\x0e\x42\xc6\xe2\x65\xa3\x75\xe0\x18\x5f\xd2\xeb\xbe\x63\xc3\x26\x20\x66\x03\x08\x1c\x5d\x17\x14\x97\x45\xce\x6c\x49\x03\x70\x8d\xb1\xc3\x15\x7e\x17\x05\x00\xb4\x2c\xe0\x4c\xfa\xcf\xc4\xe0\x8e\xa4\x59\xe3\xae\xab\x5a\xa3\xd2\x79\xba\xb9\x7f\xaf\xc6\x35\x9e\x4e\xf5\xe7\xe9\x42\x46\xe5\x9e\xeb\x35\xf0\xdf\x25\x2f\xca\xec\x3c\x50\xf1\x81\x3d\x05\x5e\x46\xb3\xb5\x1c\xd6\xd8\x74\xd2\x6c\x94\x72\x9d\x95\x89\x6e\x7a\x56\x2b\x7c\x67\x49\xda\xdf\x99\xe7\xd3\x83\x27\x69\x06\x4f\xd3\x0d\xe5\xac\x04\x52\x32\xa1\x23\xb7\x75\x79\x56\x31\x6e\x66\xb9\x28\xef\x59\xb1\xd9\x73\xf8\x30\x07\x20\x67\xb2\xb1\x1a\x51\x5c\x60\x18\x81\xb1\xfd\x37\x29\x04\x3a\xc2\xd5\xf0\x3d\xb2\x67\x14\x87\x74\x1c\x4c\xdb\xa6\x70\x78\x8a\x29\x1e\xe2\x12\x20\xef\x97\x7b\xb9\x63\x69\x9c\x9e\x33\x3f\x39\x80\x1b\x3c\x3d\x5f\x2a\x96\xe4\x3d\x5b\xbd\xbc\xac\xf6\xea\x8c\x98\x34\x56\x42\xe0\x9a\x03\x5b\xc5\x23\x3d\x0c\x86\xc4\x9c\xdb\xfc\xbb\x73\xd7\x71\x33\x22\xca\xca\x85\xe0\x0e\xff\xff\x53\x06\x3e\x4d\x2d\xcf\x3d\xcb\x64\xe8\xfa\xe2\xde\x97\x0f\xe2\x02\x6d\xb9\x17\x86\xbf\x76\xba\xbd\x85\x27\x6b\xd4\x72\xf1\xa5\xdf\x54\xeb\x04\x03\xcf\xb9\xf0\x4c\xd3\x62\x98\x55\xff\xf3\x36\xe4\x90\x5f\x59\x75\xc2\xa7\x58\xa6\x28\x68\x3d\x44\x8e\x3c\x55\xa6\x35\x72\x9c\x06\x98\x99\xda\xc5\xb4\xd6\xa4\xf5\x0f\x3e\xf4\x66\xcc\x6d\x3e\x33\xcf\x32\xbb\x1c\x3f\x1f\xfb\xa8\x2e\xfd\xb0\x84\x1f\x6c\xbf\xc6\xb4\xe8\xe3\xe1\xaa\x78\xa7\xfd\xf6\x27\x00\x00\xff\xff\xc4\xdc\x11\x4a\x3c\x05\x00\x00"

func switchboardBatch_add_vault_capabilitiesCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardBatch_add_vault_capabilitiesCdc,
		"switchboard/batch_add_vault_capabilities.cdc",
	)
}

func switchboardBatch_add_vault_capabilitiesCdc() (*asset, error) {
	bytes, err := switchboardBatch_add_vault_capabilitiesCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/batch_add_vault_capabilities.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x29, 0x7f, 0x18, 0x77, 0xaf, 0x95, 0x78, 0xd4, 0x66, 0xec, 0x46, 0x64, 0x6b, 0x3d, 0x15, 0x4f, 0xec, 0x65, 0xfd, 0x3b, 0xef, 0xcf, 0x5f, 0x71, 0x3e, 0x8, 0xd6, 0x61, 0x3a, 0xa2, 0x71, 0x41}}
	return a, nil
}

var _switchboardBatch_add_vault_wrapper_capabilitiesCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\xcd\x6e\xdb\x3c\x10\xbc\xeb\x29\x06\x3e\x7c\x91\x81\x40\xbe\x1b\xf9\xf9\xd2\xa2\xed\xad\x08\x92\xa0\x3d\x04\x01\xbc\x96\x56\x16\x51\x99\x24\xc8\x55\x1c\xa1\xc8\xbb\x17\xa4\x14\x9b\x4e\x23\x24\xe5\xc1\x16\xb9\x3f\xdc\x99\x59\xae\xda\x5a\xe3\x04\x5f\x3b\xbd\x51\xeb\x96\xef\xcc\x2f\xd6\xb7\x3b\x25\x65\xb3\x36\xe4\x2a\xd4\xce\x6c\x31\x9b\x32\xcf\xb2\x31\xfe\xcb\x13\x6d\xed\x68\x1f\x63\xd2\xa3\x59\x96\x2d\x16\xb8\x6b\x94\x87\x38\xd2\x9e\x4a\x51\x46\x43\x79\x10\x84\xb7\xb6\x25\x61\xd4\xc6\x85\x6d\x62\x97\x86\x04\xa5\xe9\xda\x0a\x6b\x46\xe7\xb9\xc2\xba\x07\xe9\xde\x68\x0e\x09\xc5\x80\xaa\x0a\x9e\x1f\xd9\x51\x8b\x92\x2c\xad\x55\xab\x44\xb1\x1f\x62\xad\x51\x5a\x82\x5b\x3d\x02\x80\xc4\x0a\x1f\xa9\x6b\xc5\xc3\xd4\x20\x54\xaa\xae\xd9\xb1\x16\x00\x21\xe9\xea\xae\xb7\xbc\x02\xe9\x70\x69\x6b\xf4\x26\x5e\x83\x92\x9d\x90\xd2\x58\x5d\x55\x95\x63\xef\x57\xa7\xe1\x5c\x1a\x56\x0e\x3e\x21\xcc\xb1\x37\x9d\x2b\xb9\xc8\x52\x24\x39\x0d\x51\x4b\x8c\xe1\x73\xfc\xce\x32\x00\x68\x59\x86\x72\xae\x49\x1a\xbf\xc4\xfd\x75\xb7\x6e\x55\x19\x76\x0f\xc7\x0e\xa1\xae\xe0\x10\xfe\x0f\xa6\xe4\xee\x1b\xae\x97\xc0\x7f\x53\x62\x15\xc9\xf7\x70\xb7\x75\x6c\xc9\x71\xee\xd5\x46\xb3\x5b\xe2\xaa\x93\xe6\xaa\x2c\x4d\xa7\x65\x5f\x5f\x58\x8b\x05\x6e\xc5\x38\x0e\x70\x5f\xa4\xc6\xa0\xb5\xe3\x92\xd5\x23\xbb\x13\x0f\x1b\x0b\x87\x25\x69\xa0\x74\xf4\x25\xe7\xa8\x0f\x34\x8f\xb6\x34\x63\xf0\x1b\x65\xda\xa9\xb6\x0d\x0a\x5b\xf2\x41\xe3\x81\xd7\x23\x56\xb7\x2c\x8d\xa9\xf6\xe1\x9e\xdb\xba\x38\xb0\x86\x73\xdc\x3f\x4c\x19\x0b\xb2\x96\x75\x95\xa7\xfd\x58\xdc\x8c\x65\x1f\xc8\x9e\x7f\x04\xee\x89\x87\xf4\x96\xff\x82\x17\x0e\xdf\xc6\x92\x26\xfd\x17\x5c\x51\xec\x29\x5c\xd1\xf8\x82\x2b\x6c\xce\xfe\x3f\x42\xf7\x23\x38\x5d\xe4\xf3\xf9\x18\x9b\x16\xf1\x8d\x05\x04\xc7\xb1\xe7\x4b\xde\x17\x15\x5b\xc0\xa7\xc5\x1d\x5f\x7c\xdc\x67\x38\x1f\x23\x8a\xb5\x71\xce\xec\xce\x3e\xd4\x75\x17\xfb\x94\xef\xae\x3c\x0c\x91\xe5\xe4\x5c\x2a\x82\x40\xb4\xe1\xa8\x1c\xde\x4d\x7b\x79\x09\x4b\x5a\x95\xf9\xec\x73\x9c\x26\xda\x08\x86\xc2\x8f\x99\x48\x40\xce\x06\xf2\xe2\xcf\xf3\xd0\x1b\xfc\xc4\x65\x27\x7c\x78\x19\x8b\x45\x78\xce\x91\xbf\xfd\xec\xe9\x73\xc5\x7e\xfe\x96\xd6\x9d\x57\x7a\x13\x06\xd6\x77\xde\x45\x85\x7e\xba\x20\xa1\xf3\x9f\xfa\x00\x23\x9b\x24\xbb\x98\x8c\xc9\xed\x30\x34\x5e\xb5\xfc\xe9\xfb\x8c\xa4\x4b\x86\xc1\xf2\xaa\xbf\x4e\xb1\x9f\x59\xe3\xc7\xf8\x44\x9e\xb3\xec\xf9\x4f\x00\x00\x00\xff\xff\xf1\xb3\x2c\x41\x37\x06\x00\x00"

func switchboardBatch_add_vault_wrapper_capabilitiesCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardBatch_add_vault_wrapper_capabilitiesCdc,
		"switchboard/batch_add_vault_wrapper_capabilities.cdc",
	)
}

func switchboardBatch_add_vault_wrapper_capabilitiesCdc() (*asset, error) {
	bytes, err := switchboardBatch_add_vault_wrapper_capabilitiesCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/batch_add_vault_wrapper_capabilities.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf6, 0x59, 0x81, 0xe6, 0x82, 0x64, 0x28, 0x6c, 0x45, 0x37, 0xa2, 0xf2, 0x24, 0xed, 0x3f, 0x27, 0x80, 0x7a, 0x68, 0x23, 0x1c, 0x69, 0x57, 0xc4, 0xd2, 0x59, 0x17, 0xa6, 0x21, 0x36, 0x70, 0x29}}
	return a, nil
}

var _switchboardRemove_vault_capabilityCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\x4d\x6f\xa3\x30\x10\xbd\xf3\x2b\x9e\x38\x74\xc9\x85\xdc\x51\xb7\x55\x15\xed\xee\xb5\x4a\xab\xbd\x1b\x67\x00\x6b\xc1\x46\xf6\x38\x6d\x14\xe5\xbf\xaf\xc0\x04\x8c\x94\xec\x36\x97\x24\x63\xcf\x9b\xf7\x31\x56\x5d\x6f\x2c\xe3\xa7\xd7\xb5\x2a\x5b\x7a\x37\x7f\x48\xa3\xb2\xa6\x43\xba\xaa\xa5\xc9\xad\x9b\x6f\x1f\x8a\x65\x53\x1a\x61\x0f\xb7\x9a\xa2\xe3\xb9\xff\xc7\xa7\xe8\xfa\xf5\xa0\xb8\x94\x26\xc9\x76\x8b\xf7\x46\x39\xb0\x15\xda\x09\xc9\xca\x68\x28\x07\x01\xa6\xae\x6f\x05\x13\x2a\x63\x87\xbf\xd1\x39\x37\x82\x87\x46\x69\x7c\x7b\x40\x49\xf0\x8e\x0e\x28\x4f\x10\xfa\x64\x34\x81\x0d\x2c\x75\xe6\x48\xa8\x26\x82\xe0\x91\xc1\x51\xf8\x36\x74\x8a\x5e\x94\xaa\x55\x7c\x0a\xac\xb8\x21\x65\xe1\x22\x81\x96\x9c\xf1\x56\x52\x12\x0f\x3e\x27\x09\x00\xb4\xc4\xa0\x48\xc6\xef\x01\x76\x17\x20\xf9\x54\x60\x37\xa3\x3f\x3e\x9c\x57\x1e\xe5\x7b\x92\xa4\x8e\x64\x2f\x4f\x33\x52\x34\x75\x4f\x55\x01\x3c\xdc\xb3\x35\x8f\x7e\x07\x26\xbd\xa5\x5e\x58\xca\x9c\xaa\x35\xd9\x02\x2f\x9e\x9b\x17\x29\x8d\xd7\xbc\xb9\xb2\x05\xb6\x5b\xfc\x22\x1e\x44\x5e\x69\xc7\x7e\xdc\x32\x03\x01\xf0\x9b\x83\x08\x68\x13\x92\xa3\xb6\xca\xef\x4b\xc7\xf7\xa9\x31\xaf\x89\x17\x17\xa6\xe6\xf5\xe7\x1f\xd6\x64\xf1\x8e\xcc\xf5\x57\x5f\xb6\x4a\xbe\x0a\x6e\x36\x13\xe0\x5a\x9e\x80\xa5\x8a\x2c\x69\x39\x6e\xc0\xa2\xc2\xad\x82\x45\x2c\x65\xed\xfd\x42\xbf\x34\xd6\x9a\x8f\xc7\x2f\x25\xf1\x34\xcb\xcb\x06\xfb\x8a\xbb\x8f\x26\x7f\x63\x63\x45\x4d\xa3\x04\x44\xa6\x3c\x3f\xa3\x17\x5a\xc9\x2c\xdd\x8d\x1b\xad\x0d\x23\x30\x58\x4b\x8a\xd8\xa6\x9b\x10\xee\x25\x7c\xd1\x27\x49\xcf\xb4\x8a\x7c\x1f\x9e\xc0\xe0\xc3\xcd\x84\x23\x4f\xbc\x53\xba\x1e\xab\x4b\x7b\x78\x41\x63\xbe\xe8\x88\x1b\x73\xb8\x6f\x5c\x1e\x5d\xce\x96\x61\xc5\xff\xf6\x25\x04\x79\x15\x72\x49\xfe\x06\x00\x00\xff\xff\xa4\x1a\xb1\xcd\xa0\x04\x00\x00"

func switchboardRemove_vault_capabilityCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardRemove_vault_capabilityCdc,
		"switchboard/remove_vault_capability.cdc",
	)
}

func switchboardRemove_vault_capabilityCdc() (*asset, error) {
	bytes, err := switchboardRemove_vault_capabilityCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/remove_vault_capability.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x8a, 0x2e, 0x35, 0xd2, 0xb0, 0x2e, 0xb0, 0xf4, 0x3f, 0xea, 0x84, 0x37, 0x50, 0x6, 0x38, 0xe0, 0x16, 0x1a, 0x39, 0xb4, 0x82, 0x18, 0x1, 0x75, 0x78, 0xb5, 0xca, 0xa2, 0x1e, 0x77, 0xa7, 0xe5}}
	return a, nil
}

var _switchboardSafe_deposit_to_lnfCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x57\x4d\x6f\xe3\x36\x10\x3d\xaf\x7f\xc5\xac\x0f\x5e\x1b\x70\xec\x4b\xd1\x83\x91\x8f\xba\x49\x5d\x2c\xb0\x87\x20\xc9\xb6\xd7\xd0\xd2\xc8\x62\x57\x26\x05\x72\x14\xad\x11\xf8\xbf\x17\x24\x45\x49\x94\x64\x6f\xb6\x48\x75\xf0\xae\xa8\x99\xe1\x9b\xc7\x79\x33\x0c\xdf\xe7\x52\x11\x6c\x0a\xb1\xe3\xdb\x0c\x9f\xe4\x37\x14\x90\x28\xb9\x87\x71\xb0\x36\x1e\x0d\x59\x3e\x96\x9c\xa2\x74\x2b\x99\x8a\x87\x9c\x5a\x9f\x1b\x7f\xce\x28\xd8\xc5\xbf\xd7\x16\x5f\xa4\xa6\xb5\x88\x37\xb2\x10\x3e\x6a\x7b\xa9\x89\x94\xc9\x32\x88\xe4\xdf\xc7\xa3\xd1\x72\x09\x4f\x29\xd7\x40\x8a\x09\xcd\x22\xe2\x52\x00\xe1\x3e\xcf\x18\xa1\x86\x54\x96\x40\x12\x34\x8a\x18\xbe\x3e\xde\xdd\x42\x52\x88\x58\xc3\x33\xc9\x67\x60\xe2\x00\xcf\xeb\x38\x56\xa8\xf5\x33\x94\x9c\x52\x59\x10\x7c\x13\xb2\xe4\x62\x07\x26\x30\x4f\x80\x13\xa4\x32\x8b\x35\x30\x78\x61\x45\x46\x20\x13\xa0\x94\x11\xe8\x1c\x23\x9e\xf0\x08\xc8\x02\xa3\x43\x8e\x0b\x78\x4a\x31\x00\x52\xf2\x2c\x03\x46\x06\x0f\x19\x1c\x26\x68\x8c\xb9\xd4\x9c\x80\x52\xac\xd0\x70\x41\xd2\xbe\x2a\x8c\x90\xbf\xa0\xfa\xa4\x41\x37\x84\xce\x0d\x0e\x21\x21\x62\x39\xdb\xf2\x8c\xd3\x01\x12\xa9\x40\xc9\x82\x3c\xd0\x10\xd1\xe6\x09\xb8\x86\xc4\xb2\x6a\xd8\x48\x31\x0c\x47\x29\x0a\x93\x98\x45\xd7\x87\x63\x33\xf7\x90\x82\x23\x8a\xa4\x20\xc5\x22\x5a\x8c\x96\xcb\x51\x2b\xcf\x29\xc9\x15\x54\x4c\xce\x81\xed\x65\x21\x68\x05\x5f\x37\xfc\xfb\xaf\xbf\xcc\xe0\x75\x04\x00\x60\x7f\xec\x61\x99\x3c\x13\x54\x28\x22\x84\x6a\x17\x47\xad\x3d\x5c\xf3\x9a\xb3\x83\x25\x81\x45\x91\x09\x65\x5d\x33\x24\x67\xf6\x80\xc9\x0a\x26\x75\x31\x2d\xfe\x32\x8b\xed\xe8\x76\x01\x14\x6a\x59\x28\xb3\x85\xe1\xc6\x9d\xa1\x89\x6d\x8f\x4b\xbb\x55\xa6\x10\xb6\x68\x48\xb4\xc9\x24\xa8\x14\xc6\xf5\x6e\x1a\x05\xd9\x58\x2b\xf8\x2d\x28\xf6\x70\xcb\x75\x3f\x1d\xcd\x77\xc2\x26\x90\x64\xb2\x74\xa8\xe7\x6e\x47\x4b\xf9\x16\xa1\xd0\x18\xdb\x53\xcc\xd9\xc1\xee\x6f\xa8\x9e\x6c\x20\x41\xd4\x50\x23\x30\xee\xf7\x4a\xbe\xf0\x18\x95\x4b\xfb\x35\x04\xe2\x3f\x1e\x1b\x30\xad\x2a\x19\x44\xe3\xca\xd5\x57\x9a\xab\x24\x8c\xe4\x0b\xaa\x2e\x8e\x00\xc6\x43\xe5\xb0\x82\xdb\x7a\x83\xcb\x49\x2d\x44\x47\x49\x07\x9d\xf7\x39\x5e\xdf\x8c\x6c\xb0\x5c\x61\xce\x14\x4e\x1d\xa2\x15\xac\x0b\x4a\xd7\xee\x8c\x4d\x99\x58\x9b\x2a\x91\x3f\x91\x80\x9d\x61\x56\x93\x54\x18\x3b\x6e\x6b\x3f\x8d\x59\xb2\xf0\x45\x02\x57\x95\xf5\x62\x2b\x95\x92\xe5\x65\xb7\x66\xae\xa7\xa6\xe0\x56\xd0\x59\x7e\x24\xa9\xd8\x0e\xef\x19\xa5\xb3\xd1\x87\x0f\x1f\x6e\x6e\x20\x67\x82\x47\xd3\xf1\xad\x2c\xb2\x18\x84\x24\x70\x11\xfb\xf0\x64\xe9\xd0\xd9\x40\x1f\xc7\xb3\x76\x46\x7f\x73\x4a\x63\xc5\x4a\x5f\x81\x75\xb5\xbf\x21\xa7\xba\x14\xe1\xf2\x22\x48\x72\x51\x56\x51\xa7\x5e\x75\xee\xdf\x59\x40\xe6\xef\x0e\xee\x39\x3e\x5b\xb5\x91\x57\x45\x15\x42\xe8\xd4\x62\x9f\xdd\x53\xa5\xe9\x69\x5e\x6a\x47\xec\x32\xf1\x45\x63\x33\x6a\x38\x32\xcf\x19\xb2\x07\x44\x55\x43\x1d\xcf\x7a\xc5\x63\xb2\x6b\x69\xc1\xb6\xed\xf3\x5a\xe8\xe7\xeb\x0b\xb8\x49\x76\x87\xf4\x5f\xea\x7f\xba\xcc\x8b\x6d\xc6\xa3\x26\x77\xff\x6d\xd6\x34\xc7\xa3\xcb\x01\xbf\x63\x54\x10\x0e\xe8\xa1\x1a\x11\x3c\xe7\x28\xe8\x93\x06\x17\xd3\x77\x49\x90\xdb\x7f\x30\x6a\x0a\xc7\x28\xb7\xb6\x86\x2b\xd8\x21\x55\x5a\x9b\x92\x6c\xf1\xc5\x13\xd7\xed\x9a\x09\xe1\x8e\xb7\xf6\x0d\x93\x9e\x9e\x9a\xfb\x8b\x7b\x0b\xc7\xe9\xa6\x7d\xa6\x8d\xfe\x4e\x79\xb6\xfe\xff\xfa\x16\x23\xb7\xd3\xf1\x7a\xea\x87\x4b\x8b\xa8\x75\x33\x6d\xdb\xa3\xad\x35\xfc\x7f\x30\x6e\x21\x88\x58\xb1\x23\x24\xdd\xb9\x68\x18\xd7\x42\x0c\x18\x5b\x68\x96\x60\x65\x53\x55\xfc\xe5\x45\x47\xbd\x27\xd5\xda\xcd\xa3\xca\xe5\x73\x52\x5f\x3b\xb8\x06\x85\x54\x28\x81\x7e\x80\x53\x8a\x5c\xd5\x39\xc6\x3c\x16\x9f\x08\x74\x11\x45\x68\x4c\xb4\x84\x12\x21\x2f\x68\x28\x6e\xe7\xea\x61\x66\x3c\xac\x45\x0c\x76\xca\xf7\x1c\x4c\xfe\x7b\xdc\x4b\xb8\x82\xf1\x5d\x81\xa0\xe4\x81\x65\xc4\x51\x8f\x07\x4d\x2b\x44\x7f\x68\xe2\x7b\x46\x68\x58\x68\x5f\x22\x16\x58\x7d\xf0\x5c\x29\x8c\x11\xf7\x66\x1c\x90\x9c\x03\x27\xb4\xcc\xf5\x08\x9f\x5b\x0c\x2b\xfb\x3b\x87\x98\xeb\x3c\x63\x87\x15\x08\x9e\xcd\x06\x61\x54\xdd\x66\x83\x58\x9f\x43\xa7\x85\xf5\x4f\xa3\x03\x7d\xd1\xc4\x18\xde\xa3\xbe\x63\x5c\x5e\xf4\x7c\xeb\xe0\x2d\xa9\xf9\x27\xe0\xa3\x72\x9c\xf6\xac\xcc\x13\x90\x33\x68\xe1\x09\xf3\x58\x86\xad\x5a\xdc\x0d\x7e\x6f\xf3\x39\x6c\xa1\xfd\x58\x3c\xec\xd1\x70\x35\x69\x11\xcc\x34\x4c\x06\x6e\x48\xc3\x81\x5a\x2d\x30\xf7\xc1\x7a\x1d\xb7\xe7\x39\xc0\xe2\x72\x09\x0f\x56\x12\xf6\x26\xaf\x70\xcf\xb8\x30\x77\x98\x0a\x98\xbb\x4b\x71\x23\x14\xae\x2b\x15\x55\xc2\x8f\xa4\x48\xf8\xae\xf0\x97\xbd\x4e\x50\x3b\x1a\x7a\x43\xa1\xe6\xa1\x0b\xf5\x63\xd5\xdf\xa6\xb3\x8f\xf5\x59\x7a\xfd\x9f\x2b\xa0\x18\x35\x29\x79\xe8\x16\x4e\x60\x77\x1c\x0d\x79\x84\x4d\xa5\x36\x39\x02\x66\x1a\xfb\x1d\xf1\xb3\x1b\x7d\x85\x46\x65\xda\x84\x9d\xa9\x29\x8b\x81\x05\x5d\xaf\xc4\x53\x7f\x99\x7c\x99\x6c\x82\x90\x6f\xec\x07\xef\xd7\x0b\xc2\x7c\xdf\xda\x08\xfe\xef\x26\xf0\x13\x0d\xa0\xed\xf6\x36\xed\x9f\xd7\xfd\x8f\x35\x7f\x4e\xef\xe7\xb5\xfe\x2e\x3a\xff\x79\x8d\xcf\xba\x55\xfb\xbe\xd2\x3e\x2b\xeb\x77\x91\xf4\x29\x39\x37\x7d\xeb\xe8\x6f\x79\xc7\x11\xfc\x1b\x00\x00\xff\xff\xfd\x84\x52\xd0\x8d\x11\x00\x00"

func switchboardSafe_deposit_to_lnfCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardSafe_deposit_to_lnfCdc,
		"switchboard/safe_deposit_to_lnf.cdc",
	)
}

func switchboardSafe_deposit_to_lnfCdc() (*asset, error) {
	bytes, err := switchboardSafe_deposit_to_lnfCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/safe_deposit_to_lnf.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x26, 0x5a, 0x67, 0x79, 0x0, 0x7b, 0x1d, 0x2a, 0xd, 0x55, 0x35, 0xb6, 0xc4, 0x4b, 0xa9, 0x5e, 0xbf, 0x8d, 0x29, 0x23, 0xde, 0x9d, 0xfe, 0x59, 0xb5, 0xa3, 0xb4, 0x70, 0x0, 0x9, 0x5a, 0x96}}
	return a, nil
}

var _switchboardSafe_transfer_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x55\x4d\x6f\xdc\x36\x10\x3d\x7b\x7f\xc5\x64\x0f\xb5\x16\x70\xe4\x4b\xd1\xc3\xc2\x49\x6a\x24\x75\xaf\x41\xe2\xb6\x67\x4a\x1c\x49\xac\xb5\x1c\x61\x38\xb2\xbc\x30\xfc\xdf\x0b\x7e\x48\x4b\xf9\x03\xb5\x0f\xb6\x48\x0e\x67\xe6\xbd\x79\x7c\x36\x87\x81\x58\xe0\x66\xb4\xad\xa9\x7a\xbc\xa5\x3b\xb4\xd0\x30\x1d\x60\xbb\xda\xdb\x6e\x5e\x8b\xfc\x39\x19\xa9\xbb\x8a\x14\xeb\xd7\x2e\x65\xc7\xcb\xfd\x3f\x1e\xd4\x61\x58\x17\xca\xb7\xb6\x9b\xcd\xe5\x25\xdc\x76\xc6\x81\xb0\xb2\x4e\xd5\x62\xc8\x82\x71\xa0\x40\xf0\x30\xf4\x4a\x10\x1a\x62\xbf\xcc\xce\xa5\x53\x02\x35\x8d\xbd\x86\x0a\x61\x74\xa8\xa1\x3a\x82\xb2\x47\xb2\x08\x3e\xa3\x10\x38\xb4\x1a\xc4\x17\x71\x7e\xa9\x2c\x49\x87\x0c\xaa\xae\x69\xb4\x02\xd2\x31\x8d\x6d\x07\x0a\x5c\x86\x6a\x74\xc6\xb6\x20\x1d\x82\x53\x0d\x7e\xc3\x81\x9c\x11\x9f\xf0\x80\xd2\x91\x2e\x63\xab\x71\x01\x93\xe9\x7b\xb0\x24\x30\x28\x6b\x6a\x30\x4d\xbc\x98\xa5\xd3\x84\x2e\x44\x74\xea\x1e\xfd\xa9\x4f\x55\xab\x41\x55\xa6\x37\x72\x0c\x6d\x0a\x71\x38\x02\x8d\xce\x30\x6a\xb8\xb9\xbd\x00\x46\x19\xd9\xce\xbd\xe8\xd8\x07\x6a\xb8\x57\x63\x2f\x60\xac\x13\x54\xba\x8c\xdc\x21\x4c\x46\x3a\xcd\x6a\x02\x75\x08\xd8\x94\x47\xde\xe1\x82\x35\xf0\xde\xa2\x5c\xa7\xf5\x34\x33\xe7\x83\x06\xc5\xea\x80\x82\xec\x66\xe6\xfc\x6e\xc6\x76\xb9\xc9\x16\x85\xd0\x1e\xae\xb5\x66\x74\xee\x22\xd5\xdb\xc3\x5f\x37\xe6\xe1\xb7\x5f\x77\xf0\xb8\x01\x00\x08\xbf\x52\x6b\x8c\x0d\x32\xda\x1a\xe7\xc4\x11\x41\xe8\x28\x56\x3f\x22\x9f\xbb\xb9\xd5\x70\xb5\x47\x89\x61\x3f\xb0\xd9\xc3\x2f\xb9\x5e\xca\xbf\xfd\x7e\x5e\x20\x6c\x00\xa3\xa3\x91\x7d\x15\xaf\x8c\x8e\x7a\xed\x22\x8c\x34\x7f\xbf\xab\x18\xa1\xc2\xc0\xa9\xc7\xd3\x20\x33\xea\xa5\xa0\x43\x2b\x21\xd7\x1e\x7e\x5f\xa9\x3a\x95\x0c\x81\x03\xe3\xa0\x18\x0b\x67\x5a\x8b\xbc\x87\xeb\x51\xba\x44\xaa\x07\x1f\x62\x52\x6f\x7f\xa2\x80\x7a\x09\x3f\xde\x3c\x77\x71\xee\x69\xa0\xcb\x3d\x87\x7d\x53\xce\xd0\xe1\x53\x8a\x2e\x2b\x62\xa6\xe9\xea\x15\x26\x3e\x17\x9e\xc9\x3d\xbc\x3c\xf9\x29\xc4\xaa\xc5\xef\x4a\xba\xdd\xe6\xec\xec\xec\xcb\x97\x28\xd3\x62\xfb\x35\x4c\xdf\xab\x32\xe6\x7d\xd9\x24\x4d\xb1\xc7\x90\xe8\xc3\x76\xb7\x02\xf6\xcf\x2c\xb6\xc4\xed\x32\xca\x77\x40\x5b\x48\x86\xab\x8f\x2b\xac\xe5\x2c\xe1\x62\x96\x54\xfc\xbb\x3b\x09\xea\x29\x76\x81\x0f\x58\x8f\x82\xaf\xb0\x2d\x41\x6e\xb5\x19\x0c\x5a\x39\x77\x30\x8c\x55\x6f\xea\xe5\x11\x50\xf5\x2f\xd6\xa7\x7e\xfc\xcc\x97\x68\xf8\x94\x3d\x8f\x42\x68\xf7\x9e\x51\xe6\xb5\x72\x67\xfc\x81\x35\x9a\x7b\xe4\x55\xa9\xcc\x15\xe2\x68\x97\xdb\x65\x8b\xf2\x75\xb1\x84\xe2\x2d\x47\x2d\xbf\x07\x38\x71\x9e\x90\xfd\x2c\xea\x78\xf3\x66\xf6\xfd\xf8\x9e\xa0\x58\xe9\xe9\x73\xf1\xff\xc2\x89\x48\xd7\xdc\x64\x50\x3f\x6c\x77\xcb\xfc\x56\x1f\x97\x97\x90\xcc\x35\x50\xd9\x8c\x56\x3b\x08\xc6\xbe\x32\xd0\x8b\xd9\x54\x93\x03\x9e\x0c\xb5\x26\xaf\x77\xc1\x3c\xa3\x0f\xcc\xad\x39\x9a\x68\x56\x20\xf9\x26\x50\x13\x21\xdd\x19\xdb\x5e\x80\x23\x98\x30\x39\x34\xe5\xf9\x18\x6b\xf2\xe8\xa4\x23\x97\x52\x2c\xc7\xa6\x09\x63\xb5\x24\xdf\x66\x73\x5e\x84\xbd\x1a\x75\x99\xfd\x23\x49\x8f\xf5\xea\xe3\xb3\xd7\xf0\xa6\xfa\x77\x8f\xab\x51\xaf\x9f\x8c\x7e\x96\xf4\x45\x2f\x27\x9d\x3c\x9d\xf4\xac\xd1\x09\xd3\xf1\x59\x07\xab\x67\xf6\xb4\xf9\x2f\x00\x00\xff\xff\x53\xe1\x5a\x5d\x27\x08\x00\x00"

func switchboardSafe_transfer_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardSafe_transfer_tokensCdc,
		"switchboard/safe_transfer_tokens.cdc",
	)
}

func switchboardSafe_transfer_tokensCdc() (*asset, error) {
	bytes, err := switchboardSafe_transfer_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/safe_transfer_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa0, 0x86, 0x70, 0xee, 0x6e, 0x97, 0x1c, 0x9c, 0x3a, 0xb5, 0xce, 0x49, 0x1c, 0x37, 0x46, 0x5c, 0xb7, 0xce, 0x1, 0x38, 0x34, 0x5a, 0x92, 0xdc, 0x3b, 0xa1, 0xf9, 0xc3, 0x25, 0xb6, 0x5e, 0x29}}
	return a, nil
}

var _switchboardSafe_transfer_tokens_v2Cdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x4d\x6f\xe3\x38\x0c\x3d\x37\xbf\xe2\x35\x87\xad\x03\xec\xba\x97\xc5\x1e\x82\x7e\x17\xdb\xbd\x16\x6d\xb7\x73\x96\x6d\x3a\xd6\x54\x91\x0c\x89\xae\x63\x14\xf9\xef\x03\x59\x8e\x23\xa7\x29\xa6\xb9\xc4\x92\xc8\x47\x3e\x3e\x92\x72\x5d\x1b\xcb\x78\x68\xf4\x4a\x66\x8a\x5e\xcc\x1b\x69\x94\xd6\xac\x31\x9f\xdc\xcd\x67\xc7\x2c\x9f\x5b\xc9\x79\x95\x19\x61\x8b\x63\x4e\xd1\xf3\xe8\xff\xef\x46\xac\xeb\x69\xa0\xf8\x6a\x3e\x9b\x9d\x9f\xe3\xa5\x92\x0e\x6c\x85\x76\x22\x67\x69\x34\xa4\x83\x00\xd3\xba\x56\x82\x09\xa5\xb1\xfe\x18\xbd\x73\x25\x18\xb9\x69\x54\x81\x8c\xd0\x38\x2a\x90\x75\x10\xba\x33\x9a\xe0\x11\xd9\xc0\x91\x2e\xc0\x3e\x88\xf3\x47\xa1\x0d\x57\x64\x21\xf2\xdc\x34\x9a\xc1\x95\x35\xcd\xaa\x82\x80\x8b\x58\x35\x4e\xea\x15\xb8\x22\x14\x54\x1b\x27\xd9\x83\xad\x89\x2b\x53\x20\x6b\x18\x19\x95\xc6\x8e\x8f\xde\xb6\x25\xb4\x52\x29\xd0\xa6\x56\x32\x97\xac\x3a\xe4\x15\xe5\x6f\x68\x2b\xea\x03\x5a\xca\x49\xbe\x7b\xd3\x5c\xd4\x22\x93\x4a\x72\x07\xe9\x3c\x70\x66\xac\x35\xad\xc8\x14\xc1\x58\x68\xc3\x10\xba\x80\x2c\xd1\x91\xf3\x49\x68\x48\x0e\xe8\x43\xc0\x3e\xb3\x77\xd1\x28\xf6\x94\xfc\x21\xa0\x93\x8d\xc0\xd3\x59\x54\xaa\x84\xcd\x12\xb7\x45\x61\xc9\xb9\x3f\x21\xd6\x9e\xfb\x12\xff\x3f\xc8\xcd\x3f\x7f\x2f\xf0\x31\x9b\x01\x40\x2f\x81\xc7\x2a\xc9\x92\xce\x69\x07\x1e\x22\xf5\xaa\xf9\x63\x2d\x3a\xb2\x67\x6e\x57\xc2\xde\x55\x11\x07\xb3\x27\x2a\x97\xf8\x23\xd6\x36\x7d\xf5\xf7\x71\x80\xfe\x02\x96\x9c\x69\xac\x8f\xe2\x55\xac\x8c\x2a\x7a\xb2\xa3\x56\xfe\x56\x58\x42\x46\xbd\x16\x9e\x4b\x49\xd6\x52\x31\x06\x74\xa4\xb9\xc7\x5a\xe2\x66\xd2\x81\x43\xc8\xde\xb0\xb6\x54\x0b\x4b\x89\x93\x2b\x4d\x76\x89\xdb\x86\xab\xdb\x90\xf9\x48\x7c\xc8\xed\x3f\x62\x88\xcf\xf4\x83\xe7\x99\x83\x63\x63\xa9\x08\x3c\x47\x3f\x47\xaa\x4c\x77\xd4\x71\x39\x58\xa7\x41\xd3\x8b\x23\x95\xb8\x4a\x7c\x25\x97\xf8\xfc\xf2\xcc\xc6\x8a\x15\x3d\x0a\xae\x16\xb3\x93\x93\x93\xeb\x6b\xd4\x42\xcb\x3c\x99\xdf\xf7\x3d\xee\x3b\x23\xe0\x7e\x4e\xd2\xb4\x21\xc7\x1e\xe8\x74\xbe\x98\x10\xfb\x21\xb9\x2a\xac\x68\x77\xb5\x1d\xa5\xfc\x06\xb5\xb1\xc8\xb8\xf8\x6b\xc2\x35\x6d\x07\xd4\x64\xd7\x4e\xe1\x7f\x08\xbd\x0d\x7f\xb4\xa1\xbc\x61\x3a\x52\xe9\xa1\x6d\x65\x2d\x49\xf3\x99\x43\xdd\x64\x4a\xe6\xe3\x60\x9a\xec\x27\xe5\xfb\x5c\xbc\xde\xa3\x35\x2e\xb1\x22\x1e\x54\x4c\xd8\x2c\xbe\x23\x63\x1c\x2b\xde\x60\x4f\xc3\xe8\x4c\x42\x45\xcb\x20\xc8\x3a\x7a\xa7\x2b\xe2\xfb\x71\xc8\x92\xaf\x36\x5f\xfa\xd8\xd3\x09\x5a\x22\xfa\x8d\x9d\xf1\xa5\x67\xf4\xfd\xf1\x1d\xa3\x10\x69\x7b\x95\xfc\xbe\x69\x86\x25\x31\xa9\x4d\x44\xf5\x74\xbe\xf0\x29\x4e\xaa\xf9\x2a\x94\x2c\xfc\xfa\xdd\xaf\x99\x83\x25\x96\x75\xc3\xbe\x74\xa2\xa4\xbb\x3e\xd4\x5d\xf7\xd2\xd5\x34\xc2\xc8\x72\xa7\x5f\xf0\x1e\x26\x65\x52\xe3\xf4\xd0\x3b\xe1\xae\xa6\x25\xfc\xe7\xc5\xcd\xb1\x31\x5a\x2c\x3e\x26\x95\x3d\xc0\x1b\x76\xe5\x30\x6d\x43\xf3\x8e\xdd\xbc\x17\x65\x0b\x52\xce\x37\x68\x8c\x55\x90\x63\x6b\xba\x83\x11\xd8\xfb\xec\x5a\x7c\xfb\x2b\x00\x00\xff\xff\x27\xe8\xc0\x2f\x4a\x07\x00\x00"

func switchboardSafe_transfer_tokens_v2CdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardSafe_transfer_tokens_v2Cdc,
		"switchboard/safe_transfer_tokens_v2.cdc",
	)
}

func switchboardSafe_transfer_tokens_v2Cdc() (*asset, error) {
	bytes, err := switchboardSafe_transfer_tokens_v2CdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/safe_transfer_tokens_v2.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd1, 0xa8, 0xe5, 0xd9, 0x92, 0x93, 0xd8, 0xb9, 0x8e, 0xfe, 0x39, 0x53, 0xee, 0x71, 0xfe, 0xeb, 0xb2, 0x79, 0x2c, 0xa0, 0xaf, 0xad, 0x55, 0x33, 0xff, 0x89, 0x59, 0x44, 0x9f, 0xcb, 0x9, 0x23}}
	return a, nil
}

var _switchboardSetup_accountCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x53\xdb\x6a\xe3\x30\x10\x7d\xf7\x57\x1c\xf2\xb0\x24\x90\x4d\xde\x4b\x5b\x28\x0b\xfb\x5c\xb6\xfd\x81\xb1\x3c\x8e\x44\x14\xc9\x48\xa3\x66\x43\xc8\xbf\x2f\xb2\x9b\x60\x37\x71\xf1\x42\x2b\x02\xd1\x6d\x8e\xce\x65\x6c\x76\x8d\x0f\x82\xdf\xc9\x6d\x4c\x69\xf9\xd5\x6f\xd9\xbd\xec\x8d\x28\x5d\x7a\x0a\x15\xea\xe0\x77\x98\x8d\x1d\xcf\x8a\x5b\xf5\xb7\x8a\x66\x45\xb1\x5e\xe3\x55\x9b\x08\x09\xe4\x22\x29\x31\xde\xc1\x44\x10\x84\x77\x8d\x25\x61\xd4\x3e\xe4\x65\xef\x5c\x34\x09\x94\x4f\xb6\x42\xc9\x48\x91\x2b\x94\x07\x64\x28\x72\x07\xef\x18\xe2\xf3\x8f\xaa\x0a\x84\x3e\xef\xc0\xd1\xa7\xa0\xba\x0b\x9a\x4d\x00\x29\xe5\x93\x13\x44\xdf\xa1\x8a\xe6\x03\x14\xb9\x0c\x16\x58\xb1\x79\x63\xec\x92\x15\xd3\x58\x46\xfd\xce\x1d\x92\xc9\x47\xa4\x68\xdc\x06\x84\xfc\x67\x19\xc7\x81\xb6\xd5\x9f\xae\x3c\x9c\x8a\x3e\xf7\x63\x51\x00\x40\x13\xb8\xa1\xc0\x73\x52\x4a\xee\xf0\x94\x44\x3f\x75\x4c\x16\xe7\x1b\x79\xac\xd7\xf8\xa5\x59\x6d\x61\xea\xcc\xec\xc2\x96\x6c\x60\xaa\x0e\xd0\x14\x47\x14\x5e\x20\x4c\x9d\xab\x64\x55\xfa\x10\xfc\xfe\xfe\xc7\x58\x68\xab\xde\xfc\xf1\x52\x0d\xcc\x73\x6c\x77\xa3\xad\xb0\x7a\x11\x1f\x68\xc3\xcf\x24\x7a\x81\x87\x07\x38\x63\x71\xec\xd5\x03\x83\x45\x56\x14\x38\xc7\x4a\x70\xbc\xbf\x9d\x0e\xb9\x0a\x4d\x12\x18\x81\x71\xe2\x11\xbb\x37\x06\x40\xad\xa8\x48\x6f\x3c\x1f\x6c\xe7\x71\xff\x73\x9c\xae\x6a\x1f\xef\xed\xcc\x17\x4b\x5c\x21\x88\x9f\xa8\xb8\x18\x15\xd7\xa4\xd2\x1a\x05\x45\x0d\x95\xc6\x1a\x39\xbc\xf7\xdc\x40\x31\xff\x6d\x7c\xdb\x43\xf9\xa0\xe2\xbc\x90\x8f\x88\x75\x72\xe7\xae\x0f\x3e\x6d\x74\x7b\x77\xac\xd5\xb2\x5f\x1c\x6a\x52\x37\xcc\xb2\xc6\x6d\xa7\xe5\x3f\x86\xfe\x78\xed\xf5\x28\xdc\xb9\xe8\xb9\xf5\x21\x9b\xb5\xbc\xb6\x99\xc2\x86\x65\x9a\xd5\x83\xe2\xc5\xb4\x06\xfb\xbf\x0c\x4a\x2f\xad\xb9\x1f\xe1\x8e\x53\x2c\xeb\x64\x9e\xda\xd6\xcd\x2f\x7c\x0e\x72\x2b\xb0\xf8\x75\x89\x7d\xca\x71\x89\x2f\x48\xf7\x9b\x53\xbd\x4c\x4e\xdd\x07\x76\x2a\x8a\x53\xf1\x2f\x00\x00\xff\xff\xb5\xea\xbe\xcb\x95\x06\x00\x00"

func switchboardSetup_accountCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardSetup_accountCdc,
		"switchboard/setup_account.cdc",
	)
}

func switchboardSetup_accountCdc() (*asset, error) {
	bytes, err := switchboardSetup_accountCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/setup_account.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x74, 0x85, 0x63, 0x21, 0x54, 0xb9, 0x53, 0x38, 0xac, 0x89, 0xdc, 0xfe, 0x4a, 0x2, 0xa9, 0xbc, 0xd5, 0xef, 0x31, 0x1b, 0x1a, 0xb7, 0x3d, 0xb0, 0x31, 0x7b, 0xf5, 0xb8, 0xe3, 0x43, 0xa7, 0x3b}}
	return a, nil
}

var _switchboardSetup_royalty_accountCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x58\x4d\x6f\xe3\x36\x10\xbd\xfb\x57\x4c\x73\x48\x65\xc0\xb5\xee\x41\x92\x45\x9a\x36\x8b\x5e\x8a\xc5\x26\xdb\x9e\xc7\xd4\xc8\x22\x22\x93\x02\x39\x8a\xd7\x08\xfc\xdf\x0b\x52\x96\x4c\x79\x2d\xdb\x92\x8d\x66\x75\x49\x2c\x91\x8f\xf3\xf1\xde\x13\x45\xb9\x28\xb4\x61\x78\x2a\xd5\x5c\xce\x72\x7a\xd1\xaf\xa4\x20\x35\x7a\x01\x57\xad\x7b\x57\xa3\x7d\x23\x9f\x97\x92\x45\x36\xd3\x68\x92\x7d\x93\x82\xc7\xdb\xf9\xb9\x5e\xb6\x56\xa9\x7f\x6f\x47\x48\xe4\xd6\x88\xfa\xf7\xd5\x68\x34\x8a\x63\x78\xc9\xa4\x05\x36\xa8\x2c\x0a\x96\x5a\x81\xb4\x80\xc0\xb4\x28\x72\x64\x82\x54\x1b\xf7\x33\x78\xce\x19\x32\x08\x5d\xe6\x09\xcc\x08\x4a\x4b\x09\xcc\x56\xe0\xa0\x50\xad\xb4\x22\x48\xcb\x3c\x5f\x81\x25\x2e\x0b\x40\x05\x28\x84\x2e\x15\x7b\x24\x43\x82\xe4\x9b\x54\x73\x98\x69\xce\x7c\xf4\x80\x2a\x81\x6f\xcf\x7f\x3c\x02\xbb\xa8\x2c\x20\x03\x67\x04\x16\x17\xe4\x40\x8b\x72\x96\x4b\x01\x05\x72\x06\x91\xc3\x90\xca\x32\x2a\x41\x7e\x94\xd1\x2b\xcc\x59\x92\x85\xb8\x1a\x18\x7f\x26\x45\x46\x8a\xa7\x97\xaf\x7e\x2d\x32\x7e\xea\xd8\x41\x7d\xb3\x6e\x65\x37\x0d\x93\xe4\x6f\x5a\xfe\x83\x65\xce\xff\x1a\x2c\x0a\x32\xf6\xf7\xd5\x17\xb7\x84\x0d\x7a\xb0\x20\xce\x74\x02\x98\xe7\x7a\x69\xeb\xec\x58\xbb\x9c\x1d\x9c\xc0\x02\x67\x32\x97\xbc\x82\xe5\x06\x04\x6c\x29\x32\x40\x0b\xbe\xc2\x4f\xda\x2c\xd1\x24\xee\xbe\x0b\x9a\x30\x01\x9d\x56\xeb\x0b\x2e\x31\xaf\x32\x86\x37\x17\xc6\x74\x14\xd6\x38\x1a\xc3\xfb\x68\x04\x00\x90\x13\x43\x5a\x37\xd5\x07\xfc\xd8\x2c\x7b\x03\xdb\xff\x6f\xaf\xdf\x5b\x64\x99\xd6\xe9\xaf\xef\xb7\x38\x75\xeb\x87\xe1\x00\x40\x03\x15\x94\xe9\x2b\xa5\x37\x00\xd7\x5d\x54\x9d\x06\xff\x57\x29\x15\x86\x0a\x34\x14\xa1\x10\x7c\x03\x0f\x25\x67\x0f\x15\x45\x9a\xa4\xdd\x15\xc7\xf0\x98\x91\x78\x05\x59\x97\xac\xa2\x11\xe6\x86\x30\x59\x41\x86\x8e\xa7\x9e\x41\x3e\x9d\x66\xa2\x4c\xdd\x58\x9e\xce\xb4\x31\x7a\x79\x7b\xdd\x48\x62\xea\xc7\xdd\x47\x4e\x07\x37\x10\x5b\xd6\x06\xe7\x14\xb7\xab\x3b\x86\xbb\x3b\x50\x32\x87\xf7\x06\x70\x13\xcd\x5f\x29\x28\xcd\x13\x10\x86\x9c\x30\x10\x14\x2d\x83\xf5\xc1\x90\xd5\xa5\x11\xe4\x09\x5d\x94\x0c\x92\x41\x2a\xd6\xb0\x59\xa8\x85\xe7\x23\xb4\xf8\x46\xd1\xed\x6f\x5b\x11\x4f\x2b\xec\x3f\x17\x05\xaf\x3c\x68\x34\x9e\x00\xeb\xee\x60\x1b\xcc\x75\x67\xdd\x4c\x2d\x83\x80\xae\xd2\x42\x2e\xd5\x2b\x25\xe0\xf5\x4c\x9e\x61\xdb\x91\x4e\x30\x61\x39\x7f\xf1\xd1\xce\x89\x4f\xa2\x49\x54\x2b\xb1\x89\xb5\x7e\x36\x6e\x95\xe0\xcc\x6b\x2a\x5c\x96\x5e\x28\x3b\x8d\x92\x29\x48\xfe\xd5\xee\x74\x6b\xe3\x23\x41\x15\x58\x6f\x73\xf7\x1a\x04\xfa\x5e\x68\xef\x11\xbb\x90\x6e\x5c\x42\xee\x21\x43\x5a\xaa\xda\x08\x8d\x2e\xe7\x99\x7f\xd8\x55\x0d\xc7\x00\x32\x29\x8a\x3d\xed\x2f\x95\x6b\xc2\xa9\xe5\xf2\x53\xdc\x84\x41\xa5\x9f\xc0\xb0\xda\x33\x9a\x39\x71\x2f\x02\x5a\xca\xd3\x69\x97\x65\xc1\x1d\x5c\x8c\x4c\x3d\xad\xc2\xbf\x63\x8e\x58\x45\x6d\x90\x6d\xab\xd8\xb9\xfd\x5c\x95\xc2\xbd\x2e\x7a\xba\xc5\x36\x84\x73\xdc\xa2\x89\x66\x9f\x5b\x0c\x94\x98\x33\x99\x03\x69\x5e\xca\x67\x7c\x01\x2e\xe4\x33\x7d\x32\x8d\x76\x72\xab\x51\xbe\x94\x33\x9f\xdf\xc5\xcc\xc4\x27\xf8\x81\x66\x72\x24\xcf\xfe\x8e\x72\x18\x70\x10\xdf\x6a\x4f\xe9\xc7\xb7\xca\x56\x3a\x76\x30\xbd\x6d\xe5\xd4\x3a\xf5\xf4\x98\x70\x07\x5f\x2b\xbc\xdb\x6d\x4e\xd8\x31\x1d\x67\x79\xed\x51\x9d\x60\x83\xdd\x6a\x5f\x32\x03\xec\xaa\x2b\xb0\x6a\xad\xe0\x4e\x6f\xfb\xf2\xa6\x75\x4a\xde\x97\xb2\xaf\x3e\xce\xd5\x91\xc9\x69\x6d\x1f\x6a\x7a\x51\x27\x78\xc0\xf0\x5c\x8a\xcb\x9a\x5e\x48\x94\x8f\x71\xbd\x1e\x59\x77\x59\xe0\x59\x6d\x89\x4e\xe7\x6d\x8f\x58\x27\x27\xa3\x36\x96\x7a\x21\x35\x04\x53\xab\x70\xbc\xee\x53\xde\x23\x13\xf7\xed\x8d\x86\xb6\x4a\x19\xed\x34\x3d\xfc\xa2\x0e\x3e\xe6\x8f\xbd\xf8\x9b\xe7\x03\x3a\xd3\x31\xa8\x4a\x65\x02\x1d\x5d\x3c\xb5\xda\xf7\xc3\xf9\x76\xe6\xf5\xff\x2a\xd6\x1f\xd1\xfc\xa8\xcc\x83\xc5\x5d\x7b\xa2\xb8\x49\xbb\x68\xc7\xe5\x6d\xfb\xeb\xfb\xb8\xae\x5b\xb7\x7f\x3a\x2a\xd5\xd7\x01\x4a\x7d\x90\x1d\x7c\x26\x06\x04\x43\x29\x19\xf2\x87\x6d\x7a\x57\xcc\xed\x9d\x59\xfb\x40\xa8\xde\x8f\x5d\x76\xab\xd3\x5c\xbd\xf6\x3c\x47\x61\x3f\x7d\x82\x02\x95\x14\xd1\xd5\xa3\x3f\xd5\x54\x9a\xa1\x0a\xbc\x9d\x7f\x90\xe2\xd5\xe6\xeb\x73\x5d\xfd\xa1\xef\x24\x4a\xa6\x40\x96\x71\x0c\x0f\x49\x25\x84\x1f\xd5\x17\x3a\x62\xe9\xa5\x17\x9c\x47\x6e\x4e\x1d\x0f\x55\x77\x1a\x0c\x8f\x44\x70\x8c\x77\xf0\xd3\x7b\x7c\x06\x64\xc7\xb6\x7b\x5c\x17\x61\x3d\x82\xff\x02\x00\x00\xff\xff\xf8\xa1\x09\x9d\xfb\x16\x00\x00"

func switchboardSetup_royalty_accountCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardSetup_royalty_accountCdc,
		"switchboard/setup_royalty_account.cdc",
	)
}

func switchboardSetup_royalty_accountCdc() (*asset, error) {
	bytes, err := switchboardSetup_royalty_accountCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/setup_royalty_account.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc6, 0x9c, 0xdc, 0x26, 0x5f, 0x47, 0x8a, 0xa, 0xed, 0xa8, 0x60, 0x29, 0x8a, 0xe6, 0x99, 0xae, 0xee, 0xe0, 0xc9, 0x30, 0x6e, 0xaa, 0x42, 0xfd, 0xa9, 0x26, 0x47, 0x26, 0x60, 0x66, 0x97, 0x1d}}
	return a, nil
}

var _switchboardSetup_royalty_account_by_pathsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x58\x4d\x6f\xe3\x36\x13\xbe\xfb\x57\xcc\x9b\xc3\xbe\x32\xe0\xda\xf7\x20\xc9\x36\x4d\x9b\x45\x2f\x45\xb0\xc9\xb6\x87\x45\x0e\x63\x6a\x64\x11\x91\x49\x81\x1c\xc5\x6b\x04\xf9\xef\x05\x49\xeb\xcb\xb6\x62\xc9\x71\x9b\xea\x62\x4b\x9c\x19\xce\xd7\xf3\x88\x1a\xb9\xcc\xb5\x61\xb8\x2d\xd4\x42\xce\x33\x7a\xd0\x4f\xa4\x20\x31\x7a\x09\x67\xad\x67\x67\xa3\x7d\x92\xf7\x2b\xc9\x22\x9d\x6b\x34\xf1\x3e\xa5\xc6\x72\xad\x9f\xe9\x55\x6b\x97\xf2\xbe\x96\x90\xc8\x2d\x89\xf2\xfe\x6c\x34\x1a\xcd\x66\xf0\x90\x4a\x0b\x6c\x50\x59\x14\x2c\xb5\x02\x69\x01\x81\x69\x99\x67\xc8\x04\x89\x36\xee\xb6\xb1\xce\x29\x32\x08\x5d\x64\x31\xcc\x09\x0a\x4b\x31\xcc\xd7\xe0\x4c\xa1\x5a\x6b\x45\x90\x14\x59\xb6\x06\x4b\x5c\xe4\x80\x0a\x50\x08\x5d\x28\xf6\x96\x0c\x09\x92\xcf\x52\x2d\x60\xae\x39\xf5\xde\x03\xaa\x18\xbe\xdd\xff\x7a\x03\xec\xbc\xb2\x80\x0c\x9c\x12\x58\x5c\x92\x33\x9a\x17\xf3\x4c\x0a\xc8\x91\x53\x88\x9c\x0d\xa9\x2c\xa3\x12\xe4\xa5\x8c\x5e\x63\xc6\x92\x2c\xcc\x82\xe0\xec\x0b\x29\x32\x52\xdc\x3e\x7c\xf5\x7b\x91\xf1\xaa\x63\x67\xea\x9b\x75\x3b\x3b\x35\x8c\xe3\x3f\x68\xf5\x27\x16\x19\xff\x65\x30\xcf\xc9\xd8\x5f\xd6\x77\x6e\x0b\xdb\xa8\xc1\x92\x38\xd5\x31\x60\x96\xe9\x95\x2d\xa3\x63\xed\x62\x76\xe6\x04\xe6\x38\x97\x99\xe4\x35\xac\x36\x46\xc0\x16\x22\x05\xb4\xe0\x33\x7c\xab\xcd\x0a\x4d\xec\x9e\x3b\xa7\x09\x63\xd0\x49\xd8\x5f\x70\x81\x59\x88\x18\x9e\x9d\x1b\xd3\x51\x33\xc7\x11\xc6\xb1\x21\x6b\xcf\xe1\x3a\xfc\x19\xc3\xcb\x68\x04\x00\x90\x11\x07\x05\xe7\xad\x3d\x87\xef\x77\x3e\x6c\x77\xf7\xd8\x16\x78\x58\xe7\xe4\x04\xdc\xef\xa3\x5b\xa9\x96\x1b\x31\x7e\xa5\xe4\x1c\xe0\x53\x57\x9f\x4d\x1b\xff\xc3\xfe\xb9\xa1\x1c\x0d\x45\x28\x04\x9f\xc3\x75\xc1\xe9\x75\xa8\x6f\xe5\xa1\xbb\x66\x33\xb8\x0b\x82\x3e\x5c\x57\x01\xeb\x0b\xcd\xce\x29\x40\x63\x70\x6d\x61\x25\x39\xf5\xeb\x7b\xfb\x20\x46\xc6\xca\xa0\xa5\x2c\x99\xd6\x71\xc3\x25\x7c\x7f\xec\x5a\x9c\xba\x5a\xa8\x38\x2a\x3b\x22\x29\x31\x51\x76\xc4\xf8\x90\x66\x85\x91\xa9\x6f\x91\x52\xef\xae\x98\xdf\xf9\x5e\xda\x55\xf7\xc9\xee\xf2\xca\x2f\x96\xb6\xdd\xcd\xc5\xcf\x15\x4e\xc3\x0e\x57\xd1\xb8\xd3\xea\x96\x62\xdb\x35\xaf\xd8\x4c\xfb\x4d\x4a\xe2\x09\x64\xd9\x66\x01\x7a\x98\x19\xc2\x78\x0d\x29\x3a\x6c\xfb\x6c\x7b\xed\x4a\x51\x26\x4e\x96\xa7\x73\x6d\x8c\x5e\x5d\x7c\xda\x71\xcf\x71\xc7\x39\xcc\x2c\x6b\x83\x0b\xaa\x53\xea\x97\xc7\x70\x79\x09\x4a\x66\xf0\x52\x19\xdc\x78\xf3\x7b\x02\x4a\xf3\x04\x84\x21\x47\x26\x08\x8a\x56\x8d\xfd\xc1\x90\xd5\x85\x11\xe4\x8b\x9f\x17\x0c\x92\x41\x2a\xd6\xb0\xd9\xa8\x65\xcf\x7b\x68\xf1\x99\xa2\x8b\x9f\x6a\xe2\x9b\x06\xdb\xbf\x2d\x73\x5e\x7b\xa3\xd1\x78\x02\xac\xbb\x9d\xad\x6c\xbe\x76\xe6\xcd\x94\xd4\xd1\x80\xb8\xb4\x90\x49\xf5\x44\x31\x78\x0e\x24\x70\x66\x6b\x49\xd7\xe2\xcd\x74\xfe\xcf\x7b\xbb\x20\xbe\xa9\x4c\x5c\x7c\x7a\x69\xe1\x6c\x5a\xf6\xd5\xeb\x55\x9f\x5e\x3d\xc1\x35\x15\x2e\xca\x68\xbc\x5b\x28\x99\x80\xe4\xff\xdb\xad\x6a\x6d\xb8\xb7\x91\x05\xd6\x75\xec\xbe\x45\x81\x7e\xe4\xda\xf3\xea\xb6\x49\x27\x17\x93\x5b\x64\x48\x0a\x55\xbe\x3c\x8c\x2e\x16\x01\xf5\x5d\xd9\x70\x1d\x40\x26\x41\xb1\xa7\xfc\x85\x72\x45\xe8\x9b\x2e\xaf\xe2\x14\x8e\x4a\xfd\x04\x8e\xcb\x3d\xa3\x59\x10\xf7\x6a\xc0\x81\xc8\xf5\xf4\x78\x00\xb9\xdb\xfc\x10\x90\xbb\xf5\xf8\x3e\x78\xe6\xd9\x6c\x18\x78\x6b\x17\xde\x03\xde\xca\x9b\x7d\xe0\x3d\xb2\xe3\x1d\xe6\xdf\x08\xf3\x54\xb0\xf7\x09\x38\x11\xec\x87\x44\x7a\xe8\xa5\x74\x32\x6c\xfb\x00\x3f\x10\xdb\x7d\x5f\xbe\xd0\x17\xe0\x6f\x1b\x3c\xaa\xdf\x4a\x88\xf7\xeb\xb7\x81\x28\x6f\x7e\x06\x94\x18\xeb\xc6\x7b\x8f\x93\xdb\xe1\x3e\x2b\x59\xa2\xd3\xd8\xd1\x7c\xb1\x2f\x98\x23\x08\xa3\xcb\xb1\xb0\x57\xe3\xc9\x60\x02\xf1\xb4\xd1\x27\xee\x53\x11\xc8\x10\xee\xe8\x88\xa4\x5f\xd9\x8f\xa5\x9d\xa8\xd3\x78\x03\x3a\x9b\x6f\x8e\xd3\xd1\x4e\xb3\x51\x3e\x86\x77\x06\x44\xdd\x45\x42\xef\x2a\x4b\xd4\xbf\x6f\x07\xf8\x3a\xe9\x6d\xb5\x22\xb5\x13\xa1\xa1\xa1\x1a\xdc\xf1\xb8\x4f\x78\x0f\x4c\xa4\xff\x28\xa4\x1a\x29\xa3\xad\xa2\x37\x3f\xcb\x1b\x13\x81\x43\xaf\xde\x6a\xfd\x88\xca\x74\x08\x85\x50\x26\xd0\x51\xc5\xbe\xd9\xbe\x3a\xbe\xdf\xde\x79\xfd\xbb\x88\xf5\x73\x9e\x5d\x64\xbe\x99\xdc\xd7\x30\x2a\x48\x69\xc7\xda\x61\x78\xdb\xe1\xf8\x3e\x8c\xeb\xd6\xe3\xff\x5c\x2b\x95\xd7\x1b\x2d\xf5\x41\x74\xf0\x85\x18\x10\x0c\x25\x64\xc8\x4f\xec\xf4\x36\x98\xdb\x43\x8f\xf6\x60\x0a\x2e\xff\x89\xa3\x4e\x75\x0d\x3a\xf3\x1c\x34\xfb\xf9\x33\xe4\xa8\xa4\x88\xce\x6e\xfc\x68\x54\x69\x86\xe0\x78\x3b\xfe\x46\x88\x67\x9b\xc9\xcd\xe6\x80\x48\x3f\x48\x14\x4c\xf5\x18\x6d\x36\x83\xeb\x38\xe0\xa0\x45\x94\xbb\x59\x84\xc2\x63\xaf\x73\xaa\x39\xea\xcc\xf1\xb4\x53\x27\xca\xc3\x80\x71\x6b\x44\x36\xf4\x74\x15\x86\x90\x5b\x23\xad\x09\x54\xf3\xcd\xcd\x9f\x3a\x15\xaf\x23\xf8\x3b\x00\x00\xff\xff\xb2\x42\x4b\xe4\x46\x17\x00\x00"

func switchboardSetup_royalty_account_by_pathsCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardSetup_royalty_account_by_pathsCdc,
		"switchboard/setup_royalty_account_by_paths.cdc",
	)
}

func switchboardSetup_royalty_account_by_pathsCdc() (*asset, error) {
	bytes, err := switchboardSetup_royalty_account_by_pathsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/setup_royalty_account_by_paths.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x25, 0x74, 0x5c, 0x4a, 0x90, 0xd4, 0x13, 0xe, 0x2a, 0x42, 0xf7, 0x5e, 0x3, 0xcf, 0x28, 0x75, 0xa1, 0xbc, 0xc9, 0x80, 0x6e, 0xd0, 0xbe, 0x94, 0xbb, 0x12, 0x8b, 0x8a, 0xea, 0xc, 0x31, 0x42}}
	return a, nil
}

var _switchboardTransfer_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x4f\x4f\xdb\x4e\x10\x3d\xe3\x4f\x31\xbf\x1c\x7e\x38\x52\x08\x97\xaa\x87\x88\x3f\x45\xb4\xf4\x8a\x28\x6d\xcf\x63\x7b\x62\x6f\xeb\xec\xac\x66\xc7\x84\x08\xf1\xdd\xab\xdd\xb5\x8d\x0d\x95\x68\x0e\x71\x3c\x3b\x7f\xde\xbc\xf7\x36\x66\xe7\x58\x14\x6e\x3a\x5b\x9b\xa2\xa5\x7b\xfe\x4d\x16\xb6\xc2\x3b\x58\xcc\x62\x8b\xac\xcf\xfc\xf2\x88\x3b\x37\x4f\x9c\x86\x16\x59\x76\x7a\x0a\xf7\x8d\xf1\xa0\x82\xd6\x63\xa9\x86\x2d\x18\x0f\x08\x4a\x3b\xd7\xa2\x12\x6c\x59\xc2\xeb\xe4\x5c\x1b\xd4\x50\x58\x72\xd7\x56\x50\x10\x74\x9e\x2a\x28\x0e\x80\xf6\xc0\x96\x40\x19\x3c\xd9\x0a\x34\xcc\xf0\xe1\x15\x2d\x6b\x43\x02\x58\x96\xdc\xd9\x58\xac\x8d\x70\x57\x37\x80\xe0\xf7\x46\xcb\xa6\x60\x94\x6a\x05\xe8\xa1\x65\x5b\x87\xa7\x36\x74\x80\x06\x1f\x08\x3c\x29\x74\x2e\x04\x8c\x84\xda\x49\x05\xa0\xad\x52\x12\x56\x55\xc8\x00\x27\xec\x48\xa0\x44\x87\x85\x69\x8d\x1e\x02\x00\x13\x66\xa6\x65\x63\xa6\x90\xf7\xc0\xdb\x58\x20\x54\x92\x79\x78\x41\xb7\x8a\x51\xdc\x85\xdf\xa1\x36\xae\xbe\xa5\x38\x39\x4c\x0b\xa7\xb7\x5d\xd1\x9a\xf2\x16\xb5\x89\xfc\x84\x50\x4d\x96\xc4\x94\x70\x73\xff\xd2\x71\x6f\xda\x36\x10\xa4\x0d\x85\x6a\x87\x82\x3b\x52\x12\x9f\x4d\xf8\xcc\x95\x37\x70\x95\x30\xad\xfa\xb9\x1b\xf8\x7e\x63\x1e\x3f\x7e\x58\x8d\xbd\xc2\xac\xcd\x64\xee\x12\x9e\xb2\x0c\x00\xa0\x5f\xea\x01\xbb\x56\x41\xc8\x73\x27\x25\x45\x8d\xa0\xe1\xb6\x8a\x3c\x8e\x52\x84\x28\x0a\x41\x41\xc6\xd6\xe3\x66\x42\x55\x6c\xd5\x92\x06\xe5\xf4\x47\xe8\xb5\x81\x4f\x33\x53\xad\x63\x34\xcd\x74\x42\x0e\x85\x72\x6f\x6a\x4b\xb2\x81\xab\x4e\x9b\xab\xc4\xde\x88\xab\xc7\xf6\x95\x14\x10\x84\xb6\x24\x64\xcb\x68\x8e\x00\x28\x55\x1e\x7b\xf0\xca\x42\x55\x82\x3f\xd6\x05\x20\x31\x72\x47\x5b\x38\xef\x93\xd7\x05\x8b\xf0\xfe\xec\xff\xa9\x85\x13\xaa\x8b\x3c\x98\x7b\x03\x6f\x4f\xbe\x29\x0b\xd6\x14\x19\xcb\x8e\x8e\x8e\x2e\x2f\xc1\xa1\x35\x65\xbe\xb8\x8e\xee\xb5\xac\x90\xfa\xbe\xc5\xc8\xfb\x04\x31\x36\xfa\x6f\xb1\x9c\xed\xf5\xd3\x68\x53\x09\xee\x07\x6a\xe3\xed\x7a\x7f\x33\x4f\xed\x76\x3d\x72\x0c\x67\x27\xe3\x9e\xeb\x7d\xdf\x31\x1f\x2c\x90\x9e\xcb\x58\x1b\xbf\x9e\x13\x02\x7a\xa4\xb2\x53\xfa\x0b\xd1\xbd\x9d\x8d\x33\x64\xf5\xd8\x83\x8b\x76\x19\x8c\x0d\x5c\xfc\xa2\x72\xce\xf2\x98\x0d\xe7\x50\x93\xf6\x22\xe6\xca\xcb\x7f\x51\x71\x3a\xeb\xae\x37\xea\xeb\xf6\x31\x98\x74\x1c\xd3\xc7\x9c\xf0\x59\xd7\xa4\xd7\xe3\x6d\xcd\xa7\x86\x5f\xce\x13\x07\x03\x3c\xcd\x8d\x39\x4c\x7e\xbe\xc8\xdf\xd7\xb8\xbf\x99\xb3\x55\x26\xff\x27\xaf\x65\xfe\x4c\x8e\xbd\x49\xcc\x0e\x02\xd9\x41\x73\x63\xdf\xb0\x20\xaf\x59\x98\x30\xb0\xae\x52\xb3\xde\xac\x67\x27\x73\x33\xcc\x85\x7e\xce\xfe\x04\x00\x00\xff\xff\x2d\x30\xef\xcf\xee\x05\x00\x00"

func switchboardTransfer_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardTransfer_tokensCdc,
		"switchboard/transfer_tokens.cdc",
	)
}

func switchboardTransfer_tokensCdc() (*asset, error) {
	bytes, err := switchboardTransfer_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/transfer_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd6, 0x42, 0x4f, 0x7e, 0xc3, 0x84, 0x4d, 0x7a, 0xf4, 0x33, 0x40, 0xa8, 0x15, 0xe6, 0x5c, 0xa9, 0x54, 0x16, 0x76, 0x6a, 0xee, 0x7d, 0x88, 0x23, 0xc2, 0xe3, 0xa1, 0xef, 0xaa, 0xd9, 0x6d, 0xa}}
	return a, nil
}

var _transfer_many_accountsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x54\x4d\x6f\x9b\x40\x10\x3d\x87\x5f\x31\xe1\xd0\xe0\x43\xc8\xa5\xea\x01\x39\x89\xac\xb4\xe9\xa9\x52\x94\xa6\xed\xa1\xaa\x94\x05\x06\xd8\x06\xef\xae\x66\x87\xd8\x91\xe5\xff\x5e\x2d\xbb\x20\x6c\xac\xd4\x17\x4b\xf3\xf1\xe6\xcd\xbc\xc7\xca\xb5\xd1\xc4\x70\xdf\xa9\x5a\xe6\x2d\x3e\xe9\x17\x54\x50\x91\x5e\x43\x7c\x10\x8b\xa3\x50\xf9\x65\x2b\xd6\xe6\xb0\x70\x1a\x8a\xa3\xe8\xea\xea\x0a\x9e\x48\x28\x5b\x21\x59\x60\x17\x75\x7f\x20\xa0\x95\x96\x41\x57\x20\xca\x92\xd0\x5a\xb4\x60\x0d\x16\xb2\x92\x58\x82\x54\xc0\x0d\xc2\x73\xc8\xad\xd6\xba\x53\xfc\x4d\x98\x67\x30\x82\xc4\x1a\x19\x29\x8a\xd8\xc1\x8a\x82\xa5\x56\xc9\x71\x61\x06\xbb\x95\x0f\x65\xf0\xe3\x5e\x6e\x3f\x7d\xdc\x2f\x60\x17\x45\x00\x00\x8e\x51\x83\xf0\x53\x74\x2d\x03\xa1\xd5\x1d\x15\x08\xdc\x08\x86\x46\xb7\xa5\xed\x47\x0f\x4c\x5d\x54\x10\x42\x8e\x52\xd5\xc0\x61\x13\xc2\xb2\x87\x6a\x91\xe1\xd5\xe1\x3c\x62\x95\xc1\x87\xe9\xee\x69\x8f\xef\x27\x1a\x42\x23\x08\x13\x2b\x6b\x85\x94\xc1\xaa\xe3\x66\x55\x14\x8e\xeb\xc8\x2a\x30\xfb\x8a\x0c\x02\x08\x2b\x24\x54\x8e\x96\xee\xe9\xf8\xce\x0b\x0b\x96\x35\x61\xe9\x87\x8e\x7d\x16\xdb\x2a\x1d\x78\xc0\x75\xa8\x4e\x73\x4d\xa4\x37\xcb\x13\xb4\x6e\x12\x27\x56\x06\xf3\xcc\x77\xd6\x24\x6a\x7c\x10\xdc\x2c\xa2\xb3\xb3\xb3\xdb\x5b\x30\x42\xc9\x22\x89\xef\x74\xd7\x96\xa0\x34\x83\xc7\x9d\x93\xd4\x1b\xcf\xb1\x07\x3a\x8f\x17\x3d\xbf\xbd\x5f\x0f\xb7\x58\x74\x8c\xd3\x6d\x2b\x4d\x83\xf8\x4e\xf0\x63\x09\xd3\x17\x7c\xb3\xd3\xfa\x70\xa1\x5f\x92\x9b\x92\xc4\x66\x90\xa8\xb7\xdd\xff\x6f\x34\xc8\x65\x51\xb1\x97\x7e\x79\x79\x78\xb8\x74\x13\x90\x13\xd1\x73\xc8\x66\x94\x7e\x87\xc0\x9f\xf3\xc5\x8c\x96\x13\xce\xb1\x20\x2c\xa4\x91\xa8\xf8\xc2\x82\xe9\xf2\x56\x16\x20\xbc\xd4\xa0\xf3\xbf\x58\xcc\x19\x8d\x1d\x70\x0d\x35\x72\x30\xc6\x60\xe9\xd3\x93\x4e\x58\x64\x3a\xf8\x11\x0b\x94\xaf\x48\xa7\x66\xf5\x09\xef\x93\xb1\x25\xad\x91\xef\x84\x11\xb9\x6c\x25\xbf\x25\x07\xb6\x18\xb0\x1e\xfa\x65\xbc\x31\xe0\xe8\x37\x5a\x6d\x77\xf0\x4e\x8c\xbd\xfb\x9b\x64\xde\xf4\xae\xb5\x7c\xdf\xfb\x5b\xf6\x32\xc6\xf3\x03\x7d\x46\xa3\xad\xf4\x72\x0c\x9a\xaa\xc1\x2e\xe1\x69\x99\xe2\xd0\xa9\x6b\x4d\x2e\x95\x96\x1e\x30\x7c\x34\xcb\xcb\xd1\x43\x93\xd9\xfb\xe0\xf6\x7d\xf4\x2f\x00\x00\xff\xff\x59\x4e\x87\x84\x46\x05\x00\x00"

func transfer_many_accountsCdcBytes() ([]byte, error) {
	return bindataRead(
		_transfer_many_accountsCdc,
		"transfer_many_accounts.cdc",
	)
}

func transfer_many_accountsCdc() (*asset, error) {
	bytes, err := transfer_many_accountsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transfer_many_accounts.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc9, 0x3a, 0x6, 0xa3, 0x37, 0xad, 0x9b, 0x2, 0xd, 0x14, 0x2a, 0xef, 0xa6, 0xe0, 0x60, 0x2f, 0xd6, 0xd2, 0xae, 0x2a, 0x85, 0x4e, 0x5d, 0xc2, 0xe7, 0x60, 0x62, 0x48, 0x4a, 0x73, 0x20, 0x55}}
	return a, nil
}

var _transfer_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\x4d\x6f\xd3\x40\x10\xbd\xfb\x57\x0c\x39\x50\x47\xa2\xce\x05\x71\x88\xfa\x41\x55\x28\xd7\xaa\x14\x38\xaf\xed\x97\x78\xc1\xd9\xb5\x66\xc7\x4d\xab\xaa\xff\x1d\xed\xae\xd7\xd8\x09\xe2\x23\x97\xc8\xe3\x99\x37\x6f\xde\x7b\x5e\xad\xe8\xbe\xd1\x8e\x84\x95\x71\xaa\x12\x6d\x0d\x69\x47\x8a\x04\xbb\xae\x55\x02\xda\x58\xf6\x8f\x93\xf7\xd2\x28\xc9\x56\x2b\xaa\x6c\xdf\xd6\x54\x82\x7a\x87\x9a\xca\x27\x52\xe6\xc9\x1a\x90\x58\x72\x30\x35\x89\xfd\x01\xe3\xfc\xa3\x32\x56\x1a\x30\xa9\xaa\xb2\xbd\x09\xc3\x1e\x84\x1a\xe5\xa8\x04\x0c\x39\x08\xf5\x9d\x6f\x65\x54\xd0\x0f\x18\x86\x8b\x6c\xb5\xca\x02\x47\xd0\x5e\x4b\x53\xb3\xda\x93\xda\x79\x10\x52\x7e\x45\x83\x04\x4a\x1b\xb6\x3b\xda\x42\xae\x7e\x2d\xd9\x27\x86\xbe\xaf\x53\xac\x76\x10\x70\xa0\xe4\x2b\x93\xa3\xb2\x4c\xef\x3a\xcb\x42\x37\xbd\xd9\xea\xb2\xc5\xbd\xdf\x1f\x31\x17\xb3\xda\x22\x75\x7e\x7c\x54\xbb\x6e\xde\x38\x2d\x2d\xb2\x6c\x82\x9f\x47\xd2\x6b\xfa\x72\xa3\x1f\xdf\xbd\x7d\x43\x62\xd7\x74\x55\xd7\x0c\xe7\x96\xf4\x9c\x65\x44\x44\xc3\xa1\x5f\x55\xdf\x0a\x31\x9c\xed\xb9\xc2\xa0\x94\x6d\x6b\x17\x49\x0f\xaa\xfa\xaa\x62\x50\x09\x6d\xb6\xf1\x94\x0d\x98\x51\x07\xa8\x16\xe2\x4d\x90\x80\xb5\xa6\xf7\xb3\x13\x8a\x50\x8d\x3b\x3b\x46\xa7\x18\xb9\xd3\x5b\x03\x5e\xd3\x55\x2f\xcd\xa0\xe0\xc8\x6b\xe0\xf6\x09\x42\x8a\x18\x1b\x30\x4c\x85\xa4\x62\x9c\x3c\x71\xe4\xc4\x32\x6a\x7a\x08\xe0\x69\xce\x13\x09\x95\x3b\x6c\xe8\x7c\x68\x2e\x4a\xcb\x6c\xf7\x67\xaf\xa7\x82\x45\x56\x17\xb9\x97\x72\x4d\xc7\x6f\x3e\x8b\x65\xb5\xc5\xad\x92\x66\x39\xc2\xfb\xdf\xe5\x25\x75\xca\xe8\x2a\x5f\x5c\x07\xbf\x8d\x15\x8a\x0b\x8e\xc9\xda\x7d\xe4\x1a\x10\x5f\x2d\x96\xb3\x03\xbf\xa5\x84\x0d\x1a\x07\x53\xff\x7e\xa2\x43\xbb\x29\x46\xb1\xe9\xec\x74\x3c\xb8\x48\x99\x1d\xed\x8f\xff\x91\xff\x4b\x5c\x8e\x47\x54\xbd\xe0\x37\x62\xfb\xd5\x8c\x4a\x77\x1a\x46\x4e\x1c\x75\x7d\xd9\xea\x6a\x0c\xbc\x2d\xbf\xa3\x9a\x2b\x3d\x76\xd3\xf9\xe4\x53\xc8\xc5\x2e\xff\xc5\xc9\xe9\xae\xbb\xf8\x1d\xf2\x21\x7c\x28\x46\x2f\xc7\xf6\x62\x0b\xb9\x56\x9d\x2a\x75\xab\xe5\x29\x9f\x59\x97\x70\x6e\x03\xf7\x63\xf3\xc6\x28\x3c\xcf\x23\x9a\xe6\x5e\x2e\xf2\xff\x70\x3b\xce\xfc\xf9\xb2\xe0\xd2\x81\xf3\x1f\xd0\x59\xa7\xa3\xe2\xc9\x33\x93\x62\xa0\xcd\x11\x06\x1f\xaa\x33\x51\xa6\xa8\x23\xd8\x10\xe4\xb3\xd3\x79\x3e\x92\xf7\x2f\xd9\xcf\x00\x00\x00\xff\xff\xf7\x59\xaf\xcf\x7c\x05\x00\x00"

func transfer_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_transfer_tokensCdc,
		"transfer_tokens.cdc",
	)
}

func transfer_tokensCdc() (*asset, error) {
	bytes, err := transfer_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transfer_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x9d, 0x16, 0xc6, 0x17, 0xab, 0x4d, 0xba, 0x5d, 0xd7, 0x3e, 0xe9, 0x51, 0xf7, 0xc1, 0x21, 0x29, 0x68, 0xd8, 0x18, 0xbe, 0xb4, 0x85, 0xd9, 0xcb, 0x64, 0x28, 0x51, 0xe0, 0xca, 0xba, 0xde, 0x5a}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"burn_tokens.cdc":                                       burn_tokensCdc,
	"create_forwarder.cdc":                                  create_forwarderCdc,
	"generic_transfer.cdc":                                  generic_transferCdc,
	"metadata/setup_account_from_vault_reference.cdc":       metadataSetup_account_from_vault_referenceCdc,
	"mint_tokens.cdc":                                       mint_tokensCdc,
	"privateForwarder/create_account_private_forwarder.cdc": privateforwarderCreate_account_private_forwarderCdc,
	"privateForwarder/create_private_forwarder.cdc":         privateforwarderCreate_private_forwarderCdc,
	"privateForwarder/deploy_forwarder_contract.cdc":        privateforwarderDeploy_forwarder_contractCdc,
	"privateForwarder/setup_and_create_forwarder.cdc":       privateforwarderSetup_and_create_forwarderCdc,
	"privateForwarder/transfer_private_many_accounts.cdc":   privateforwarderTransfer_private_many_accountsCdc,
	"safe_generic_transfer.cdc":                             safe_generic_transferCdc,
	"scripts/get_balance.cdc":                               scriptsGet_balanceCdc,
	"scripts/get_supply.cdc":                                scriptsGet_supplyCdc,
	"scripts/get_supported_vault_types.cdc":                 scriptsGet_supported_vault_typesCdc,
	"scripts/metadata/get_token_metadata.cdc":               scriptsMetadataGet_token_metadataCdc,
	"scripts/metadata/get_vault_data.cdc":                   scriptsMetadataGet_vault_dataCdc,
	"scripts/metadata/get_vault_display.cdc":                scriptsMetadataGet_vault_displayCdc,
	"scripts/metadata/get_vault_supply_view.cdc":            scriptsMetadataGet_vault_supply_viewCdc,
	"scripts/switchboard/check_receiver_by_type.cdc":        scriptsSwitchboardCheck_receiver_by_typeCdc,
	"scripts/switchboard/get_vault_types.cdc":               scriptsSwitchboardGet_vault_typesCdc,
	"scripts/switchboard/get_vault_types_and_address.cdc":   scriptsSwitchboardGet_vault_types_and_addressCdc,
	"scripts/tokenForwarder/is_recipient_valid.cdc":         scriptsTokenforwarderIs_recipient_validCdc,
	"setup_account.cdc":                                     setup_accountCdc,
	"switchboard/add_vault_capability.cdc":                  switchboardAdd_vault_capabilityCdc,
	"switchboard/add_vault_wrapper_capability.cdc":          switchboardAdd_vault_wrapper_capabilityCdc,
	"switchboard/batch_add_vault_capabilities.cdc":          switchboardBatch_add_vault_capabilitiesCdc,
	"switchboard/batch_add_vault_wrapper_capabilities.cdc":  switchboardBatch_add_vault_wrapper_capabilitiesCdc,
	"switchboard/remove_vault_capability.cdc":               switchboardRemove_vault_capabilityCdc,
	"switchboard/safe_deposit_to_lnf.cdc":                   switchboardSafe_deposit_to_lnfCdc,
	"switchboard/safe_transfer_tokens.cdc":                  switchboardSafe_transfer_tokensCdc,
	"switchboard/safe_transfer_tokens_v2.cdc":               switchboardSafe_transfer_tokens_v2Cdc,
	"switchboard/setup_account.cdc":                         switchboardSetup_accountCdc,
	"switchboard/setup_royalty_account.cdc":                 switchboardSetup_royalty_accountCdc,
	"switchboard/setup_royalty_account_by_paths.cdc":        switchboardSetup_royalty_account_by_pathsCdc,
	"switchboard/transfer_tokens.cdc":                       switchboardTransfer_tokensCdc,
	"transfer_many_accounts.cdc":                            transfer_many_accountsCdc,
	"transfer_tokens.cdc":                                   transfer_tokensCdc,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"burn_tokens.cdc": {burn_tokensCdc, map[string]*bintree{}},
	"create_forwarder.cdc": {create_forwarderCdc, map[string]*bintree{}},
	"generic_transfer.cdc": {generic_transferCdc, map[string]*bintree{}},
	"metadata": {nil, map[string]*bintree{
		"setup_account_from_vault_reference.cdc": {metadataSetup_account_from_vault_referenceCdc, map[string]*bintree{}},
	}},
	"mint_tokens.cdc": {mint_tokensCdc, map[string]*bintree{}},
	"privateForwarder": {nil, map[string]*bintree{
		"create_account_private_forwarder.cdc": {privateforwarderCreate_account_private_forwarderCdc, map[string]*bintree{}},
		"create_private_forwarder.cdc": {privateforwarderCreate_private_forwarderCdc, map[string]*bintree{}},
		"deploy_forwarder_contract.cdc": {privateforwarderDeploy_forwarder_contractCdc, map[string]*bintree{}},
		"setup_and_create_forwarder.cdc": {privateforwarderSetup_and_create_forwarderCdc, map[string]*bintree{}},
		"transfer_private_many_accounts.cdc": {privateforwarderTransfer_private_many_accountsCdc, map[string]*bintree{}},
	}},
	"safe_generic_transfer.cdc": {safe_generic_transferCdc, map[string]*bintree{}},
	"scripts": {nil, map[string]*bintree{
		"get_balance.cdc": {scriptsGet_balanceCdc, map[string]*bintree{}},
		"get_supply.cdc": {scriptsGet_supplyCdc, map[string]*bintree{}},
		"get_supported_vault_types.cdc": {scriptsGet_supported_vault_typesCdc, map[string]*bintree{}},
		"metadata": {nil, map[string]*bintree{
			"get_token_metadata.cdc": {scriptsMetadataGet_token_metadataCdc, map[string]*bintree{}},
			"get_vault_data.cdc": {scriptsMetadataGet_vault_dataCdc, map[string]*bintree{}},
			"get_vault_display.cdc": {scriptsMetadataGet_vault_displayCdc, map[string]*bintree{}},
			"get_vault_supply_view.cdc": {scriptsMetadataGet_vault_supply_viewCdc, map[string]*bintree{}},
		}},
		"switchboard": {nil, map[string]*bintree{
			"check_receiver_by_type.cdc": {scriptsSwitchboardCheck_receiver_by_typeCdc, map[string]*bintree{}},
			"get_vault_types.cdc": {scriptsSwitchboardGet_vault_typesCdc, map[string]*bintree{}},
			"get_vault_types_and_address.cdc": {scriptsSwitchboardGet_vault_types_and_addressCdc, map[string]*bintree{}},
		}},
		"tokenForwarder": {nil, map[string]*bintree{
			"is_recipient_valid.cdc": {scriptsTokenforwarderIs_recipient_validCdc, map[string]*bintree{}},
		}},
	}},
	"setup_account.cdc": {setup_accountCdc, map[string]*bintree{}},
	"switchboard": {nil, map[string]*bintree{
		"add_vault_capability.cdc": {switchboardAdd_vault_capabilityCdc, map[string]*bintree{}},
		"add_vault_wrapper_capability.cdc": {switchboardAdd_vault_wrapper_capabilityCdc, map[string]*bintree{}},
		"batch_add_vault_capabilities.cdc": {switchboardBatch_add_vault_capabilitiesCdc, map[string]*bintree{}},
		"batch_add_vault_wrapper_capabilities.cdc": {switchboardBatch_add_vault_wrapper_capabilitiesCdc, map[string]*bintree{}},
		"remove_vault_capability.cdc": {switchboardRemove_vault_capabilityCdc, map[string]*bintree{}},
		"safe_deposit_to_lnf.cdc": {switchboardSafe_deposit_to_lnfCdc, map[string]*bintree{}},
		"safe_transfer_tokens.cdc": {switchboardSafe_transfer_tokensCdc, map[string]*bintree{}},
		"safe_transfer_tokens_v2.cdc": {switchboardSafe_transfer_tokens_v2Cdc, map[string]*bintree{}},
		"setup_account.cdc": {switchboardSetup_accountCdc, map[string]*bintree{}},
		"setup_royalty_account.cdc": {switchboardSetup_royalty_accountCdc, map[string]*bintree{}},
		"setup_royalty_account_by_paths.cdc": {switchboardSetup_royalty_account_by_pathsCdc, map[string]*bintree{}},
		"transfer_tokens.cdc": {switchboardTransfer_tokensCdc, map[string]*bintree{}},
	}},
	"transfer_many_accounts.cdc": {transfer_many_accountsCdc, map[string]*bintree{}},
	"transfer_tokens.cdc": {transfer_tokensCdc, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
