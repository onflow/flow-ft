// Code generated by go-bindata. DO NOT EDIT.
// sources:
// ../../../transactions/burn_tokens.cdc (1.476kB)
// ../../../transactions/create_forwarder.cdc (2.528kB)
// ../../../transactions/generic_transfer.cdc (1.254kB)
// ../../../transactions/metadata/setup_account_from_vault_reference.cdc (1.986kB)
// ../../../transactions/mint_tokens.cdc (1.714kB)
// ../../../transactions/privateForwarder/create_account_private_forwarder.cdc (1.428kB)
// ../../../transactions/privateForwarder/create_private_forwarder.cdc (943B)
// ../../../transactions/privateForwarder/deploy_forwarder_contract.cdc (403B)
// ../../../transactions/privateForwarder/setup_and_create_forwarder.cdc (1.82kB)
// ../../../transactions/privateForwarder/transfer_private_many_accounts.cdc (1.144kB)
// ../../../transactions/safe_generic_transfer.cdc (1.831kB)
// ../../../transactions/scripts/get_balance.cdc (474B)
// ../../../transactions/scripts/get_supply.cdc (187B)
// ../../../transactions/scripts/get_supported_vault_types.cdc (971B)
// ../../../transactions/scripts/metadata/get_token_metadata.cdc (554B)
// ../../../transactions/scripts/metadata/get_vault_data.cdc (618B)
// ../../../transactions/scripts/metadata/get_vault_display.cdc (612B)
// ../../../transactions/scripts/metadata/get_vault_supply_view.cdc (695B)
// ../../../transactions/scripts/switchboard/check_receiver_by_type.cdc (562B)
// ../../../transactions/scripts/switchboard/get_vault_types.cdc (690B)
// ../../../transactions/scripts/switchboard/get_vault_types_and_address.cdc (721B)
// ../../../transactions/scripts/test/example_token_vault_display_strict_equal.cdc (1.996kB)
// ../../../transactions/scripts/tokenForwarder/is_recipient_valid.cdc (436B)
// ../../../transactions/setup_account.cdc (1.323kB)
// ../../../transactions/switchboard/add_vault_capability.cdc (1.415kB)
// ../../../transactions/switchboard/add_vault_wrapper_capability.cdc (1.443kB)
// ../../../transactions/switchboard/batch_add_vault_capabilities.cdc (1.34kB)
// ../../../transactions/switchboard/batch_add_vault_wrapper_capabilities.cdc (1.591kB)
// ../../../transactions/switchboard/remove_vault_capability.cdc (1.155kB)
// ../../../transactions/switchboard/safe_deposit_to_lnf.cdc (4.493kB)
// ../../../transactions/switchboard/safe_transfer_tokens.cdc (2.153kB)
// ../../../transactions/switchboard/safe_transfer_tokens_v2.cdc (1.932kB)
// ../../../transactions/switchboard/setup_account.cdc (1.685kB)
// ../../../transactions/switchboard/setup_royalty_account.cdc (5.883kB)
// ../../../transactions/switchboard/setup_royalty_account_by_paths.cdc (5.958kB)
// ../../../transactions/switchboard/transfer_tokens.cdc (1.551kB)
// ../../../transactions/transfer_many_accounts.cdc (1.418kB)
// ../../../transactions/transfer_tokens.cdc (1.444kB)

package assets

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	clErr := gz.Close()
	if clErr != nil {
		return nil, clErr
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _burn_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x54\x41\x6f\x9b\x4c\x10\xbd\xf3\x2b\xe6\xe3\x10\xd9\x87\xc0\x57\xa9\xea\xc1\x8a\x9b\x26\x51\x73\xac\xaa\x26\x4d\xcf\x03\x8c\xcd\xb6\xb0\x8b\x66\x87\x3a\x51\x94\xff\x5e\xed\x2c\x60\x68\xe2\x72\x30\xf2\xee\xdb\x37\xef\xcd\xbe\x21\xcf\xe1\xbe\x36\x1e\x84\xd1\x7a\x2c\xc5\x38\x0b\xc6\x03\x82\x50\xdb\x35\x28\x04\x3b\xc7\xe1\xef\x6c\x5f\x6a\x94\x24\xcf\xa1\x74\x7d\x53\x41\x41\xd0\x7b\xaa\xa0\x78\x02\xa9\x09\xb0\x6a\x8d\x05\x2c\x4b\xd7\x5b\x01\x71\x50\xf4\x6c\x41\xdc\x2f\xb2\x3e\x1c\xda\xb1\x6b\x03\xd0\x30\x78\x71\x4c\x15\x3c\x60\xdf\x04\xbe\x44\xb5\x90\x1e\x30\x76\x0f\xd8\x2a\xc5\x61\xac\x82\xd0\x21\x63\x4b\x42\x1c\x78\x43\xb1\x99\xaa\x24\x31\x6d\xe7\x58\xe0\xb6\xb7\x7b\x53\x34\x74\x1f\x4a\xc6\x72\xe9\x62\x2d\x1d\x91\x9f\x1f\xb1\xed\x96\xc0\xf9\x52\x9a\x24\x33\xfe\x55\x94\xb3\x81\xef\xb7\xe6\xf1\xc3\xfb\x35\x3c\x27\x09\x00\x40\x9e\xe7\xd1\x01\x30\x79\xd7\x73\x49\xda\x1f\xa8\x5d\x53\xf9\x28\x52\xbd\xc7\x55\x64\x82\x82\x82\xbb\xe0\x92\x2a\xa5\x68\x48\xe0\x77\xa0\xd8\xc0\xa7\x85\xd2\x2c\xb6\x66\xaa\xf3\x8d\x76\xc4\x64\x43\x89\xe8\x7f\xe1\xe0\x4a\x3b\xef\x8a\x9f\x54\xca\xc4\xab\xd7\xb1\x81\xb3\x39\x32\x53\xa4\xf1\xc2\x28\x8e\x8f\xf4\xf7\x2a\x56\xb0\x01\xdf\x77\x5d\xf3\x04\x6e\x37\x8a\x2f\x68\xe7\x98\xb4\x66\x10\x3e\xd1\x47\xe0\xb5\xee\x8e\xad\x89\x84\x1d\x53\x87\x4c\x2b\x6f\xf6\x96\x78\x03\xd8\x4b\xbd\xba\x76\xcc\xee\xf0\x80\x4d\x4f\x6b\x38\xbb\x8a\x21\x99\x5a\x19\x1e\x4f\xcd\x2e\x9b\xb3\xc2\x76\xe1\x32\x53\x81\x77\x0a\x38\x9e\xca\x73\xf8\x61\xa4\xae\x18\x0f\xf0\xee\xff\x51\xf4\x18\xb5\x21\x93\xda\x62\x30\x56\x73\x87\x7b\x5a\xd6\x8c\xbb\x17\xe7\x10\x05\x67\x03\x28\x2b\x54\xf2\x85\xca\x5f\x5e\xce\x58\x11\x8b\x26\xb8\x59\xa8\xd4\x8b\xfb\xb8\x0a\x0a\x36\xf0\x7a\xe7\x2e\x92\x7f\x45\xa9\xd7\xff\x4d\x3a\xc2\x93\x1d\x06\xd6\x29\x6f\xf1\xbd\x5e\x98\xbd\x61\x0a\xa3\x89\xc0\x7f\x27\x62\x18\x3f\xfd\x9d\x02\x79\xca\x73\x84\x6d\x4f\x58\xfe\x47\x66\xde\x74\xa6\x88\xb9\xb3\x85\xb1\xcb\x4b\xe8\xd0\x9a\x72\x95\xde\xe8\x40\x5b\x27\x10\x0b\x9d\xb6\x31\x1a\x48\x23\xd5\x4b\xec\x01\x3d\x52\xd9\x0b\xc1\xf3\xc4\x1f\x92\xa8\xf3\xc4\x7a\x81\x93\xb5\xac\xd4\x3e\x7d\xa1\xc3\xb5\xee\xae\x66\x5d\x8c\xf8\x2c\xbc\x54\xbe\x1f\x2c\x5d\x9c\x1f\xe3\x30\x83\x57\xe4\x85\xdd\xd3\x70\x6c\x2e\xa7\x73\x5e\x66\x5a\x4e\x85\x15\xb6\xdb\x37\xc2\x7d\x0e\xe3\x35\xa7\xaf\xa6\xaf\xed\xbd\x84\xef\x5e\x45\xc1\xc6\xfc\x13\xab\x47\xd2\x41\xc4\x4b\xf2\x27\x00\x00\xff\xff\x5a\xbe\xd0\x96\xc4\x05\x00\x00"

func burn_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_burn_tokensCdc,
		"burn_tokens.cdc",
	)
}

func burn_tokensCdc() (*asset, error) {
	bytes, err := burn_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "burn_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd7, 0x15, 0x80, 0x8f, 0x10, 0xa, 0xff, 0x73, 0x76, 0x78, 0xd5, 0x83, 0xa2, 0x73, 0x18, 0xa8, 0xcd, 0x81, 0x7, 0xba, 0x49, 0x95, 0xc, 0xeb, 0xe7, 0x61, 0xbe, 0xb8, 0xfe, 0x37, 0xab, 0x67}}
	return a, nil
}

var _create_forwarderCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x54\xcd\x6e\x1b\x37\x10\xbe\xf3\x29\x06\x3e\xa4\xb2\x21\xaf\xd0\xbf\x8b\xe0\x14\x48\xd3\xba\x28\x50\x14\x41\xeb\xe6\xda\x8c\xc8\x91\xc8\x7a\x45\x2e\xc8\x59\x6f\x84\xc0\xef\x5e\x90\xdc\xa5\xb8\xdb\x54\x69\x0f\xd1\x49\x4b\x0e\x67\xbe\x3f\x72\x73\x73\x23\xc4\x83\x36\x01\xd8\xa3\x0d\x28\xd9\x38\x0b\x26\x00\x02\xd3\xb1\x6b\x91\x09\xf6\xce\xc7\xcf\x6a\x9f\x35\x32\x48\xd7\xb7\x0a\x76\x04\x7d\x20\x25\xd8\x41\x20\x86\xbe\x03\xb4\x80\x52\xba\xde\x32\xb0\x8b\x87\x07\xf4\x0a\x14\x75\x2e\x18\x26\x05\xec\x1e\xc9\x86\xb8\x87\xd6\xb1\x26\x0f\x9e\x24\x99\x27\xf2\x8d\x10\x3f\xef\x01\xed\xc9\x59\x82\x40\x56\x85\xba\x38\xce\xf1\x5f\x04\xb8\xcf\x1d\xc9\xc3\x6f\xe3\xb9\xb5\x60\x4d\xe5\x0b\x06\xd3\xb6\xf0\x57\x1f\xb8\x0c\x67\xed\x02\x55\xbd\x62\xf9\x5b\xec\x5b\xce\x4c\x34\x06\xd8\x11\x59\x11\x19\x60\x48\xdb\x9e\xa4\xe9\x0c\x59\x06\xb4\x0a\xe8\x68\xe2\x1f\xa0\xa7\xb8\x92\x0e\x19\xab\x8c\x44\xa6\x20\x06\x6d\xa4\x4e\xe8\xa6\x81\x91\xa5\x9e\x06\x36\xa3\xc0\x03\x9e\xd6\x60\x22\x3f\x70\xfb\xfd\xad\xd4\x68\x2c\x04\xf2\x4f\x46\x12\x0c\x68\x39\x41\x3b\x3a\x6b\xd8\x79\x18\xb4\x8b\x36\x8c\x0d\x8d\x3d\x88\x33\x7c\xc3\x6b\x30\x0c\x12\x2d\x0c\xc8\x52\x67\x58\x69\x2b\x10\xc1\xa0\xc9\x53\x05\x00\x24\x1e\x09\xf6\xde\x1d\x1b\x21\x7e\x67\xea\xc6\xca\xec\x56\xb6\x2a\xc0\x60\x58\xe7\x03\x85\x85\xdf\x0a\xf1\x65\x03\x0f\x9a\xe0\xbe\xb7\x07\xb3\x6b\x09\x1e\x52\x85\x74\x96\x3d\xca\xa8\x02\x93\xdf\xa3\x24\x08\x3a\xe5\x01\x5b\x4f\xa8\x4e\x31\x17\x8a\xba\xd6\x9d\x48\x41\x70\x47\x4a\xa0\xc4\x57\xb9\x1b\x76\x5d\x6b\x24\xc6\x7e\x3c\xef\x37\x76\xa9\x4e\x37\xe2\xeb\x7c\xa8\x72\x64\x8c\xd7\x58\xac\xf1\x89\x00\x47\x43\x63\x58\x39\xe5\x39\x37\xf6\x84\x4c\x4a\x00\x40\x32\x32\xb0\xf3\xa4\xc0\x58\x30\x1c\xd2\x17\x1e\x28\x73\x47\xe8\xfa\x5d\x6b\x82\x26\x55\xb2\x24\xbe\x69\xe0\x87\x04\x24\xe9\xf9\x2e\xb1\xbf\x2f\x9e\x34\x52\xc9\x77\x67\xf0\x29\xa5\xca\xec\xf7\xe4\x2b\x98\xe2\xdb\x26\x66\x16\x10\x2c\x0d\xf0\x2a\x2f\x6e\xe1\x75\x42\x96\xda\x4e\x7c\xac\xf3\x47\x6c\xdb\xd3\x3a\xc1\x65\x4d\x16\x7c\x6f\xf3\xe4\x4c\xe4\xcf\x62\x4d\x1e\x5d\x5d\xca\x7c\xe8\x40\xcc\xc6\x1e\x60\x76\x21\xa2\xf5\xb3\x41\x39\xc0\x8b\xa0\x37\xe2\x66\x23\x84\x39\x76\xce\x73\xf1\x3b\xdb\x9d\x1a\x5c\xcd\xd6\xae\xa6\xca\x1f\xdf\xe3\xb1\x9b\x17\xd6\x4b\xa5\x6e\x21\xdd\x58\xba\x58\xbd\x12\xa2\xa2\xb4\x9a\x1e\x86\x2d\xbc\x52\xca\x53\x08\xd7\xf0\x41\x24\x9e\x9d\xa7\x0e\x3d\xad\x50\x4a\xde\x02\xf6\xac\x57\xdf\x3b\xef\xdd\xf0\x16\xdb\x9e\xae\xe1\xc5\xa8\x73\x39\x10\x7f\x9b\x0d\xfc\x44\x3c\xb1\xce\xda\x48\xec\x70\x67\x5a\xc3\xa7\x31\x3a\x67\x95\x76\x94\x70\x9e\xaf\xb4\x2b\x9d\x5a\xe2\x2a\x8f\x2f\xa3\xec\xe3\xc0\x82\xf9\xba\x14\xc7\x5f\x53\xe6\x18\x0a\xcd\x81\xf8\xee\xc5\x87\x99\x9e\xcd\xe4\xd6\xf3\x77\xab\x5a\xbf\xb2\xfe\x26\x86\x53\xbe\x41\xd6\xd7\x33\x46\x55\x8e\x4a\x38\x72\xd4\xe3\xb5\x30\x3c\xbd\x77\x4b\xef\x95\x9b\x72\x52\xbd\x31\x35\xbf\xa7\x74\x9f\xee\x6e\x97\xce\x35\x39\x8a\xbf\xd2\x50\x5e\xe2\x55\xd1\x62\x7b\x96\xe5\x2c\x40\x34\xa9\x19\xef\x5a\x13\x61\xad\xee\x6e\x53\xf7\x35\xb0\xdb\xc2\x66\xdc\xda\x50\xc5\xbb\xf4\x9e\xb3\xfd\xc3\xb6\xc6\x3e\x26\xd8\xf4\xde\x84\x94\xf5\x8f\x78\x59\x8e\xc4\xf7\x36\x4e\x5f\xca\xff\x49\x8d\x1b\xa9\x49\x3e\x5e\x72\x29\x46\xab\xb6\xf8\x9f\x73\x7a\x3b\xbe\x28\x9f\x76\x74\x6a\xf2\x3c\x63\xfb\xcb\xc4\x35\xbe\x1c\x67\x9b\x2e\x32\x8e\xd6\xa5\xb7\x6f\x1a\xf3\x1a\x3b\x78\xf9\x11\x74\x93\x21\x26\x84\x9e\x2e\x11\x9d\xb1\xbc\x6c\x56\x29\x5d\x98\x3f\x1b\x3c\x89\xb2\x44\xb9\x06\xe4\x2d\xfc\xaf\xf0\xcf\x04\x2a\x28\x72\xf5\x45\x71\x4a\xed\x7f\x55\x67\x79\x09\x16\xc3\x3e\xb7\x4c\x35\xde\xac\xd3\x26\xed\xcb\x7f\xbb\x34\x39\x4c\xcf\x7f\x07\x00\x00\xff\xff\xcb\x05\xda\x40\xe0\x09\x00\x00"

func create_forwarderCdcBytes() ([]byte, error) {
	return bindataRead(
		_create_forwarderCdc,
		"create_forwarder.cdc",
	)
}

func create_forwarderCdc() (*asset, error) {
	bytes, err := create_forwarderCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "create_forwarder.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb, 0x7b, 0xa8, 0xd4, 0x3e, 0x33, 0xb4, 0x2f, 0x6, 0xd2, 0x23, 0x8e, 0x77, 0xa1, 0xa7, 0x3d, 0xcb, 0x60, 0xd, 0x70, 0xdd, 0x3c, 0x20, 0x1f, 0xf, 0x98, 0xd4, 0x54, 0x65, 0xdb, 0xaf, 0x43}}
	return a, nil
}

var _generic_transferCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x94\xcb\x6e\xdb\x3c\x10\x85\xd7\xf1\x53\x9c\x78\xf1\xff\x36\xe0\x28\x9b\xa2\x0b\x23\x97\xa6\x01\xd2\x6d\x90\xa6\xe9\x7a\x2c\x8e\x2d\x36\x34\x29\x90\x23\x3b\x46\xe0\x77\x2f\x38\x92\x65\x2b\x41\x57\x96\x47\x73\xf9\xe6\xf0\x50\x76\x5d\x87\x28\x78\x68\xfc\xca\x2e\x1c\x3f\x87\x57\xf6\x58\xc6\xb0\xc6\x78\x10\x1b\x8f\x46\x97\x97\x97\xb8\x27\x8f\x9a\x52\x82\xf5\x20\xbf\x43\x92\x10\x69\xc5\xa8\x49\x2a\x90\x37\x88\x5c\xb2\xdd\x70\x6c\x23\xd6\x27\x61\x32\x08\x4b\xfc\x69\x92\x40\x2a\x86\xe1\x25\x35\x4e\x0a\xed\xf7\x5c\xd9\x04\xc7\x92\xb0\x0b\x0d\xca\x2a\x84\xc4\x9a\x25\x0a\x92\x83\x5b\xf2\x02\x09\x48\xec\x0d\x28\x61\xcb\xce\x69\x4a\x49\x35\x2d\xac\xb3\xb2\xfb\x9c\x67\xf3\xa3\x8e\xd0\x31\x77\x7e\xd7\x75\x54\xac\x92\x3c\x16\xac\x8b\xb0\xf6\x24\x0f\x8a\xab\x66\xcd\x5e\x50\x71\xe4\x19\x52\xc0\x96\x9c\x92\xa5\x2a\x34\xce\x68\x9f\xf6\x11\x65\xc5\xe5\xeb\xb1\x62\x43\xae\xe1\x94\x67\xaf\xe9\x95\x91\x9a\xd8\xee\x60\xbd\xb0\x37\x6c\x4e\x47\xdb\x74\x18\x6b\xbd\xe2\x49\x24\x9f\xa8\x14\x1b\xfc\x84\xd6\xa1\xf1\x32\xc7\xaf\x07\xfb\xf6\xf5\xcb\x0c\x12\xe6\xb8\x33\x26\x72\x4a\x33\xdd\x8b\xe3\x23\x49\x35\xc7\xcf\x56\xf6\xfc\x67\xd6\x4b\xde\xbe\x7a\x6c\x16\xce\x96\xf9\x79\x8a\xf7\xd1\x08\x00\x54\x67\xc6\x4b\x96\x1d\x91\x53\x68\x62\x99\x09\x49\x50\x05\x67\xd2\x51\xf0\xd4\x46\x29\x32\x16\x6c\xfd\x0a\x4a\xb7\xe4\x18\xd9\x68\x2b\xc7\x02\xe1\x75\xad\xbd\xe6\xf8\x36\xf0\x48\xa1\xd1\x76\x66\x1d\xb9\xa6\xc8\x93\x64\x57\x9e\xe3\x1c\xd4\x48\x35\xf9\x1e\x62\x0c\xdb\x97\x2c\xd7\x14\xff\xdd\x95\x65\x5e\xb7\xc7\xec\x50\x7f\xb0\x80\x10\x79\xc9\x91\x7d\xe6\x0c\xca\xd7\x36\xfa\x3f\xa9\xe5\xd8\x60\xa3\xb3\x0e\x75\x99\x4b\x23\x4f\xbc\xc4\x75\x97\x5c\x74\xee\x2c\x16\x3a\xf7\x4a\x19\x86\xc4\xbf\xad\x54\x26\xd2\x96\x16\x2e\x23\xbd\x0f\xdf\x3e\xc6\xb0\xb1\x86\xe3\xfe\x66\x92\xaf\xc4\xfc\xe4\x0c\xa6\xa3\xb3\xb3\xb3\xdb\x5b\xd4\xe4\x6d\x39\x19\xdf\xab\x2f\x7c\x10\xb4\xb3\x3e\xf3\x87\x6d\x8b\xaf\x1a\x9d\x8f\xa7\xc7\x9d\x13\xbb\x65\xd1\x8b\x8a\xab\x8b\x7e\x93\x62\xdb\xe1\xf5\xce\x68\x7f\xa7\x5a\xbb\x6f\x5b\xf0\x1b\x97\x8d\x30\xde\x07\x62\x44\x2e\x6d\x6d\xb3\x3b\xaf\xb1\x62\xe9\xb4\x9e\x48\x98\x7e\x4c\x53\xef\xb4\xb2\xf5\x45\x45\x7f\xb7\x2c\xa7\x83\x7c\x1f\xd5\x79\xea\x6a\xf7\x37\x93\x53\x0b\x4e\xcf\x07\xc7\xf9\xdc\x39\xe8\x60\x30\xfd\xb6\xfc\xf3\x40\x0f\x6a\xf5\x9f\x91\xe3\x25\xef\x9b\x9e\x30\x17\x86\xeb\x90\xac\x74\xc7\x73\x75\x31\xd4\xf2\xa0\xd3\xfe\x6f\x00\x00\x00\xff\xff\xf5\xe9\xda\xde\xe6\x04\x00\x00"

func generic_transferCdcBytes() ([]byte, error) {
	return bindataRead(
		_generic_transferCdc,
		"generic_transfer.cdc",
	)
}

func generic_transferCdc() (*asset, error) {
	bytes, err := generic_transferCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generic_transfer.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xfb, 0xa, 0x47, 0xee, 0x45, 0x10, 0x59, 0xa1, 0xa6, 0xab, 0x61, 0xf3, 0xf5, 0xf4, 0xbd, 0xaa, 0xa2, 0xec, 0xcb, 0x54, 0xad, 0x1c, 0x19, 0xf6, 0x3b, 0x15, 0x63, 0x2e, 0xb4, 0xc3, 0x47, 0xb}}
	return a, nil
}

<<<<<<< HEAD
var _metadataSetup_account_from_vault_referenceCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\xc1\x6e\xdb\x30\x0c\xbd\xfb\x2b\x88\x1c\x3a\x07\x48\x9d\x7b\x90\xb4\x68\xb3\x75\xa7\x01\x45\x97\xf5\xce\xd8\x74\x2c\xd4\x91\x0c\x89\x4e\x56\x14\xf9\xf7\x41\x92\xad\x58\x6e\xba\x1e\xb6\x1c\x02\x83\x26\x9f\xde\x7b\xe2\xb3\xd8\x37\x4a\x33\x3c\xb4\x72\x27\xb6\x35\x6d\xd4\x0b\x49\x28\xb5\xda\xc3\x24\xaa\x4d\x92\x4b\x9d\x3f\x88\xb1\x40\xc6\x67\x41\x47\x73\x69\x2c\x6a\x08\x18\x97\xc6\x72\x25\x59\x63\xce\x66\xde\xb2\xa8\x05\xbf\xce\x47\xb3\xc9\x7c\x3e\x87\x4d\x25\x0c\xb0\x46\x69\x30\x67\xa1\x24\x08\x03\xc7\x0a\x19\x50\x02\xe6\xb9\x6a\x25\xc3\x51\xb5\x75\x01\xba\x95\x6e\x82\x15\x18\x62\x10\x6c\xa8\x2e\xa1\x6d\x6c\x61\x8f\x12\x77\x04\x65\xc7\x14\xd8\x52\x35\x99\x47\x2f\x5b\xe9\xa0\xdd\x74\x6b\xc8\xc0\xc1\xd1\x64\x05\x2f\x52\x1d\xe1\x58\x91\xa6\x1e\xd6\xe2\x55\x04\x07\x6c\x6b\x76\x03\x42\x82\x61\xa5\x2d\x3c\xca\xc2\xb6\xe5\x9a\x90\xc9\xb5\xd1\xbe\xe1\x57\xdf\x9c\x25\xc9\x40\x46\x8a\x45\xa1\xc9\x98\x05\xdc\xf9\x87\x19\x34\xed\xb6\x16\xf9\x23\x72\xb5\x80\xc7\xf0\x3c\x85\xb7\x24\x01\x00\x68\x34\x35\xa8\x29\x35\x62\x27\x49\x2f\x00\x5b\xae\xd2\x9f\x78\xa0\x67\xac\x5b\x9a\xc1\x1a\x1b\xdc\x5a\x1f\x05\x99\x29\x5c\xdd\x79\x6f\xec\x38\x74\xbf\xf9\x1c\xee\x95\xd6\xea\x08\x08\x9a\x4a\xd2\x24\x73\xa7\x2b\x08\x72\x4a\xa8\x00\x25\x5d\xad\x41\x63\xa8\x08\x36\x23\x0f\xab\x67\xba\xe1\x80\x9a\x18\x34\x19\x55\x1f\x48\x3f\x51\x09\x2b\xd8\x11\x77\x44\x7a\xc1\xd3\xd0\x6d\x7f\x59\x3e\x60\x9d\x6d\x1d\xbb\xe5\xd5\x5b\xb4\x08\xd9\x53\x07\x79\xba\x49\xcf\x87\xc6\x38\xb7\xb7\xd0\xa0\x14\x79\x3a\x59\xbb\x5d\x90\x8a\x61\xfb\x89\x56\x7b\xc9\x81\x2e\x4c\xa6\xc9\xd0\xa8\x5f\xc6\x5e\x20\x72\x3c\xac\x89\xb5\xa0\x83\xbf\xdb\x87\x8d\xa5\x07\x91\xfa\x92\x5d\x6d\xf5\x97\xd0\x64\x3b\x62\x3f\x9a\x5a\x06\xbd\xb8\xc5\xd0\xb9\x98\xcb\x77\xe2\xfe\x40\x4b\xfc\x2b\x32\x7a\xf2\x2e\x47\xee\xef\xcc\x67\x4c\x27\x4c\xac\x3a\x72\xd9\xb0\xd8\xfb\x06\xe9\x64\x53\x51\x7f\xfd\xde\x9f\x42\x14\xf2\x0b\x83\xd8\x37\x35\xed\x49\xf2\xc0\xba\xa2\xa7\x30\x72\x6d\xed\x37\x1f\x41\xd2\x71\xb8\xfb\xd0\x1a\x21\x77\x0e\xc0\x87\xe3\x9b\x7d\xe7\x68\x84\xf4\x81\x90\x46\x14\x34\x56\x1a\xe9\xa1\xf3\xd8\xf2\x7a\xa0\x23\x1b\xa3\xa6\x31\x2f\x1b\x13\x10\xdc\xdf\x7f\xb7\xd0\xa1\xc3\x47\x2a\xeb\x62\x9c\x19\x3c\x50\xba\xbc\x3e\x1f\x36\x03\x56\x8b\xa1\x99\x7d\xab\x5f\xc4\x8b\x0e\xf8\x4d\x85\xb0\xdf\xaf\x50\x2a\x3d\xb0\x90\x7e\x37\x2a\x98\xa2\x29\x27\x61\xb7\x50\x48\x26\x5d\x62\x4e\xa3\x4c\xf9\xd7\x6b\x6c\x60\xd5\xb3\x8d\x92\xd3\x53\x17\xc6\xb4\xb4\xbc\x7a\x8b\xd6\x2f\x7b\xea\xe6\x4f\x37\xe9\x87\x22\x46\x5e\x44\xe8\x4e\x8b\xa9\xd2\x01\x8f\x19\x20\xc7\x96\xf4\x2f\xff\x97\x27\x5b\xac\xd1\xc6\xce\x7e\x54\x43\x4a\x83\x3f\x26\x32\x68\xef\x03\xd6\x67\xe9\x53\x9f\xe2\x6f\xd0\x65\xd3\xee\xfd\xf9\x33\xf8\xf0\x63\xf4\x4f\x5e\xbe\xa7\xfc\xde\xd2\xae\x07\xcf\xa8\xa7\xe4\x94\xc0\x9f\x00\x00\x00\xff\xff\xe4\xc6\x2b\xaf\xc2\x07\x00\x00"
=======
var _metadataSetup_account_from_vault_referenceCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x94\x41\x6f\x9b\x4c\x10\x86\xef\xfc\x8a\x91\x0f\xf9\x88\xe4\xe0\xbb\xe5\x24\x4a\xf2\x35\x3d\x55\x8a\x52\xb7\xf7\x31\x0c\xb0\x0a\xec\xa2\xdd\x01\x1a\x45\xfe\xef\xd5\xee\xc2\x1a\x90\xdd\x56\x6a\x39\x58\x68\x3c\x33\xfb\xbc\xef\xce\x20\xea\x46\x69\x86\xe7\x56\x16\xe2\x50\xd1\x5e\xbd\x91\x84\x5c\xab\x1a\x56\xb3\xd8\x2a\x3a\x97\xf9\x85\x18\x33\x64\xfc\x2e\xa8\x37\xe7\xca\x66\x09\xa1\xc7\xb9\xb2\x45\x66\xb4\xd9\x6c\x60\x5f\x0a\x03\xac\x51\x1a\x4c\x59\x28\x09\xc2\x40\x5f\x22\x03\x4a\xc0\x34\x55\xad\x64\xe8\x55\x5b\x65\xa0\x5b\xe9\x2a\x58\x81\x21\x06\xc1\x86\xaa\x1c\xda\xc6\x06\x6a\x94\x58\x10\xe4\x03\x17\xb0\x05\x33\x89\xef\x9e\xb7\xd2\xb5\x76\xd5\xad\x21\x03\x9d\x83\x62\x05\x6f\x52\xf5\xd0\x97\xa4\x69\x6c\x6b\xfb\x95\x04\x1d\xb6\x15\xbb\x02\x21\xc1\xb0\xd2\xb6\x3d\xca\xcc\xa6\xa5\x9a\x90\xc9\xa5\x51\xdd\xf0\xbb\x4f\x4e\xa2\x68\x22\x23\xc6\x2c\xd3\x64\xcc\x16\x1e\xfc\xcb\x1a\x9a\xf6\x50\x89\xf4\x05\xb9\xdc\xc2\x4b\x78\xbf\x86\x8f\x28\x02\x00\x68\x34\x35\xa8\x29\x36\xa2\x90\xa4\xb7\xf0\xd0\x72\xf9\xe0\x0d\xb0\x39\x30\x3c\x9b\x0d\x3c\x2a\xad\x55\x0f\x08\x9a\x72\xd2\x24\x53\x07\x1f\xa8\x1d\x2e\x65\xa0\xa4\x8b\x35\x68\x0c\x65\xc1\x4b\xe4\x69\xf4\xc4\x14\x0e\xa8\x88\x41\x93\x51\x55\x47\xfa\x95\x72\xb8\x85\x82\x78\x00\x19\x55\x5d\x87\x6c\xfb\x24\x05\xf1\x13\x36\x78\x10\x95\xe0\xf7\xf8\xd4\x73\x91\x76\x70\xdc\xbb\xab\x8f\xd9\x1c\x24\xaf\xc3\x61\xc7\xbb\x78\x5e\x70\x7f\x0f\x0d\x4a\x91\xc6\xab\x27\x37\x00\x52\x31\x1c\x7e\xa3\xdd\xde\x6c\xc0\x87\xd5\x75\x34\x35\xee\x9b\xb1\xb7\x86\x3c\x2f\xd6\xc4\x5a\x50\xe7\x2f\xf4\x79\x6f\xa1\x60\xe6\x46\xce\x2e\x76\xfb\x8b\xbd\xb0\x16\xf8\xd2\xd8\x12\x8c\x92\xb6\x53\x27\xe7\x2c\x9f\x89\xc7\x03\x2d\xf8\xff\xc8\xe8\xe1\xdd\xaa\xb8\x9f\x13\xcf\x12\x27\x54\xdc\x0e\x70\xc9\x34\x38\xfa\x06\xf1\x6a\x5f\xd2\x38\x0e\xde\x9f\x4c\x64\xf2\x3f\x06\x51\x37\x15\xd5\x24\x79\x62\x5d\x36\x22\x2c\x5c\x7b\xf2\xe3\x8e\x20\xa9\x9f\x0e\x3c\xb4\x46\xc8\xc2\x35\xf0\x1b\xf1\xc9\xfe\xe7\x30\xc2\xca\x81\x90\x46\x64\xb4\x54\x3a\xd3\x43\xa7\xb2\xdd\xcd\x44\x47\xb2\xec\x1a\xcf\xb9\xbe\x62\x47\x20\x78\xbc\xff\x61\xc0\x43\x86\xdf\xa3\xc4\x60\x47\xf1\xee\xe6\x74\xc8\x1a\x58\x6d\xa7\x26\x26\xc3\x7a\xfb\x89\x3d\xab\xdc\x8f\x34\xa4\x61\xc8\x21\x57\x7a\x62\x1d\xfd\x68\x54\x30\x43\x53\x4a\xc2\x4e\x9f\x90\x4c\x3a\xc7\x94\x96\x4c\x95\x90\x6f\xbb\xab\x8f\xd9\x38\x25\xaf\x43\xd9\xf1\x2e\x9e\x6d\xc1\x94\x74\x6c\x6d\x51\xd7\xb3\x2c\x46\x5d\x10\x5f\xd4\x15\x72\xff\x85\xc0\x03\x56\x68\x77\xc7\x7e\x0e\xc3\xaa\x05\xb1\xe6\x8f\xd4\x3e\xfa\x1e\x6b\xb8\xf8\x2d\xb8\x68\x42\x3d\x54\xfc\xb5\x09\xc7\xe8\x18\xc1\xcf\x00\x00\x00\xff\xff\x8e\xd5\x2a\x6e\x1d\x07\x00\x00"
>>>>>>> sisyphusSmiling/cadence-test-framework

func metadataSetup_account_from_vault_referenceCdcBytes() ([]byte, error) {
	return bindataRead(
		_metadataSetup_account_from_vault_referenceCdc,
		"metadata/setup_account_from_vault_reference.cdc",
	)
}

func metadataSetup_account_from_vault_referenceCdc() (*asset, error) {
	bytes, err := metadataSetup_account_from_vault_referenceCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metadata/setup_account_from_vault_reference.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x46, 0x39, 0x16, 0x6d, 0x0, 0x6c, 0x7a, 0xc8, 0x76, 0x3f, 0xb0, 0xce, 0xb8, 0xcc, 0x63, 0x93, 0xcf, 0x1a, 0x5c, 0x86, 0x57, 0x30, 0xe9, 0x1, 0x25, 0x82, 0xc1, 0xcd, 0xaf, 0x16, 0x16, 0x10}}
	return a, nil
}

var _mint_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x54\xcb\x6e\xdb\x30\x10\xbc\xeb\x2b\x16\x3a\x04\x32\x9a\xc8\x97\xa2\x07\x23\x4e\xe0\xb4\x4d\x4f\x2d\x82\xbc\xee\x2b\x6a\x65\xb3\x95\x48\x81\x5c\xc5\x31\x82\xfc\x7b\xc1\x87\x64\xc9\x89\xed\x8b\x01\x6a\x76\x66\x38\xbb\x4b\xd9\xb4\xda\x30\xdc\x76\x6a\x2d\x8b\x9a\x1e\xf5\x3f\x52\x50\x19\xdd\x40\x3a\x39\x4b\x93\x88\xfc\xf9\x8a\x4d\x3b\x05\x8e\x8f\xd2\x24\x99\xcf\xe7\xf0\xb8\x91\x16\xd8\xa0\xb2\x28\x58\x6a\x05\xd2\xc2\x76\x83\x0c\xbc\x21\x68\xa4\x62\x32\xb0\x12\x42\x77\x8a\xa1\xb3\x64\x81\xb5\x3f\x06\x45\x5b\x60\x47\x64\x23\x0f\xed\xa0\x35\xfa\x45\x96\xe4\x6b\x0d\x09\xd9\x4a\x52\x0c\x58\x96\x86\xac\x05\x54\x25\x60\xe3\x99\x22\xc9\xb9\x3f\x73\xe8\x11\x13\x1a\x0a\x86\x2a\x32\x86\x4a\x87\x75\x88\x81\xa5\x72\x96\x5c\xb5\x54\xeb\x24\x19\x59\xcf\x06\xc9\x05\xac\x02\xfa\x3c\x0a\x2e\xe0\xe9\x56\xbe\x7e\xfb\x3a\x83\xb7\x24\x01\x00\x70\x42\xf7\x54\x91\x21\x25\xa8\x97\x88\xf1\x40\x88\x6c\x55\x36\x52\xc1\x3d\x59\xdd\x19\x41\xa0\x8b\xbf\x24\xd8\x17\xd7\xc4\xc1\xb0\x87\x2c\xe0\x6c\x9c\x6b\xee\x0f\xa5\x65\x83\xac\xcd\x09\xb5\xbe\x6b\x51\xee\x9e\x04\xc9\x17\x32\xa0\xab\x69\x7e\x53\xc9\x1e\xb6\x80\xb3\xb7\x49\xdf\xf3\xfe\xcb\xfb\x5e\xf3\xd1\x27\xcb\x58\x83\xed\xda\xb6\xde\x79\x6e\x9f\x34\x14\x54\x69\x13\x3a\x55\x74\x46\x0d\x22\x01\x78\xe3\xbf\xf6\xa9\x05\xc2\xd6\x50\x8b\x86\x32\x2b\xd7\xca\xe9\x63\xc7\x9b\xec\x46\x1b\xa3\xb7\xcf\x58\x77\x34\x83\xb3\x38\x28\x2e\x65\x88\x3f\x4b\x75\x95\x8f\x49\x61\x39\x99\xcc\xdc\xfb\x7b\xf0\x80\x64\xa8\x9a\xcf\x21\x30\x03\x82\x39\x0c\x0e\x7d\x63\x46\xfd\x18\x74\xf6\x4d\x81\x25\x04\x9f\xb9\x65\x6d\x70\x4d\x79\xe1\xf9\x2e\x4f\xf4\xea\x2a\x73\x5b\xb2\x80\x8f\x88\x87\xc0\x71\x87\xbc\x99\x0d\x8a\xee\x77\x7d\x0d\x2d\x2a\x29\xb2\xf4\xc1\xab\xb9\xed\x51\x9a\xf7\x23\x1d\xcc\xa6\xb3\xc9\xd5\x7e\x51\x40\x60\xdc\xab\xc3\x8e\xfb\xad\x28\x8e\xdd\x5f\x1a\x87\xf4\xad\xfe\xe4\xf6\xc3\x18\x2d\x61\x4d\x1c\x1b\xb2\xdf\x8c\xa9\xfd\x5c\x60\x8b\x85\xac\x25\x4b\xb2\x43\x42\xc7\xe6\xea\x2a\x9b\x24\xd3\x9f\xdf\x75\x45\x2d\xc5\xa9\x6c\x9e\x14\xba\x39\x67\xdd\x5f\xaa\xf7\xbf\xbf\x5b\x1a\x6a\xe3\xec\xd2\x2b\x89\x8e\xa9\x5f\xd6\x18\xdb\x77\x43\xc8\x04\xd8\x3f\x4b\x2e\x25\xff\x14\xc5\xc7\xa3\x87\xba\x31\x8e\x90\xcb\x8b\xc3\xc1\xc8\x85\x67\xf9\x43\xdb\xdf\x1e\x92\x61\x5d\xeb\x2d\x95\xab\xf8\x4e\x84\xf7\x62\xf6\x91\xac\x7c\xc6\xae\x66\xc7\x18\xb8\x73\xf7\xe7\x93\xb0\x19\x1e\x14\x8f\x5d\xff\xa0\x56\x5b\xe9\x1b\xde\xf4\x13\xec\xef\x4f\xa7\x1b\x98\x97\xa1\x30\x0e\xe5\xe5\xc5\xc8\xc5\x48\xa1\x24\xcb\x46\xef\xa2\xa9\x71\x88\xad\xb6\x3c\x5a\xc4\x63\x4b\x07\xcb\xe5\x27\x4b\xfa\x65\x78\x38\xd3\x0f\x8f\x48\xd3\x59\x86\x82\x40\x2a\x97\xa5\xa5\x12\x8a\x5d\x98\x67\x5f\x92\x46\x13\xef\xff\x03\x00\x00\xff\xff\xa5\x93\x00\x8d\xb2\x06\x00\x00"

func mint_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_mint_tokensCdc,
		"mint_tokens.cdc",
	)
}

func mint_tokensCdc() (*asset, error) {
	bytes, err := mint_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "mint_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xdc, 0xc, 0x6e, 0xa7, 0x4b, 0x89, 0x2d, 0x33, 0x29, 0x41, 0x1d, 0xb5, 0x99, 0x75, 0x30, 0x68, 0x31, 0x85, 0xf6, 0xda, 0xc5, 0x2b, 0xe2, 0xdd, 0x8a, 0x2d, 0xd4, 0x2e, 0x86, 0xba, 0xaa, 0x3d}}
	return a, nil
}

var _privateforwarderCreate_account_private_forwarderCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x53\x4d\x6f\xdb\x30\x0c\xbd\xfb\x57\x70\x39\x6c\x36\xd0\xda\xf7\x22\x1d\x50\x14\xcd\x69\x28\x82\xb5\xdb\x9d\x71\x98\x58\x88\x62\x09\x32\x6d\x37\x08\xf2\xdf\x07\xf9\x43\x95\x9c\x1a\x2b\xea\x4b\x1b\xea\xf1\xe9\xf1\xf1\x49\x1c\xb5\x32\x0c\xab\xba\xdc\x8b\x8d\xa4\x57\x75\xa0\x12\x76\x46\x1d\x61\x11\xd4\x16\xd1\x80\x7c\x7a\xc3\xa3\x0e\x81\x7e\xc9\xe1\xd6\x46\x34\xc8\xf4\x9b\x72\x12\x0d\x99\x95\x32\x2d\x9a\x2d\x99\xa1\x67\xee\x78\x11\x45\x59\x96\xc1\x6b\x21\x2a\x60\x83\x65\x85\x39\x0b\x55\x82\xa8\xa0\xae\x68\x0b\xac\x20\x37\x84\x4c\x80\xb6\x60\x7e\x54\xb0\x92\xaa\x05\xcc\x73\x55\x97\x0c\xad\xe0\x02\x10\x74\x4f\x0f\xbb\x91\x37\x8a\x7c\xb6\x73\x14\x01\x00\xd8\x9b\x9e\xa9\x85\x87\xa1\x99\x0b\xb4\x0c\x52\x42\xa1\xe4\x16\xb8\xf0\x09\x6c\x83\x24\x86\x92\xda\x01\x7f\x07\x0f\x35\x17\xc3\x8f\x9e\x51\x1b\xd2\x68\x28\xd6\x78\x22\x13\x9c\x27\x70\xee\x10\xf6\xab\x48\xee\xd2\x77\x1e\xb8\xf7\x81\x63\x6f\xf7\x27\xe9\x7a\x2e\x3d\x39\xbd\x51\x5e\x33\x8d\xea\xfb\x09\xe0\x05\x1b\x6b\x86\xa1\x7d\x2d\xd1\x40\x83\xb5\x64\x6b\x93\x55\x5f\x92\x73\x66\xee\xf2\xb4\xc2\x86\xe2\xe5\xad\xbf\xc4\xb4\xb7\xf8\xe9\xa8\xf9\xf4\xd7\xf2\xc5\xc9\x8d\xeb\xb7\x1f\xab\xbb\x20\x08\x69\x87\x7a\x61\x65\x70\x4f\x6b\xe4\xc2\xa1\x93\x40\xeb\xe3\xb8\xba\x71\x3f\x66\xd8\xbf\x03\x59\x87\xc7\xe2\x23\x6a\xdc\x08\x29\xf8\x04\xf7\x57\xb2\xa5\x28\x0f\xcb\xef\xe7\x20\xa4\xe9\x18\xa7\xcb\xcf\x38\xd0\x9b\x0d\xf7\x65\xe4\x89\x1e\xc1\x93\xd1\xd0\xec\x89\x3f\x3d\xde\xb7\x60\xbe\x3f\x15\x75\xbe\x4f\xc7\x0b\x62\x7b\x9d\x4d\x7f\x78\x57\x85\xe5\xed\xec\x23\x1a\x16\xf4\x4c\xad\x2b\xc5\x86\x72\xa1\x05\xd9\x58\x5e\x1b\x98\x5c\x47\xc6\xd7\xf9\x7e\x29\x2b\xf7\x94\xaa\x7e\xde\xff\x05\xc7\xf5\xde\x74\xb1\x98\x95\x3c\x39\xf0\xdc\x0c\xc5\xfd\x12\xe5\x21\x7c\x7a\x9d\x28\xa7\x55\xfb\xfe\x7f\x9c\x8a\x59\x0d\xee\xbf\x49\x3e\x3e\x2b\x7a\x5d\x6f\xa4\xc8\xad\xe6\x8f\x43\xf3\x85\xe1\xa7\x2f\xe5\x12\x5d\xfe\x05\x00\x00\xff\xff\x94\xdc\x66\x5c\x94\x05\x00\x00"

func privateforwarderCreate_account_private_forwarderCdcBytes() ([]byte, error) {
	return bindataRead(
		_privateforwarderCreate_account_private_forwarderCdc,
		"privateForwarder/create_account_private_forwarder.cdc",
	)
}

func privateforwarderCreate_account_private_forwarderCdc() (*asset, error) {
	bytes, err := privateforwarderCreate_account_private_forwarderCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "privateForwarder/create_account_private_forwarder.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xdc, 0xae, 0x85, 0xaa, 0x7c, 0xb6, 0x13, 0x58, 0x3, 0x26, 0xd6, 0x65, 0xed, 0xe9, 0x24, 0xa8, 0x29, 0xe3, 0x4f, 0x83, 0x97, 0x77, 0xe9, 0x6f, 0xf0, 0x1b, 0x90, 0x3b, 0xc8, 0xb, 0xb3, 0x96}}
	return a, nil
}

var _privateforwarderCreate_private_forwarderCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x52\x4f\x6b\xfa\x40\x10\xbd\xef\xa7\x18\x3c\xfc\x7e\x11\x34\xb9\x07\x5b\x90\x52\x8f\x45\x5a\xe9\x7d\x12\xa7\xc9\x62\xdc\x0d\x93\x49\xac\x88\xdf\xbd\x6c\xfe\x91\xa8\x81\xd2\x3d\x84\x65\xe6\xcd\x7b\xfb\xe6\x45\x1f\x73\xcb\x02\x9b\xd2\x24\x3a\xca\x68\x67\x0f\x64\xe0\x8b\xed\x11\x66\xa3\xda\x4c\xb5\xc8\xd7\x6f\x3c\xe6\x63\xe0\xb0\xd4\xe3\xb6\xac\x2b\x14\x7a\xa7\x98\x74\x45\xbc\xb1\x7c\x42\xde\x13\xb7\x33\x53\xed\x99\x52\x41\x00\xbb\x54\x17\x20\x8c\xa6\xc0\x58\xb4\x35\x10\x33\xa1\x50\x01\x08\x86\x4e\x90\x37\xc3\xc0\xed\x34\x68\x03\x68\x00\xe3\xd8\x96\x46\x40\x52\x14\x70\x34\x7b\x4b\x85\xf9\x2f\x80\x19\x13\xee\xcf\x90\x62\x45\x80\xf7\xe3\x96\x5d\xb5\x8c\x32\x1d\x83\xd4\xc6\xba\x96\x63\x89\x4a\xa9\x99\x6e\x69\x3e\xb1\xcc\x44\xa9\xe1\x33\x2f\x4a\x01\x00\xe4\x4c\x39\x32\x79\x85\x4e\x0c\x71\x08\xeb\x52\xd2\x75\xf3\xb8\x39\x5c\x6a\x88\x3b\x9d\xc8\x0b\xe6\x18\xe9\x4c\xcb\x19\x9e\xa0\x99\xf1\x33\x6d\x0e\xab\x7f\x97\x51\x06\x7e\xb7\xad\xeb\xb3\xd7\x93\xb8\x13\xb4\x8e\x02\x1a\x24\xd1\x81\x17\x23\xa8\x20\x27\x24\xe1\x28\x46\xbf\x76\xf2\x21\x96\x31\xa1\x2d\x4a\xda\x4f\xcc\x55\x7f\xcd\x48\xa0\x72\x38\x58\x2d\x27\xc3\xf5\x9b\x9c\xde\xe8\xd4\x97\x3c\xa6\x58\xe7\x9a\x8c\x84\x0f\x0c\x0f\x04\x5a\xe3\x05\x56\xe4\xad\x96\xb5\xd4\x02\xc4\x86\xd3\x62\x37\x8d\x81\x81\x7b\xda\x76\x9f\x93\x5c\xfd\xed\x76\xb7\xbf\x55\xdf\xd6\xbf\x8f\x13\x7f\xbc\xf0\x3f\xb8\x18\xc4\xe0\xbe\x57\x75\x55\x3f\x01\x00\x00\xff\xff\xff\x8d\xc1\x45\xaf\x03\x00\x00"

func privateforwarderCreate_private_forwarderCdcBytes() ([]byte, error) {
	return bindataRead(
		_privateforwarderCreate_private_forwarderCdc,
		"privateForwarder/create_private_forwarder.cdc",
	)
}

func privateforwarderCreate_private_forwarderCdc() (*asset, error) {
	bytes, err := privateforwarderCreate_private_forwarderCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "privateForwarder/create_private_forwarder.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x3a, 0x2, 0x94, 0x1, 0x6d, 0xcc, 0xdb, 0x68, 0x91, 0xb0, 0xe4, 0xc2, 0x90, 0xcc, 0xa7, 0xe0, 0x29, 0x1b, 0x67, 0x32, 0xcf, 0xdc, 0x56, 0x8a, 0x4b, 0xdb, 0x5b, 0xd9, 0x78, 0x14, 0x25, 0x37}}
	return a, nil
}

var _privateforwarderDeploy_forwarder_contractCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\x4d\x4b\x03\x31\x10\x86\xef\xf9\x15\x73\xdc\x42\xe8\x5e\x65\x6f\x05\x11\xbc\x48\xa1\x7a\x12\x0f\x63\x32\xee\x0e\xb6\x33\x61\x32\x4b\x11\xe9\x7f\x97\xed\x17\xab\x5e\x9a\x43\x48\x78\x9f\x64\xde\xa7\x6d\x5b\xb8\xa7\xb2\xd5\xaf\x0a\x3e\x10\x3c\xeb\x27\xc9\x83\xda\x1e\x2d\xb3\xf4\x90\x54\xdc\x30\x39\xec\xd9\x87\x23\x51\x0b\x25\xfe\x60\xca\xc0\xc2\x0e\x05\x0d\x77\xe4\x64\x35\x04\x37\x94\x8a\xc9\x59\xa5\xb9\x3c\x7c\xc2\x1d\x75\xb0\x71\x63\xe9\x63\x80\xd9\x4a\x9a\xa9\x83\xd7\x97\x47\xf1\xbb\xb7\xdf\x51\x25\xc9\x64\x1b\x57\xc3\x9e\xd6\xe8\xc3\xf4\xc3\xf5\xf2\x87\xbd\x89\x2a\xe3\xfb\x96\xd3\x09\x5a\x5f\xcf\x0b\xf8\x0e\x01\xa0\x18\x15\x34\x6a\x2a\xf7\x42\xd6\xc1\x6a\xf4\x61\x95\x92\x8e\xe2\x67\x02\xe0\x94\x2d\x2f\x5a\x75\x89\x39\x37\x72\x94\x9b\xab\xc6\xb3\xd6\xb4\xc7\xff\x1e\x71\x5e\x37\xce\x5a\x2d\xa6\x29\x87\x70\x08\x10\x7e\x02\x00\x00\xff\xff\xf7\x8a\xb2\xb8\x93\x01\x00\x00"

func privateforwarderDeploy_forwarder_contractCdcBytes() ([]byte, error) {
	return bindataRead(
		_privateforwarderDeploy_forwarder_contractCdc,
		"privateForwarder/deploy_forwarder_contract.cdc",
	)
}

func privateforwarderDeploy_forwarder_contractCdc() (*asset, error) {
	bytes, err := privateforwarderDeploy_forwarder_contractCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "privateForwarder/deploy_forwarder_contract.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x10, 0x63, 0x44, 0x17, 0x78, 0x41, 0x47, 0x73, 0xf, 0x19, 0xd3, 0x94, 0xb2, 0xd3, 0xfb, 0xbe, 0x5e, 0xe7, 0xd4, 0xa4, 0x53, 0x61, 0x2e, 0x62, 0x52, 0xcd, 0xb6, 0xd4, 0x6b, 0x79, 0xbb, 0x6e}}
	return a, nil
}

var _privateforwarderSetup_and_create_forwarderCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\x41\x8f\xa2\x4c\x10\xbd\xf3\x2b\x2a\x73\x98\x40\xa2\x72\x37\x68\x32\xdf\x64\xe6\xf8\xc5\xec\x4e\xf6\x5e\x36\x25\x74\xc4\x6e\x52\x14\x3a\xc6\xf8\xdf\x37\xb4\x88\xf4\x20\xbb\xee\x66\x39\x91\xae\x7a\x55\xaf\xeb\xd5\xeb\x40\xef\x4a\xcb\x02\xef\xb5\xc9\xf4\xba\xa0\x0f\xbb\x25\x03\x1b\xb6\x3b\x78\xf2\xce\x9e\xae\x99\x6f\x9f\xb8\x2b\xfd\xc4\xfe\x51\x97\xb7\x62\xbd\x47\xa1\x6f\xa4\x48\xef\x89\xdf\x2d\x1f\x90\x53\xe2\x16\x33\x16\x7e\x0a\x82\x38\x8e\xe1\x23\xd7\x15\x08\xa3\xa9\x50\x89\xb6\x06\x30\x4d\x2b\x40\xf8\x81\x75\x21\x13\x40\x28\x2f\x78\xe0\xb6\x00\x6c\xae\x15\x1c\x1e\x61\x8d\x05\x1a\x45\xa0\xb0\xc4\xb5\x2e\xb4\x1c\x27\x80\x26\x6d\xa0\xf5\xba\xd0\xaa\x17\x68\xb0\x20\xf9\xad\x58\x10\xf4\x5b\x9f\x82\x00\x00\xa0\x64\x2a\x91\x29\xac\x74\x66\x88\xe7\xf0\x52\x4b\xfe\xa2\x94\xad\x8d\x44\x70\x72\x29\xcd\xa7\x37\x70\xc9\x98\x65\x24\xaf\x5d\x8f\xe4\x79\xec\xc6\xb3\xee\x6f\x19\x8e\xe6\x7c\x09\xac\xdc\x15\x56\x28\x79\x34\x53\x39\xa9\x6d\xd8\xa7\xd0\x7c\x71\xdc\x8d\xa8\x9b\x0c\x1c\xb0\x02\x2c\x98\x30\x3d\x42\x45\x02\x75\xe9\x61\x98\xa4\x66\xd3\x1d\x9d\x83\x3b\x97\x5a\x5b\x66\x7b\x48\x9e\xfb\x9a\xcf\x9c\x2a\xcb\xb0\x51\x76\x0e\xc3\xc8\x77\xb1\x8c\x19\x39\xba\xb0\x58\x80\xd1\xc5\x90\xed\x2b\x53\x43\x16\xc1\xd0\xc1\x5f\x32\x57\xc3\x69\x57\xd6\x02\x5a\x40\x1b\xa8\x2e\x25\xbd\x22\x2d\xc3\x0a\xf7\x14\x7a\x81\xe6\x4b\xa6\x1e\x2f\xe5\xba\xbd\xed\x4a\x39\xba\xf2\x61\x34\x19\x40\xc4\xfe\xe6\x32\x1e\x22\xba\x37\xb7\x96\x52\xa1\xcd\x36\x79\x3e\x79\x86\x9a\x5d\xb5\x3c\x2f\x7d\xb6\x71\xab\x5b\x4c\xbd\xde\xd7\x64\x9f\xa5\x20\x67\x24\x8f\xb2\x8c\x6e\xbc\x0a\x92\x6e\xd9\x6f\x3b\x0a\x8b\x91\xd5\x1d\x67\xfe\x4b\xb2\xbd\x86\x7d\x81\x87\xfe\x13\xeb\xec\x77\x11\x5a\x72\x14\xb0\xa6\x38\x02\x7d\x96\xb6\xa2\xaa\x5f\xa4\x49\xbb\x3a\x7b\xa3\xa9\x48\x41\x72\xb6\x75\x96\xbb\xc8\x7f\x6d\x44\x1b\x21\xde\xa0\xa2\x87\x84\x68\x51\x5f\x75\x18\x0e\xf5\xe6\xba\x7f\x28\xc3\xcd\x9d\xc9\x74\xf4\xd1\x6c\xf7\xf5\x7f\x3a\x74\x47\x21\x93\xd2\xa5\x26\x23\xf3\x3b\x52\x46\x83\x1d\x74\xb6\x48\xa6\x5d\xbb\x89\xdb\xef\x47\x1f\x9c\xbe\x85\x47\xd6\xfb\x91\xf7\xcd\x1b\xdb\x9f\x3f\x76\xf7\xc7\xfe\x17\x77\x08\x7c\xd7\x9e\x83\x73\xf0\x33\x00\x00\xff\xff\xa6\x15\x6c\x77\x0a\x07\x00\x00"

func privateforwarderSetup_and_create_forwarderCdcBytes() ([]byte, error) {
	return bindataRead(
		_privateforwarderSetup_and_create_forwarderCdc,
		"privateForwarder/setup_and_create_forwarder.cdc",
	)
}

func privateforwarderSetup_and_create_forwarderCdc() (*asset, error) {
	bytes, err := privateforwarderSetup_and_create_forwarderCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "privateForwarder/setup_and_create_forwarder.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x7c, 0x8c, 0x82, 0x7c, 0xd4, 0xe2, 0xcc, 0x1, 0xe4, 0xee, 0x59, 0x2d, 0xa9, 0xfb, 0xf0, 0x5d, 0xd0, 0x99, 0x94, 0x91, 0xbb, 0xb3, 0x7, 0xe2, 0xa2, 0x1e, 0x95, 0xf7, 0xdf, 0xc7, 0x1f, 0x51}}
	return a, nil
}

var _privateforwarderTransfer_private_many_accountsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x93\x41\x6b\xdb\x40\x10\x85\xcf\xd9\x5f\xf1\xe2\x43\x2a\x43\x2b\x5f\x4a\x0f\x22\x6d\x30\xa5\xee\xa9\x10\x92\xb4\x3d\x94\x1e\xd6\xd2\x48\x5a\x22\xef\x8a\xd9\x91\xed\x10\xfc\xdf\x8b\xb4\x6b\x23\xd7\x18\x43\xe9\x49\x62\x76\xe6\xed\x7c\x6f\x76\xcc\xaa\x75\x2c\x58\x74\xb6\x32\xcb\x86\x9e\xdc\x33\x59\x94\xec\x56\x98\x1c\xc5\x26\x2a\x66\x7e\xd9\xea\x55\x7b\x9c\x38\x0e\x1d\xf2\xee\xd9\xac\xb5\xd0\x03\xe5\x64\xd6\xc4\x0b\xc7\x1b\xcd\x05\x71\xac\x39\x77\x3c\x51\x6a\x36\x9b\xe1\xa9\x36\x1e\xc2\xda\x7a\x9d\x8b\x71\x36\xfc\x97\xc4\x1e\xe2\xb0\xd2\xf6\x05\xba\x28\x98\xbc\x27\x0f\xa9\xd9\x75\x55\x0d\xa9\xc9\x30\xda\xa0\x0c\x8e\xd2\x5e\xa9\x91\x50\x12\xcb\xe6\x2b\xd7\x59\xf9\xa6\xdb\x0c\xaf\xf3\x10\xca\xf0\x7d\x61\xb6\x1f\xde\xef\xa6\x78\x55\x0a\x00\x86\x46\x08\x3f\x74\xd7\x08\x98\xbc\xeb\x38\x27\x48\xad\x05\xb5\x6b\x8a\xfe\x66\x82\xf4\xd8\x3e\x44\x35\x13\x96\x64\x6c\x75\xe8\x97\xa9\x18\xa4\x1a\x12\xac\x7b\x9d\x07\x2a\x33\xe8\x4e\xea\xe4\xc8\xdf\xf4\xa7\x91\xba\x60\xbd\xd1\xcb\x86\xa6\xb8\x19\x7b\x9a\x0e\x0d\xa8\x83\x4e\x24\x8c\x9e\x19\x5b\x3d\x92\x2d\x88\x33\xdc\x9c\x73\x35\x0d\x19\x41\xa2\x65\x6a\x35\x53\xe2\x4d\x65\xfb\xaa\x79\x27\xf5\x3c\xcf\x7b\x3f\x0e\xe4\x91\xfe\x2b\x09\x34\x98\x4a\x62\xb2\x3d\xba\x1b\x90\x43\xe5\x1b\x0f\x2f\x8e\xa9\x08\x60\x87\x3a\x4f\x4d\x99\xee\x59\xf1\x31\x66\xa7\x4b\xc7\xec\x36\xb7\xff\x82\xfe\x29\xe9\x1f\x4d\x86\xd3\x93\x47\x71\xac\x2b\xba\xd7\x52\x4f\xd5\xd5\xd5\xd5\xdd\x1d\x5a\x6d\x4d\x9e\x4c\x3e\xbb\xae\x29\x60\x9d\x20\x5c\x7c\x4a\xe1\x36\x01\x62\x10\xba\x9e\x4c\xd5\x31\xc1\x19\x97\x4f\x80\x2e\x99\xbe\x6f\xfe\x42\xda\xff\x27\xd9\x85\x0f\x6d\x29\xef\x84\xc6\x93\x2d\x1d\xef\xd7\x07\xc6\xe2\xef\x95\x48\x9f\xe9\xc5\x8f\xf3\x2f\x79\x92\x7a\xb2\x45\xe4\x1b\x86\xe3\xf7\x6b\xf6\x36\xae\x47\x86\xdb\x77\x47\xef\x22\xdd\xc4\xa1\x27\x7a\xb8\x36\x3b\xe9\xe2\x57\x0c\xfc\xbe\x9e\x8e\x46\xb3\x8b\x68\x3b\xf5\x27\x00\x00\xff\xff\x54\xc5\x91\xa8\xba\x04\x00\x00"

func privateforwarderTransfer_private_many_accountsCdcBytes() ([]byte, error) {
	return bindataRead(
		_privateforwarderTransfer_private_many_accountsCdc,
		"privateForwarder/transfer_private_many_accounts.cdc",
	)
}

func privateforwarderTransfer_private_many_accountsCdc() (*asset, error) {
	bytes, err := privateforwarderTransfer_private_many_accountsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "privateForwarder/transfer_private_many_accounts.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x3c, 0x2, 0x1, 0x88, 0x2d, 0xc9, 0x4b, 0x75, 0xcf, 0xdf, 0x35, 0xdf, 0x90, 0x78, 0xfc, 0xba, 0xdd, 0xa, 0xa8, 0x58, 0x4f, 0x23, 0x6a, 0x71, 0xcb, 0xa3, 0x49, 0xea, 0xc2, 0x93, 0xe2, 0xb4}}
	return a, nil
}

var _safe_generic_transferCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x95\xc1\x6e\xdc\x36\x10\x86\xcf\xde\xa7\x98\xf8\x90\x48\x80\x23\x5f\x8a\x1e\x16\x4e\x53\x37\x80\x7b\xe8\xa1\x86\xe3\xa6\xe7\x59\x71\x24\xb1\xe6\x92\x02\x67\x64\x65\xb1\xd8\x77\x2f\x48\x4a\xdc\x95\x37\x06\x9c\xd3\x72\x47\xd4\xfc\xdf\xfc\x9c\xa1\xf4\xb6\x77\x5e\xe0\x6e\xb0\xad\xde\x18\x7a\x74\x4f\x64\xa1\xf1\x6e\x0b\x97\x8b\xd8\xe5\x6a\x75\x7d\x7d\x0d\x5f\xd0\x42\x8f\xcc\xa0\x2d\xa0\xdd\x01\x8b\xf3\xd8\x12\xf4\x28\x1d\xa0\x55\xe0\xa9\x26\xfd\x4c\x3e\x45\xb4\x65\x21\x54\xe0\x1a\xf8\x6f\x60\x01\xe9\x08\x14\x35\x38\x18\xa9\x62\xbe\xc7\x4e\x33\x18\x12\x86\x9d\x1b\xa0\xee\x9c\x63\x8a\xbb\x24\x82\x84\xe0\x88\x56\x40\x1c\x30\x59\x05\xc8\x30\x92\x31\x71\x4b\x8d\x3d\x6e\xb4\xd1\xb2\x3b\xdf\xa7\xc3\x32\x4a\x44\x99\x5b\xbb\x9b\x32\x46\xac\x1a\x2d\x6c\x28\x16\x42\x31\x27\x5a\x40\xdf\x0e\x5b\xb2\x02\x1d\x79\xba\x02\x76\x30\xa2\x89\x64\xdc\xb9\xc1\xa8\x98\x27\x2d\xa1\xee\xa8\x7e\x3a\xbe\xf1\x8c\x66\x20\x0e\xda\x5b\x7c\x22\xe0\xc1\xa7\x1a\xb4\x15\xb2\x8a\xd4\xa9\xb4\xe6\x59\x56\xdb\x88\x27\x1e\x2d\x63\x2d\xda\xd9\x02\xb7\x6e\xb0\xb2\x86\x7f\xee\xf4\xf7\x5f\x7f\xb9\x02\x71\x6b\xb8\x55\xca\x13\xf3\x55\xac\x8b\xfc\x3d\x4a\xb7\x86\xaf\xc9\xf6\xf0\xe7\x2a\x5b\x9e\x1e\xdd\x0f\x1b\xa3\xeb\xb0\x2e\x61\xbf\x5a\x01\x00\x44\x9f\x09\xbe\x05\xdb\xc1\x13\xbb\xc1\xd7\x81\x10\x05\x3a\x67\x14\x1f\x0d\xe7\x14\x45\x4f\xb0\x21\x6d\x5b\x88\x74\x0d\x79\x4f\x2a\xa6\x32\x24\x20\xb4\xed\x63\xae\x35\xfc\xbe\xe8\x91\x2a\x46\xb3\xe6\x1f\xce\x7b\x37\x86\xf2\xa9\x21\x4f\xb6\xa6\x19\x75\x16\xd3\xcd\x14\x09\x52\x58\xd7\xa1\x7a\x50\x8e\xd8\x7e\x10\xe0\xa1\x8f\xad\x19\xe0\x42\xed\x11\x27\xbc\x97\x41\x92\x23\x0f\x53\xf9\x0f\xd4\xac\xe1\xfd\x3e\x91\xcc\xc1\x43\xa2\xe9\x3d\xf5\xe8\xa9\x60\xdd\x5a\xf2\x6b\xc0\x41\xba\x22\xf1\x7d\x0b\x87\x57\xc2\xfb\xdb\x24\x9f\x4d\x9b\x8a\xf8\x93\x04\x10\x7c\xae\x40\x5c\x02\x8a\x89\x3e\x70\x1c\x00\x52\xf0\x1c\x2b\x9f\xdf\x0b\x70\x31\xf2\x40\x0d\x7c\x9a\x36\x57\xd3\xac\x54\x9b\xa8\x7b\x13\x19\x96\xfe\xfd\xab\xa5\x53\x1e\x47\xdc\x98\x80\xb4\x5f\x3e\xbd\xf7\xee\x59\x2b\xf2\x87\xdf\x8a\x30\xa0\xeb\x93\x8e\x28\x57\x17\x17\x17\x9f\x3f\x43\x8f\x56\xd7\xc5\xe5\x97\xd8\xa5\xd6\x09\x24\xad\x73\x7e\x37\x26\xfc\x78\x62\xef\x2e\xcb\x8c\x9e\x17\x4c\xa6\xa9\xce\x1c\x7e\xb5\x9a\x97\xb0\xf9\x00\x7e\x1e\xf6\xb5\x4c\x6f\xa8\x62\x49\x9f\x1b\x15\x6e\x3e\xe6\xf3\xa8\xc6\xc9\xe4\x3c\x6d\xe9\x37\x59\x30\xf5\x0b\x7d\xa7\x7a\x10\x82\xfd\xe2\x48\xfd\xc2\x87\x96\x64\xea\x99\x42\x5c\x59\xe5\xdb\x48\x13\xbf\xc1\x94\xd3\xa1\x2d\xdf\x2d\x64\xa6\xc6\x27\x15\xd9\x1f\x77\x3d\x31\x7c\x3a\x15\xaf\x5a\x92\xaf\xe7\x9b\x8a\xf2\xb4\x71\xff\xb6\x66\x97\xc7\x77\x1e\xb8\xb1\x23\x1b\x9d\xcb\xd7\xb4\x66\x18\xb5\x31\x69\xb8\x8e\xf3\x19\x2e\x04\xf4\x2d\x09\x29\xb8\x7b\xac\x72\x62\xdd\xfc\x08\xaf\xaa\x9d\x15\xd4\x96\xff\xa2\x5d\xb1\xb4\x3e\xb0\x86\x3d\x45\x59\x9e\xb8\x39\xdf\x4a\x2f\xf0\xe2\x77\xe7\xd5\xf1\x9a\x4f\x3d\xb3\x1f\x3f\x00\x8b\xc4\xa7\x4e\x29\xea\x1d\x6b\x99\x7a\xf0\xe6\xe3\x12\xee\x68\xd8\x01\xc8\x30\xbd\x20\xfc\xf1\x08\xbc\x3d\xe7\xd4\x51\x87\xff\x03\x00\x00\xff\xff\xed\x48\x9f\xd3\x64\x07\x00\x00"

func safe_generic_transferCdcBytes() ([]byte, error) {
	return bindataRead(
		_safe_generic_transferCdc,
		"safe_generic_transfer.cdc",
	)
}

func safe_generic_transferCdc() (*asset, error) {
	bytes, err := safe_generic_transferCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "safe_generic_transfer.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x82, 0x10, 0x32, 0x60, 0x4, 0x18, 0x52, 0x3, 0xf4, 0xbb, 0x9c, 0xb7, 0x48, 0xb, 0x67, 0xf9, 0xa3, 0xd5, 0x41, 0x24, 0xa8, 0x5a, 0xf0, 0x62, 0xa2, 0x8d, 0xd5, 0xa4, 0x3f, 0x7b, 0x29, 0xa6}}
	return a, nil
}

var _scriptsGet_balanceCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x91\xc1\x6e\xf2\x30\x10\x84\xef\x7e\x8a\x51\x0e\xff\x9f\x5c\x92\x4b\xd5\x03\x2a\x45\x14\x95\x33\xaa\x68\xef\x1b\x67\x03\x56\x1d\x3b\xb2\xd7\x2d\x15\xe2\xdd\xab\x10\x42\x21\xa7\xcd\x78\x66\xfc\xd9\xae\x2a\x6c\xf7\x26\x22\xea\x60\x7a\x41\x60\x6a\x22\x64\xcf\xa8\xc9\x92\xd3\x8c\xd6\xb0\x6d\x54\x55\xc1\xb7\x20\x07\xd2\xda\x27\x27\xff\x23\x5e\x0f\xd4\xf5\x96\xb7\xfe\x93\x1d\x5e\x46\xb7\x52\xa6\xeb\x7d\x10\xac\x93\xdb\x99\x7a\x5a\x6d\x83\xef\x90\xdd\x69\xd9\xe4\xbc\xab\x19\x8d\xb7\x52\xa6\x14\x69\xcd\x31\xe6\x64\x6d\x81\x36\x39\x74\x64\x5c\x4e\x4d\x13\x38\xc6\x19\x96\xe3\x50\xcc\xf0\xbe\x36\x87\xc7\x07\x1c\x15\x00\x58\x96\x89\x15\x73\xec\x58\x96\xe3\xcf\x14\x2c\xae\xae\x2f\x4a\x56\xde\xb8\xc5\x7c\x0a\x94\x3b\x96\x15\xf5\x54\x1b\x6b\xe4\xe7\xe9\xdf\xf1\x8e\xbc\xbc\x9c\xf5\xf4\x9c\xdf\x82\x96\x1f\x43\xcf\x26\xd5\xd6\xe8\x0d\xc9\x7e\xdc\x60\xf8\xca\xda\x87\xe0\xbf\xf3\x3f\x65\xb1\x40\x4f\xce\xe8\x3c\x5b\xf9\x64\x1b\x38\x2f\x18\x4d\xd3\x45\x22\x70\xcb\x81\x87\x49\xfc\xf9\x3d\xce\xf5\x59\xa1\xce\x25\x81\x25\x05\x77\x45\x1f\x80\x2f\xc1\xbc\x50\x27\xf5\x1b\x00\x00\xff\xff\xe3\x1d\xb9\xf4\xd5\x01\x00\x00"

func scriptsGet_balanceCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_balanceCdc,
		"scripts/get_balance.cdc",
	)
}

func scriptsGet_balanceCdc() (*asset, error) {
	bytes, err := scriptsGet_balanceCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_balance.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa6, 0x21, 0xc8, 0x28, 0xfd, 0x65, 0xa1, 0x59, 0xda, 0x9d, 0xb0, 0xd1, 0x76, 0x3d, 0x80, 0xce, 0xaf, 0x56, 0x60, 0x75, 0xf7, 0x46, 0x7b, 0x8a, 0x53, 0xf5, 0x31, 0x86, 0xf, 0x8c, 0xb6, 0x15}}
	return a, nil
}

var _scriptsGet_supplyCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xce\x3d\xaa\xc3\x30\x10\x04\xe0\x7e\x4f\x31\xb8\xb2\x9b\xa7\xe6\xf1\x8a\xd7\x27\x17\x88\x73\x80\x45\x96\xb0\x88\xfe\xd8\x5d\x83\x43\xc8\xdd\x03\xae\xe2\x76\x66\x18\x3e\xe7\x30\xaf\x49\xa1\x5e\x52\x37\x48\xe0\x45\x61\x6b\x80\x35\xe3\x0c\xdd\x7a\xcf\x4f\xc4\x14\xf2\x42\xce\xa1\xc5\xa3\xbc\xec\x5c\x7a\x0e\x73\x7b\x84\x0a\x2d\x2c\x06\xdf\xaa\x09\x7b\x23\x4a\xa5\x37\xb1\xf3\x26\x4a\x2b\x18\xbe\xa3\x81\x88\xbd\x0f\xaa\x23\xe7\x3c\x21\x6e\x15\x85\x53\x1d\xa7\x7f\xdc\xaf\x69\xff\xfb\xc5\x8b\x00\x40\x82\x6d\x52\x4f\x6f\x3f\x87\xed\x76\xd0\xe8\x4d\x9f\x00\x00\x00\xff\xff\x8f\xf7\xbd\x87\xc3\x00\x00\x00"

func scriptsGet_supplyCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_supplyCdc,
		"scripts/get_supply.cdc",
	)
}

func scriptsGet_supplyCdc() (*asset, error) {
	bytes, err := scriptsGet_supplyCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_supply.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa9, 0xd5, 0xf3, 0x75, 0xbf, 0xc, 0x80, 0x25, 0xb3, 0x59, 0x1, 0x8c, 0xc6, 0x48, 0xfe, 0x86, 0xbb, 0x9, 0x17, 0xd, 0xcc, 0x8c, 0x6a, 0xbd, 0x42, 0x10, 0xf, 0x68, 0x44, 0x60, 0xad, 0x57}}
	return a, nil
}

var _scriptsGet_supported_vault_typesCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x53\x4f\x8b\xdb\x3e\x10\xbd\xfb\x53\x3c\x72\xf8\xad\x0d\x3f\x9c\x7b\x68\xbb\x6c\x0b\xa5\xc7\x25\x49\x7b\xb6\x2c\x8f\x23\xb1\xb2\x65\x46\xe3\x98\x10\xf2\xdd\x8b\xe4\xa4\x1b\x87\xdd\x9c\xc2\x78\xde\x1f\xbd\x99\xb1\xdd\xe0\x59\xf0\x73\xec\x0f\xb6\x76\xb4\xf7\x6f\xd4\xa3\x65\xdf\x61\xb5\xa8\xad\xb2\x6c\xbd\x5e\x63\x6f\x6c\x40\xd0\x6c\x07\x09\x60\x92\x91\xfb\x00\x31\x84\x30\x0e\x91\x88\x9a\x25\xd5\x53\x80\x9c\x06\x42\x7d\x4a\x5d\x03\xfb\xa3\x6d\xa8\x41\x25\x8a\x0f\x24\x15\x54\xd3\x30\x85\x50\x26\xf6\xc7\x2a\x82\xf1\xa3\x6b\x60\xbc\x6b\x12\x5e\xab\x41\xd5\xd6\x59\x39\x61\x32\x56\x1b\x68\xdf\xb7\x9e\xbb\x80\xc9\x8a\x59\x4a\x97\x5b\xd2\x64\x8f\xc4\x60\x0a\xc2\x56\x47\x73\xd1\x4c\x92\x9a\x8c\x75\x04\x2b\x68\x3c\x85\xfe\x49\xd0\x29\x11\x62\x4c\x86\xc4\x10\xdf\x2b\x31\xb5\xc4\x01\xe2\xd1\x5e\xf9\x21\x29\x26\xcf\x50\xd0\x63\x10\xdf\x81\x6f\x62\xce\xbe\x11\xe6\xd7\x2c\xec\xec\x26\x2b\xda\xd4\x5e\x71\x53\x45\x64\x95\xaa\x37\x8f\x55\x89\x5f\x7e\xa2\x48\x70\x0d\xe1\x55\x89\xa9\x20\xe4\x5c\x88\xa6\x98\x1e\x03\x08\xe2\x99\x42\xa6\xb4\xa6\x10\x72\xe5\x5c\x11\xfd\xa1\x53\xb6\xcf\x67\x8a\x0d\x5e\xe6\x1c\xff\xc7\x3b\xe7\x06\xaf\x63\xed\xac\x8e\xff\x8b\x0d\xce\xfb\xd3\x40\x1b\x7c\xf7\xde\x5d\x70\xce\x32\x00\x58\xaf\xf1\x92\x58\x1f\x25\x5b\xcf\xcb\x31\xce\xb4\xb7\x71\x25\xb0\x23\xb9\x83\x6c\xa9\xc5\x57\x1c\x48\x5e\xb4\xf6\x63\x2f\x57\x67\x45\x6a\x7d\xfc\x95\x07\x92\x1f\xff\xa0\x5f\xfe\x3b\x7f\x3c\xcf\xcb\xb7\xfc\xfd\x39\x9f\x30\xd5\x9e\xd9\x4f\x79\x81\x0f\x3f\x3f\x3f\x63\x50\xbd\xd5\xf9\xea\x77\xaf\xe6\x79\x62\x46\x2c\x36\x2c\xae\xd4\xdd\xee\x84\xb1\x9e\x97\xf9\x33\x5f\xf3\xdd\x0c\x4a\xcc\xaa\xd4\xbe\xd7\x4a\xee\x8c\x96\xe2\x77\xc2\xb6\x3f\xe4\x45\x51\xdc\x62\xde\xa6\x0b\x7a\x38\xa0\xa3\x1a\x9d\x24\xa5\x50\xa6\xc6\xf9\xce\x96\xa9\xc6\xac\x76\x37\xc8\x9f\x88\x88\x83\x0c\x79\x91\x5d\xfe\x06\x00\x00\xff\xff\x68\x0a\x37\x89\xd3\x03\x00\x00"

func scriptsGet_supported_vault_typesCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_supported_vault_typesCdc,
		"scripts/get_supported_vault_types.cdc",
	)
}

func scriptsGet_supported_vault_typesCdc() (*asset, error) {
	bytes, err := scriptsGet_supported_vault_typesCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_supported_vault_types.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x9, 0xa7, 0x1a, 0xca, 0x78, 0x21, 0x6a, 0x9e, 0x9a, 0x54, 0x8, 0xc6, 0x88, 0x73, 0xfc, 0x67, 0x6a, 0x86, 0x23, 0x2a, 0xe7, 0xe0, 0x30, 0xcb, 0xe8, 0xba, 0x14, 0x9b, 0xf4, 0x2f, 0x40, 0x31}}
	return a, nil
}

var _scriptsMetadataGet_token_metadataCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x50\x41\x6e\xc2\x30\x10\xbc\xfb\x15\xab\x1c\x2a\xe7\x92\x07\xa0\x52\x84\x50\xb9\x55\x42\x08\x71\xdf\x38\x9b\x60\xd5\xb1\x23\x7b\x0d\xad\x10\x7f\xaf\x42\x1c\xf0\xa5\xe4\x92\xdd\xf5\xcc\x68\x66\x74\x3f\x38\xcf\xf0\xf9\x83\xfd\x60\xe8\xe0\xbe\xc9\x42\xeb\x5d\x0f\x45\x7e\x2a\x44\xc2\x6d\xa3\xed\x74\x9d\xae\x5f\xc4\xd8\x20\xe3\x51\xd3\x25\x24\xd6\xff\x80\x87\xc6\xb8\xed\x29\x38\x73\x26\x9f\x58\xf9\xa9\x10\x02\x95\xa2\x10\x24\x1a\x53\x42\x1b\x2d\xf4\xa8\xad\xc4\xa6\xf1\x14\xc2\x02\xd6\xd3\x50\x2e\x5e\xb8\xa9\xb6\x87\xf1\x0f\x57\x01\x00\x60\x88\x01\x95\x72\xd1\x32\x2c\xa1\x23\x5e\x4f\xcb\xac\x59\x8a\x07\xec\x8c\xd1\xf0\x9e\x5a\x58\xce\x8c\xfb\xd3\xf8\x55\x1d\xf1\x06\x07\xac\xb5\xd1\xfc\x2b\xf3\x7e\xaa\xe3\x48\xdb\xc5\xda\x68\xb5\x43\x3e\x95\x4f\x52\xed\xbc\x77\x97\xf7\xb7\x6b\x9e\xb1\x9a\x87\xdb\x87\x7c\x62\x57\x2b\x18\xd0\x6a\x25\x8b\x8d\x8b\xa6\x01\xeb\x18\x26\x3a\x20\x78\x6a\xc9\x93\x55\x04\xec\x80\x4f\x34\x39\x05\x3f\xb7\x96\x65\x68\xf9\x9e\x7d\xf9\xaa\x9f\x8e\x78\xaa\x48\x9e\x33\x5f\x8b\x47\xfe\x24\xe7\x89\xa3\xb7\x49\x51\xdc\xc4\x5f\x00\x00\x00\xff\xff\xc1\x67\x30\x82\x2f\x02\x00\x00"

func scriptsMetadataGet_token_metadataCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsMetadataGet_token_metadataCdc,
		"scripts/metadata/get_token_metadata.cdc",
	)
}

func scriptsMetadataGet_token_metadataCdc() (*asset, error) {
	bytes, err := scriptsMetadataGet_token_metadataCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/metadata/get_token_metadata.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xeb, 0x4, 0x5d, 0xcc, 0x81, 0x83, 0xe1, 0x57, 0x2f, 0x6f, 0xe2, 0x42, 0xc2, 0x4c, 0x62, 0xcc, 0x6c, 0x6c, 0xb2, 0x2e, 0x80, 0x86, 0xde, 0x6b, 0xdc, 0x5c, 0xf7, 0xa5, 0x9c, 0x74, 0xfe, 0x25}}
	return a, nil
}

var _scriptsMetadataGet_vault_dataCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x52\xcd\x6e\xf2\x30\x10\xbc\xfb\x29\x56\x39\x7c\x4a\x2e\x79\x00\xf4\x51\x84\x68\xb9\x55\x42\x08\x71\xdf\x38\x9b\x60\xd5\xb1\x23\x7b\x0d\xad\x10\xef\x5e\xe5\xc7\x60\x55\x2d\x3e\xed\xae\x67\xd6\x33\x23\xab\xae\xb7\x8e\xe1\xed\x13\xbb\x5e\xd3\xc1\x7e\x90\x81\xc6\xd9\x0e\xb2\x74\x94\x89\x19\xb7\x0d\xa6\x55\xd5\x3c\x7d\x27\xc6\x1a\x19\x8f\x8a\x2e\x7e\x66\xfd\x0d\xb8\xef\x18\xba\x3d\x79\xab\xcf\xe4\x66\x56\x3a\xca\x84\x40\x29\xc9\xfb\x1c\xb5\x2e\xa0\x09\x06\x3a\x54\x26\xc7\xba\x76\xe4\xfd\x02\xd6\x53\x51\x2c\x9e\xa8\x29\xb7\x87\x23\x06\xcd\xaf\xc8\x08\x57\x01\x00\xa0\x89\x01\xa5\xb4\xc1\x30\x2c\xa1\x25\x5e\x4f\x4d\x5c\x5c\x88\x3b\xec\x3c\x50\xf7\xd4\xc0\x32\x32\xc6\xab\xe1\x94\x2d\xf1\x06\x7b\xac\x94\x56\xfc\x95\xa7\x21\x95\xe3\x8b\xbb\x50\x69\x25\x77\xc8\xa7\xe2\x41\xaa\xac\x73\xf6\xf2\xff\xdf\x35\x35\x5a\xc6\xe2\xf6\x92\x3f\xb0\xab\x15\xf4\x68\x94\xcc\xb3\x8d\x0d\xba\x06\x63\x19\x26\x3a\x20\x38\x6a\xc8\x91\x91\x04\x6c\x81\x4f\x34\x29\x05\x17\xa3\xfb\xe9\x61\xb4\xbf\x7c\x96\x53\x4b\x9c\x44\x95\x47\xe7\xbf\xe9\x99\x3e\x47\x6d\xc9\x8f\xa2\xd4\x60\xbc\x23\xc3\x90\x66\x7d\x56\x74\x89\x32\x1c\x71\x70\xe6\xa1\x44\xdc\xc4\x77\x00\x00\x00\xff\xff\xdc\x42\xe6\x38\x6f\x02\x00\x00"

func scriptsMetadataGet_vault_dataCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsMetadataGet_vault_dataCdc,
		"scripts/metadata/get_vault_data.cdc",
	)
}

func scriptsMetadataGet_vault_dataCdc() (*asset, error) {
	bytes, err := scriptsMetadataGet_vault_dataCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/metadata/get_vault_data.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2a, 0xd9, 0xb2, 0xdd, 0x3e, 0x25, 0x45, 0xeb, 0xe9, 0x35, 0xac, 0xc6, 0x68, 0xff, 0x6b, 0x27, 0x94, 0xcc, 0x4f, 0xc7, 0x1f, 0xe0, 0x32, 0x85, 0x98, 0x5d, 0xe7, 0x92, 0xd9, 0x39, 0xac, 0x5c}}
	return a, nil
}

var _scriptsMetadataGet_vault_displayCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x52\xc1\x6e\xea\x30\x10\xbc\xfb\x2b\x56\x39\x3c\x39\x97\x7c\x00\x7a\x14\x21\x5a\x6e\x95\x10\x42\xdc\x37\xce\x26\x58\x75\xec\xc8\x5e\x43\x11\xe2\xdf\xab\x90\x98\xe4\xd0\x92\xd3\xee\x64\x66\x35\x33\xb2\x6e\x3b\xe7\x19\x3e\xbe\xb1\xed\x0c\x1d\xdc\x17\x59\xa8\xbd\x6b\x21\x9b\x43\x99\x18\x79\xdb\x68\x1b\x5d\x8e\xe8\x27\x31\x56\xc8\x78\xd4\x74\x09\xa3\xea\x6f\xc2\xf3\x46\xbf\xed\x29\x38\x73\x26\x3f\xaa\xe6\x50\x26\x04\x2a\x45\x21\x48\x34\x26\x87\x3a\x5a\x68\x51\x5b\x89\x55\xe5\x29\x84\x05\xac\x87\x21\x5f\xbc\x70\x53\x6c\x0f\xef\x3a\x74\x06\xaf\x70\x13\x00\x00\x86\x18\x50\x29\x17\x2d\xc3\x12\x1a\xe2\xf5\xb0\xa4\xb3\xb9\x78\xd2\xce\x18\x0d\xef\xa9\x86\x65\x52\x3c\x7e\xf5\x5f\xd1\x10\x6f\xb0\xc3\x52\x1b\xcd\x57\x39\xaf\xa8\x38\xf6\xb2\x5d\x2c\x8d\x56\x3b\xe4\x53\x3e\x89\x4a\xe7\xbd\xbb\xfc\xff\x77\x9b\xc7\x2c\xd2\x70\x7f\x93\x13\x77\xb5\x82\x0e\xad\x56\x32\xdb\xb8\x68\x2a\xb0\x8e\x61\x90\x03\x82\xa7\x9a\x3c\x59\x45\xc0\x0e\xf8\x44\x83\x53\xf0\xa9\xb8\x59\x86\x9a\x53\xfc\xe5\xab\x96\x1a\xe2\x67\x51\x32\xe5\xfe\xcd\xcd\xf0\x30\x2a\x47\xe1\x61\x49\xf7\xb1\x5b\xb2\x0c\x53\xcf\x67\x4d\x97\x64\xc1\x13\x47\x6f\x27\x17\xe2\x2e\x7e\x02\x00\x00\xff\xff\x19\x3b\x78\xae\x69\x02\x00\x00"

func scriptsMetadataGet_vault_displayCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsMetadataGet_vault_displayCdc,
		"scripts/metadata/get_vault_display.cdc",
	)
}

func scriptsMetadataGet_vault_displayCdc() (*asset, error) {
	bytes, err := scriptsMetadataGet_vault_displayCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/metadata/get_vault_display.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb7, 0xcd, 0xf3, 0xa8, 0x80, 0x29, 0x7f, 0x6c, 0x85, 0x8f, 0xa7, 0x7f, 0x6, 0x5a, 0x2a, 0xba, 0xcb, 0xc6, 0x1d, 0xb2, 0xb7, 0x22, 0x9b, 0x6b, 0x27, 0x67, 0xce, 0x88, 0x3e, 0x1, 0xf9, 0x34}}
	return a, nil
}

var _scriptsMetadataGet_vault_supply_viewCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x52\x3d\x6f\xdb\x30\x10\xdd\xf9\x2b\x2e\x1a\x5a\x69\x91\x97\xa2\x43\x10\x25\x08\x82\xa6\x53\x01\xc3\x75\xbd\x9f\xa8\x93\x4d\x94\x22\x05\xf2\x68\x5b\x30\xfc\xdf\x0b\x89\xfa\x5a\x5c\x4d\xc7\xc7\xf7\x1e\xef\xde\x49\x35\xad\x75\x0c\x3f\xae\xd8\xb4\x9a\xf6\xf6\x2f\x19\xa8\x9d\x6d\x20\x59\x43\x89\x18\x79\x9f\xc1\x1c\x55\x39\xa2\xbf\x88\xb1\x42\xc6\x83\xa2\x8b\x1f\x55\x8f\x09\xb3\x47\x7f\xda\x91\xb7\xfa\x4c\x6e\x54\xad\xa1\x44\x88\xcd\x66\x03\x3f\x89\x3d\xf0\x89\x80\x2d\xa3\x06\x1f\xda\x56\x77\x60\xeb\x01\x3b\x63\xd0\xfc\xd5\x03\x0f\xfd\x56\xca\x91\x64\xdd\x45\xb3\xf9\x5e\x08\x94\x92\xbc\x4f\x51\xeb\x0c\xea\x60\xa0\x41\x65\x52\xac\x2a\x47\xde\x3f\xc3\x7b\x2c\xb2\x67\xf8\xf3\xa9\xae\xdf\xbf\xc1\x4d\x00\x00\x68\x62\x40\x29\x6d\x30\x0c\x05\x1c\x89\xdf\xe3\x61\x12\x66\x62\xa6\x0d\xcf\xec\xa8\x86\x62\x52\x0c\x57\xfd\x97\x1f\x89\x3f\xb0\xc5\x52\x69\xc5\x5d\xba\x0e\x33\x3f\xf4\xb2\x6d\x28\xb5\x92\x5b\xe4\x53\xb6\x88\x4a\xeb\x9c\xbd\xbc\x7c\xb9\xad\x03\xc9\xa7\xe2\xfe\x9a\x2e\xdc\xb7\x37\x68\xd1\x28\x99\x26\x1f\x36\xe8\x0a\x8c\x65\x88\x72\x40\x70\x54\x93\x23\x23\xfb\xf4\x96\x40\xc0\x4d\x11\xaf\x66\xa8\xf9\x77\x8c\xb6\x98\xc7\xc9\x47\x5e\xdf\x44\xba\xef\x5a\x7a\x79\xbc\xd5\x7c\xdf\xaf\x27\x5a\xbc\xa6\x59\xf6\xb4\x38\xc7\x95\xf5\x2c\x28\x96\x67\xd0\x3f\xfd\xe7\x2f\x5a\xdb\x45\x27\x47\x1c\x9c\x59\x99\xe5\xb1\x14\x77\xf1\x2f\x00\x00\xff\xff\xaf\x06\xd2\x34\xbc\x02\x00\x00"

func scriptsMetadataGet_vault_supply_viewCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsMetadataGet_vault_supply_viewCdc,
		"scripts/metadata/get_vault_supply_view.cdc",
	)
}

func scriptsMetadataGet_vault_supply_viewCdc() (*asset, error) {
	bytes, err := scriptsMetadataGet_vault_supply_viewCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/metadata/get_vault_supply_view.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x6c, 0x38, 0xe6, 0xf9, 0x6b, 0xf9, 0xc3, 0xd, 0x5a, 0x63, 0xe2, 0xd0, 0x7, 0x2, 0xb, 0x5, 0x85, 0x2e, 0xfa, 0x1c, 0x69, 0x18, 0xff, 0xd5, 0xd2, 0x13, 0x3d, 0x84, 0x4e, 0xb8, 0x88, 0x54}}
	return a, nil
}

var _scriptsSwitchboardCheck_receiver_by_typeCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x91\x41\x6f\xe2\x30\x14\x84\xef\xf9\x15\xa3\x1c\x56\xf6\x25\x3f\x00\xb1\xb0\xb0\x6a\xcf\x08\x68\xef\xce\xcb\x4b\x62\xe1\xd8\x91\xf3\x52\x1a\x21\xfe\x7b\x45\x93\xb6\x69\x25\x0e\xbd\x3d\x7b\x66\xec\xcf\x63\xdb\xb4\x21\x0a\x1e\x7b\x5f\xd9\xdc\xf1\x31\x9c\xd8\x1f\xce\x56\xa8\xce\x83\x89\x05\xca\x18\x1a\xa4\xf7\xe4\x34\x99\xf2\x0f\xaf\xa6\x69\x27\x7d\xca\xcc\xb7\xd2\x24\x31\x44\xdc\x75\xca\x38\xa7\x51\xf6\x1e\x8d\xb1\x5e\x75\x5f\x47\x2d\xb0\x29\x8a\xc8\x5d\xa7\x17\xd8\x86\xe0\x70\x49\x1c\x0b\x66\x8e\x3d\x97\xf8\x8b\x8a\x65\x43\x14\x7a\x2f\xf3\xb4\x4e\x00\x20\xab\x58\xfe\x9b\xd6\xe4\xd6\x59\x19\x96\x7f\x2e\xf7\xb8\xb3\xd9\xbc\xeb\x73\x67\xe9\xba\x52\x77\xcd\xa3\x63\x67\xa4\x9e\xae\xc9\x43\x8c\xe1\xac\x34\xde\x97\xeb\x35\x5a\xe3\x2d\xa9\xf4\xc9\x9b\xdc\x31\x24\x60\x74\x80\x3e\x61\x70\xb6\x52\x23\x72\x27\xd1\x92\x70\x01\x19\x5a\x46\x28\xf1\x1b\xc6\xa9\xd9\x8c\x82\x27\xf3\xed\xfd\x99\x84\x83\x44\xeb\x2b\xa5\xf5\x87\x8c\xd4\x8c\x45\xa5\x7a\xe4\x8e\x2c\x7d\xf4\x3f\x2a\xcd\xa8\x66\x3a\xed\x99\xd8\xbe\x70\xdc\x0e\xc7\xa1\x65\x75\x83\x5b\xe0\x36\x2e\xff\xcd\xff\x31\x7b\x36\xbd\x93\x95\xd2\x3a\xb9\xbe\x05\x00\x00\xff\xff\xda\xcb\x5c\xb3\x3a\x02\x00\x00"

func scriptsSwitchboardCheck_receiver_by_typeCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsSwitchboardCheck_receiver_by_typeCdc,
		"scripts/switchboard/check_receiver_by_type.cdc",
	)
}

func scriptsSwitchboardCheck_receiver_by_typeCdc() (*asset, error) {
	bytes, err := scriptsSwitchboardCheck_receiver_by_typeCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/switchboard/check_receiver_by_type.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x81, 0xb8, 0x6e, 0x4b, 0xcb, 0x6a, 0xa3, 0x48, 0xfb, 0xf, 0xdc, 0xa5, 0xe5, 0x47, 0xac, 0x7c, 0xae, 0xc4, 0x91, 0x8b, 0x70, 0x1, 0x95, 0xf7, 0x73, 0xee, 0xf6, 0x9e, 0x85, 0x22, 0xec, 0xc9}}
	return a, nil
}

var _scriptsSwitchboardGet_vault_typesCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\xcd\x0a\xdb\x30\x10\x84\xef\x7a\x8a\xc1\x87\x62\x5f\xec\x7b\x68\x1a\x42\xa0\xbd\x86\x34\xf4\x52\x0a\x91\xe5\xb5\x2d\x2a\x4b\x46\x5a\x37\x84\x90\x77\x2f\xb2\x9a\xc6\x29\x09\xd4\x27\xa3\xfd\x66\x66\x7f\xf4\x30\x3a\xcf\xf8\x3c\xd9\x4e\xd7\x86\x8e\xee\x27\x59\xb4\xde\x0d\xc8\x9e\xde\x32\xf1\x8a\xfc\x7a\xd6\xac\xfa\xda\x49\xdf\xbc\x12\x2d\xca\x99\x10\x55\x85\x63\xaf\x03\x82\xf2\x7a\x64\x78\x92\x4d\x00\xf7\x84\xc0\xce\x53\x83\x5f\x72\x32\x0c\x25\x47\x59\x6b\xa3\x59\x53\x48\x9e\x12\x61\x11\xe3\x6c\xd4\x44\xb3\x51\x86\x40\x0d\xa4\x52\x6e\xb2\x2c\xa4\x52\x14\x42\x2e\x8d\x29\xd0\x4e\x16\x83\xd4\x36\xff\x53\x5c\x61\xdb\x34\x9e\x42\x28\x56\xf8\x7e\xbc\x8c\xf4\x03\x57\x21\x00\xc0\x10\x47\x07\xc6\x1a\x1d\xf1\x36\xe1\x77\x59\x91\x98\xaa\xc2\x97\x88\xc1\x53\x4b\x9e\xac\x22\xb0\x4b\x9d\x2f\x1a\x53\xce\xb6\xce\x0f\xda\x76\xb1\xba\x18\x7d\x3f\xd5\x46\xab\xbf\x69\x0b\xcd\x81\x5a\xac\xe7\xf8\xb2\x23\xde\xdd\x27\xbf\xe4\xef\xb6\x58\x26\xaf\xbd\xe4\xbe\x98\x0d\xe3\x57\xd6\xce\x7b\x77\xfe\xf8\xe1\xad\x6a\xf1\x7f\xfd\x1f\x28\xa5\xdc\x3e\xe5\x8f\x90\xcd\x06\xa3\xb4\x5a\xe5\xd9\xce\x4d\xa6\x81\x75\x8c\x94\xfb\xbc\x95\xc5\x74\xd9\x63\x7d\x07\xe2\xc9\xcf\x87\x83\xa7\x10\xcf\xec\x5a\x9c\x3a\xe2\x6f\xf1\xe6\xf1\x20\x21\x2f\x4e\x33\xed\x13\xfa\xbc\xa5\xf2\x1f\x54\x88\x9b\xf8\x1d\x00\x00\xff\xff\x0f\x40\x25\x01\xba\x02\x00\x00"

func scriptsSwitchboardGet_vault_typesCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsSwitchboardGet_vault_typesCdc,
		"scripts/switchboard/get_vault_types.cdc",
	)
}

func scriptsSwitchboardGet_vault_typesCdc() (*asset, error) {
	bytes, err := scriptsSwitchboardGet_vault_typesCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/switchboard/get_vault_types.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x31, 0x74, 0x9c, 0xc1, 0x57, 0xd3, 0x1b, 0xfe, 0x8, 0x2c, 0x71, 0xb9, 0x27, 0x9a, 0xd1, 0x61, 0xe0, 0x73, 0x5e, 0x58, 0xb4, 0xd9, 0x69, 0x25, 0x6f, 0x62, 0x61, 0x45, 0x1a, 0xbd, 0x79, 0x52}}
	return a, nil
}

var _scriptsSwitchboardGet_vault_types_and_addressCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\xcf\xca\xdb\x30\x10\xc4\xef\x7a\x8a\xc1\x87\x62\x5f\xec\xfb\x47\xbf\x86\x10\x68\xaf\x21\x0d\xed\x35\xb2\xbc\xb6\x45\x65\xc9\x48\xeb\x86\x10\xf2\xee\x45\x56\xfe\x38\x90\x40\x7d\x32\xda\xfd\xcd\x48\x33\x7a\x18\x9d\x67\x7c\x9f\x6c\xa7\x6b\x43\x7b\xf7\x87\x2c\x5a\xef\x06\x64\x4f\x67\x99\x78\xb5\xf9\xf3\xa8\x59\xf5\xb5\x93\xbe\x79\x05\x2d\xc6\x99\x10\x55\x85\x7d\xaf\x03\x82\xf2\x7a\x64\x78\x92\x4d\x00\xf7\x84\xc0\xce\x53\x83\xbf\x72\x32\x0c\x25\x47\x59\x6b\xa3\x59\x53\x48\x9a\x12\x61\x61\xe3\x6c\x64\xa2\xd8\x28\x43\xa0\x06\x52\x29\x37\x59\x16\x52\x29\x0a\x21\x97\xc6\x14\x68\x27\x8b\x41\x6a\x9b\x5f\x87\x1f\x58\x37\x8d\xa7\x10\x8a\x0f\x9c\xf7\xa7\x91\xee\x07\x17\x9c\x85\x00\x00\x43\x1c\xa5\x18\x9f\xe8\x88\xd7\x89\xbb\xf1\x45\xda\xa9\x2a\xfc\x88\x6b\xf0\xd4\x92\x27\xab\x08\xec\xd2\x13\x16\x37\x54\xce\xb6\xce\x0f\xda\x76\x71\xba\xc8\x60\x3b\xd5\x46\xab\xbb\xdb\x82\xd9\x51\x8b\xcf\xd9\xbe\xec\x88\x37\xb7\x08\x4e\xf9\xbb\x38\xcb\xa4\xb5\x95\xdc\x17\xb3\x60\xfc\xca\xda\x79\xef\x8e\x5f\xbf\xbc\xa5\x16\xff\xe7\xff\x59\x4a\x2e\x97\x6f\xf9\xc3\x64\xb5\xc2\x28\xad\x56\x79\xb6\x71\x93\x69\x60\x1d\x23\xf9\x3e\xa7\xb2\x78\x5d\xf6\x88\x6f\x47\x3c\xf9\xb9\x41\x78\x0a\xb1\x6f\xd7\xe2\xd0\x11\xff\x8a\xe5\xc7\x66\xc2\x6f\xcd\xfd\xb5\x9c\xbc\x38\xcc\xa0\x4f\xd4\x73\x60\xe5\x7b\x4a\x88\x8b\xf8\x17\x00\x00\xff\xff\xa3\xe8\x69\xc6\xd9\x02\x00\x00"

func scriptsSwitchboardGet_vault_types_and_addressCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsSwitchboardGet_vault_types_and_addressCdc,
		"scripts/switchboard/get_vault_types_and_address.cdc",
	)
}

func scriptsSwitchboardGet_vault_types_and_addressCdc() (*asset, error) {
	bytes, err := scriptsSwitchboardGet_vault_types_and_addressCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/switchboard/get_vault_types_and_address.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x7f, 0xe6, 0xe9, 0x2e, 0x23, 0x2d, 0xf9, 0x64, 0x3, 0xf2, 0xc5, 0x39, 0xb7, 0x30, 0x55, 0xc, 0x68, 0xf4, 0x1e, 0xc9, 0x1e, 0x14, 0x1c, 0x6e, 0xd9, 0x90, 0x58, 0xc2, 0xfc, 0x82, 0x76, 0xd3}}
	return a, nil
}

var _scriptsTestExample_token_vault_display_strict_equalCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\xdb\x8e\xdb\x46\x0c\x7d\xd7\x57\x10\x2a\x60\xc8\x68\x22\x6f\x2e\xbb\x4d\x8c\xba\x41\x9a\xc6\xe8\x43\x02\x2c\x16\x6a\xfa\x10\x04\x0b\x6a\x44\xcb\x83\x1d\xcd\x08\x33\x94\x2f\x58\xec\xbf\x17\xa3\x9b\x65\x59\x5d\x84\x4f\xd2\xf0\xf0\x90\x3c\x33\xa4\x2c\x4a\x63\x19\xd6\x95\xce\x65\xaa\x28\x31\x0f\xa4\xbf\x12\x63\x86\x8c\xdf\x24\xed\x1d\x6c\xac\x29\x20\xfc\x7f\x40\x18\xb4\x1c\x53\x61\xd3\xc8\xcf\x07\x2c\xca\x96\xab\x05\x0e\x8f\xc2\x20\x58\x2c\x16\x90\x90\x63\xd8\x92\x2a\xc9\x82\x13\x56\x96\x0c\x6c\x60\x87\x4a\x66\xc8\x74\x4e\xe2\xc8\xee\xc8\xc1\x3a\xf9\x4b\xba\x52\xe1\x11\xd0\x01\x1d\x4a\x12\x4c\x99\x27\x0b\x50\x08\x72\x2e\x42\xa5\xe6\xb0\xa9\x34\x14\x28\x75\x84\x59\x66\xc9\xb9\x25\x7c\x6c\x3e\xe6\x4b\xf8\xd3\x18\x05\x8f\x01\x00\x80\x22\x06\x14\xc2\x54\x9a\x61\x05\x39\xf1\xc7\xe6\xa7\x0b\x9b\x07\x3d\xac\x4b\x05\xab\x67\x94\x8c\xfb\xea\xa2\x3a\xb0\x33\x8d\x05\x2d\x7b\x05\x7a\x02\x68\xb4\x78\x71\x86\x75\xc7\x22\x35\xca\xa3\xd7\xc9\xc8\x95\x51\x23\x92\x34\x7a\x09\x61\xb2\x95\xce\x37\xda\x50\x71\x2d\x92\x74\x50\x39\xca\xbc\x36\xa8\x81\xda\x7c\x6c\x6a\x91\xe1\x68\x2a\xc8\x68\x47\xca\xd4\xdf\x16\x34\x1d\x18\xd6\x09\xfc\x62\xf4\x5a\x99\x7d\x3c\xca\x47\x07\x26\xab\x51\xfd\x73\xf7\x65\x79\x7e\xf7\xf1\xe7\x93\x2b\x0a\xb7\xcc\xa5\x5b\x2e\x16\x6d\xbe\x97\x1b\x8e\x8d\xde\x78\x42\x63\xf3\x70\x7e\x4e\xaa\x4c\x6e\xdc\x98\xee\x2b\x65\x12\x5d\xf4\xfd\x0c\xe9\x6d\x02\x16\x5d\x80\xbc\x6d\xa4\xa2\x31\xeb\xdf\x49\x72\xbb\x96\x8a\xa6\x23\xbc\x55\xd6\x2b\xdd\xd5\x8f\xce\x11\xbb\x78\x4f\xa9\x93\x4c\x2f\x3d\xa5\x8b\x85\x29\x16\xd7\x9b\x9b\xd7\xef\xdf\x8a\x2b\xf1\x1b\xbe\x13\x59\x76\xf3\xf6\x4d\xfa\x4a\xbc\x7b\x7d\x35\x72\xe0\xf5\xb5\x48\x5f\x89\xf7\x6f\x6e\xee\xbd\x9c\xf7\xff\x1a\x9b\x15\x68\x1f\x62\xb7\xcb\xc3\xc9\x1a\x46\xda\x74\x56\xf8\x3e\x93\x63\xe9\x1f\x8d\x2c\x30\xa7\x85\xdb\xe5\xbf\x1e\x0a\x75\xc9\x32\xff\x11\x3c\x43\xe8\x8c\x90\xa8\xdc\xb2\x7d\xef\x43\x0b\x79\x2f\x99\xc9\x86\x3f\x75\xb5\x2d\xb8\x56\xc3\xdf\xec\x7d\xaa\x8c\x78\x10\x5b\x94\x3a\x9c\x9f\x71\x3f\xf5\x7f\x83\xe9\xd9\x61\xa5\xf8\x8e\x36\xb0\xea\xe6\xad\x47\xc5\x39\xf1\x27\x2c\x31\x95\x4a\xf2\x31\x1a\xce\x7c\xfc\xcd\x87\xdd\x56\xa9\x92\xe2\x16\x79\x7b\x4a\x14\xa7\xc6\x5a\xb3\xff\x7d\xf6\x78\x5e\xfb\x1d\x39\xa3\x76\x64\x9f\xfe\x88\x4e\xe0\x0f\x1f\xa0\x44\x2d\x45\x14\x7e\x32\x95\xca\x40\x1b\x86\x26\x1e\x10\x2c\x6d\xc8\x92\x16\xf5\x94\xf0\x96\x9a\x52\xc1\xb6\x44\xe1\xa0\x09\x14\x5c\xa1\x7a\x7e\x01\xe4\xc4\xa7\x1d\xd0\x75\x3d\x55\x4a\xb3\xd4\x32\x43\xae\xae\x47\xfa\xa6\x0b\xd2\x3c\x58\x70\x3b\x49\xfb\x2e\xbf\x7f\x9a\x96\xa3\xa6\x84\xb8\x9e\xa1\x58\x32\x15\x2e\x56\xa4\x73\xde\xc2\x6a\xd5\xaf\xa8\x09\xf7\x0b\x28\xc8\x39\xcc\xfd\x83\x6a\x66\x0d\xda\xb8\x42\xba\x02\x59\x6c\xc3\x89\x5d\xf7\xc5\xe4\xa6\x46\xc3\x34\xf9\xf7\xab\x1f\x23\x71\x86\x11\x97\xb5\x76\x78\x4b\x5c\x59\x7d\xa2\xf4\xeb\xd1\x37\xd0\x46\xd4\xbf\xb3\xd9\xc9\xdf\xac\xc4\x01\xa2\x3d\x98\xcd\x7a\x61\x7b\xec\x60\x47\x0e\x02\x86\xa7\x43\xe6\xc1\x86\x8b\x2b\x3b\x4c\x31\xf6\xcc\x66\x70\x91\xac\xef\x36\xf6\xab\x22\xae\xac\x8c\xe6\x27\x8a\x49\xef\x20\xf9\xc9\xdf\x8f\xfb\x54\x70\xef\x0c\x9e\x82\xe0\xbf\x00\x00\x00\xff\xff\xa9\x0d\x0e\x03\xcc\x07\x00\x00"

func scriptsTestExample_token_vault_display_strict_equalCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsTestExample_token_vault_display_strict_equalCdc,
		"scripts/test/example_token_vault_display_strict_equal.cdc",
	)
}

func scriptsTestExample_token_vault_display_strict_equalCdc() (*asset, error) {
	bytes, err := scriptsTestExample_token_vault_display_strict_equalCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/test/example_token_vault_display_strict_equal.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x8, 0xba, 0xe0, 0xe4, 0x4a, 0x17, 0xea, 0x85, 0x71, 0xb4, 0x8, 0x60, 0x14, 0xba, 0x95, 0x7f, 0x16, 0xbd, 0x48, 0xf0, 0x3a, 0xca, 0x29, 0x6e, 0xd3, 0xd9, 0xf3, 0x7f, 0xe8, 0xa3, 0x59, 0x1}}
	return a, nil
}

var _scriptsTokenforwarderIs_recipient_validCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\x51\x6a\xc3\x30\x10\x44\xff\x7d\x8a\xc1\x1f\xc5\x86\xe2\x03\x98\xb6\x21\x2d\xe4\x3b\x94\xf6\x00\xb2\xb4\x76\x44\x64\xad\x58\xaf\x08\x21\xe4\xee\xa5\x36\x2d\x24\x24\x44\x5f\x62\x79\x3b\x33\x3b\x7e\x4c\x2c\x8a\x2f\xde\x53\xdc\xb0\x1c\x8c\x38\x1f\x07\xf4\xc2\x23\xca\xab\x69\x59\x14\x29\x77\xe8\x73\xc4\x68\x7c\xac\x8c\x73\xd2\x62\xed\x9c\xd0\x34\x3d\x43\x2f\xe9\xad\xd1\x5d\x8b\x6d\xee\x82\xb7\xbf\xff\xba\xc5\x3b\x73\xc0\xa9\x00\x80\x40\x8a\x7e\x61\x49\x3e\xa9\xc7\x2b\x06\xd2\xb5\xb5\x9c\xa3\xce\xca\xf5\xcc\xdd\x78\xcd\x40\xfa\x61\x92\xe9\x7c\xf0\x7a\x7c\x79\x3a\x5d\xc5\x6c\x36\x7f\xba\x8b\xf9\xf9\xad\xba\x11\xed\xbe\x7c\xc7\x22\x7c\xa8\xee\x02\xab\x15\x92\x89\xde\x56\xe5\x77\x34\x5d\x20\x28\x63\xd9\xc1\xc3\x28\x10\x9a\x54\xbc\x55\xe8\x31\xd1\x52\xb3\x81\xfd\xbf\xa6\xac\x8b\xd9\x56\x48\xb3\xc4\x8b\x86\x1a\xbb\x23\xbb\xaf\xea\xe2\xfc\x13\x00\x00\xff\xff\xb3\xce\xc9\xb2\xb4\x01\x00\x00"

func scriptsTokenforwarderIs_recipient_validCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsTokenforwarderIs_recipient_validCdc,
		"scripts/tokenForwarder/is_recipient_valid.cdc",
	)
}

func scriptsTokenforwarderIs_recipient_validCdc() (*asset, error) {
	bytes, err := scriptsTokenforwarderIs_recipient_validCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/tokenForwarder/is_recipient_valid.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x7a, 0x23, 0x4d, 0x2, 0xff, 0x47, 0x5f, 0xfa, 0x75, 0xc3, 0x97, 0xa7, 0xe, 0x25, 0x75, 0xe4, 0xab, 0xb9, 0x6d, 0xd0, 0x4a, 0x83, 0x54, 0x49, 0x43, 0x4e, 0x6f, 0xf8, 0x6a, 0xd6, 0x3b, 0xf9}}
	return a, nil
}

var _setup_accountCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x52\x4f\x6f\xe2\x3e\x10\xbd\xe7\x53\xbc\x1f\x07\x14\x24\x9a\xdc\x2b\x5a\xe9\xd7\xaa\x7b\xae\xd8\x8a\xfb\x10\x06\x62\xd5\xd8\x96\x3d\x81\x46\x88\xef\xbe\xb2\x09\x69\x42\xbb\xda\xbd\x6c\x4e\xf1\x9b\x7f\xef\xbd\x99\xb2\xc4\x5b\xad\x02\xc4\x93\x09\x54\x89\xb2\x06\x2a\x80\x20\xbc\x77\x9a\x84\xb1\xb5\x3e\x3e\x07\x71\xb1\x20\xad\xed\x31\x2b\x4b\x90\x69\xad\xe1\x04\x6d\x36\x20\xac\xa8\xd1\x02\xcf\xc1\x36\xbe\x4a\xb8\xd4\xac\x3c\xa8\xaa\x6c\x63\x04\x21\x02\x24\xb1\x54\x6a\x6e\x51\x91\x41\x13\x38\x3e\xc0\x1f\xb4\x77\x9a\xdf\xec\x3b\x9b\x2c\x53\x7b\x67\xbd\xe0\x47\x63\x76\x6a\xdd\xa1\xd8\x7a\xbb\xc7\x64\x84\x4d\xae\x99\x2f\x83\xf2\x2e\x71\x08\xf5\x79\x2b\xc5\xc7\x25\x07\xab\x0f\xec\xbb\xbc\x21\x34\xc9\xb2\xa1\xd8\x7c\x86\x53\x96\x01\x80\xf3\xec\xc8\x73\x1e\xd4\xce\xb0\xbf\x07\x35\x52\xe7\x4f\xd6\x7b\x7b\x5c\x91\x6e\x78\x86\xe9\xff\x17\x95\x7d\x49\xfc\xca\x12\x4b\x96\xc6\x1b\x30\x79\xdd\x42\x6d\x93\xd8\xab\x21\xa4\x3d\xd3\xa6\x45\x10\xeb\x39\x1a\x3f\x92\x91\xec\xec\x5b\xa9\x2d\x2e\xc3\x8b\x98\x4d\x3b\x2e\xd6\x69\xfc\x62\x3a\x2c\x2a\x52\xd1\x63\x1e\xa5\xdd\xe3\x6b\xe4\xe7\xa5\xf6\x95\xa4\x9e\xe1\xbf\x07\x18\xa5\x71\xea\x67\xc4\xcf\x27\xbe\x3d\x74\xfe\x14\xa3\x59\x70\x48\x2b\x5e\xdc\x8d\x5b\x57\x9e\x49\xf8\x65\xef\xa4\x4d\x53\xf2\xd9\xc8\x82\xe7\x14\x06\xc1\xf0\xf1\x1b\x89\x20\xb3\x81\x6b\x04\x4a\xa0\x0c\x3a\x79\x7d\x83\x1b\xd5\x81\x0e\x9c\x8f\x18\x2f\xee\x12\xab\xf9\x08\x14\xfb\x07\xf9\x7d\xf6\x6f\xb8\xba\x66\xad\x55\x85\x8a\x1c\xad\x95\x56\xd2\x76\xf7\xdc\x71\x8e\x87\x0c\xfe\x70\x36\x70\x48\xf0\x92\x2b\x56\x07\xf6\x73\x3c\x91\x26\x53\xf1\x3c\xe9\xea\x8f\x4d\x19\x61\xbf\xa5\x8a\xc3\x57\x43\x9f\xc9\xe1\xe1\x2a\x54\x2b\xf3\xbe\x98\x9e\x46\x77\x5e\x7c\x76\x1f\xe3\xfd\xac\xe1\x15\x17\xd7\x9f\xf3\xe3\xd8\xa9\xbf\x35\xe4\xc6\xfa\xde\x03\xc5\xa1\x48\xbe\x84\xfa\x1f\x31\xbc\xda\x31\x5e\x26\xc9\x77\xcb\x7c\x4d\x1b\x8a\xd4\xe7\x37\xdc\xcf\xd9\x39\xfb\x15\x00\x00\xff\xff\xfb\xe2\x4b\xdd\xdd\x04\x00\x00"

func setup_accountCdcBytes() ([]byte, error) {
	return bindataRead(
		_setup_accountCdc,
		"setup_account.cdc",
	)
}

func setup_accountCdc() (*asset, error) {
	bytes, err := setup_accountCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "setup_account.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xfb, 0x71, 0x4b, 0xe1, 0xd4, 0xaf, 0x39, 0xea, 0x62, 0xee, 0xff, 0x52, 0xb, 0xa8, 0xa8, 0x81, 0x2c, 0xaf, 0x43, 0xd, 0xb4, 0x9f, 0x39, 0xd3, 0xf4, 0x8f, 0xce, 0xd8, 0xf, 0x8, 0xcf, 0xc6}}
	return a, nil
}

var _switchboardAdd_vault_capabilityCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x4d\x6f\x9b\x40\x10\xbd\xf3\x2b\x9e\x38\xa4\x44\xaa\xf0\xdd\x4a\x1a\x45\x51\xdb\x5b\x15\x25\x51\xef\xc3\x32\xc0\x2a\xb0\x8b\x76\x07\x7f\x28\xf2\x7f\xaf\x16\x6c\xba\xb4\x8e\x13\x0e\x16\x86\x99\xb7\xef\xbd\x79\x83\xee\x7a\xeb\x04\x3f\x06\x53\xeb\xa2\xe5\x17\xfb\xca\x06\x95\xb3\x1d\xd2\xc5\xb3\x34\x39\x57\xf9\xbc\xd5\xa2\x9a\xc2\x92\x2b\xcf\x35\x45\xaf\xe7\xfe\xef\x3b\xea\xfa\xe5\x41\xf1\xa3\x34\x49\x56\x2b\xbc\x34\xda\x43\x1c\x19\x4f\x4a\xb4\x35\xd0\x1e\x04\xe1\xae\x6f\x49\x18\x95\x75\xe1\x6f\xf4\x5e\x1a\x92\xd0\xa8\xec\xd0\x96\x28\x18\x83\xe7\x12\xc5\x1e\x64\xf6\xd6\x30\xc4\x82\xca\x12\x04\xc3\x5b\x54\x47\x8e\x90\x91\xc4\x86\x86\x76\x6a\xa6\x9e\x0a\xdd\x6a\xd9\x87\x7a\x69\x58\x3b\xf8\x48\xa1\x63\x6f\x07\xa7\x38\x89\x4f\x7e\x4b\x12\x00\x68\x59\xc0\x91\x8e\xdf\x01\xf4\x61\x06\x5c\xe3\xef\xfd\xcd\xd5\xdb\xc2\xa5\xfc\x89\x15\xeb\x0d\xbb\xc3\xb7\x19\x2a\x3a\xf6\x89\xab\x35\x70\xf5\x9e\xb1\x79\x74\x3f\x51\xe9\x1d\xf7\xe4\x38\xf3\xba\x36\xec\xd6\xb8\x1f\xa4\xb9\x57\xca\x0e\x46\xae\x4f\x74\xc3\xb5\x5a\xe1\x27\x4b\xd0\x79\x62\x1e\x1b\x12\xbb\x31\x8e\x29\xd4\x4d\x90\x5f\x3c\x68\xc2\x9b\xb1\x3c\xb7\x55\x7e\x41\x3f\x6e\x31\xd7\x8e\xf5\x23\x50\x5e\xb3\x7c\xde\x97\x4b\x57\x16\x67\x68\x6e\x7c\x1c\x8a\x56\xab\x47\x92\xe6\x7a\x46\x88\xe5\x3f\x34\xac\x5e\xa1\xab\x51\x9b\x3b\x36\xc5\xc2\x79\xa7\xbd\xf8\xb9\x85\xbc\x67\x27\xd9\x47\x62\x73\x15\x70\xb3\xeb\xaf\x4b\xcd\x1d\x7b\x4f\x35\xaf\x91\x3e\x8f\xea\x51\x5a\xf6\x30\x56\xd0\xd0\x86\x41\xa7\xd5\xc0\xb4\x1b\x67\xf8\xa4\xe7\x65\x84\x29\x12\x1c\x57\xec\xd8\x28\x3e\x86\xf7\xe8\xb1\x8f\xb3\xb4\x9c\xd7\x32\x64\xb8\x3d\x4d\xa5\xb0\xce\xd9\xed\xcd\xa7\x22\xb7\x1c\x4d\x16\x92\xb2\x7e\xf7\x1b\x91\x3f\x8b\x75\x54\xf3\x38\x91\xa5\x39\x77\x77\xe8\xc9\x68\x95\xa5\x0f\xe3\x0a\x07\x5b\x26\x1e\x4b\x61\x11\xe7\xa3\x1b\xe3\xcf\x61\x8a\x35\xef\x58\x0d\xc2\xff\xa4\xfc\xbe\x2c\x47\x43\xfe\xdb\xef\xc5\x76\x0f\x5e\x9b\x3a\x7c\x25\x7e\xf1\x76\x1c\x28\x3a\x96\xc6\x5e\xf4\x2c\x8f\xca\x33\x15\x6d\xfb\x47\x11\x59\x52\x3f\x24\x7f\x02\x00\x00\xff\xff\xde\x10\x3c\x68\x87\x05\x00\x00"

func switchboardAdd_vault_capabilityCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardAdd_vault_capabilityCdc,
		"switchboard/add_vault_capability.cdc",
	)
}

func switchboardAdd_vault_capabilityCdc() (*asset, error) {
	bytes, err := switchboardAdd_vault_capabilityCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/add_vault_capability.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xaf, 0x1b, 0x91, 0x9c, 0x2d, 0x7, 0x8c, 0xba, 0x72, 0x99, 0x5d, 0xd0, 0xd8, 0x0, 0xf0, 0xd, 0x43, 0x69, 0x1e, 0xcd, 0x9, 0x7d, 0x70, 0xf7, 0x1e, 0xb2, 0x37, 0x90, 0xe8, 0x12, 0x64, 0x58}}
	return a, nil
}

var _switchboardAdd_vault_wrapper_capabilityCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\xcd\x6e\xa4\x3c\x10\xbc\xf3\x14\xad\x39\xe4\x63\xa4\x88\xb9\x8f\xf2\xf3\x45\xd1\x66\x6f\xab\x28\x89\x76\xcf\x8d\x69\xc0\x0a\xd8\xa8\xdd\x84\x8c\xa2\xbc\xfb\xca\x86\xb0\xf6\xee\x64\x14\x0e\x23\x06\x77\x97\xab\xaa\xcb\xd6\xfd\x60\x59\xe0\x6e\x34\x8d\x2e\x3b\x7a\xb2\xcf\x64\xa0\x66\xdb\xc3\x26\xf9\xb6\xc9\x8e\x55\x3e\x4e\x5a\x54\x5b\x5a\xe4\xea\x58\x53\xb4\xbc\xf6\x7f\x7b\xc5\x7e\x48\x37\x8a\x3f\x6d\xb2\x6c\xb7\x83\xa7\x56\x3b\x10\x46\xe3\x50\x89\xb6\x06\xb4\x03\x04\xa1\x7e\xe8\x50\x08\x6a\xcb\xfe\x6f\xb4\x2e\x2d\x8a\x6f\x54\x76\xec\x2a\x28\x09\x46\x47\x15\x94\x07\x40\x73\xb0\x86\x40\x2c\x60\x55\x01\x82\xa1\x09\x5e\x70\xec\x04\x26\xc6\x61\x20\x0e\x5d\x38\x60\xa9\x3b\x2d\x07\x5f\x28\x2d\x69\x06\x17\x49\x63\x72\x76\x64\x45\x59\xbc\xe5\x5b\x96\x01\x00\x74\x24\x20\x9e\xf9\x9d\xe5\x09\xb9\x22\xbe\x5d\xd1\xf6\xf0\xe7\xfd\xe2\xec\x2d\xf1\xa6\x78\x20\x45\xfa\x85\xf8\xfd\x6a\xc5\x89\xf6\x7c\xa0\x7a\x0f\x70\xf6\x99\x9d\x45\xf4\x3e\xf3\x18\x98\x06\x64\xca\x9d\x6e\x0c\xf1\x1e\x6e\x46\x69\x6f\x94\xb2\xa3\x91\xed\x07\x57\xff\xec\x76\xf0\xdd\x53\x6e\x69\xa6\xed\xcd\x9c\x79\xc7\x36\x84\xc1\xf8\x9a\x19\xee\x3f\x07\x38\x63\xad\x38\x8e\xba\xba\xf8\x4c\x38\x5c\xc2\x5a\x18\x8a\x03\x4a\xd1\x90\x7c\xdd\x90\x53\x4f\x1e\x47\x66\x6d\xbc\x1f\xcb\x4e\xab\x7b\x94\x76\xbb\x22\xc4\xba\x6f\x5b\x52\xcf\xa0\xeb\x20\x8c\x97\xa6\x58\x35\xbd\x6a\x27\x6e\x6d\x41\xe7\x88\x25\x3f\xa9\xb4\x50\x1e\x34\xdf\x9e\xa7\x82\x7b\x72\x0e\x1b\xda\xc3\xe6\x31\x48\x87\xca\x92\x03\x63\x05\x5a\x7c\x21\x40\x98\x2c\x3f\x6b\xd3\x40\xbd\x58\xb0\x0c\xe3\x08\xab\xcd\x71\x31\x7e\x88\x08\x4c\x35\x31\x19\x45\x4b\x70\x17\xa7\x5d\x1c\xa5\x74\x64\x69\xc6\xe0\xf2\x63\x36\xa5\x65\xb6\xd3\xc5\x97\x12\x97\x0e\x28\xf7\x61\xd9\x7f\x7a\x31\x14\x8f\x62\x19\x1b\x0a\x73\x49\x5d\xba\xbe\x86\x01\x8d\x56\xf9\xe6\x36\x9c\x5b\xef\xcf\xcc\x23\x15\x16\x71\x5e\xdc\x08\x3f\xef\x73\xaa\xe9\x95\xd4\x28\xf4\x57\xc8\x6f\xaa\x2a\x18\xf2\xcf\xd9\x4e\x4e\xf6\xe8\xfc\x10\xb0\xaa\x7e\xd0\xf4\x33\x5c\x0b\x3d\x49\x6b\x4f\x7a\x56\x44\xe5\xbf\xe6\x4b\x24\x57\xd1\x99\x3f\x99\x97\x73\x90\xc3\x40\x7b\x78\x3a\x0c\x74\xf1\x7f\x12\xe3\x00\x78\x95\x6f\x53\x85\xef\xd9\xef\x00\x00\x00\xff\xff\x36\x7e\xb8\x46\xa3\x05\x00\x00"

func switchboardAdd_vault_wrapper_capabilityCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardAdd_vault_wrapper_capabilityCdc,
		"switchboard/add_vault_wrapper_capability.cdc",
	)
}

func switchboardAdd_vault_wrapper_capabilityCdc() (*asset, error) {
	bytes, err := switchboardAdd_vault_wrapper_capabilityCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/add_vault_wrapper_capability.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xac, 0xe9, 0x7a, 0x55, 0xa, 0x8a, 0xf4, 0x72, 0xbd, 0xd7, 0x2f, 0x41, 0xe6, 0x48, 0xd, 0x3e, 0x1e, 0x4, 0xd7, 0x8, 0x57, 0x68, 0x93, 0x92, 0x3c, 0xe0, 0xf6, 0xec, 0xfd, 0x79, 0x1, 0xaa}}
	return a, nil
}

var _switchboardBatch_add_vault_capabilitiesCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\x41\x6b\xdb\x4c\x10\xbd\xeb\x57\x3c\x7c\xf8\x70\x20\xc8\x77\xf3\xa5\xc1\x2d\x6d\x6f\x25\x24\xa1\x97\x10\xc8\x68\x77\x64\x2d\x95\x77\x97\xdd\x91\x1d\x53\xf2\xdf\xcb\x4a\x8a\xbc\x0a\x76\xa9\x0e\x66\xad\xd9\x37\x7a\x6f\xde\x1b\xb3\xf3\x2e\x08\xbe\x75\x76\x6b\xaa\x96\x1f\xdd\x2f\xb6\x0f\x07\x23\xaa\xa9\x1c\x05\x8d\x3a\xb8\x1d\x16\x97\xca\x8b\x62\xc4\x7f\x7d\xa5\x9d\x1f\xeb\x23\x26\x7f\xb5\x28\x8a\xd5\x0a\x8f\x8d\x89\x90\x40\x36\x92\x12\xe3\x2c\x4c\x04\x41\x78\xe7\x5b\x12\x46\xed\x42\xfa\x9b\xd5\xa5\x21\x81\x72\x5d\xab\x51\x31\xba\xc8\x1a\xd5\x11\x64\x8f\xce\x72\x6a\x28\x0e\xa4\x35\x22\xef\x39\x50\x0b\xcb\x07\xd4\x23\x53\x48\x4f\x65\x4f\x5d\x2b\xf1\x1a\x15\xb7\xce\x6e\x8d\xdd\xf6\x18\x28\x0e\x42\xc6\xe2\x65\xa3\x75\xe0\x18\x5f\xd2\xeb\xbe\x63\xc3\x26\x20\x66\x03\x08\x1c\x5d\x17\x14\x97\x45\xce\x6c\x49\x03\x70\x8d\xb1\xc3\x15\x7e\x17\x05\x00\xb4\x2c\xe0\x4c\xfa\xcf\xc4\xe0\x8e\xa4\x59\xe3\xae\xab\x5a\xa3\xd2\x79\xba\xb9\x7f\xaf\xc6\x35\x9e\x4e\xf5\xe7\xe9\x42\x46\xe5\x9e\xeb\x35\xf0\xdf\x25\x2f\xca\xec\x3c\x50\xf1\x81\x3d\x05\x5e\x46\xb3\xb5\x1c\xd6\xd8\x74\xd2\x6c\x94\x72\x9d\x95\x89\x6e\x7a\x56\x2b\x7c\x67\x49\xda\xdf\x99\xe7\xd3\x83\x27\x69\x06\x4f\xd3\x0d\xe5\xac\x04\x52\x32\xa1\x23\xb7\x75\x79\x56\x31\x6e\x66\xb9\x28\xef\x59\xb1\xd9\x73\xf8\x30\x07\x20\x67\xb2\xb1\x1a\x51\x5c\x60\x18\x81\xb1\xfd\x37\x29\x04\x3a\xc2\xd5\xf0\x3d\xb2\x67\x14\x87\x74\x1c\x4c\xdb\xa6\x70\x78\x8a\x29\x1e\xe2\x12\x20\xef\x97\x7b\xb9\x63\x69\x9c\x9e\x33\x3f\x39\x80\x1b\x3c\x3d\x5f\x2a\x96\xe4\x3d\x5b\xbd\xbc\xac\xf6\xea\x8c\x98\x34\x56\x42\xe0\x9a\x03\x5b\xc5\x23\x3d\x0c\x86\xc4\x9c\xdb\xfc\xbb\x73\xd7\x71\x33\x22\xca\xca\x85\xe0\x0e\xff\xff\x53\x06\x3e\x4d\x2d\xcf\x3d\xcb\x64\xe8\xfa\xe2\xde\x97\x0f\xe2\x02\x6d\xb9\x17\x86\xbf\x76\xba\xbd\x85\x27\x6b\xd4\x72\xf1\xa5\xdf\x54\xeb\x04\x03\xcf\xb9\xf0\x4c\xd3\x62\x98\x55\xff\xf3\x36\xe4\x90\x5f\x59\x75\xc2\xa7\x58\xa6\x28\x68\x3d\x44\x8e\x3c\x55\xa6\x35\x72\x9c\x06\x98\x99\xda\xc5\xb4\xd6\xa4\xf5\x0f\x3e\xf4\x66\xcc\x6d\x3e\x33\xcf\x32\xbb\x1c\x3f\x1f\xfb\xa8\x2e\xfd\xb0\x84\x1f\x6c\xbf\xc6\xb4\xe8\xe3\xe1\xaa\x78\xa7\xfd\xf6\x27\x00\x00\xff\xff\xc4\xdc\x11\x4a\x3c\x05\x00\x00"

func switchboardBatch_add_vault_capabilitiesCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardBatch_add_vault_capabilitiesCdc,
		"switchboard/batch_add_vault_capabilities.cdc",
	)
}

func switchboardBatch_add_vault_capabilitiesCdc() (*asset, error) {
	bytes, err := switchboardBatch_add_vault_capabilitiesCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/batch_add_vault_capabilities.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x29, 0x7f, 0x18, 0x77, 0xaf, 0x95, 0x78, 0xd4, 0x66, 0xec, 0x46, 0x64, 0x6b, 0x3d, 0x15, 0x4f, 0xec, 0x65, 0xfd, 0x3b, 0xef, 0xcf, 0x5f, 0x71, 0x3e, 0x8, 0xd6, 0x61, 0x3a, 0xa2, 0x71, 0x41}}
	return a, nil
}

var _switchboardBatch_add_vault_wrapper_capabilitiesCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\xcd\x6e\xdb\x3c\x10\xbc\xeb\x29\x06\x3e\x7c\x91\x81\x40\xbe\x1b\xf9\xf9\xd2\xa2\xed\xad\x08\x92\xa0\x3d\x04\x01\xbc\x96\x56\x16\x51\x99\x24\xc8\x55\x1c\xa1\xc8\xbb\x17\xa4\x14\x9b\x4e\x23\x24\xe5\xc1\x16\xb9\x3f\xdc\x99\x59\xae\xda\x5a\xe3\x04\x5f\x3b\xbd\x51\xeb\x96\xef\xcc\x2f\xd6\xb7\x3b\x25\x65\xb3\x36\xe4\x2a\xd4\xce\x6c\x31\x9b\x32\xcf\xb2\x31\xfe\xcb\x13\x6d\xed\x68\x1f\x63\xd2\xa3\x59\x96\x2d\x16\xb8\x6b\x94\x87\x38\xd2\x9e\x4a\x51\x46\x43\x79\x10\x84\xb7\xb6\x25\x61\xd4\xc6\x85\x6d\x62\x97\x86\x04\xa5\xe9\xda\x0a\x6b\x46\xe7\xb9\xc2\xba\x07\xe9\xde\x68\x0e\x09\xc5\x80\xaa\x0a\x9e\x1f\xd9\x51\x8b\x92\x2c\xad\x55\xab\x44\xb1\x1f\x62\xad\x51\x5a\x82\x5b\x3d\x02\x80\xc4\x0a\x1f\xa9\x6b\xc5\xc3\xd4\x20\x54\xaa\xae\xd9\xb1\x16\x00\x21\xe9\xea\xae\xb7\xbc\x02\xe9\x70\x69\x6b\xf4\x26\x5e\x83\x92\x9d\x90\xd2\x58\x5d\x55\x95\x63\xef\x57\xa7\xe1\x5c\x1a\x56\x0e\x3e\x21\xcc\xb1\x37\x9d\x2b\xb9\xc8\x52\x24\x39\x0d\x51\x4b\x8c\xe1\x73\xfc\xce\x32\x00\x68\x59\x86\x72\xae\x49\x1a\xbf\xc4\xfd\x75\xb7\x6e\x55\x19\x76\x0f\xc7\x0e\xa1\xae\xe0\x10\xfe\x0f\xa6\xe4\xee\x1b\xae\x97\xc0\x7f\x53\x62\x15\xc9\xf7\x70\xb7\x75\x6c\xc9\x71\xee\xd5\x46\xb3\x5b\xe2\xaa\x93\xe6\xaa\x2c\x4d\xa7\x65\x5f\x5f\x58\x8b\x05\x6e\xc5\x38\x0e\x70\x5f\xa4\xc6\xa0\xb5\xe3\x92\xd5\x23\xbb\x13\x0f\x1b\x0b\x87\x25\x69\xa0\x74\xf4\x25\xe7\xa8\x0f\x34\x8f\xb6\x34\x63\xf0\x1b\x65\xda\xa9\xb6\x0d\x0a\x5b\xf2\x41\xe3\x81\xd7\x23\x56\xb7\x2c\x8d\xa9\xf6\xe1\x9e\xdb\xba\x38\xb0\x86\x73\xdc\x3f\x4c\x19\x0b\xb2\x96\x75\x95\xa7\xfd\x58\xdc\x8c\x65\x1f\xc8\x9e\x7f\x04\xee\x89\x87\xf4\x96\xff\x82\x17\x0e\xdf\xc6\x92\x26\xfd\x17\x5c\x51\xec\x29\x5c\xd1\xf8\x82\x2b\x6c\xce\xfe\x3f\x42\xf7\x23\x38\x5d\xe4\xf3\xf9\x18\x9b\x16\xf1\x8d\x05\x04\xc7\xb1\xe7\x4b\xde\x17\x15\x5b\xc0\xa7\xc5\x1d\x5f\x7c\xdc\x67\x38\x1f\x23\x8a\xb5\x71\xce\xec\xce\x3e\xd4\x75\x17\xfb\x94\xef\xae\x3c\x0c\x91\xe5\xe4\x5c\x2a\x82\x40\xb4\xe1\xa8\x1c\xde\x4d\x7b\x79\x09\x4b\x5a\x95\xf9\xec\x73\x9c\x26\xda\x08\x86\xc2\x8f\x99\x48\x40\xce\x06\xf2\xe2\xcf\xf3\xd0\x1b\xfc\xc4\x65\x27\x7c\x78\x19\x8b\x45\x78\xce\x91\xbf\xfd\xec\xe9\x73\xc5\x7e\xfe\x96\xd6\x9d\x57\x7a\x13\x06\xd6\x77\xde\x45\x85\x7e\xba\x20\xa1\xf3\x9f\xfa\x00\x23\x9b\x24\xbb\x98\x8c\xc9\xed\x30\x34\x5e\xb5\xfc\xe9\xfb\x8c\xa4\x4b\x86\xc1\xf2\xaa\xbf\x4e\xb1\x9f\x59\xe3\xc7\xf8\x44\x9e\xb3\xec\xf9\x4f\x00\x00\x00\xff\xff\xf1\xb3\x2c\x41\x37\x06\x00\x00"

func switchboardBatch_add_vault_wrapper_capabilitiesCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardBatch_add_vault_wrapper_capabilitiesCdc,
		"switchboard/batch_add_vault_wrapper_capabilities.cdc",
	)
}

func switchboardBatch_add_vault_wrapper_capabilitiesCdc() (*asset, error) {
	bytes, err := switchboardBatch_add_vault_wrapper_capabilitiesCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/batch_add_vault_wrapper_capabilities.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf6, 0x59, 0x81, 0xe6, 0x82, 0x64, 0x28, 0x6c, 0x45, 0x37, 0xa2, 0xf2, 0x24, 0xed, 0x3f, 0x27, 0x80, 0x7a, 0x68, 0x23, 0x1c, 0x69, 0x57, 0xc4, 0xd2, 0x59, 0x17, 0xa6, 0x21, 0x36, 0x70, 0x29}}
	return a, nil
}

var _switchboardRemove_vault_capabilityCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\xcf\x6f\x9b\x30\x14\xbe\xf3\x57\x7c\xe2\xd0\x91\x0b\xb9\xa3\xae\x55\x15\x6d\xbb\x56\x69\xb5\xbb\x71\x1e\x60\x0d\x6c\x64\x3f\xa7\x8d\xa2\xfc\xef\x13\x98\x81\x91\xc2\xb6\x5c\x02\xb6\x3f\xbe\x5f\xcf\xaa\xeb\x8d\x65\x7c\xf7\xba\x56\x65\x4b\xef\xe6\x17\x69\x54\xd6\x74\x48\x57\x6b\x69\x72\xef\xe4\xdb\x87\x62\xd9\x94\x46\xd8\xd3\x3d\x50\xb4\x3d\xe3\xbf\x7d\x8a\xae\x5f\x13\xc5\x4b\x69\x92\xec\xf7\x78\x6f\x94\x03\x5b\xa1\x9d\x90\xac\x8c\x86\x72\x10\x60\xea\xfa\x56\x30\xa1\x32\x76\x78\x8d\xf6\xb9\x11\x3c\x00\xa5\xf1\xed\x09\x25\xc1\x3b\x3a\xa1\xbc\x40\xe8\x8b\xd1\x04\x36\xb0\xd4\x99\x33\xa1\x9a\x04\x82\x47\x05\x67\xe1\xdb\x80\x14\xbd\x28\x55\xab\xf8\x12\x54\x71\x43\xca\xc2\x45\x06\x2d\x39\xe3\xad\xa4\x24\x22\xce\x7a\xc1\x4d\x81\x57\x5f\xb6\x4a\xbe\x0a\x6e\x76\xb8\x26\x09\x00\xb4\xc4\xa0\xc8\xd8\xcf\x81\xe8\x10\x48\xf8\x52\xe0\x30\xf3\x3d\x3e\x5c\x57\xa9\xe5\x47\x92\xa4\xce\x64\x6f\x4f\xf3\x97\x22\x1d\x47\xaa\x0a\xe0\x61\x2b\xe8\x3c\x7a\x0e\x4a\x7a\x4b\xbd\xb0\x94\x39\x55\x6b\xb2\x05\x5e\x3c\x37\x2f\x52\x1a\xaf\x79\x56\x0b\xec\xf7\xf8\x41\x3c\xd8\xbe\x17\x05\x02\xf8\x8b\x83\x08\xc8\x09\xe5\xa8\xad\xf2\x6d\x9b\xf8\x3a\x01\xf3\x9a\x78\x71\x3c\x81\xd7\xbf\xbf\xc4\x30\xa6\xbc\x9b\x50\x6b\xbd\x02\x96\x2a\xb2\xa4\xe5\x58\xf2\x22\xd5\xad\xba\x43\xac\x77\x1d\xe6\xa2\xb1\x34\xd6\x9a\x8f\xc7\xff\x8a\xf6\x69\xf6\x90\x0d\x19\x15\x9b\xf7\x22\x7f\x63\x63\x45\x4d\x61\x38\x22\xe7\xcf\xcf\xe8\x85\x56\x32\x4b\x0f\xe3\xd0\x6a\xc3\x08\x0a\xd6\x96\x22\xb5\xe9\x2e\xb4\x75\x0b\x7f\xf4\x49\xd2\x33\xad\x3a\x3c\x86\x29\xdf\xac\x31\xca\xc4\x3b\xa5\xeb\x71\x75\x81\x87\x4b\x32\x96\x88\x8e\xb8\x31\xa7\xed\xe0\xf2\xe8\x70\xb6\x90\x15\xff\x1a\x8a\x50\xe4\x1f\x23\xb7\xe4\x77\x00\x00\x00\xff\xff\x36\x73\x1f\x58\x83\x04\x00\x00"

func switchboardRemove_vault_capabilityCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardRemove_vault_capabilityCdc,
		"switchboard/remove_vault_capability.cdc",
	)
}

func switchboardRemove_vault_capabilityCdc() (*asset, error) {
	bytes, err := switchboardRemove_vault_capabilityCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/remove_vault_capability.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xac, 0xcb, 0x2b, 0x62, 0x7b, 0xca, 0x3f, 0xde, 0x8c, 0x12, 0x9, 0xaa, 0x96, 0xba, 0xca, 0x21, 0xe8, 0x13, 0x67, 0xf6, 0x7a, 0xe9, 0xc3, 0x3a, 0x82, 0xd7, 0xe7, 0xb2, 0xe1, 0xc0, 0x8c, 0x39}}
	return a, nil
}

var _switchboardSafe_deposit_to_lnfCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x57\x4d\x6f\xe3\x36\x10\x3d\xaf\x7f\xc5\xac\x0f\x5e\x1b\x70\xec\x4b\xd1\x83\x91\x8f\xba\x49\x5d\x2c\xb0\x87\x20\xc9\xb6\xd7\xd0\xd2\xc8\x62\x57\x26\x05\x72\x14\xad\x11\xf8\xbf\x17\x24\x45\x49\x94\x64\x6f\xb6\x48\x75\xf0\xae\xa8\x99\xe1\x9b\xc7\x79\x33\x0c\xdf\xe7\x52\x11\x6c\x0a\xb1\xe3\xdb\x0c\x9f\xe4\x37\x14\x90\x28\xb9\x87\x71\xb0\x36\x1e\x0d\x59\x3e\x96\x9c\xa2\x74\x2b\x99\x8a\x87\x9c\x5a\x9f\x1b\x7f\xce\x28\xd8\xc5\xbf\xd7\x16\x5f\xa4\xa6\xb5\x88\x37\xb2\x10\x3e\x6a\x7b\xa9\x89\x94\xc9\x32\x88\xe4\xdf\xc7\xa3\xd1\x72\x09\x4f\x29\xd7\x40\x8a\x09\xcd\x22\xe2\x52\x00\xe1\x3e\xcf\x18\xa1\x86\x54\x96\x40\x12\x34\x8a\x18\xbe\x3e\xde\xdd\x42\x52\x88\x58\xc3\x33\xc9\x67\x60\xe2\x00\xcf\xeb\x38\x56\xa8\xf5\x33\x94\x9c\x52\x59\x10\x7c\x13\xb2\xe4\x62\x07\x26\x30\x4f\x80\x13\xa4\x32\x8b\x35\x30\x78\x61\x45\x46\x20\x13\xa0\x94\x11\xe8\x1c\x23\x9e\xf0\x08\xc8\x02\xa3\x43\x8e\x0b\x78\x4a\x31\x00\x52\xf2\x2c\x03\x46\x06\x0f\x19\x1c\x26\x68\x8c\xb9\xd4\x9c\x80\x52\xac\xd0\x70\x41\xd2\xbe\x2a\x8c\x90\xbf\xa0\xfa\xa4\x41\x37\x84\xce\x0d\x0e\x21\x21\x62\x39\xdb\xf2\x8c\xd3\x01\x12\xa9\x40\xc9\x82\x3c\xd0\x10\xd1\xe6\x09\xb8\x86\xc4\xb2\x6a\xd8\x48\x31\x0c\x47\x29\x0a\x93\x98\x45\xd7\x87\x63\x33\xf7\x90\x82\x23\x8a\xa4\x20\xc5\x22\x5a\x8c\x96\xcb\x51\x2b\xcf\x29\xc9\x15\x54\x4c\xce\x81\xed\x65\x21\x68\x05\x5f\x37\xfc\xfb\xaf\xbf\xcc\xe0\x75\x04\x00\x60\x7f\xec\x61\x99\x3c\x13\x54\x28\x22\x84\x6a\x17\x47\xad\x3d\x5c\xf3\x9a\xb3\x83\x25\x81\x45\x91\x09\x65\x5d\x33\x24\x67\xf6\x80\xc9\x0a\x26\x75\x31\x2d\xfe\x32\x8b\xed\xe8\x76\x01\x14\x6a\x59\x28\xb3\x85\xe1\xc6\x9d\xa1\x89\x6d\x8f\x4b\xbb\x55\xa6\x10\xb6\x68\x48\xb4\xc9\x24\xa8\x14\xc6\xf5\x6e\x1a\x05\xd9\x58\x2b\xf8\x2d\x28\xf6\x70\xcb\x75\x3f\x1d\xcd\x77\xc2\x26\x90\x64\xb2\x74\xa8\xe7\x6e\x47\x4b\xf9\x16\xa1\xd0\x18\xdb\x53\xcc\xd9\xc1\xee\x6f\xa8\x9e\x6c\x20\x41\xd4\x50\x23\x30\xee\xf7\x4a\xbe\xf0\x18\x95\x4b\xfb\x35\x04\xe2\x3f\x1e\x1b\x30\xad\x2a\x19\x44\xe3\xca\xd5\x57\x9a\xab\x24\x8c\xe4\x0b\xaa\x2e\x8e\x00\xc6\x43\xe5\xb0\x82\xdb\x7a\x83\xcb\x49\x2d\x44\x47\x49\x07\x9d\xf7\x39\x5e\xdf\x8c\x6c\xb0\x5c\x61\xce\x14\x4e\x1d\xa2\x15\xac\x0b\x4a\xd7\xee\x8c\x4d\x99\x58\x9b\x2a\x91\x3f\x91\x80\x9d\x61\x56\x93\x54\x18\x3b\x6e\x6b\x3f\x8d\x59\xb2\xf0\x45\x02\x57\x95\xf5\x62\x2b\x95\x92\xe5\x65\xb7\x66\xae\xa7\xa6\xe0\x56\xd0\x59\x7e\x24\xa9\xd8\x0e\xef\x19\xa5\xb3\xd1\x87\x0f\x1f\x6e\x6e\x20\x67\x82\x47\xd3\xf1\xad\x2c\xb2\x18\x84\x24\x70\x11\xfb\xf0\x64\xe9\xd0\xd9\x40\x1f\xc7\xb3\x76\x46\x7f\x73\x4a\x63\xc5\x4a\x5f\x81\x75\xb5\xbf\x21\xa7\xba\x14\xe1\xf2\x22\x48\x72\x51\x56\x51\xa7\x5e\x75\xee\xdf\x59\x40\xe6\xef\x0e\xee\x39\x3e\x5b\xb5\x91\x57\x45\x15\x42\xe8\xd4\x62\x9f\xdd\x53\xa5\xe9\x69\x5e\x6a\x47\xec\x32\xf1\x45\x63\x33\x6a\x38\x32\xcf\x19\xb2\x07\x44\x55\x43\x1d\xcf\x7a\xc5\x63\xb2\x6b\x69\xc1\xb6\xed\xf3\x5a\xe8\xe7\xeb\x0b\xb8\x49\x76\x87\xf4\x5f\xea\x7f\xba\xcc\x8b\x6d\xc6\xa3\x26\x77\xff\x6d\xd6\x34\xc7\xa3\xcb\x01\xbf\x63\x54\x10\x0e\xe8\xa1\x1a\x11\x3c\xe7\x28\xe8\x93\x06\x17\xd3\x77\x49\x90\xdb\x7f\x30\x6a\x0a\xc7\x28\xb7\xb6\x86\x2b\xd8\x21\x55\x5a\x9b\x92\x6c\xf1\xc5\x13\xd7\xed\x9a\x09\xe1\x8e\xb7\xf6\x0d\x93\x9e\x9e\x9a\xfb\x8b\x7b\x0b\xc7\xe9\xa6\x7d\xa6\x8d\xfe\x4e\x79\xb6\xfe\xff\xfa\x16\x23\xb7\xd3\xf1\x7a\xea\x87\x4b\x8b\xa8\x75\x33\x6d\xdb\xa3\xad\x35\xfc\x7f\x30\x6e\x21\x88\x58\xb1\x23\x24\xdd\xb9\x68\x18\xd7\x42\x0c\x18\x5b\x68\x96\x60\x65\x53\x55\xfc\xe5\x45\x47\xbd\x27\xd5\xda\xcd\xa3\xca\xe5\x73\x52\x5f\x3b\xb8\x06\x85\x54\x28\x81\x7e\x80\x53\x8a\x5c\xd5\x39\xc6\x3c\x16\x9f\x08\x74\x11\x45\x68\x4c\xb4\x84\x12\x21\x2f\x68\x28\x6e\xe7\xea\x61\x66\x3c\xac\x45\x0c\x76\xca\xf7\x1c\x4c\xfe\x7b\xdc\x4b\xb8\x82\xf1\x5d\x81\xa0\xe4\x81\x65\xc4\x51\x8f\x07\x4d\x2b\x44\x7f\x68\xe2\x7b\x46\x68\x58\x68\x5f\x22\x16\x58\x7d\xf0\x5c\x29\x8c\x11\xf7\x66\x1c\x90\x9c\x03\x27\xb4\xcc\xf5\x08\x9f\x5b\x0c\x2b\xfb\x3b\x87\x98\xeb\x3c\x63\x87\x15\x08\x9e\xcd\x06\x61\x54\xdd\x66\x83\x58\x9f\x43\xa7\x85\xf5\x4f\xa3\x03\x7d\xd1\xc4\x18\xde\xa3\xbe\x63\x5c\x5e\xf4\x7c\xeb\xe0\x2d\xa9\xf9\x27\xe0\xa3\x72\x9c\xf6\xac\xcc\x13\x90\x33\x68\xe1\x09\xf3\x58\x86\xad\x5a\xdc\x0d\x7e\x6f\xf3\x39\x6c\xa1\xfd\x58\x3c\xec\xd1\x70\x35\x69\x11\xcc\x34\x4c\x06\x6e\x48\xc3\x81\x5a\x2d\x30\xf7\xc1\x7a\x1d\xb7\xe7\x39\xc0\xe2\x72\x09\x0f\x56\x12\xf6\x26\xaf\x70\xcf\xb8\x30\x77\x98\x0a\x98\xbb\x4b\x71\x23\x14\xae\x2b\x15\x55\xc2\x8f\xa4\x48\xf8\xae\xf0\x97\xbd\x4e\x50\x3b\x1a\x7a\x43\xa1\xe6\xa1\x0b\xf5\x63\xd5\xdf\xa6\xb3\x8f\xf5\x59\x7a\xfd\x9f\x2b\xa0\x18\x35\x29\x79\xe8\x16\x4e\x60\x77\x1c\x0d\x79\x84\x4d\xa5\x36\x39\x02\x66\x1a\xfb\x1d\xf1\xb3\x1b\x7d\x85\x46\x65\xda\x84\x9d\xa9\x29\x8b\x81\x05\x5d\xaf\xc4\x53\x7f\x99\x7c\x99\x6c\x82\x90\x6f\xec\x07\xef\xd7\x0b\xc2\x7c\xdf\xda\x08\xfe\xef\x26\xf0\x13\x0d\xa0\xed\xf6\x36\xed\x9f\xd7\xfd\x8f\x35\x7f\x4e\xef\xe7\xb5\xfe\x2e\x3a\xff\x79\x8d\xcf\xba\x55\xfb\xbe\xd2\x3e\x2b\xeb\x77\x91\xf4\x29\x39\x37\x7d\xeb\xe8\x6f\x79\xc7\x11\xfc\x1b\x00\x00\xff\xff\xfd\x84\x52\xd0\x8d\x11\x00\x00"

func switchboardSafe_deposit_to_lnfCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardSafe_deposit_to_lnfCdc,
		"switchboard/safe_deposit_to_lnf.cdc",
	)
}

func switchboardSafe_deposit_to_lnfCdc() (*asset, error) {
	bytes, err := switchboardSafe_deposit_to_lnfCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/safe_deposit_to_lnf.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x26, 0x5a, 0x67, 0x79, 0x0, 0x7b, 0x1d, 0x2a, 0xd, 0x55, 0x35, 0xb6, 0xc4, 0x4b, 0xa9, 0x5e, 0xbf, 0x8d, 0x29, 0x23, 0xde, 0x9d, 0xfe, 0x59, 0xb5, 0xa3, 0xb4, 0x70, 0x0, 0x9, 0x5a, 0x96}}
	return a, nil
}

var _switchboardSafe_transfer_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x55\x4d\x6f\xdc\x36\x10\x3d\x7b\x7f\xc5\x64\x0f\xb1\x16\x70\xe4\x4b\xd1\xc3\xc2\x49\x6a\x24\x75\xaf\x41\xe2\xb6\x67\x4a\x1c\x89\x6c\xb4\x1c\x61\x38\xb2\xbc\x30\xfc\xdf\x0b\x92\x92\x96\xf2\x07\x6a\xd4\x07\xef\x92\x9c\x8f\xf7\x66\xde\xcc\xda\x43\x4f\x2c\x70\x33\xb8\xd6\x56\x1d\xde\xd2\x4f\x74\xd0\x30\x1d\x60\xbb\xba\xdb\x6e\x5e\xb2\xfc\x31\x5a\xa9\x4d\x45\x8a\xf5\x4b\x4e\xd9\xf3\xe2\xff\xfb\xbd\x3a\xf4\xeb\x44\xf9\xd5\x76\xb3\xb9\xbc\x84\x5b\x63\x3d\x08\x2b\xe7\x55\x2d\x96\x1c\x58\x0f\x0a\x04\x0f\x7d\xa7\x04\xa1\x21\x0e\xc7\xec\x5d\x8c\x12\xa8\x69\xe8\x34\x54\x08\x83\x47\x0d\xd5\x11\x94\x3b\x92\x43\x08\x11\x85\xc0\xa3\xd3\x20\x21\x89\x0f\x47\xe5\x48\x0c\x32\xa8\xba\xa6\xc1\x09\x88\x61\x1a\x5a\x03\x0a\x7c\xc6\x6a\xf0\xd6\xb5\x20\x06\xc1\xab\x06\xbf\x62\x4f\xde\x4a\x08\x78\x40\x31\xa4\xcb\x04\x35\x1d\x60\xb4\x5d\x07\x8e\x04\x7a\xe5\x6c\x0d\xb6\x49\x8e\x59\x38\x4d\xe8\xa3\x85\x51\x77\x18\x5e\x43\xa8\x5a\xf5\xaa\xb2\x9d\x95\x63\x84\x29\xc4\xf1\x09\x34\x7a\xcb\xa8\xe1\xe6\xf6\x02\x18\x65\x60\x37\x63\xd1\x09\x07\x6a\xb8\x53\x43\x27\x60\x9d\x17\x54\xba\x4c\xb5\x43\x18\xad\x18\xcd\x6a\x04\x75\x88\xdc\x54\x60\x6e\x70\xe1\x1a\xeb\xde\xa2\x5c\x4f\xe7\x71\xae\x5c\x30\xea\x15\xab\x03\x0a\xb2\x9f\x2b\x17\x6e\xb3\x6a\x97\x9b\xec\x50\x08\xed\xe1\x5a\x6b\x46\xef\x2f\xa6\x7c\x7b\xf8\xf3\xc6\xde\xff\xfa\xcb\x0e\x1e\x36\x00\x00\xf1\xdf\x04\x8d\xb1\x41\x46\x57\xe3\x1c\x38\x31\x88\x88\x52\xf6\x23\xf2\xb9\x9f\xa1\x46\xd7\x0e\x25\x99\x7d\xc7\x66\x0f\x6a\x10\x53\xac\x74\x56\xfe\x3d\xf1\x55\x55\x87\x3b\x78\x9f\x0b\xaa\xfc\x2b\x38\xe6\x08\xe2\x05\x30\x7a\x1a\x38\xc0\x08\xd2\x31\xd4\x69\x9f\x78\x4e\x02\x09\xb7\x8a\x11\x2a\x8c\x45\x0f\x84\x1b\x64\x46\xbd\x20\xf2\xe8\x24\xc6\xda\xc3\x6f\x6b\x38\x29\x65\x34\xec\x19\x7b\xc5\x58\x78\xdb\x3a\xe4\x3d\x5c\x0f\x62\xa6\xaa\x87\xea\x44\x9b\x09\xdb\x1f\x28\xa0\x9e\xd7\x27\x79\x9e\xfb\x24\x8c\xa9\xe3\x8b\x9f\xc7\xae\x29\xe7\xda\xc0\xc7\xc9\xba\xac\x88\x99\xc6\xab\xff\x53\xaa\x4f\x45\xe8\xc5\x1e\x9e\xbf\xfc\x10\x62\xd5\xe2\x37\x25\x66\xb7\x39\x3b\x3b\xfb\xfc\x39\x09\xbd\xd8\x7e\x89\xfa\x09\xba\x4e\x89\x9f\xb3\xa0\x31\x91\x88\x81\xde\x6d\x77\x2b\xe6\x33\xa6\xb9\xf8\x8b\x18\xde\xc0\x7d\xe9\x02\x5c\x7d\x58\x15\xa3\x9c\x87\xa0\x98\x45\x99\x3e\x77\x27\x49\x3e\x26\x14\x78\x8f\xf5\x20\xf8\x42\x3b\x24\x0a\xb6\xb6\xbd\x45\x27\xe7\x1e\xfa\xa1\xea\x6c\xbd\x8c\x11\x55\xff\x60\x7d\xc2\x13\x44\xb1\x58\xc3\xc7\x6c\xc0\x0a\xa1\xdd\x5b\x7a\x9d\xe7\xca\x77\xeb\x77\xac\xd1\xde\x21\xaf\x52\x65\x7b\x25\xf5\x7e\xf1\x2e\x5b\x94\x2f\xcb\x52\x29\x5e\xdb\xc9\xe5\xb7\x48\x27\xf5\x13\xb2\xbf\x59\x3e\xef\x5f\xf5\xcc\xbe\x3f\xbc\xc5\x28\x65\x7a\xfc\x54\xfc\xb7\x70\x12\xd3\x75\x6d\x32\xaa\xef\xb6\xbb\xa5\x7f\xab\x2f\x97\x97\x30\xad\xe7\x58\xca\x66\x70\xda\x43\xfc\x69\x58\xad\xe0\x8b\x79\x2d\x4f\x3b\xf4\xb4\x92\x6b\x0a\x7a\x17\xcc\x23\x06\xc3\x7c\xb9\xa7\x35\x9c\x25\x98\x36\x2f\x50\x93\x28\xfd\xb4\xae\xbd\x00\x4f\x30\xe2\xb4\xe3\x29\x8f\xc7\x58\x53\x60\x27\x86\xfc\x14\x62\x79\xb6\x4d\x6c\xab\x23\xf9\x3a\xaf\xf7\x45\xd8\xab\x56\x97\xd9\x4f\xd1\x34\xac\x57\x1f\x9e\x4c\xc3\xab\xea\xdf\x3d\xac\x5a\xbd\x1e\x19\xfd\x24\xe8\x33\x2c\x27\x9d\x3c\x9e\xf4\xac\xd1\x0b\xd3\xf1\x09\x82\xd5\x98\x3d\x6e\xfe\x0d\x00\x00\xff\xff\xc6\x5e\xa3\xf4\x69\x08\x00\x00"

func switchboardSafe_transfer_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardSafe_transfer_tokensCdc,
		"switchboard/safe_transfer_tokens.cdc",
	)
}

func switchboardSafe_transfer_tokensCdc() (*asset, error) {
	bytes, err := switchboardSafe_transfer_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/safe_transfer_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x16, 0x29, 0xd0, 0x42, 0x9b, 0x75, 0xbc, 0x64, 0x0, 0x59, 0x4, 0xa4, 0x2, 0x60, 0xe3, 0xb8, 0xe7, 0x2a, 0x4c, 0xf, 0x42, 0xa0, 0xfa, 0x1e, 0xf, 0x22, 0x14, 0xd5, 0xee, 0xc7, 0x38, 0x3e}}
	return a, nil
}

var _switchboardSafe_transfer_tokens_v2Cdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x54\x4d\x6f\xe3\x38\x0c\x3d\x37\xbf\xe2\x35\x87\xd6\x06\x76\xdd\xcb\x62\x0f\x41\xbf\x8b\xe9\x5c\x8b\xb6\xd3\x39\xcb\x36\x1d\x6b\xaa\x48\x86\x44\x37\x31\x8a\xfc\xf7\x81\x2c\xdb\xb1\xd3\x14\x53\x4c\x2e\xb1\x24\xf2\x91\x7c\x8f\xa4\x5c\x55\xc6\x32\xee\x6b\xbd\x94\xa9\xa2\x67\xf3\x4a\x1a\x85\x35\x2b\xcc\x27\x77\xf3\xd9\x21\xcb\xa7\xb5\xe4\xac\x4c\x8d\xb0\xf9\x21\xa7\xd1\xf3\xe0\xff\x6d\x23\x56\xd5\x34\xd0\xf8\x6a\x3e\x9b\x9d\x9d\xe1\xb9\x94\x0e\x6c\x85\x76\x22\x63\x69\x34\xa4\x83\x00\xd3\xaa\x52\x82\x09\x85\xb1\xfe\x38\x7a\xe7\x52\x30\x32\x53\xab\x1c\x29\xa1\x76\x94\x23\x6d\x20\x74\x63\x34\xc1\x23\xb2\x81\x23\x9d\x83\x7d\x10\xe7\x8f\x42\x1b\x2e\xc9\x42\x64\x99\xa9\x35\x83\x4b\x6b\xea\x65\x09\x01\x37\xaa\xaa\x76\x52\x2f\xc1\x25\x21\xa7\xca\x38\xc9\x1e\x6c\x45\x5c\x9a\x1c\x69\xcd\x48\xa9\x30\x76\x78\xf4\xb6\x6b\xc2\x5a\x2a\x05\xda\x54\x4a\x66\x92\x55\x83\xac\xa4\xec\x15\xeb\x92\xda\x80\x96\x32\x92\x6f\xde\x34\x13\x95\x48\xa5\x92\xdc\x40\x3a\x0f\x9c\x1a\x6b\xcd\x5a\xa4\x8a\x60\x2c\xb4\x61\x08\x9d\x43\x16\x68\xc8\xf9\x24\x34\x24\x07\xf4\x2e\x60\x9b\xd9\x9b\xa8\x15\xfb\x92\xfc\x21\xa0\x93\x1d\x81\x27\xb3\x11\x55\x11\x9b\x05\x6e\xf2\xdc\x92\x73\xff\x40\xac\x7c\xed\x0b\xfc\xb8\x97\x9b\xff\xff\x8b\xf1\x3e\x9b\x01\x40\x2b\x81\xc7\x2a\xc8\x92\xce\xa8\x07\x0f\x91\x5a\xd5\xfc\xb1\x12\x0d\xd9\x53\xd7\x53\xd8\xba\x2a\xe2\x60\xf6\x48\xc5\x02\xa2\xe6\x32\x9a\xf4\x44\xf2\x53\x72\x99\x5b\xd1\x56\x19\xe3\x64\x2c\x7e\xf2\xe2\x1d\xc7\x19\xb4\x17\xb0\xe4\x4c\x6d\x7d\x1a\x5e\xe6\xd2\xa8\xbc\x65\x63\x10\xd3\xdf\x0a\x4b\x48\xa9\x15\xcb\x17\x5b\x90\xb5\x94\x0f\x19\x39\xd2\xdc\x62\x2d\x70\x3d\x4d\x27\x84\x6c\x0d\x2b\x4b\x95\xb0\x14\x39\xb9\xd4\x64\x17\xb8\xa9\xb9\xbc\x09\xa5\x0d\xcc\x74\xb9\x7d\x27\x86\xf8\xc8\x4f\xf0\x3c\x75\x70\x6c\x2c\xe5\x81\x88\xc1\xcf\x91\x2a\x92\x9e\x1b\x5c\x74\xd6\x49\x10\xfd\xfc\x6f\xa8\xba\x8c\xbc\x16\x0b\x7c\x7c\x79\x62\x63\xc5\x92\x1e\x04\x97\xf1\xec\xe8\xe8\xe8\xea\x0a\x95\xd0\x32\x8b\xe6\x77\xed\x94\xf8\xde\x0a\x81\x3f\x56\x61\xd6\xa1\x88\x16\xe8\x78\x1e\x4f\x2a\xef\x73\xea\xc9\x1f\x9a\xe1\x0b\xb5\x0f\x2a\xe0\xfc\xdf\x09\x19\xc9\xba\x43\x8d\xfa\x86\x0c\xff\x5d\xe8\x6d\xf8\xa3\x0d\x65\x35\xd3\x01\x29\xba\xc6\x97\x95\x24\xcd\xa7\x0e\x55\x9d\x2a\x99\x0d\xa3\x6d\xd2\x5f\x94\xed\x72\xf1\x0d\x31\x58\xe3\x02\x4b\xe2\x4e\xe6\x88\x4d\xfc\x15\x9d\xc7\xb1\xc6\x3b\xf0\xb1\x1b\xbe\x49\xa8\xd1\x3a\x09\xba\x0f\xde\xc9\x92\xf8\x6e\x18\xd3\xe8\xb3\xdd\x99\x3c\xb4\xe5\x04\x2d\x31\xfa\xf5\xad\x73\xf2\xa9\xe7\xe8\xfb\xfd\x2b\x46\x21\xd2\xf6\x32\xfa\x73\xd3\x74\x6b\x66\xc2\xcd\xa8\xd4\xe3\x79\xec\x53\x9c\xb0\xf9\x22\x94\xcc\xfd\x02\xdf\x2d\xaa\xbd\x35\x98\x36\xdd\xc6\x75\xa2\xa0\xdb\x36\xd4\x6d\xf3\xdc\x54\x34\xc0\xc8\xa2\xd7\x2f\x78\x77\xa3\x34\xe1\x38\xd9\xf7\x8e\xb8\xa9\x68\x01\xff\x79\x7e\x7d\x68\x8c\xe2\xf8\x7d\xc2\xec\x1e\x5e\xb7\x6d\xbb\x69\xeb\x9a\x77\xe8\xe6\x9d\x28\x5b\x90\x72\xbe\x41\xc7\x58\x39\x39\xb6\xa6\xd9\x1b\x81\x9d\x4f\xdf\xe2\xdb\xdf\x01\x00\x00\xff\xff\xef\x92\x6f\xa2\x8c\x07\x00\x00"

func switchboardSafe_transfer_tokens_v2CdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardSafe_transfer_tokens_v2Cdc,
		"switchboard/safe_transfer_tokens_v2.cdc",
	)
}

func switchboardSafe_transfer_tokens_v2Cdc() (*asset, error) {
	bytes, err := switchboardSafe_transfer_tokens_v2CdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/safe_transfer_tokens_v2.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xbf, 0x44, 0x4c, 0xb2, 0x5b, 0x45, 0x85, 0x8e, 0x98, 0x69, 0xa5, 0xd1, 0xb1, 0x81, 0x9d, 0x55, 0xac, 0x5f, 0x97, 0x18, 0xcf, 0xcf, 0x7b, 0x5f, 0x99, 0x27, 0xf8, 0x9b, 0x75, 0x53, 0x61, 0x5e}}
	return a, nil
}

var _switchboardSetup_accountCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x53\xdb\x6a\xe3\x30\x10\x7d\xf7\x57\x1c\xf2\xb0\x24\x90\x4d\xde\x4b\x5b\x28\x0b\xfb\x5c\xb6\xfd\x81\xb1\x3c\x8e\x44\x14\xc9\x48\xa3\x66\x43\xc8\xbf\x2f\xb2\x9b\x60\x37\x71\xf1\x42\x2b\x02\xd1\x6d\x8e\xce\x65\x6c\x76\x8d\x0f\x82\xdf\xc9\x6d\x4c\x69\xf9\xd5\x6f\xd9\xbd\xec\x8d\x28\x5d\x7a\x0a\x15\xea\xe0\x77\x98\x8d\x1d\xcf\x8a\x5b\xf5\xb7\x8a\x66\x45\xb1\x5e\xe3\x55\x9b\x08\x09\xe4\x22\x29\x31\xde\xc1\x44\x10\x84\x77\x8d\x25\x61\xd4\x3e\xe4\x65\xef\x5c\x34\x09\x94\x4f\xb6\x42\xc9\x48\x91\x2b\x94\x07\x64\x28\x72\x07\xef\x18\xe2\xf3\x8f\xaa\x0a\x84\x3e\xef\xc0\xd1\xa7\xa0\xba\x0b\x9a\x4d\x00\x29\xe5\x93\x13\x44\xdf\xa1\x8a\xe6\x03\x14\xb9\x0c\x16\x58\xb1\x79\x63\xec\x92\x15\xd3\x58\x46\xfd\xce\x1d\x92\xc9\x47\xa4\x68\xdc\x06\x84\xfc\x67\x19\xc7\x81\xb6\xd5\x9f\xae\x3c\x9c\x8a\x3e\xf7\x63\x51\x00\x40\x13\xb8\xa1\xc0\x73\x52\x4a\xee\xf0\x94\x44\x3f\x75\x4c\x16\xe7\x1b\x79\xac\xd7\xf8\xa5\x59\x6d\x61\xea\xcc\xec\xc2\x96\x6c\x60\xaa\x0e\xd0\x14\x47\x14\x5e\x20\x4c\x9d\xab\x64\x55\xfa\x10\xfc\xfe\xfe\xc7\x58\x68\xab\xde\xfc\xf1\x52\x0d\xcc\x73\x6c\x77\xa3\xad\xb0\x7a\x11\x1f\x68\xc3\xcf\x24\x7a\x81\x87\x07\x38\x63\x71\xec\xd5\x03\x83\x45\x56\x14\x38\xc7\x4a\x70\xbc\xbf\x9d\x0e\xb9\x0a\x4d\x12\x18\x81\x71\xe2\x11\xbb\x37\x06\x40\xad\xa8\x48\x6f\x3c\x1f\x6c\xe7\x71\xff\x73\x9c\xae\x6a\x1f\xef\xed\xcc\x17\x4b\x5c\x21\x88\x9f\xa8\xb8\x18\x15\xd7\xa4\xd2\x1a\x05\x45\x0d\x95\xc6\x1a\x39\xbc\xf7\xdc\x40\x31\xff\x6d\x7c\xdb\x43\xf9\xa0\xe2\xbc\x90\x8f\x88\x75\x72\xe7\xae\x0f\x3e\x6d\x74\x7b\x77\xac\xd5\xb2\x5f\x1c\x6a\x52\x37\xcc\xb2\xc6\x6d\xa7\xe5\x3f\x86\xfe\x78\xed\xf5\x28\xdc\xb9\xe8\xb9\xf5\x21\x9b\xb5\xbc\xb6\x99\xc2\x86\x65\x9a\xd5\x83\xe2\xc5\xb4\x06\xfb\xbf\x0c\x4a\x2f\xad\xb9\x1f\xe1\x8e\x53\x2c\xeb\x64\x9e\xda\xd6\xcd\x2f\x7c\x0e\x72\x2b\xb0\xf8\x75\x89\x7d\xca\x71\x89\x2f\x48\xf7\x9b\x53\xbd\x4c\x4e\xdd\x07\x76\x2a\x8a\x53\xf1\x2f\x00\x00\xff\xff\xb5\xea\xbe\xcb\x95\x06\x00\x00"

func switchboardSetup_accountCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardSetup_accountCdc,
		"switchboard/setup_account.cdc",
	)
}

func switchboardSetup_accountCdc() (*asset, error) {
	bytes, err := switchboardSetup_accountCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/setup_account.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x74, 0x85, 0x63, 0x21, 0x54, 0xb9, 0x53, 0x38, 0xac, 0x89, 0xdc, 0xfe, 0x4a, 0x2, 0xa9, 0xbc, 0xd5, 0xef, 0x31, 0x1b, 0x1a, 0xb7, 0x3d, 0xb0, 0x31, 0x7b, 0xf5, 0xb8, 0xe3, 0x43, 0xa7, 0x3b}}
	return a, nil
}

var _switchboardSetup_royalty_accountCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x58\x4d\x6f\xe3\x36\x10\xbd\xfb\x57\x4c\x73\x48\x65\xc0\xb5\xee\x41\x92\x45\x9a\x36\x8b\x5e\x8a\xc5\x26\xdb\x9e\xc7\xd4\xc8\x22\x22\x93\x02\x39\x8a\xd7\x08\xfc\xdf\x0b\x52\x96\x4c\x79\x2d\xdb\x92\x8d\x66\x75\x49\x2c\x91\x8f\xf3\xf1\xde\x13\x45\xb9\x28\xb4\x61\x78\x2a\xd5\x5c\xce\x72\x7a\xd1\xaf\xa4\x20\x35\x7a\x01\x57\xad\x7b\x57\xa3\x7d\x23\x9f\x97\x92\x45\x36\xd3\x68\x92\x7d\x93\x82\xc7\xdb\xf9\xb9\x5e\xb6\x56\xa9\x7f\x6f\x47\x48\xe4\xd6\x88\xfa\xf7\xd5\x68\x34\x8a\x63\x78\xc9\xa4\x05\x36\xa8\x2c\x0a\x96\x5a\x81\xb4\x80\xc0\xb4\x28\x72\x64\x82\x54\x1b\xf7\x33\x78\xce\x19\x32\x08\x5d\xe6\x09\xcc\x08\x4a\x4b\x09\xcc\x56\xe0\xa0\x50\xad\xb4\x22\x48\xcb\x3c\x5f\x81\x25\x2e\x0b\x40\x05\x28\x84\x2e\x15\x7b\x24\x43\x82\xe4\x9b\x54\x73\x98\x69\xce\x7c\xf4\x80\x2a\x81\x6f\xcf\x7f\x3c\x02\xbb\xa8\x2c\x20\x03\x67\x04\x16\x17\xe4\x40\x8b\x72\x96\x4b\x01\x05\x72\x06\x91\xc3\x90\xca\x32\x2a\x41\x7e\x94\xd1\x2b\xcc\x59\x92\x85\xb8\x1a\x18\x7f\x26\x45\x46\x8a\xa7\x97\xaf\x7e\x2d\x32\x7e\xea\xd8\x41\x7d\xb3\x6e\x65\x37\x0d\x93\xe4\x6f\x5a\xfe\x83\x65\xce\xff\x1a\x2c\x0a\x32\xf6\xf7\xd5\x17\xb7\x84\x0d\x7a\xb0\x20\xce\x74\x02\x98\xe7\x7a\x69\xeb\xec\x58\xbb\x9c\x1d\x9c\xc0\x02\x67\x32\x97\xbc\x82\xe5\x06\x04\x6c\x29\x32\x40\x0b\xbe\xc2\x4f\xda\x2c\xd1\x24\xee\xbe\x0b\x9a\x30\x01\x9d\x56\xeb\x0b\x2e\x31\xaf\x32\x86\x37\x17\xc6\x74\x14\xd6\x38\x1a\xc3\xfb\x68\x04\x00\x90\x13\x43\x5a\x37\xd5\x07\xfc\xd8\x2c\x7b\x03\xdb\xff\x6f\xaf\xdf\x5b\x64\x99\xd6\xe9\xaf\xef\xb7\x38\x75\xeb\x87\xe1\x00\x40\x03\x15\x94\xe9\x2b\xa5\x37\x00\xd7\x5d\x54\x9d\x06\xff\x57\x29\x15\x86\x0a\x34\x14\xa1\x10\x7c\x03\x0f\x25\x67\x0f\x15\x45\x9a\xa4\xdd\x15\xc7\xf0\x98\x91\x78\x05\x59\x97\xac\xa2\x11\xe6\x86\x30\x59\x41\x86\x8e\xa7\x9e\x41\x3e\x9d\x66\xa2\x4c\xdd\x58\x9e\xce\xb4\x31\x7a\x79\x7b\xdd\x48\x62\xea\xc7\xdd\x47\x4e\x07\x37\x10\x5b\xd6\x06\xe7\x14\xb7\xab\x3b\x86\xbb\x3b\x50\x32\x87\xf7\x06\x70\x13\xcd\x5f\x29\x28\xcd\x13\x10\x86\x9c\x30\x10\x14\x2d\x83\xf5\xc1\x90\xd5\xa5\x11\xe4\x09\x5d\x94\x0c\x92\x41\x2a\xd6\xb0\x59\xa8\x85\xe7\x23\xb4\xf8\x46\xd1\xed\x6f\x5b\x11\x4f\x2b\xec\x3f\x17\x05\xaf\x3c\x68\x34\x9e\x00\xeb\xee\x60\x1b\xcc\x75\x67\xdd\x4c\x2d\x83\x80\xae\xd2\x42\x2e\xd5\x2b\x25\xe0\xf5\x4c\x9e\x61\xdb\x91\x4e\x30\x61\x39\x7f\xf1\xd1\xce\x89\x4f\xa2\x49\x54\x2b\xb1\x89\xb5\x7e\x36\x6e\x95\xe0\xcc\x6b\x2a\x5c\x96\x5e\x28\x3b\x8d\x92\x29\x48\xfe\xd5\xee\x74\x6b\xe3\x23\x41\x15\x58\x6f\x73\xf7\x1a\x04\xfa\x5e\x68\xef\x11\xbb\x90\x6e\x5c\x42\xee\x21\x43\x5a\xaa\xda\x08\x8d\x2e\xe7\x99\x7f\xd8\x55\x0d\xc7\x00\x32\x29\x8a\x3d\xed\x2f\x95\x6b\xc2\xa9\xe5\xf2\x53\xdc\x84\x41\xa5\x9f\xc0\xb0\xda\x33\x9a\x39\x71\x2f\x02\x5a\xca\xd3\x69\x97\x65\xc1\x1d\x5c\x8c\x4c\x3d\xad\xc2\xbf\x63\x8e\x58\x45\x6d\x90\x6d\xab\xd8\xb9\xfd\x5c\x95\xc2\xbd\x2e\x7a\xba\xc5\x36\x84\x73\xdc\xa2\x89\x66\x9f\x5b\x0c\x94\x98\x33\x99\x03\x69\x5e\xca\x67\x7c\x01\x2e\xe4\x33\x7d\x32\x8d\x76\x72\xab\x51\xbe\x94\x33\x9f\xdf\xc5\xcc\xc4\x27\xf8\x81\x66\x72\x24\xcf\xfe\x8e\x72\x18\x70\x10\xdf\x6a\x4f\xe9\xc7\xb7\xca\x56\x3a\x76\x30\xbd\x6d\xe5\xd4\x3a\xf5\xf4\x98\x70\x07\x5f\x2b\xbc\xdb\x6d\x4e\xd8\x31\x1d\x67\x79\xed\x51\x9d\x60\x83\xdd\x6a\x5f\x32\x03\xec\xaa\x2b\xb0\x6a\xad\xe0\x4e\x6f\xfb\xf2\xa6\x75\x4a\xde\x97\xb2\xaf\x3e\xce\xd5\x91\xc9\x69\x6d\x1f\x6a\x7a\x51\x27\x78\xc0\xf0\x5c\x8a\xcb\x9a\x5e\x48\x94\x8f\x71\xbd\x1e\x59\x77\x59\xe0\x59\x6d\x89\x4e\xe7\x6d\x8f\x58\x27\x27\xa3\x36\x96\x7a\x21\x35\x04\x53\xab\x70\xbc\xee\x53\xde\x23\x13\xf7\xed\x8d\x86\xb6\x4a\x19\xed\x34\x3d\xfc\xa2\x0e\x3e\xe6\x8f\xbd\xf8\x9b\xe7\x03\x3a\xd3\x31\xa8\x4a\x65\x02\x1d\x5d\x3c\xb5\xda\xf7\xc3\xf9\x76\xe6\xf5\xff\x2a\xd6\x1f\xd1\xfc\xa8\xcc\x83\xc5\x5d\x7b\xa2\xb8\x49\xbb\x68\xc7\xe5\x6d\xfb\xeb\xfb\xb8\xae\x5b\xb7\x7f\x3a\x2a\xd5\xd7\x01\x4a\x7d\x90\x1d\x7c\x26\x06\x04\x43\x29\x19\xf2\x87\x6d\x7a\x57\xcc\xed\x9d\x59\xfb\x40\xa8\xde\x8f\x5d\x76\xab\xd3\x5c\xbd\xf6\x3c\x47\x61\x3f\x7d\x82\x02\x95\x14\xd1\xd5\xa3\x3f\xd5\x54\x9a\xa1\x0a\xbc\x9d\x7f\x90\xe2\xd5\xe6\xeb\x73\x5d\xfd\xa1\xef\x24\x4a\xa6\x40\x96\x71\x0c\x0f\x49\x25\x84\x1f\xd5\x17\x3a\x62\xe9\xa5\x17\x9c\x47\x6e\x4e\x1d\x0f\x55\x77\x1a\x0c\x8f\x44\x70\x8c\x77\xf0\xd3\x7b\x7c\x06\x64\xc7\xb6\x7b\x5c\x17\x61\x3d\x82\xff\x02\x00\x00\xff\xff\xf8\xa1\x09\x9d\xfb\x16\x00\x00"

func switchboardSetup_royalty_accountCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardSetup_royalty_accountCdc,
		"switchboard/setup_royalty_account.cdc",
	)
}

func switchboardSetup_royalty_accountCdc() (*asset, error) {
	bytes, err := switchboardSetup_royalty_accountCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/setup_royalty_account.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc6, 0x9c, 0xdc, 0x26, 0x5f, 0x47, 0x8a, 0xa, 0xed, 0xa8, 0x60, 0x29, 0x8a, 0xe6, 0x99, 0xae, 0xee, 0xe0, 0xc9, 0x30, 0x6e, 0xaa, 0x42, 0xfd, 0xa9, 0x26, 0x47, 0x26, 0x60, 0x66, 0x97, 0x1d}}
	return a, nil
}

var _switchboardSetup_royalty_account_by_pathsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x58\x4d\x6f\xe3\x36\x13\xbe\xfb\x57\xcc\x9b\xc3\xbe\x32\xe0\xda\xf7\x20\xc9\x36\x4d\x9b\x45\x2f\x45\xb0\xc9\xb6\x87\x45\x0e\x63\x6a\x64\x11\x91\x49\x81\x1c\xc5\x6b\x04\xf9\xef\x05\x49\xeb\xcb\xb6\x62\xc9\x71\x9b\xea\x62\x4b\x9c\x19\xce\xd7\xf3\x88\x1a\xb9\xcc\xb5\x61\xb8\x2d\xd4\x42\xce\x33\x7a\xd0\x4f\xa4\x20\x31\x7a\x09\x67\xad\x67\x67\xa3\x7d\x92\xf7\x2b\xc9\x22\x9d\x6b\x34\xf1\x3e\xa5\xc6\x72\xad\x9f\xe9\x55\x6b\x97\xf2\xbe\x96\x90\xc8\x2d\x89\xf2\xfe\x6c\x34\x1a\xcd\x66\xf0\x90\x4a\x0b\x6c\x50\x59\x14\x2c\xb5\x02\x69\x01\x81\x69\x99\x67\xc8\x04\x89\x36\xee\xb6\xb1\xce\x29\x32\x08\x5d\x64\x31\xcc\x09\x0a\x4b\x31\xcc\xd7\xe0\x4c\xa1\x5a\x6b\x45\x90\x14\x59\xb6\x06\x4b\x5c\xe4\x80\x0a\x50\x08\x5d\x28\xf6\x96\x0c\x09\x92\xcf\x52\x2d\x60\xae\x39\xf5\xde\x03\xaa\x18\xbe\xdd\xff\x7a\x03\xec\xbc\xb2\x80\x0c\x9c\x12\x58\x5c\x92\x33\x9a\x17\xf3\x4c\x0a\xc8\x91\x53\x88\x9c\x0d\xa9\x2c\xa3\x12\xe4\xa5\x8c\x5e\x63\xc6\x92\x2c\xcc\x82\xe0\xec\x0b\x29\x32\x52\xdc\x3e\x7c\xf5\x7b\x91\xf1\xaa\x63\x67\xea\x9b\x75\x3b\x3b\x35\x8c\xe3\x3f\x68\xf5\x27\x16\x19\xff\x65\x30\xcf\xc9\xd8\x5f\xd6\x77\x6e\x0b\xdb\xa8\xc1\x92\x38\xd5\x31\x60\x96\xe9\x95\x2d\xa3\x63\xed\x62\x76\xe6\x04\xe6\x38\x97\x99\xe4\x35\xac\x36\x46\xc0\x16\x22\x05\xb4\xe0\x33\x7c\xab\xcd\x0a\x4d\xec\x9e\x3b\xa7\x09\x63\xd0\x49\xd8\x5f\x70\x81\x59\x88\x18\x9e\x9d\x1b\xd3\x51\x33\xc7\x11\xc6\xb1\x21\x6b\xcf\xe1\x3a\xfc\x19\xc3\xcb\x68\x04\x00\x90\x11\x07\x05\xe7\xad\x3d\x87\xef\x77\x3e\x6c\x77\xf7\xd8\x16\x78\x58\xe7\xe4\x04\xdc\xef\xa3\x5b\xa9\x96\x1b\x31\x7e\xa5\xe4\x1c\xe0\x53\x57\x9f\x4d\x1b\xff\xc3\xfe\xb9\xa1\x1c\x0d\x45\x28\x04\x9f\xc3\x75\xc1\xe9\x75\xa8\x6f\xe5\xa1\xbb\x66\x33\xb8\x0b\x82\x3e\x5c\x57\x01\xeb\x0b\xcd\xce\x29\x40\x63\x70\x6d\x61\x25\x39\xf5\xeb\x7b\xfb\x20\x46\xc6\xca\xa0\xa5\x2c\x99\xd6\x71\xc3\x25\x7c\x7f\xec\x5a\x9c\xba\x5a\xa8\x38\x2a\x3b\x22\x29\x31\x51\x76\xc4\xf8\x90\x66\x85\x91\xa9\x6f\x91\x52\xef\xae\x98\xdf\xf9\x5e\xda\x55\xf7\xc9\xee\xf2\xca\x2f\x96\xb6\xdd\xcd\xc5\xcf\x15\x4e\xc3\x0e\x57\xd1\xb8\xd3\xea\x96\x62\xdb\x35\xaf\xd8\x4c\xfb\x4d\x4a\xe2\x09\x64\xd9\x66\x01\x7a\x98\x19\xc2\x78\x0d\x29\x3a\x6c\xfb\x6c\x7b\xed\x4a\x51\x26\x4e\x96\xa7\x73\x6d\x8c\x5e\x5d\x7c\xda\x71\xcf\x71\xc7\x39\xcc\x2c\x6b\x83\x0b\xaa\x53\xea\x97\xc7\x70\x79\x09\x4a\x66\xf0\x52\x19\xdc\x78\xf3\x7b\x02\x4a\xf3\x04\x84\x21\x47\x26\x08\x8a\x56\x8d\xfd\xc1\x90\xd5\x85\x11\xe4\x8b\x9f\x17\x0c\x92\x41\x2a\xd6\xb0\xd9\xa8\x65\xcf\x7b\x68\xf1\x99\xa2\x8b\x9f\x6a\xe2\x9b\x06\xdb\xbf\x2d\x73\x5e\x7b\xa3\xd1\x78\x02\xac\xbb\x9d\xad\x6c\xbe\x76\xe6\xcd\x94\xd4\xd1\x80\xb8\xb4\x90\x49\xf5\x44\x31\x78\x0e\x24\x70\x66\x6b\x49\xd7\xe2\xcd\x74\xfe\xcf\x7b\xbb\x20\xbe\xa9\x4c\x5c\x7c\x7a\x69\xe1\x6c\x5a\xf6\xd5\xeb\x55\x9f\x5e\x3d\xc1\x35\x15\x2e\xca\x68\xbc\x5b\x28\x99\x80\xe4\xff\xdb\xad\x6a\x6d\xb8\xb7\x91\x05\xd6\x75\xec\xbe\x45\x81\x7e\xe4\xda\xf3\xea\xb6\x49\x27\x17\x93\x5b\x64\x48\x0a\x55\xbe\x3c\x8c\x2e\x16\x01\xf5\x5d\xd9\x70\x1d\x40\x26\x41\xb1\xa7\xfc\x85\x72\x45\xe8\x9b\x2e\xaf\xe2\x14\x8e\x4a\xfd\x04\x8e\xcb\x3d\xa3\x59\x10\xf7\x6a\xc0\x81\xc8\xf5\xf4\x78\x00\xb9\xdb\xfc\x10\x90\xbb\xf5\xf8\x3e\x78\xe6\xd9\x6c\x18\x78\x6b\x17\xde\x03\xde\xca\x9b\x7d\xe0\x3d\xb2\xe3\x1d\xe6\xdf\x08\xf3\x54\xb0\xf7\x09\x38\x11\xec\x87\x44\x7a\xe8\xa5\x74\x32\x6c\xfb\x00\x3f\x10\xdb\x7d\x5f\xbe\xd0\x17\xe0\x6f\x1b\x3c\xaa\xdf\x4a\x88\xf7\xeb\xb7\x81\x28\x6f\x7e\x06\x94\x18\xeb\xc6\x7b\x8f\x93\xdb\xe1\x3e\x2b\x59\xa2\xd3\xd8\xd1\x7c\xb1\x2f\x98\x23\x08\xa3\xcb\xb1\xb0\x57\xe3\xc9\x60\x02\xf1\xb4\xd1\x27\xee\x53\x11\xc8\x10\xee\xe8\x88\xa4\x5f\xd9\x8f\xa5\x9d\xa8\xd3\x78\x03\x3a\x9b\x6f\x8e\xd3\xd1\x4e\xb3\x51\x3e\x86\x77\x06\x44\xdd\x45\x42\xef\x2a\x4b\xd4\xbf\x6f\x07\xf8\x3a\xe9\x6d\xb5\x22\xb5\x13\xa1\xa1\xa1\x1a\xdc\xf1\xb8\x4f\x78\x0f\x4c\xa4\xff\x28\xa4\x1a\x29\xa3\xad\xa2\x37\x3f\xcb\x1b\x13\x81\x43\xaf\xde\x6a\xfd\x88\xca\x74\x08\x85\x50\x26\xd0\x51\xc5\xbe\xd9\xbe\x3a\xbe\xdf\xde\x79\xfd\xbb\x88\xf5\x73\x9e\x5d\x64\xbe\x99\xdc\xd7\x30\x2a\x48\x69\xc7\xda\x61\x78\xdb\xe1\xf8\x3e\x8c\xeb\xd6\xe3\xff\x5c\x2b\x95\xd7\x1b\x2d\xf5\x41\x74\xf0\x85\x18\x10\x0c\x25\x64\xc8\x4f\xec\xf4\x36\x98\xdb\x43\x8f\xf6\x60\x0a\x2e\xff\x89\xa3\x4e\x75\x0d\x3a\xf3\x1c\x34\xfb\xf9\x33\xe4\xa8\xa4\x88\xce\x6e\xfc\x68\x54\x69\x86\xe0\x78\x3b\xfe\x46\x88\x67\x9b\xc9\xcd\xe6\x80\x48\x3f\x48\x14\x4c\xf5\x18\x6d\x36\x83\xeb\x38\xe0\xa0\x45\x94\xbb\x59\x84\xc2\x63\xaf\x73\xaa\x39\xea\xcc\xf1\xb4\x53\x27\xca\xc3\x80\x71\x6b\x44\x36\xf4\x74\x15\x86\x90\x5b\x23\xad\x09\x54\xf3\xcd\xcd\x9f\x3a\x15\xaf\x23\xf8\x3b\x00\x00\xff\xff\xb2\x42\x4b\xe4\x46\x17\x00\x00"

func switchboardSetup_royalty_account_by_pathsCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardSetup_royalty_account_by_pathsCdc,
		"switchboard/setup_royalty_account_by_paths.cdc",
	)
}

func switchboardSetup_royalty_account_by_pathsCdc() (*asset, error) {
	bytes, err := switchboardSetup_royalty_account_by_pathsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/setup_royalty_account_by_paths.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x25, 0x74, 0x5c, 0x4a, 0x90, 0xd4, 0x13, 0xe, 0x2a, 0x42, 0xf7, 0x5e, 0x3, 0xcf, 0x28, 0x75, 0xa1, 0xbc, 0xc9, 0x80, 0x6e, 0xd0, 0xbe, 0x94, 0xbb, 0x12, 0x8b, 0x8a, 0xea, 0xc, 0x31, 0x42}}
	return a, nil
}

var _switchboardTransfer_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x4d\x6f\xdb\x38\x10\x3d\x47\xbf\x62\xd6\x87\x44\x06\x1c\xe7\xb2\xd8\x83\x91\x8f\x0d\xd2\xa6\xd7\x20\x4d\xdb\xf3\x88\x1a\x8b\x6c\x65\x92\x18\x8e\xe2\x18\x41\xfe\x7b\x41\x52\x52\xa4\xa4\x40\xea\x83\x65\x0d\xe7\xe3\xcd\x7b\x8f\x36\x3b\xef\x58\xe0\xb6\xb3\x8d\xa9\x5a\x7a\x70\xbf\xc8\xc2\x96\xdd\x0e\x16\xb3\xd8\xa2\xe8\x33\x3f\x3f\xe1\xce\xcf\x13\xa7\xa1\x45\x51\x9c\x9d\xc1\x83\x36\x01\x84\xd1\x06\x54\x62\x9c\x05\x13\x00\x41\x68\xe7\x5b\x14\x82\xad\xe3\xf8\x3a\x39\x17\x8d\x12\x0b\x95\xeb\xda\x1a\x2a\x82\x2e\x50\x0d\xd5\x01\xd0\x1e\x9c\x25\x10\x07\x81\x6c\x0d\x12\x67\x84\xf8\x8a\xd6\x89\x26\x06\x54\xca\x75\x36\x15\x8b\x66\xd7\x35\x1a\x10\xc2\xde\x88\xd2\x95\x43\xae\x57\x80\x01\x5a\x67\x9b\xf8\x14\x4d\x07\xd0\xf8\x48\x10\x48\xa0\xf3\x31\x60\x38\xd6\x4e\x2a\x00\x6d\x9d\x93\xb0\xae\x63\x06\x78\x76\x9e\x18\x14\x7a\xac\x4c\x6b\xe4\x10\x01\x98\x38\x33\x2f\x9b\x32\x99\x42\x00\xb7\x4d\x05\x4c\x8a\xcc\xe3\x2b\xba\x55\x8a\xe2\x2e\xfe\x8e\xb5\x69\xf5\x2d\xa5\xc9\x71\x5a\x3c\xbd\xeb\xaa\xd6\xa8\x3b\x14\x9d\xf8\x89\xa1\x86\x2c\xb1\x51\x70\xfb\xf0\xda\x71\x6f\xda\x36\x12\x24\x9a\x62\xb5\x47\xc6\x1d\x09\x71\x28\x26\x7c\x96\xe2\x36\x70\x9d\x31\xad\xfa\xb9\x1b\xf8\x76\x6b\x9e\xfe\xfb\x77\x35\xf6\x8a\xb3\x36\x93\xb9\x4b\x78\x2e\x0a\x00\x80\x7e\xa9\x47\xec\x5a\x01\xa6\xe0\x3a\x56\x94\x34\x02\xed\xda\x3a\xf1\x38\x4a\x11\xa3\xc8\x04\x15\x19\xdb\x8c\x9b\x31\xd5\xa9\x55\x4b\x12\x95\x93\xef\xb1\xd7\x06\xfe\x9f\x99\x6a\x9d\xa2\x79\xa6\x67\xf2\xc8\x54\x06\xd3\x58\xe2\x0d\x5c\x77\xa2\xaf\x33\x7b\x23\xae\x1e\xdb\x17\x12\x40\x60\xda\x12\x93\x55\xc9\x1c\x11\x50\xae\x3c\x09\x10\xc4\x31\xd5\x19\xfe\x58\x17\x81\xa4\xc8\x3d\x6d\xe1\xa2\x4f\x5e\x57\x8e\xd9\xed\xcf\xb1\x13\x5d\xce\xa1\xfd\x30\xa2\x6b\xc6\x3d\x56\x2d\x2d\xe1\x78\xea\xf1\x0c\xfb\xb2\x8c\xee\xdf\xc0\xfb\x93\xaf\xe2\x18\x1b\x4a\x94\x16\x47\x47\x47\x57\x57\xe0\xd1\x1a\x55\x2e\x6e\x92\xbd\xad\x13\xc8\x83\xdf\x2f\xe1\xf6\x79\x87\xd4\xe8\x9f\xc5\x72\xb6\xf8\x80\x69\xe0\x3e\x5d\xbf\x8f\x57\x0f\xd4\x6e\xd7\xa3\x08\x70\x7e\x3a\x12\xb1\xde\xf7\x1d\xcb\xc1\x23\xf9\xb9\x4c\xb5\xe9\xeb\x25\x23\xa0\x27\x52\x9d\xd0\x1f\x94\xe8\xfd\x6e\xbc\x21\x2b\x27\x01\x7c\xf2\xd3\xe0\x7c\x70\xd5\x4f\x52\x73\x19\xc6\x6c\xb8\x80\x86\xa4\x57\xb9\x14\xb7\xfc\x1b\x99\xa7\xb3\xee\x7b\x27\xbf\x6d\x9f\x82\x59\xe8\x31\x7d\xcc\x89\x9f\x75\x43\x72\x33\x5e\xe7\x72\x7a\x23\x96\xf3\xc4\xde\x21\xc7\xcf\x73\x7b\x0c\x93\x5f\x2e\xcb\x8f\x35\xee\xaf\xee\x6c\x95\xc9\x1f\xce\x5b\x99\x3f\x91\x77\xc1\x64\x66\x07\x81\xec\xa0\xb9\xb1\xef\x58\xe0\xb7\x2c\x4c\x18\x58\xd7\xb9\x59\x6f\xd6\xf3\xd3\xb9\x19\xe6\x42\xbf\x14\xbf\x03\x00\x00\xff\xff\x3f\x7d\x09\xec\x0f\x06\x00\x00"

func switchboardTransfer_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardTransfer_tokensCdc,
		"switchboard/transfer_tokens.cdc",
	)
}

func switchboardTransfer_tokensCdc() (*asset, error) {
	bytes, err := switchboardTransfer_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/transfer_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x16, 0xa7, 0xa7, 0x4d, 0x8d, 0x23, 0x60, 0xab, 0x4, 0x57, 0x96, 0x4, 0x1a, 0x97, 0x6, 0xb7, 0x12, 0xaa, 0x97, 0x5e, 0xbc, 0x46, 0x86, 0x7e, 0xef, 0xc0, 0x58, 0x4e, 0xa3, 0xc5, 0xc4, 0x6a}}
	return a, nil
}

var _transfer_many_accountsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x54\xcb\x6e\xdb\x40\x0c\x3c\x47\x5f\xc1\xf8\x90\xc8\x87\xc8\x97\xa2\x07\x23\x0f\xa4\x8f\xf4\x54\x20\x48\xd3\xf4\x50\x14\x08\x25\x51\xd6\x36\xf2\xae\xc0\xa5\xe2\x14\x81\xff\xbd\xd8\x97\x21\x3f\x90\x02\xdd\x8b\x01\x2e\x77\x38\x33\x1c\x59\x2d\x7b\xc3\x02\x37\x83\x5e\xa8\xb2\xa3\x7b\xf3\x44\x1a\x1a\x36\x4b\x98\x6c\xd5\x26\x59\xec\xfc\xfc\x82\xcb\x7e\xbb\x71\x5c\x9a\x64\xd9\x6c\x36\x83\x7b\x46\x6d\x1b\x62\x0b\xe2\xaa\xee\x07\x10\x3a\x65\x05\x4c\x03\x58\xd7\x4c\xd6\x92\x05\xdb\x53\xa5\x1a\x45\x35\x28\x0d\xd2\x12\x3c\xc6\xbb\xeb\xa5\x19\xb4\x7c\xc5\xfe\x11\x7a\x64\x5c\x92\x10\x67\x99\x38\x58\xac\x44\x19\x9d\xef\x36\xce\xe1\xf5\x3a\x94\xe6\xf0\xfd\x46\xbd\xbc\x7f\xb7\x9e\xc2\x6b\x96\x01\x00\x38\x46\x2d\xc1\x03\x0e\x9d\x00\x93\x35\x03\x57\x04\xd2\xa2\x40\x6b\xba\xda\xfa\xd1\x89\xa9\xab\x22\x13\x94\xa4\xf4\x02\x24\x2a\x61\xaa\x3d\x54\x47\x02\xcf\x0e\xe7\x8e\x9a\x39\xe0\x20\x6d\xbe\x65\x54\xf1\x43\x49\x5b\x33\xae\xb0\xec\x68\x0a\x27\x63\x73\x0a\x4f\x20\x50\xea\x99\x7a\x64\xca\xad\x5a\x68\xe2\x88\xf4\xc1\x30\x9b\xd5\x03\x76\x83\x7b\x7a\x5d\x55\x4e\x9b\x53\x01\xf1\xcc\x66\xf0\x85\x04\x10\x98\x1a\x62\xd2\x4e\x85\xf1\xec\x03\xce\xa9\x05\x2b\x86\xa9\x0e\x1c\x37\xef\x2c\x75\x4d\x91\x68\xc3\x45\xec\x2e\x5c\x2f\x2e\xa8\x28\xfd\xdc\xf3\xff\x51\x73\x99\xbb\x10\xcc\x61\xff\xe6\x5b\x00\xbf\x45\x69\xa7\xd9\xd1\xd1\xd1\xd5\x15\xf4\xa8\x55\x95\x4f\x3e\x9a\xa1\xab\x41\x1b\x81\x30\x78\x5f\x8d\x59\x05\x31\x1e\xe8\x78\x32\xf5\x42\xd6\xc1\x39\x7a\xa1\x6a\x10\x4a\xbb\x75\xa7\x31\x9c\x42\xe5\x82\xb4\x1b\x8d\xe2\x89\xfe\xd8\x71\x7f\xb4\x32\x89\x4b\xab\xf7\x71\xfe\xb7\x99\x29\x06\x96\xb4\x84\x48\x9d\x9f\x6d\x3b\x5c\xac\x22\x72\x8e\x9e\xc3\x7c\x8f\xd2\xcf\x58\xf8\x75\x3c\xdd\xa3\xe5\x36\xec\x58\x30\x55\xaa\x57\xa4\xe5\xd4\x42\x3f\x94\x9d\xaa\x00\x43\x24\xc0\x94\xbf\xa9\xda\x67\xb4\x79\x01\x17\xb0\x20\x89\x01\x4a\x9f\xca\xe1\x49\x07\xb2\x34\x1e\x7c\x47\x15\xa9\x67\xe2\x43\xb3\xfc\x45\x08\xd4\xe6\x49\x51\x61\x8f\xa5\xea\x94\x28\xb2\x29\x58\x27\xaf\xdb\xa9\x4a\xa0\xeb\xcb\x7c\x2b\x37\xa9\x7e\xeb\xd5\x86\xe4\xc0\xce\x79\x33\x46\xe1\xf9\xdb\x8a\xfc\xca\x26\xfb\x66\x7c\xa2\xde\x58\x15\xac\x4f\xfb\xd3\x29\x1a\xf1\xef\x69\x8c\xc3\x87\x9c\x19\xb9\x52\xd4\x01\x30\x7e\x20\xe7\x67\x9b\xbc\x8c\x66\xaf\x63\xb2\xd7\xd9\xdf\x00\x00\x00\xff\xff\x4d\x51\x2e\xb4\x8a\x05\x00\x00"

func transfer_many_accountsCdcBytes() ([]byte, error) {
	return bindataRead(
		_transfer_many_accountsCdc,
		"transfer_many_accounts.cdc",
	)
}

func transfer_many_accountsCdc() (*asset, error) {
	bytes, err := transfer_many_accountsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transfer_many_accounts.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd0, 0x1c, 0xce, 0xf7, 0x5e, 0xbf, 0x36, 0xce, 0xe6, 0x61, 0x21, 0x92, 0x14, 0xa2, 0xfe, 0xe9, 0x99, 0xf6, 0x73, 0xa, 0x1c, 0x11, 0xce, 0x36, 0x79, 0x26, 0xce, 0xed, 0x16, 0x11, 0x38, 0x18}}
	return a, nil
}

var _transfer_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\x4b\x6f\xdb\x30\x0c\xbe\xfb\x57\x70\x39\xb4\x0e\xb0\x3a\x97\x61\x87\xa0\x8f\x75\x8f\xee\x5a\x74\x5d\x77\xa6\x65\x26\xd6\xe6\x48\x02\x45\x37\x2d\x8a\xfe\xf7\x41\x92\xe5\xd9\xcd\xb0\x47\x2e\x81\x29\xea\xe3\xf7\xa0\x56\x2b\xb8\x6d\xb5\x07\x61\x34\x1e\x95\x68\x6b\x40\x7b\x40\x10\xda\xb9\x0e\x85\x60\x63\x39\x7c\x4e\xce\xa5\x45\x29\x56\x2b\x50\xb6\xef\x1a\xa8\x09\x7a\x4f\x0d\xd4\x8f\x80\xe6\xd1\x1a\x02\xb1\xe0\xc9\x34\x20\xf6\x07\x19\x1f\x3e\xd1\x58\x69\x89\x01\x95\xb2\xbd\x89\x97\x03\x08\xb4\xe8\xa1\x26\x32\xe0\x49\xa0\x77\xa1\x95\x49\x91\xbe\xa7\xe1\x72\x55\xac\x56\x45\xe4\x48\xb0\xd7\xd2\x36\x8c\x7b\xc0\x5d\x00\x01\x0c\x23\x5a\xca\xa0\xb0\x61\xbb\x83\x2d\xc9\xe5\xaf\x21\xfb\xcc\x30\xf4\x39\x64\xdc\x91\x10\x47\x4a\xa1\x32\x11\x55\x14\x7a\xe7\x2c\x0b\x5c\xf5\x66\xab\xeb\x8e\x6e\xc3\xfc\x84\xb9\x98\xd5\x16\xb9\xf3\xd3\x03\xee\xdc\xbc\x71\x5a\x5a\x14\xc5\x04\xbf\x4c\xa4\xd7\xf0\xf5\x4a\x3f\xbc\x7d\xf3\x1a\xc4\xae\xe1\xb2\x69\x98\xbc\x5f\xc2\x53\x51\x00\x00\x0c\x42\xef\xb0\xef\x04\x98\xbc\xed\x59\xd1\xe0\x94\xed\x1a\x9f\x48\x0f\xae\x86\x2a\x32\x41\x4d\xda\x6c\x93\x94\x0d\x31\x53\x13\xa1\x3a\x92\x10\x82\x44\xac\x35\xbc\x9b\x49\xa8\x62\x35\xcd\x74\x4c\x0e\x99\x4a\xaf\xb7\x86\x78\x0d\xd8\x4b\x5b\xbe\xb7\xcc\x76\x7f\x87\x5d\x4f\x4b\x38\x1a\x0c\x1d\x69\x0e\x54\x3f\x93\x00\x02\xd3\x86\x98\x8c\xa2\x6c\x6a\x02\x3a\xf6\xe0\xc5\x32\x35\x70\x1f\x67\xe5\x7b\x81\x57\xac\xdc\xd0\x06\xce\x86\xe6\x2a\xb4\xe2\x96\xaa\x3a\xce\x3d\x8d\x1c\xe6\x8c\xbf\x0d\xe1\x63\xdd\x05\x4a\x53\xa3\x93\x9a\xf3\x32\x44\xb0\x86\xc3\x93\x2f\x09\xfc\x1a\xa5\x5d\x8e\x3c\xc2\xef\xe2\x02\x1c\x1a\xad\xca\xc5\x87\xb8\x27\xc6\x0a\x24\x06\x87\xaa\xec\x3e\x89\x8a\x88\xaf\x16\xcb\x99\x13\x99\x5c\xce\x26\x2e\xc3\xdf\xbd\xf0\xd4\x6d\xaa\x31\x24\x38\x3d\x19\x9d\xa9\xf2\xae\x8f\x6b\x93\xfe\x13\xff\xe7\x34\x9c\x1e\x48\xf5\x42\xbf\x49\x25\x8c\x66\x52\xda\x69\x32\x72\xec\xc1\xf5\x75\xa7\xd5\xf8\x50\x6c\xfd\x9d\xd4\x3c\x92\xb1\x1b\xce\x26\x4f\xa8\x14\xbb\xfc\x97\xc8\xa7\xb3\x6e\xd2\xfb\xe5\x97\xf0\xb1\x98\x42\x1f\xdb\x2b\x85\x0e\x6b\xdd\x69\xd1\xe4\x73\xf8\x47\x4f\xf3\xe4\x33\xe0\xf3\x79\x39\xcb\x36\xd7\xaf\xa3\xb8\xff\x4c\x37\x5d\xfd\xb3\x92\x98\xca\x8b\xa4\x3f\x92\xb3\x5e\x27\x87\x73\x46\x26\xc7\xae\xcd\x01\x06\xbf\x74\x63\xe2\x44\xd5\x24\xb0\x61\x71\x4f\x4f\xe6\xfb\x90\xb3\x7e\x2e\x7e\x06\x00\x00\xff\xff\x2e\x07\xe8\x48\xa4\x05\x00\x00"

func transfer_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_transfer_tokensCdc,
		"transfer_tokens.cdc",
	)
}

func transfer_tokensCdc() (*asset, error) {
	bytes, err := transfer_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transfer_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb6, 0xa4, 0x1b, 0x2, 0x72, 0xa5, 0x7d, 0x88, 0xf, 0xce, 0x4e, 0xc4, 0x7a, 0xb6, 0x71, 0x33, 0xf5, 0x6a, 0xd1, 0x45, 0x94, 0x5d, 0xb8, 0x19, 0x69, 0xf6, 0x22, 0xe4, 0xef, 0xe8, 0x7d, 0x33}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"burn_tokens.cdc":                                           burn_tokensCdc,
	"create_forwarder.cdc":                                      create_forwarderCdc,
	"generic_transfer.cdc":                                      generic_transferCdc,
	"metadata/setup_account_from_vault_reference.cdc":           metadataSetup_account_from_vault_referenceCdc,
	"mint_tokens.cdc":                                           mint_tokensCdc,
	"privateForwarder/create_account_private_forwarder.cdc":     privateforwarderCreate_account_private_forwarderCdc,
	"privateForwarder/create_private_forwarder.cdc":             privateforwarderCreate_private_forwarderCdc,
	"privateForwarder/deploy_forwarder_contract.cdc":            privateforwarderDeploy_forwarder_contractCdc,
	"privateForwarder/setup_and_create_forwarder.cdc":           privateforwarderSetup_and_create_forwarderCdc,
	"privateForwarder/transfer_private_many_accounts.cdc":       privateforwarderTransfer_private_many_accountsCdc,
	"safe_generic_transfer.cdc":                                 safe_generic_transferCdc,
	"scripts/get_balance.cdc":                                   scriptsGet_balanceCdc,
	"scripts/get_supply.cdc":                                    scriptsGet_supplyCdc,
	"scripts/get_supported_vault_types.cdc":                     scriptsGet_supported_vault_typesCdc,
	"scripts/metadata/get_token_metadata.cdc":                   scriptsMetadataGet_token_metadataCdc,
	"scripts/metadata/get_vault_data.cdc":                       scriptsMetadataGet_vault_dataCdc,
	"scripts/metadata/get_vault_display.cdc":                    scriptsMetadataGet_vault_displayCdc,
	"scripts/metadata/get_vault_supply_view.cdc":                scriptsMetadataGet_vault_supply_viewCdc,
	"scripts/switchboard/check_receiver_by_type.cdc":            scriptsSwitchboardCheck_receiver_by_typeCdc,
	"scripts/switchboard/get_vault_types.cdc":                   scriptsSwitchboardGet_vault_typesCdc,
	"scripts/switchboard/get_vault_types_and_address.cdc":       scriptsSwitchboardGet_vault_types_and_addressCdc,
	"scripts/test/example_token_vault_display_strict_equal.cdc": scriptsTestExample_token_vault_display_strict_equalCdc,
	"scripts/tokenForwarder/is_recipient_valid.cdc":             scriptsTokenforwarderIs_recipient_validCdc,
	"setup_account.cdc":                                         setup_accountCdc,
	"switchboard/add_vault_capability.cdc":                      switchboardAdd_vault_capabilityCdc,
	"switchboard/add_vault_wrapper_capability.cdc":              switchboardAdd_vault_wrapper_capabilityCdc,
	"switchboard/batch_add_vault_capabilities.cdc":              switchboardBatch_add_vault_capabilitiesCdc,
	"switchboard/batch_add_vault_wrapper_capabilities.cdc":      switchboardBatch_add_vault_wrapper_capabilitiesCdc,
	"switchboard/remove_vault_capability.cdc":                   switchboardRemove_vault_capabilityCdc,
	"switchboard/safe_deposit_to_lnf.cdc":                       switchboardSafe_deposit_to_lnfCdc,
	"switchboard/safe_transfer_tokens.cdc":                      switchboardSafe_transfer_tokensCdc,
	"switchboard/safe_transfer_tokens_v2.cdc":                   switchboardSafe_transfer_tokens_v2Cdc,
	"switchboard/setup_account.cdc":                             switchboardSetup_accountCdc,
	"switchboard/setup_royalty_account.cdc":                     switchboardSetup_royalty_accountCdc,
	"switchboard/setup_royalty_account_by_paths.cdc":            switchboardSetup_royalty_account_by_pathsCdc,
	"switchboard/transfer_tokens.cdc":                           switchboardTransfer_tokensCdc,
	"transfer_many_accounts.cdc":                                transfer_many_accountsCdc,
	"transfer_tokens.cdc":                                       transfer_tokensCdc,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"burn_tokens.cdc": {burn_tokensCdc, map[string]*bintree{}},
	"create_forwarder.cdc": {create_forwarderCdc, map[string]*bintree{}},
	"generic_transfer.cdc": {generic_transferCdc, map[string]*bintree{}},
	"metadata": {nil, map[string]*bintree{
		"setup_account_from_vault_reference.cdc": {metadataSetup_account_from_vault_referenceCdc, map[string]*bintree{}},
	}},
	"mint_tokens.cdc": {mint_tokensCdc, map[string]*bintree{}},
	"privateForwarder": {nil, map[string]*bintree{
		"create_account_private_forwarder.cdc": {privateforwarderCreate_account_private_forwarderCdc, map[string]*bintree{}},
		"create_private_forwarder.cdc": {privateforwarderCreate_private_forwarderCdc, map[string]*bintree{}},
		"deploy_forwarder_contract.cdc": {privateforwarderDeploy_forwarder_contractCdc, map[string]*bintree{}},
		"setup_and_create_forwarder.cdc": {privateforwarderSetup_and_create_forwarderCdc, map[string]*bintree{}},
		"transfer_private_many_accounts.cdc": {privateforwarderTransfer_private_many_accountsCdc, map[string]*bintree{}},
	}},
	"safe_generic_transfer.cdc": {safe_generic_transferCdc, map[string]*bintree{}},
	"scripts": {nil, map[string]*bintree{
		"get_balance.cdc": {scriptsGet_balanceCdc, map[string]*bintree{}},
		"get_supply.cdc": {scriptsGet_supplyCdc, map[string]*bintree{}},
		"get_supported_vault_types.cdc": {scriptsGet_supported_vault_typesCdc, map[string]*bintree{}},
		"metadata": {nil, map[string]*bintree{
			"get_token_metadata.cdc": {scriptsMetadataGet_token_metadataCdc, map[string]*bintree{}},
			"get_vault_data.cdc": {scriptsMetadataGet_vault_dataCdc, map[string]*bintree{}},
			"get_vault_display.cdc": {scriptsMetadataGet_vault_displayCdc, map[string]*bintree{}},
			"get_vault_supply_view.cdc": {scriptsMetadataGet_vault_supply_viewCdc, map[string]*bintree{}},
		}},
		"switchboard": {nil, map[string]*bintree{
			"check_receiver_by_type.cdc": {scriptsSwitchboardCheck_receiver_by_typeCdc, map[string]*bintree{}},
			"get_vault_types.cdc": {scriptsSwitchboardGet_vault_typesCdc, map[string]*bintree{}},
			"get_vault_types_and_address.cdc": {scriptsSwitchboardGet_vault_types_and_addressCdc, map[string]*bintree{}},
		}},
		"test": {nil, map[string]*bintree{
			"example_token_vault_display_strict_equal.cdc": {scriptsTestExample_token_vault_display_strict_equalCdc, map[string]*bintree{}},
		}},
		"tokenForwarder": {nil, map[string]*bintree{
			"is_recipient_valid.cdc": {scriptsTokenforwarderIs_recipient_validCdc, map[string]*bintree{}},
		}},
	}},
	"setup_account.cdc": {setup_accountCdc, map[string]*bintree{}},
	"switchboard": {nil, map[string]*bintree{
		"add_vault_capability.cdc": {switchboardAdd_vault_capabilityCdc, map[string]*bintree{}},
		"add_vault_wrapper_capability.cdc": {switchboardAdd_vault_wrapper_capabilityCdc, map[string]*bintree{}},
		"batch_add_vault_capabilities.cdc": {switchboardBatch_add_vault_capabilitiesCdc, map[string]*bintree{}},
		"batch_add_vault_wrapper_capabilities.cdc": {switchboardBatch_add_vault_wrapper_capabilitiesCdc, map[string]*bintree{}},
		"remove_vault_capability.cdc": {switchboardRemove_vault_capabilityCdc, map[string]*bintree{}},
		"safe_deposit_to_lnf.cdc": {switchboardSafe_deposit_to_lnfCdc, map[string]*bintree{}},
		"safe_transfer_tokens.cdc": {switchboardSafe_transfer_tokensCdc, map[string]*bintree{}},
		"safe_transfer_tokens_v2.cdc": {switchboardSafe_transfer_tokens_v2Cdc, map[string]*bintree{}},
		"setup_account.cdc": {switchboardSetup_accountCdc, map[string]*bintree{}},
		"setup_royalty_account.cdc": {switchboardSetup_royalty_accountCdc, map[string]*bintree{}},
		"setup_royalty_account_by_paths.cdc": {switchboardSetup_royalty_account_by_pathsCdc, map[string]*bintree{}},
		"transfer_tokens.cdc": {switchboardTransfer_tokensCdc, map[string]*bintree{}},
	}},
	"transfer_many_accounts.cdc": {transfer_many_accountsCdc, map[string]*bintree{}},
	"transfer_tokens.cdc": {transfer_tokensCdc, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
