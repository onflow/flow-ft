// Code generated by go-bindata. DO NOT EDIT.
// sources:
// burn_tokens.cdc (1.912kB)
// generic_transfer_with_address.cdc (4.517kB)
// generic_transfer_with_paths.cdc (2.866kB)
// metadata/scripts/get_token_metadata.cdc (1.088kB)
// metadata/scripts/get_vault_data.cdc (615B)
// metadata/scripts/get_vault_display.cdc (1.145kB)
// metadata/scripts/get_vault_supply_view.cdc (1.228kB)
// metadata/scripts/get_views.cdc (1.118kB)
// metadata/setup_account_from_address.cdc (2.574kB)
// metadata/setup_account_from_vault_reference.cdc (2.039kB)
// mint_tokens.cdc (2.238kB)
// privateForwarder/create_account_private_forwarder.cdc (2.056kB)
// privateForwarder/create_private_forwarder.cdc (1.734kB)
// privateForwarder/deploy_forwarder_contract.cdc (418B)
// privateForwarder/setup_and_create_forwarder.cdc (2.585kB)
// privateForwarder/transfer_private_many_accounts.cdc (1.761kB)
// safe_generic_transfer.cdc (2.409kB)
// scripts/get_balance.cdc (1.08kB)
// scripts/get_balance_generic.cdc (651B)
// scripts/get_supply.cdc (177B)
// scripts/get_supported_vault_types.cdc (903B)
// setup_account.cdc (1.76kB)
// switchboard/add_vault_capability.cdc (4.725kB)
// switchboard/add_vault_wrapper_capability.cdc (2.382kB)
// switchboard/batch_add_vault_capabilities.cdc (1.959kB)
// switchboard/batch_add_vault_wrapper_capabilities.cdc (2.197kB)
// switchboard/remove_vault_capability.cdc (1.358kB)
// switchboard/safe_transfer_tokens.cdc (2.553kB)
// switchboard/scripts/get_vault_types_and_address.cdc (820B)
// switchboard/setup_account.cdc (2.042kB)
// switchboard/setup_royalty_account.cdc (5.135kB)
// switchboard/setup_royalty_account_by_paths.cdc (5.112kB)
// switchboard/transfer_tokens.cdc (2.273kB)
// tokenForwarder/change_recipient.cdc (785B)
// tokenForwarder/create_forwarder.cdc (2.835kB)
// tokenForwarder/scripts/is_recipient_valid.cdc (278B)
// transfer_many_accounts.cdc (2.4kB)
// transfer_tokens.cdc (2.405kB)

package assets

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	clErr := gz.Close()
	if clErr != nil {
		return nil, clErr
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _burn_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\xc1\x6e\xdb\x48\x0c\x3d\x47\x5f\xc1\xe8\x90\x95\x80\x8d\x7c\x59\xec\xc1\xb0\x93\x4d\xb2\xc9\xad\x40\x81\xb8\xee\x99\x92\x68\x6b\x5a\x69\x46\x98\xa1\x6c\xa7\x69\xfe\xbd\x98\x19\x8d\x2c\xc5\x71\x51\x1d\x12\x48\x26\x1f\x1f\xf9\x1e\x29\x9a\x56\x69\x86\xf8\xa9\x93\x5b\x91\xd7\xb4\x52\xdf\x49\xc6\x51\xf8\xfc\x78\xc0\xa6\x3d\xf9\x3a\x09\xfe\x44\x8c\x25\x32\xae\x05\xed\xcd\x31\xe6\xbe\xd3\x92\x74\x1c\x45\xb3\xd9\x0c\x56\x95\x30\xc0\x1a\xa5\xc1\x82\x85\x92\x20\x0c\x20\x30\x35\x6d\x8d\x4c\xb0\x51\xda\xbe\x8e\x7e\xe7\x0a\x19\x0a\xd5\xd5\x25\xe4\x04\x9d\xa1\x12\xf2\x17\xe0\x8a\x00\xcb\x46\x48\xc0\xa2\x50\x9d\x64\x60\x05\x79\xa7\x25\xb0\x65\x62\x60\xa3\x55\x63\xa3\x84\x76\x65\x0d\x2b\x4d\x25\xac\xb1\xab\xd9\x7e\xe8\xb9\x90\xcb\x11\x72\x0b\xd8\x38\x94\x7d\x28\x84\xd0\xa2\xc6\x86\x98\xb4\x85\xb6\xf5\x46\xac\x1c\xc4\xe8\x3d\xf1\xe9\x73\xf8\xf2\x24\x0e\xff\xfe\x93\xc2\x6b\x14\x01\x00\x84\x2a\xac\x18\x6b\x30\x5d\xdb\xd6\x2f\xa0\x36\x81\x64\x4e\x1b\xa5\xc9\x81\x5b\x1e\x2e\xa5\x26\xee\x03\xef\xdd\xaf\x01\xf3\x08\xe8\x9a\x00\x4d\x46\x75\xba\x20\x3f\xa0\x4a\xd5\xa5\xf1\x2c\x3d\xb4\xfb\x8a\x9a\x20\x27\xdb\x9e\x85\xa7\x72\x28\x60\x5f\x1d\xcc\x1c\xfe\x1b\x0b\x9b\xf9\x01\xb9\xb8\x56\x53\x8b\x9a\x12\x23\xb6\x92\xf4\x1c\xb0\xe3\x2a\xb9\x57\x5a\xab\xfd\x1a\xeb\x8e\x52\xb8\xba\xf3\xb3\x1f\xda\xb5\x8f\xa1\x7a\x93\x8d\x1b\x80\x25\x4c\x4a\xb8\x59\x3c\xbb\x80\x63\x96\x25\xb5\xb3\xb5\xff\x47\xc6\xf7\x19\xb6\xd5\x7a\x47\x0f\x4a\xb2\xc6\x82\xad\xbd\x92\xd0\xfe\xea\xa5\xa5\x39\x48\x51\xff\x0d\x3b\x41\x7b\xff\x6a\xff\x2e\xce\x5b\x33\x7b\x5a\xad\x43\xad\x9b\x24\x4d\x01\xcd\x25\xfc\x59\xf8\xed\xc0\xd8\x3e\xb7\xb7\xd0\xa2\x14\x45\x12\x3f\x38\xdf\x48\xe5\x75\xa9\x77\x04\xa3\x24\xc7\x2c\x73\x46\x98\x6e\x11\xbc\x7b\xb2\x42\xc9\x02\x39\x89\xa1\xe8\x7b\x05\x49\x64\x85\x55\x20\x6c\x5e\x43\xd6\xe9\xd5\x14\x3d\x90\x75\x65\x40\x48\x50\xba\xf4\xae\xa5\x03\x15\x1d\x5b\x8b\x4c\x97\x2e\x4e\xd3\xe3\xe8\x67\x33\xf8\x2a\xb8\x2a\x35\xee\xdf\x2f\x0f\x78\xed\xff\x32\x5e\x1b\x8b\x6d\x17\x09\xb7\x34\x11\xce\x2b\xe1\x6d\xb9\xec\x73\xb2\x3e\x30\xcb\x9d\x63\x16\xce\x3d\x93\x19\x67\xa1\x6a\x0a\x57\xa7\x1e\xbc\x49\x4e\xa6\x63\x59\xcd\x8f\x2e\x09\x15\x3e\x23\x57\x69\x74\x71\x71\x71\x54\x63\x35\x50\x87\x52\x91\x71\xba\xb8\x0b\x00\x38\x51\xa0\x5f\x25\x95\x7f\xa3\x82\x01\xfd\x68\x5b\xe4\x0a\xce\x6b\xf3\x61\xfd\x8c\xd5\x33\x6b\x21\xb7\x49\x9a\x9e\x57\xd5\x5b\xa0\x27\xd6\x74\xc6\x0e\x54\xb0\xc0\x5a\xfc\x20\x7f\xab\x86\x6b\xb6\x17\x5c\x79\xd9\x7a\x72\x1b\xa1\x0d\x5f\x4e\x84\x73\x9b\x36\x6c\x32\x2c\xae\xc7\x42\x64\xfb\x7e\xba\xc3\x69\xf2\xff\xbd\xd9\x3f\x5a\x7a\x0b\xf9\xe6\xd1\x83\x6f\x46\x6b\xed\x8f\xb8\x2b\x97\x2c\xae\xa7\xa5\x7b\x4e\x7d\x72\xab\x0c\xc3\xeb\x90\x78\x6e\xf7\x61\xb9\x84\xe4\xf4\x58\x5c\x07\x9e\xf3\xc9\x1c\xe3\x70\x0c\xe3\x30\xcd\x93\xd4\xb3\x1a\x1c\xb7\xea\x27\xdc\x6d\xd8\xde\xb2\x01\xe5\x1c\xbb\x31\xd8\x79\xb4\xc7\x43\x4b\x05\x53\x39\x02\xfc\x5d\x4b\xa7\xa0\x6f\xd1\x5b\xf4\x2b\x00\x00\xff\xff\xd3\x26\x34\x19\x78\x07\x00\x00"

func burn_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_burn_tokensCdc,
		"burn_tokens.cdc",
	)
}

func burn_tokensCdc() (*asset, error) {
	bytes, err := burn_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "burn_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2c, 0x6e, 0x1f, 0x21, 0x4d, 0x27, 0x2b, 0xfa, 0x11, 0xdf, 0xc4, 0x85, 0x50, 0x59, 0xc, 0x1a, 0x72, 0x4c, 0xdd, 0x57, 0x2d, 0x31, 0x44, 0x9b, 0xd2, 0x4f, 0x3e, 0xe5, 0x62, 0x2e, 0xfb, 0x43}}
	return a, nil
}

var _generic_transfer_with_addressCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x58\xdf\x6f\xdb\xbe\x11\x7f\x8e\xff\x8a\x8b\x06\xb4\x12\x90\xaa\xed\x30\x0c\x85\x11\xa7\xcd\xb2\xa5\x4f\x2d\x8a\xd6\xed\x9e\x69\xe9\x6c\x71\x91\x49\x8d\xa4\xec\x78\x41\xfe\xf7\xe1\x8e\xd4\x0f\xca\x76\xbf\xc1\xd7\x0f\x4d\x42\xf3\x3e\xf7\xfb\x73\xc7\xca\x6d\xa3\x8d\x83\xe4\xbe\x55\x1b\xb9\xaa\x71\xa9\x1f\x50\x25\xb3\x93\xc7\x5f\xd0\x89\x52\x38\xf1\x4b\xe2\xde\x26\xb3\xd9\x5f\xa4\x72\x68\x44\xe1\xa4\x56\x90\xce\x00\x76\x68\xac\xd4\x6a\x0e\xc9\xfb\xfc\x5d\xfe\x2e\xb9\x9a\x5d\x38\xe9\x6a\x9c\x43\xf2\x19\x15\x1a\x59\xc0\xfd\x12\x96\x46\x28\xbb\x46\x03\x7b\xe9\x2a\xb8\xd3\xca\x11\x06\xdc\x96\xa5\x41\x6b\x41\xa8\x12\xbe\x8a\x2d\x92\x74\x89\xb6\x30\xb2\x71\x1e\xb4\x17\x14\xea\x00\x9d\x65\xc0\xa6\xc1\xea\x00\x8d\xd1\x3b\x59\x4a\xb5\x01\x57\x21\x14\x1d\xae\x18\xe1\xaa\x80\x5b\x0b\xb5\x69\xc5\x86\x0c\x43\xf5\xe6\xe7\x8f\xe4\x6a\x96\xcd\x66\x6f\xdf\xbe\x85\x3b\xa1\xa0\x11\xd6\x82\x54\xac\xe6\x2c\x0c\x38\x0d\xae\x37\x08\x1c\x5b\xb1\x36\x7a\x0b\xae\x12\xae\x97\x63\xd0\x65\x25\x2d\xd4\xe8\x2c\x1c\x74\x0b\x45\xa5\xb5\x45\x36\xd2\x4b\xd1\xe1\x5e\x28\x47\x90\x16\x55\x49\x32\x2c\x77\x3b\x36\xa0\x10\x0a\x56\x48\xd2\x16\x15\x54\x68\xf0\x0a\xac\x86\xbd\xa8\x19\xd9\x56\xba\xad\x4b\x28\x2a\x2c\x1e\x40\x98\x4d\xbb\x45\xe5\x60\x27\xea\x16\x2d\x83\x39\x0d\x5b\xf1\x80\x60\x5b\xe3\x95\x53\xf6\x54\x89\x65\xb0\xa2\x57\xc4\xde\x91\x9b\x9d\xcb\xd2\x72\x48\xb0\x04\xa9\x7c\x90\xc2\x55\xeb\x7d\x15\x06\xa1\xa5\xaf\xb7\xad\x75\x20\xb7\x4d\x8d\xac\x9c\x94\xdc\x2f\x7f\x89\xb6\x76\xff\x14\x4e\x40\x57\x3f\x40\x05\xd4\x3b\xf9\x55\x3b\x9c\xfb\x10\x71\x3c\x43\x3d\x69\x55\x1f\x60\x2f\xeb\x1a\xf6\xda\x3c\xc0\x5a\x9b\x49\xca\xbd\x72\x86\xf0\x9f\x4a\xec\xd8\x31\x69\xbc\x47\xaf\x2d\x18\xb4\xba\x35\x05\x7a\x9f\x2c\x3a\x10\x16\x12\xb6\x28\xc9\x47\xa2\x01\x90\x0b\x52\xbb\x0a\x0d\x0b\x58\xaf\x5f\x21\xc7\x88\x5c\x04\x01\xa5\x5c\xaf\xd1\xb0\x7b\x83\xb5\x23\x28\x1f\x91\xb2\x94\x74\x2e\xea\xfa\x00\xb6\xc1\x42\xae\x25\x5a\x1f\xf5\x12\x95\xa3\x3f\x4d\x1f\x81\x4f\x8d\x30\x62\x0b\x62\xab\x5b\xe5\x28\x14\x18\x7e\x07\xbd\xf6\xae\xd8\x71\xb5\x8d\x65\x9c\x0e\xf7\x43\xaa\xc6\x45\xd9\x17\x18\x1d\x8f\x85\xba\x4c\x87\x8e\x8b\x11\x48\xe5\xb8\x7d\xd8\x9f\x12\xd7\x52\x05\x07\x02\xe4\x0a\xb9\xd3\x82\x32\x83\xe5\x29\x0d\xd4\xc7\x1e\x9e\x13\xf0\xa7\xb1\x73\xf8\xd7\xe3\x1c\x92\xfb\x5a\xef\x03\x41\x51\xec\x46\x09\x48\xbb\xe0\xfd\xbc\x97\x8f\x7f\xff\xdb\x15\x07\x26\xf8\x77\x75\xec\xf0\xd1\x37\xde\xd0\x1f\xce\x48\xb5\xc9\xe0\x69\x36\xa3\x54\x72\xe7\x22\x70\xb9\x0c\xa5\xc4\x46\x57\xba\x2e\x23\x93\xfb\x46\x38\x8e\x0b\x41\xd5\xe8\xc0\xe1\xb6\x61\xac\x39\x7c\x7a\x8a\x88\x35\xe7\xe3\xe7\x5e\xeb\xb8\x69\xac\x33\x6d\xc1\xd4\xb0\x41\x07\x8d\x70\x95\x65\x9a\xe9\x61\x77\xdd\xd5\x39\x9c\x67\xeb\x7c\x04\xe9\xd5\x34\x06\x1b\x61\x30\xb5\x72\xa3\xd0\xcc\x41\xb4\xae\x4a\xff\xa1\x8d\xd1\xfb\x5f\x44\x1a\x19\xbc\xba\x2d\x0a\x0a\x6a\x1f\x8f\x60\x9d\xbf\x04\x02\x0c\x72\x27\x14\x9e\x0b\x2b\xf4\xa6\x80\x75\xda\x60\x09\x5a\xf1\x59\x60\x0e\xe1\xb1\x40\xb8\xf1\x69\xd3\xae\x6a\x59\x7c\x13\xae\xea\x15\x90\x4b\x14\xeb\x7a\x87\xe6\x3b\xae\x61\x41\x7e\x07\x4b\xd2\x49\x22\xb3\x5e\x8a\x3e\x79\xf7\xad\xcd\x57\x6c\xe2\xf5\xab\x38\xcc\xcf\x37\xa9\xe2\x3c\x8f\xb3\x1e\x63\xd0\xe7\xe3\x47\x68\x84\x92\x45\x9a\xdc\x31\xa5\x2a\xed\xc0\x03\xc6\x01\x3e\xf6\xbf\xc3\xcd\xe1\x4b\xc4\xb4\x7e\x32\x61\x39\xe1\xd8\x34\x39\xd2\x1d\x7b\x53\x88\xc1\x65\xb6\xb5\x3b\x4c\xb2\x88\xa0\xd3\x24\x9b\x5e\x0f\x11\xca\x9d\xf6\x45\x9d\x66\x91\xb0\x21\x63\x8d\xc1\xc2\x5d\x26\x59\x16\xa5\xf7\xa7\x0d\x35\x1e\xb9\x67\xd0\x19\x89\x9e\x60\xa9\x3e\x25\xee\xa1\x97\xb2\x58\xaf\xf3\xbe\x0e\x61\x31\x4e\x60\x1e\x7e\xef\x66\x06\x49\xa6\x5d\x33\x2d\x0f\x0d\xce\x41\xc9\xfa\x0a\x76\x12\xf7\xfe\x4f\xfa\xf7\xfa\x65\xa5\x7c\x93\x66\x19\x08\x7b\xf9\xc2\xca\xff\x38\xfb\xa3\x3c\x07\x63\xa3\x0e\x24\xcb\x72\x66\x82\xe4\x64\x52\x8e\x92\xd8\x07\x7a\x94\x6f\xc4\x92\xd9\xf9\x05\xd3\x91\xf4\xd1\xfa\xa1\x4d\x49\x2c\xae\x01\x1f\xb1\x68\x1d\x85\x3e\x9e\x91\xf9\x34\x75\x9f\x69\xc0\x1d\x97\xa5\x6f\xf1\xd7\xb6\xeb\x4c\xce\x54\xd4\x70\x7c\xe2\xbb\xcd\x5f\xce\xe9\xaa\xd8\x60\xd7\x49\xcc\x0e\x31\x67\xfd\x5b\xba\xaa\x34\x62\x9f\xc1\xa4\xcd\xf2\x6f\xbe\xdc\xcd\xf3\x4d\x4a\x4c\x35\x9f\xd4\x47\x87\x4d\x6d\x9f\xcd\x2e\x2e\x2e\x86\x44\x2c\x7b\x6b\xa1\xd4\x68\x39\x25\x6c\x34\x08\x38\xad\x03\xf4\xea\x3f\x58\x8c\x78\xc5\x55\x70\xdc\x56\x5d\x46\xce\x1b\x72\xb2\x51\xee\xb5\x9f\xa2\xc7\xed\xf5\xe2\xc4\x8b\x61\x73\x7c\x51\x93\x9e\xc7\xf4\x25\x18\xa2\xe3\x37\x2d\x25\x9d\x14\xb5\xfc\x5f\xb7\xf6\x74\x24\xcb\x7b\x0c\x57\x4b\x88\xce\x5a\x1a\x3b\xe9\x74\x0e\x45\x3f\x92\xe0\xfa\x4d\x5f\x04\xf9\x3e\x64\xb6\x1f\xaa\xfe\xe7\x71\xad\x71\x71\xb1\xe5\x60\xb0\x31\x68\x51\x39\xe1\xb7\x37\x3f\xe9\x3b\xd7\x09\x51\xb7\x5e\xe0\xdd\x63\x0f\xb3\x13\xa6\xbb\xe2\x03\x00\x8b\xe9\xac\x1e\xc5\xa6\x17\x93\xeb\x58\x2a\xaf\x51\x6d\x5c\x05\x8b\x05\xbc\xff\x00\x4f\x51\x08\xa7\xf0\xb1\xa0\xad\x65\x81\xa1\x48\xff\x7a\x05\x6d\xb3\xd4\x73\x78\xff\x61\x50\xf5\x1c\xb5\x89\x3b\x34\xe8\x25\xbb\x5d\x01\x16\x90\xdc\xe6\x3d\x2f\x44\xe8\x43\x1d\xe5\x67\x0a\x68\xb8\xe0\x57\xd2\xec\x48\x1b\x2c\xe0\x4e\x6f\x1b\x6d\xa5\x63\xb2\x4c\x07\x13\x86\xcb\x34\x4b\x8d\x4b\x23\xbf\x59\xf8\x72\xc1\xdc\x1a\x7d\xb1\x45\x6b\xfd\xcb\x67\x60\xbd\xc2\xa0\x70\xd4\x63\x2c\x45\x89\x9a\x6e\x6a\xd3\x37\xc1\xe5\xd0\x63\xa3\xb2\x38\x65\x48\x5c\x67\xf9\x06\x1d\xfb\x91\x51\xb6\x48\xdd\xe5\x39\xf3\x86\xd5\x8b\xa7\xd1\x5e\xf8\x32\xa2\xc2\x54\xd1\x9e\x2b\x3d\x4f\xf0\x32\x46\xf6\xf7\xd7\x0d\xfe\xb7\x45\xeb\xb0\x8c\xac\xf5\x69\xe5\x1f\x1d\xb1\x3e\x4d\xb6\x8f\x42\x36\x92\x28\x3a\xda\x3d\x9c\xce\xa6\xd7\x50\xf6\x4b\x4a\x2f\x94\x17\xa2\x11\x2b\x59\x4b\x27\xf1\xdc\x22\x92\x7f\x0f\xb2\xcf\x37\x53\x4a\xea\x50\x3d\x39\x8e\x23\xf3\x9b\xb5\x44\x40\x07\x78\x4c\xfe\xf1\xca\xe2\x03\x4a\x6f\xdb\x40\x15\xe7\xb9\xd2\xe9\x93\x9c\x48\x8c\xe6\x59\x36\x3b\xc3\xaa\x63\x17\x5e\x4a\x6d\xc3\xbe\x44\x8f\x61\x5a\x4f\xe8\x21\xcc\x9b\xb4\x06\xa1\x86\xf7\x0d\x2f\xdf\xf4\x88\xfb\x0d\x9c\x38\xe9\x34\xbd\xfe\xda\x86\x76\xb1\x06\x4d\x7d\xe8\x26\x46\xf7\x3a\x2b\xd9\xab\xa3\x91\xda\xff\x9f\x43\xd8\xf3\xc3\x0b\xff\xcc\x50\xed\x82\xde\x85\x00\xfa\x62\x38\xf4\xa0\xa3\xba\xc9\x4b\xe4\xd6\x0e\x0c\x74\xfd\x26\x6e\x96\xae\x56\x9f\xff\x1f\x00\x00\xff\xff\x6a\x6b\x4d\x67\xa5\x11\x00\x00"

func generic_transfer_with_addressCdcBytes() ([]byte, error) {
	return bindataRead(
		_generic_transfer_with_addressCdc,
		"generic_transfer_with_address.cdc",
	)
}

func generic_transfer_with_addressCdc() (*asset, error) {
	bytes, err := generic_transfer_with_addressCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generic_transfer_with_address.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xbf, 0x8e, 0x1a, 0x7d, 0x33, 0x18, 0x19, 0xc3, 0xe5, 0x7f, 0x23, 0x39, 0x30, 0xcc, 0xf8, 0xe1, 0x72, 0xa9, 0xc5, 0x9b, 0x50, 0x2f, 0xf, 0x8c, 0x4c, 0x85, 0x16, 0xfe, 0x4c, 0xbe, 0xad, 0x13}}
	return a, nil
}

var _generic_transfer_with_pathsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x56\x4f\x6f\xdb\xc6\x13\x3d\x5b\x9f\x62\xc2\x1f\x90\x1f\x05\x28\x74\x0a\x14\x3d\x18\x76\x12\x37\xa8\x83\x1e\x0a\x18\xb1\x92\x9e\x47\xe4\x48\xdc\x98\xda\x65\x77\x87\x52\x54\xc3\xdf\xbd\x98\xd9\x25\x45\xfa\x4f\x1b\xf3\x22\x72\xb5\x3b\xf3\xf6\xcd\xbc\xb7\x6b\xb6\xad\xf3\x0c\xd9\x55\x67\x37\x66\xd5\xd0\xd2\xdd\x92\xcd\x66\xb3\xff\x19\xcb\xe4\xb1\x64\xe3\x2c\xe4\x33\x80\x1d\xf9\x60\x9c\x3d\x83\xec\xa7\xe2\x6d\xf1\x36\x5b\xcc\x4e\xd8\x70\x43\x67\x90\x7d\x22\x4b\xde\x94\x70\xb5\x84\xa5\x47\x1b\xd6\xe4\x61\x6f\xb8\x86\x6b\xe4\x3a\xc8\xcc\x8a\x42\xe9\x4d\xcb\x31\xc0\x30\x09\xed\x01\xfa\xc4\xa0\x99\x61\x75\x80\xd6\xbb\x9d\xa9\x8c\xdd\x00\xd7\x04\xad\xc4\x80\xb5\xf3\xfa\x15\x5c\xe7\x4b\x82\xaf\xd8\x35\x0c\x68\x2b\xa8\x28\xb0\xb1\xa8\x30\x75\x54\xd2\x35\x68\x37\x1d\x6e\x04\x1b\xd9\x37\x5f\x6e\xb2\xc5\x6c\x3e\x9b\x9d\x9e\x9e\xc2\x47\xb4\xd0\x62\x08\x60\xac\x66\x0f\xec\x3c\x6e\x62\x16\x8d\xe7\xa9\x24\xb3\x23\x1f\x47\x4c\x45\x96\xcd\xda\x90\x07\x63\x03\x13\x56\xe0\xd6\xf0\xad\x0b\xac\x68\x2a\x5a\x4b\xca\x42\x43\x2f\x6b\x13\xa0\x21\x0e\x70\x70\x1d\x94\xb5\x73\x81\x74\x16\xeb\xc6\x64\x70\x8f\x96\x81\x1d\x04\xb2\x15\x60\x80\x3d\x35\x8d\x4e\x29\xb1\xc5\x95\x69\x0c\x1f\x1e\xcf\x33\xf2\xaa\x29\x34\xcd\xa5\x3d\xa4\x88\x8a\xb0\x44\x0b\x2b\xd2\x3d\x91\xc6\x44\x0b\xe8\x37\xdd\x96\x2c\x43\x4d\x9e\x16\x10\x1c\xec\xb1\x51\x64\xa1\x76\x5d\x53\x69\x9c\xf8\x0a\x65\x4d\xe5\xed\x71\xc5\x0e\x9b\x8e\x82\xe4\xde\xe2\x2d\x41\xe8\x7c\xdc\x83\x74\x83\xad\xa8\x1a\xa7\x36\xa1\x4f\x6b\xec\x00\xef\x43\x8b\x1e\xb7\x80\x5b\xd7\x59\x3e\x83\x65\x4d\xe9\x5d\x88\xd3\xc5\x1a\x9d\x53\x0b\x8c\xd7\xb0\x4b\xf3\xab\xca\x53\x98\x4c\x3b\xf2\x28\xc3\xe3\x45\x42\x11\x79\x69\xb4\xdf\x87\x5a\xc5\x30\x81\xbd\xf4\xd0\xa8\x84\x82\x40\xff\x38\xd6\x5c\x43\xa5\x67\x2f\x74\x8d\x33\x25\x8a\x56\xa4\xdd\x5c\x79\xdc\x5b\x58\x7b\xb7\x1d\xe7\xef\xfb\xe5\x45\x08\xda\x6e\xd5\x98\xf2\x25\x00\x2a\x6a\x5d\x30\xac\x05\x50\xae\x95\x99\x28\xcf\xbc\x27\xfb\xcb\x95\xf9\xfe\xcb\xcf\x0b\x25\xf2\x32\x92\xb8\x78\x86\xa0\x1b\x85\xb6\x78\x16\x7e\xfc\x7f\x0e\x77\xb3\x99\x20\xd3\xf6\xee\x65\xe7\x29\xa9\x90\x6b\x64\xa8\x5d\x53\x85\x49\x7d\x64\x14\x3d\xc1\x8a\x54\xc3\xa9\x84\x9e\x2a\x0d\xd5\x10\x03\xd3\xb6\xd5\x58\x67\xf0\xe1\x6e\xe2\x3c\x85\x0e\xdf\xc7\xac\xad\xa7\x16\x3d\xe5\xc1\x6c\xac\x80\xc2\x8e\xeb\xfc\x57\xe7\xbd\xdb\x7f\x95\x3e\x9d\xc3\xeb\xcb\xb2\x94\xbd\x0f\x40\xfb\x0c\xa9\xc6\xb2\x2d\xb8\x80\x9b\xe3\x57\x6e\x46\xbb\x7c\x8a\x9b\xf9\x10\x47\x9e\xf7\xef\xa1\x45\x6b\xca\x3c\xfb\xa8\xa5\xb0\x8e\xa1\x74\x36\xb0\xef\x4a\x06\x9c\xfa\x87\xf4\x46\xac\xaf\x3a\x18\x55\x8f\x4c\x24\x76\x44\x91\xcd\x8f\x68\x4f\x4f\xe1\x13\x49\x28\x4f\x6b\xf2\x64\x85\x57\x17\xfb\x54\xb7\xfd\xff\xa0\x49\xa8\x82\x9d\x50\x33\xd9\xa5\x8e\x7c\xa6\x35\x5c\xa4\xc9\x45\xc2\x53\xac\x94\xa5\x73\x65\x6c\x4a\xf0\x9f\xa9\x95\xe7\xf0\xfa\x01\xf5\xd7\x11\xb5\xbf\x7f\x97\xcb\x4e\xce\xc6\x24\xce\x67\x27\x27\x27\x47\x32\x96\x03\x3c\xa8\x1c\x05\xa5\x45\x51\x02\xc2\xd3\x41\xc1\xad\xbe\x91\x50\xc6\x83\xab\x43\x36\xa1\x5a\x9e\xa2\x74\xb6\x44\xce\x47\x99\x0b\x76\xb1\x19\xf3\xf9\xfc\xd9\xf9\x59\x01\x23\x48\x5b\xf1\x67\x63\x0d\x1b\x6c\xcc\xdf\xaa\x28\xe3\x01\x63\xab\xc4\x93\x89\xc5\xac\x13\xa4\xb5\xf1\x81\x5f\x65\xf3\x51\x51\x02\x35\xeb\x62\xe8\x52\x38\x7f\x33\x50\x5d\xf4\x56\x30\xa8\x2e\xfe\x8e\x16\x8b\x27\x7a\xce\x27\x60\xa7\x01\x8b\x15\x36\x28\x95\xbe\xb8\x48\xcb\x17\x93\xd9\x5b\x0a\x21\x1e\x5f\xbf\x79\xef\x92\x9b\x44\x28\x63\x53\x1c\xa8\xaf\x71\x17\x7d\xa3\x8f\xab\x1a\xdc\x63\x00\x4f\x7f\x75\x14\x98\xaa\x57\x47\xb2\x23\x8d\x49\x63\xf4\x9d\xca\x8e\x09\xee\x26\x8d\x15\x0d\x2a\xa9\xe7\x7a\xf8\x98\x88\xe7\x69\xeb\x78\x99\x7c\x46\x46\xf8\xc3\xea\x19\x8b\x47\xb0\x7a\x2a\x4d\x6b\xe4\xf0\xba\x80\x0d\x71\x72\x84\x9c\xdd\xfc\xe1\x34\x85\x1b\xe5\x32\x2c\x2a\x86\xa3\xd7\x50\xe8\x65\xf3\x50\x19\x9f\xd3\xda\xfb\x77\xf9\x91\x99\xff\xde\x69\x8c\x06\x08\xfd\xfa\xc7\x1a\x9f\xe4\x49\x25\x96\xab\x49\xea\xd5\xe7\x15\xc2\x6e\x2c\x8c\x41\x07\xa2\xaf\xa8\xad\x61\xec\x88\xf8\x47\xa5\xf4\xc7\x70\xf4\xcb\x65\x44\xac\x5c\x8c\x52\xcd\xdc\xe9\xfd\xa2\x3f\xa0\xd5\xff\x31\x40\xf6\x2f\xe1\xf0\xc9\x3d\x06\x62\xe8\x5a\x29\x75\x4b\xbe\x39\xf4\xb6\x10\x5a\x2a\xa5\xd6\xb1\xf6\xc5\x44\x93\x72\x06\x0d\xd7\x81\x78\xd4\x0c\x2d\xf3\xa4\x55\xf6\x1c\x0f\x57\xba\xe3\x2d\x6b\x08\x3a\xea\x8a\x22\x9d\xb1\xc9\xfc\xce\xdf\x4c\x35\xdb\xab\xe6\xfe\x9f\x00\x00\x00\xff\xff\x4d\x5e\x9d\xbc\x32\x0b\x00\x00"

func generic_transfer_with_pathsCdcBytes() ([]byte, error) {
	return bindataRead(
		_generic_transfer_with_pathsCdc,
		"generic_transfer_with_paths.cdc",
	)
}

func generic_transfer_with_pathsCdc() (*asset, error) {
	bytes, err := generic_transfer_with_pathsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generic_transfer_with_paths.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc1, 0x4d, 0xa7, 0x23, 0x6f, 0xf7, 0xda, 0x63, 0x62, 0x80, 0xd6, 0xe4, 0xdf, 0x62, 0xf8, 0x19, 0x19, 0x3f, 0xe0, 0xda, 0xb0, 0x55, 0x53, 0xb1, 0x22, 0x53, 0xcd, 0x4, 0x3d, 0xc6, 0x26, 0x1e}}
	return a, nil
}

var _metadataScriptsGet_token_metadataCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x53\xdd\x6e\xdb\x3c\x0c\xbd\xf7\x53\x9c\xcf\x17\x1f\x6c\x60\xf0\x03\x04\x4d\x83\xa2\x5b\xef\x0a\x0c\x5d\xb0\x7b\x46\x66\x62\xa1\x8e\xe4\x51\x54\xd2\x60\xd8\xbb\x0f\xf2\x4f\xea\x14\x4d\xa6\x8b\xc4\x22\x48\x9e\xc3\x73\x28\xbb\xef\xbc\x28\xf2\x6f\x6f\xb4\xef\x5a\x5e\xfb\x57\x76\x79\x36\x45\x9f\xa2\xdb\xd9\xcd\x18\x7e\x66\xa5\x9a\x94\x7e\x5a\x3e\x86\x2b\x39\xef\xe1\x94\xf5\xc2\xc1\xb7\x07\x96\x3c\xcb\xc8\x18\x0e\xa1\xa0\xb6\x2d\xb1\x8d\x0e\x7b\xb2\xae\xa0\xba\x16\x0e\x61\x81\x87\xe1\xa3\x5c\xe0\x3a\x62\xf5\xb4\x4e\xff\xf8\x9d\x01\x40\xcb\x0a\x32\xc6\x47\xa7\x58\x62\xc7\xfa\x30\x5c\xa6\x9e\x65\x76\x4e\x3b\x50\x6c\xf5\x2b\x29\x61\x89\xf9\x98\x95\x0c\xf4\x1e\xbd\x53\x21\xa3\xa9\x7b\x91\x62\x51\x0c\xaf\x4f\x1d\x2f\xe0\x6c\xfb\x05\x07\xcb\xc7\xe1\x9a\x7e\xef\x6e\x33\x9c\xb0\xee\x8b\xb2\x04\x85\xff\xfe\x31\xd0\x94\xbe\xea\xd9\xa6\xb3\x5a\xa1\x23\x67\x4d\x91\x3f\xfa\xd8\xd6\x70\x5e\x31\x12\xc5\xac\xa0\x67\x55\x61\xdd\x30\x2e\xad\xc3\xec\x54\xc6\x3b\x43\x5a\xe4\x30\xe3\x8c\x70\xcc\x75\x80\x7a\xd8\x54\xb3\x67\xa7\xd0\xe6\xb2\xf3\x44\xb2\x87\x80\x75\xf0\x52\xb3\xa4\x1a\x7e\x63\x13\x95\xa1\x8d\x0d\x50\x21\x17\xc8\xa8\xf5\xae\xca\xcb\x32\xfb\x20\xf8\x0b\x6f\xb1\x9c\x2c\xaa\x0c\x75\xb4\xb1\xad\x55\xcb\xa1\xda\x78\x11\x7f\xbc\xfb\xff\xc2\x8c\x1e\xff\xbe\x38\x9b\x55\xed\x47\x1a\xdf\x49\x9b\xf2\xa6\x3c\x43\x3f\x10\x84\xb7\x2c\xec\x0c\x27\xb2\xfa\x41\x1a\xf4\x08\x69\x9e\x69\x6f\x2e\xc5\x9a\x0b\x36\x2e\x51\xa5\xfe\x87\x8a\x75\xbb\xa2\x2c\xdf\xb5\x24\x45\x47\xda\x20\x3f\xc7\x3e\x27\x3d\xaf\xbe\x8a\x94\x57\x78\xa6\x57\x46\x88\xc2\x38\xf9\x08\x12\xc6\xaf\xc8\x72\xb2\x6e\x07\x72\x18\xa9\x40\x1b\x52\x34\x14\x52\xec\x93\xb1\x02\x2b\x62\x87\x4e\x7c\xc7\xd2\x9e\x06\x47\x26\x43\xb6\xfd\x6e\x63\x79\x6b\x19\x77\xac\xc3\x03\x2b\x0e\xb3\x97\xbb\x38\x9b\x39\xb6\x13\xd6\x28\x6e\xec\x98\xfd\xc9\xfe\x06\x00\x00\xff\xff\x60\x1a\xf2\x1a\x40\x04\x00\x00"

func metadataScriptsGet_token_metadataCdcBytes() ([]byte, error) {
	return bindataRead(
		_metadataScriptsGet_token_metadataCdc,
		"metadata/scripts/get_token_metadata.cdc",
	)
}

func metadataScriptsGet_token_metadataCdc() (*asset, error) {
	bytes, err := metadataScriptsGet_token_metadataCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metadata/scripts/get_token_metadata.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xfd, 0xad, 0x2a, 0x5d, 0x6f, 0xee, 0x4e, 0x5a, 0xc6, 0x17, 0x19, 0x26, 0xa9, 0x89, 0x4f, 0xcc, 0x32, 0x34, 0x9, 0xf8, 0x79, 0xa9, 0xbb, 0xde, 0xfa, 0x6d, 0xc5, 0xec, 0xd4, 0xae, 0xfc, 0x33}}
	return a, nil
}

var _metadataScriptsGet_vault_dataCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\xcf\x6a\xe3\x30\x10\xc6\xef\x7e\x8a\x6f\x7d\xb2\x61\xf1\x03\x84\xcd\x86\x90\xdd\xdc\x7a\x29\x26\xf7\xa9\x3c\x4d\x44\xe5\x91\x91\x46\x49\x4a\xe9\xbb\x17\xc5\xce\xbf\x43\x20\x73\x30\x9e\x8f\xf9\xf3\x9b\x4f\xb6\x1f\x7c\x50\x94\xff\x8f\xd4\x0f\x8e\x5b\xff\xc1\x52\x16\x67\x75\x9d\x64\x6b\xdf\x26\xf9\x85\x95\x3a\x52\xda\x58\x3e\xc4\x07\x35\x57\x39\x57\xbd\x72\xf4\x6e\xcf\xa1\x2c\x0a\x32\x86\x63\xac\xc8\xb9\x1a\xef\x49\xd0\x93\x95\x8a\xba\x2e\x70\x8c\x33\x2c\xc7\x9f\x7a\x86\xc7\x1b\x9b\x75\xbb\xa1\xe4\xf4\x1f\x29\xe1\xab\x00\x00\xc7\x0a\x32\xc6\x27\x51\xcc\xb1\x65\x5d\x8e\xc9\x79\x70\x5d\x5c\xca\xf6\x97\xd6\x39\x6e\x6f\x6d\xc2\xc8\xb8\xf2\xa2\x81\x8c\xe6\x55\x55\xd6\x52\x30\xdc\x7e\x0e\x3c\x83\x58\xf7\x1b\x7b\xcb\x87\x31\xcd\xdf\x3f\xcf\x61\xfe\xad\xea\x1a\x14\x7f\x3d\x79\xd5\xe2\x44\x9b\x63\xb1\xc0\x40\x62\x4d\x55\xae\x7c\x72\x1d\xc4\x2b\x26\x50\xdc\xda\x90\xa9\x1a\xb4\x3b\xc6\xfd\xfb\xe1\x26\x1a\xe3\xc5\x90\x56\x25\xcc\x74\x23\x84\xb9\x8b\x50\x0f\x9b\x7b\x7a\x16\x85\xee\xee\x27\x9f\x21\x4f\x2b\x60\x05\x3e\x74\x1c\x72\x0f\x1f\xd9\x24\x65\xe8\xce\x46\x68\x20\x89\x64\xd4\x7a\x69\xca\x7a\xf2\x3b\xb0\xa6\x20\x57\xcb\x8b\xef\xe2\x27\x00\x00\xff\xff\xf1\xea\xf8\xf9\x67\x02\x00\x00"

func metadataScriptsGet_vault_dataCdcBytes() ([]byte, error) {
	return bindataRead(
		_metadataScriptsGet_vault_dataCdc,
		"metadata/scripts/get_vault_data.cdc",
	)
}

func metadataScriptsGet_vault_dataCdc() (*asset, error) {
	bytes, err := metadataScriptsGet_vault_dataCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metadata/scripts/get_vault_data.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x93, 0xe, 0x71, 0x71, 0x32, 0xf2, 0x42, 0x89, 0xfb, 0x97, 0x6e, 0xd1, 0xe7, 0x15, 0x8c, 0x96, 0xcd, 0xd9, 0xc1, 0xcc, 0x88, 0xa6, 0x90, 0x40, 0xf6, 0x13, 0x6a, 0x12, 0x73, 0x5d, 0x7d, 0xe5}}
	return a, nil
}

var _metadataScriptsGet_vault_displayCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x53\x4d\x6f\xdb\x30\x0c\xbd\xfb\x57\xbc\xf9\x30\xd8\xc0\xe0\x1f\x50\x34\x0d\x8a\x76\xbd\x15\x18\xba\xa0\x77\x46\x66\x62\xa1\x8e\xe4\x51\x54\xd2\x60\xd8\x7f\x1f\xe4\x8f\x7c\x14\x49\x74\x30\x2c\x82\xd4\x7b\x7c\x8f\xb4\x9b\xce\x8b\x22\xff\xf9\x49\x9b\xae\xe5\x85\xff\x60\x97\x67\x53\xf4\x25\xba\xb5\x5d\x8e\xe1\x57\x56\xaa\x49\xe9\xdd\xf2\x2e\x5c\xc9\x39\x86\x53\xd6\x1b\x07\xdf\x6e\x59\xf2\x2c\x23\x63\x38\x84\x82\xda\xb6\xc4\x2a\x3a\x6c\xc8\xba\x82\xea\x5a\x38\x84\x3b\x3c\x0e\x3f\xe5\x1d\xae\x23\x56\x2f\x8b\x67\x1b\xba\x96\xf6\xf8\x9b\x01\x40\xcb\x0a\x32\xc6\x47\xa7\x98\x61\xcd\xfa\x38\x5c\xa6\x67\xcb\xec\x90\xb6\xa5\xd8\xea\x33\x29\x61\x86\xd3\x4e\x2b\x19\x18\x3e\x79\xa7\x42\x46\x13\x50\x91\x62\x51\x0c\x2f\xf6\x1d\xdf\xc1\xd9\xf6\x07\xb6\x96\x77\xc3\x35\x7d\xef\x6f\x92\x7c\x9f\xb0\x1e\x8a\xb2\x04\x85\x6f\xb7\x7b\x3a\xa4\xcf\x7b\xb6\xe9\xcc\xe7\xe8\xc8\x59\x53\xe4\x4f\x3e\xb6\x35\x9c\x57\x8c\x44\x71\x52\xd0\xb3\xaa\xb0\x68\x18\xe7\xee\xe1\xe4\x54\xc6\x3b\x43\x5a\xe4\x30\x63\x8f\x70\xcc\x75\x80\x7a\xd8\x54\xb3\x61\xa7\xd0\xe6\xfc\xe5\x89\x64\x0f\x01\xeb\xe0\xa5\x66\x49\x35\xfc\xc9\x26\x2a\x43\x1b\x1b\xa0\x42\x2e\x90\x51\xeb\x5d\x95\x97\x5f\xf5\x7e\xe3\x15\x66\x93\x43\x95\xa1\x8e\x96\xb6\xb5\x6a\x39\x54\x4b\x2f\xe2\x77\xf7\xdf\xcf\xbc\xe8\xe1\x1f\x8a\x83\x57\xd5\x66\x64\xf1\x8b\xb4\x29\x6f\xaa\x33\xbc\x07\x82\xf0\x8a\x85\x9d\xe1\xc4\x55\xbf\x28\x83\x1e\x21\xb5\x33\x8d\xcd\xb9\x56\xa7\x7a\x8d\x33\x54\xa9\xff\xad\x62\xdd\xba\x28\xcb\xa3\x94\xa4\xe8\x48\x1b\xe4\x87\xd8\x65\xd2\xa7\xd5\x57\x91\xf2\x0a\xaf\xf4\xc1\x08\x51\x18\x7b\x1f\x41\xc2\xf8\x13\x59\xf6\xd6\xad\x41\x0e\x23\x15\x68\x43\x8a\x86\x42\x8a\x5d\x68\x2b\xb0\x22\x76\xe8\xc4\x77\x2c\xed\xfe\xdc\x90\x95\x4e\xbb\x33\xbb\x35\x8e\x6b\xd6\xc3\x96\x15\x93\x89\x97\xa4\x1f\x80\x6b\xcf\xa1\xd7\xff\x38\x49\xc7\x25\x4d\xa3\x93\x8f\x14\x84\x35\x8a\x3b\xb2\xc8\xfe\x65\xff\x03\x00\x00\xff\xff\x02\x01\x3f\x3f\x79\x04\x00\x00"

func metadataScriptsGet_vault_displayCdcBytes() ([]byte, error) {
	return bindataRead(
		_metadataScriptsGet_vault_displayCdc,
		"metadata/scripts/get_vault_display.cdc",
	)
}

func metadataScriptsGet_vault_displayCdc() (*asset, error) {
	bytes, err := metadataScriptsGet_vault_displayCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metadata/scripts/get_vault_display.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe8, 0xb7, 0xcd, 0x29, 0x80, 0x83, 0x57, 0x52, 0x44, 0x27, 0x22, 0xc4, 0xa2, 0xb4, 0x24, 0xd9, 0x2f, 0xf4, 0x8, 0x36, 0xf5, 0x8, 0x1f, 0x9c, 0x9d, 0x59, 0x73, 0x40, 0x14, 0xdb, 0x8, 0x38}}
	return a, nil
}

var _metadataScriptsGet_vault_supply_viewCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\x4f\x4f\xdc\x3e\x10\xbd\xe7\x53\x3c\x72\xf8\xfd\x12\xa9\x0a\x97\xaa\x07\xc4\x82\x10\x2d\x3d\x21\x55\xb0\xe5\x3e\x38\xb3\x1b\x0b\xc7\x4e\xed\x31\x10\x55\xfd\xee\x95\xf3\x67\x37\x5b\xb1\xa5\x39\xac\xec\xd9\x99\xf7\x66\xe6\x3d\xeb\xb6\x73\x5e\x90\x7f\x79\xa5\xb6\x33\xbc\x76\x4f\x6c\xf3\x6c\x8e\xde\x44\xbb\xd5\x8f\x53\xf8\x96\x85\x6a\x12\x7a\xd0\xfc\x12\x8e\xe4\xec\xc3\x29\xeb\x8e\x83\x33\xcf\xec\xf3\x2c\x3b\x3d\x3d\xc5\x57\x96\x00\x69\x18\xe2\x84\x0c\x42\xec\x3a\xd3\xc3\x6d\x86\xd8\x33\x45\x23\xff\x07\x48\x82\x41\xad\x3d\x2b\x31\x3d\x36\xde\xb5\xfb\xff\xb3\x8c\x94\xe2\x10\x0a\x32\xa6\xc4\x26\x5a\xb4\xa4\x6d\x41\x75\xed\x39\x84\x33\x5c\x8d\x87\xf2\x0c\xdf\x6f\xf4\xeb\xa7\x8f\xf8\x99\x01\x80\x61\x01\x29\xe5\xa2\x15\xac\xb0\x65\xb9\x1a\x2f\x73\x61\x99\xed\xd2\x06\x9a\xcf\x24\x84\x15\x96\x3b\xa9\xfc\x38\xcb\xb5\xb3\xe2\x49\x49\x1a\xaf\x48\xb1\xe8\x15\xaf\xfb\x8e\xcf\x60\xb5\xf9\x80\x67\xcd\x2f\xe3\x35\xfd\x9e\x1f\x5f\x60\x75\xb3\x7e\x98\xb9\x2e\x8a\xb2\x04\x85\x13\xfc\x5b\xfa\xe5\xd0\x6d\xfa\x2e\x2f\xd1\x91\xd5\xaa\xc8\xaf\x5d\x34\x35\xac\x13\x4c\x8d\x62\x51\x30\x74\x55\x61\xdd\x30\x0e\x75\xc6\xe2\xab\x94\xb3\x8a\xa4\xc8\xa1\xa6\x19\x61\x99\xeb\xa4\x08\x74\xaa\x69\xd9\xca\x20\xc5\x12\x79\x6e\x72\xa0\x80\xb6\x70\xbe\x66\x9f\x6a\xf8\x95\x55\x14\x86\x34\x3a\x40\x3c\xd9\x40\x4a\xb4\xb3\x55\x5e\xfe\xb9\xef\x3b\xde\x60\x35\x2b\x54\x29\xea\xe8\x51\x1b\x2d\x9a\x43\xf5\xe8\xbc\x77\x2f\xe7\xff\x1d\x68\x31\xd0\x5f\x14\x3b\xad\xaa\x76\xea\xe2\x1b\x49\x53\xfe\x75\x3b\x23\x1e\x08\x9e\x37\xec\xd9\xaa\xe4\xc6\x61\xaa\x25\x03\x06\x86\x34\xce\x6c\x9b\xc3\x5d\x2d\xf7\x35\x79\xa8\x12\x77\x2f\x5e\xdb\x6d\x51\x96\xfb\x55\x92\xa0\x23\x69\x90\xef\x62\x6f\x37\xbd\xac\x3e\xca\x94\x57\xb8\xa5\x27\x46\x88\x9e\xd1\xbb\x08\xf2\x8c\x1f\x91\x7d\xaf\xed\x16\x64\x31\xb5\x02\x69\x48\xd0\x50\x48\xb1\x37\xc6\x0a\x2c\x88\x1d\x3a\xef\x3a\xf6\xa6\x3f\x14\x64\x23\xf7\xe3\xbb\x5c\xed\xb4\x99\xbd\x3f\x78\xfe\x3d\x5b\xaf\xd3\xdb\x1e\x21\x92\xad\x4f\xf6\xc8\xe3\x7b\x4f\x59\x58\xed\x69\xde\xb1\xfd\x02\x6e\x44\xf2\x2c\xd1\xdb\x05\x58\x35\x1e\xb3\x5f\xd9\xef\x00\x00\x00\xff\xff\x64\x9c\x59\x12\xcc\x04\x00\x00"

func metadataScriptsGet_vault_supply_viewCdcBytes() ([]byte, error) {
	return bindataRead(
		_metadataScriptsGet_vault_supply_viewCdc,
		"metadata/scripts/get_vault_supply_view.cdc",
	)
}

func metadataScriptsGet_vault_supply_viewCdc() (*asset, error) {
	bytes, err := metadataScriptsGet_vault_supply_viewCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metadata/scripts/get_vault_supply_view.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe0, 0xc5, 0x8, 0x13, 0x4d, 0xfb, 0x5b, 0x1e, 0xb7, 0x68, 0xe5, 0x11, 0xb3, 0x6e, 0x54, 0x75, 0x3f, 0xda, 0x20, 0x55, 0xe6, 0x1f, 0xb9, 0xc4, 0xa9, 0x10, 0xe4, 0x91, 0xae, 0xd1, 0x69, 0xa0}}
	return a, nil
}

var _metadataScriptsGet_viewsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\x4f\x6b\xdc\x3e\x10\xbd\xfb\x53\xbc\x9f\x0f\x3f\x6c\x28\xda\x7b\xc8\x1f\x42\xda\xdc\x02\xa5\x5d\x72\x29\x3d\x4c\xe4\x59\x5b\xc4\x96\x54\x69\x94\x64\x29\xfd\xee\x45\x5a\xef\xc6\x2e\x49\xa9\x0e\xc6\x1a\x66\xe6\xbd\x79\x6f\xb4\xd9\x60\x3b\x98\x88\xa8\x83\xf1\x02\x3d\xb0\x7e\x8c\x90\x81\x11\x93\xf7\x2e\x08\x77\x78\x32\xfc\x1c\xb1\x0b\x6e\xc2\xa7\x17\x9a\xfc\xc8\x5b\xf7\xc8\xb6\xda\x6c\x40\x81\x4b\x32\xbf\x78\xd6\x39\xd7\x59\x8e\xea\xd0\xd2\x44\x4c\x1c\x78\xdc\x23\x45\xee\x60\x2c\x84\xa3\x18\xdb\xab\xaa\x32\x53\xee\x8d\xfa\x8e\x85\x3a\x12\xba\xcf\x10\xf5\x29\xbc\x84\x79\x8d\xde\x26\xdb\x9b\x87\x39\xfc\x4e\xe5\x2a\xa7\xae\x2a\xd2\x9a\x63\x6c\x68\x1c\x5b\xec\x92\xc5\x44\xc6\x36\xd4\x75\x81\x63\x3c\xc3\xf5\xe1\xa7\x3d\xc3\xb7\xed\xde\xf3\x77\xfc\xac\x00\x60\x64\x01\x69\xed\x92\x15\x5c\xa0\x67\xb9\x3e\x5c\x8e\x85\x6d\x75\x4a\x7b\xa2\x34\xca\x47\x12\xc2\xc5\x4a\x1c\x15\x38\xba\xf1\x89\x6f\x9c\x95\x40\x5a\x32\xcd\x26\xc7\x52\xd0\x9c\xb1\xce\x60\xcd\xf8\xa1\x68\x7b\xb8\xe6\xef\xf9\xfb\x23\xaa\xdb\xed\xfd\x11\xeb\xb2\x69\x5b\x50\xfc\x0f\xff\x96\x7e\x55\xd8\xe6\x73\x75\x05\x4f\xd6\xe8\xa6\xbe\x71\x69\xec\x60\x9d\x60\x26\x8a\x45\x41\x61\x95\x5d\x64\xac\x9d\xc0\xe2\x28\xed\xac\x26\x69\x6a\xe8\x79\x46\x58\xe6\x2e\x42\x1c\x4c\xae\x99\xd8\x4a\x59\x8e\x65\xe7\x23\xc9\x02\x91\x77\xc2\x85\x8e\x43\xae\xe1\x17\xd6\x49\xf2\x3a\x99\x08\x09\x64\x23\x69\x31\xce\xaa\xba\x6d\x0b\xf0\x5a\xf3\x2f\xbc\xc3\xc5\xd1\x25\xa5\xc9\xd3\x83\x19\x8d\x18\x8e\xea\xc1\x85\xe0\x9e\xcf\xff\x5f\xf9\x51\x28\x5c\x36\x27\xbf\xd4\x34\x33\xf9\x4c\x32\xb4\x7f\x55\xe8\xd0\x0f\x84\xc0\x3b\x0e\x6c\x35\x67\xbe\xf2\x87\x3a\x28\x08\x79\xa4\xe3\xea\xac\xf5\x5a\x6a\x36\xef\x91\x12\xf7\x55\x82\xb1\x7d\xd3\xb6\xaf\x72\x92\xc0\x93\x0c\xa8\x4f\xb1\xb7\x49\x2f\xab\xdf\x45\xaa\x15\xee\xe8\x31\xbf\xe6\xc0\xd8\xbb\x54\x5e\xec\x8f\xc4\x61\x6f\x6c\x0f\xb2\x98\xa9\x40\x06\x12\x0c\x14\x73\xec\x8d\xb1\x22\x0b\x92\x87\x0f\xce\x73\x18\xf7\xc5\x94\x02\x1a\x58\x52\xb0\x27\x4f\x54\xcf\x65\xd7\x63\xd3\x56\xbf\xaa\xdf\x01\x00\x00\xff\xff\x6b\x99\xd1\x38\x5e\x04\x00\x00"

func metadataScriptsGet_viewsCdcBytes() ([]byte, error) {
	return bindataRead(
		_metadataScriptsGet_viewsCdc,
		"metadata/scripts/get_views.cdc",
	)
}

func metadataScriptsGet_viewsCdc() (*asset, error) {
	bytes, err := metadataScriptsGet_viewsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metadata/scripts/get_views.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb7, 0x6, 0x3f, 0x4c, 0x86, 0xe2, 0x3e, 0xee, 0xed, 0xf6, 0xc5, 0x2b, 0x2b, 0x7, 0xd0, 0xa9, 0xcc, 0xe4, 0xa8, 0x4c, 0x64, 0x9c, 0x5d, 0xe9, 0x7, 0x1d, 0x85, 0xa5, 0xaf, 0xf, 0x13, 0x5e}}
	return a, nil
}

var _metadataSetup_account_from_addressCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x55\x4d\x6f\xdb\x46\x10\x3d\x97\xbf\x62\xc2\x02\x01\x09\xc8\x74\x7a\x15\xfc\xd1\xd4\x8d\x7a\x4a\x51\xd8\x8a\xef\xa3\xe5\x50\x1c\x98\xda\x25\x76\x87\xa2\xd5\xc0\xff\xbd\xd8\xe5\x87\x48\x49\x41\x8a\x84\x07\x43\x5e\xce\xbc\x79\xf3\x66\xf6\x91\x77\xb5\xb1\x02\xf1\xaa\xd1\x5b\xde\x54\xb4\x36\x2f\xa4\xe3\xe8\xe2\xf1\x67\x12\xcc\x51\xf0\x99\xa9\x75\x71\x14\xfd\xca\x5a\xc8\xa2\x12\x36\x1a\x92\x08\x60\x4f\xd6\xb1\xd1\x4b\x88\x7f\xcb\x3e\x64\x1f\xe2\x45\xf4\x8b\xb0\x54\xb4\x84\xf8\x2f\xd2\x64\x59\xc1\x6a\x0d\x6b\x8b\xda\x15\x64\xa1\x65\x29\xe1\xc1\x68\xf1\x18\xf0\x31\xcf\x2d\x39\x07\xa8\x73\xf8\x1b\x77\xe4\xb3\x73\x72\xca\x72\x2d\x1d\xe8\x98\x88\xfa\x00\x03\x33\x08\xd4\x60\x73\x80\xda\x9a\x3d\xe7\xac\xb7\x20\x25\x81\x1a\x70\x71\x82\xab\x7b\xdc\x0a\xf5\xb6\xc1\xad\x27\x46\xfa\xea\xcb\x53\xbc\x88\xd2\x28\xba\xbe\xbe\x86\x75\xc9\x0e\xc4\x17\xea\xfb\x62\x07\x6d\x89\x02\xa8\x01\x95\x32\x8d\x16\x68\x4d\x53\xe5\x60\x1b\x1d\x32\xc4\x80\x23\x01\x16\x47\x55\x01\x4d\xed\x0f\x76\xa8\x71\x4b\x50\x0c\x1c\xc5\x73\x74\x59\x87\x5e\x34\x3a\x40\x87\xec\xc6\x91\x83\xbd\x17\xd4\xe7\xbd\x68\xd3\x42\x5b\x92\xa5\x01\xd6\xe3\x95\x04\x7b\x6c\x2a\x09\x09\xac\xc1\x89\xb1\x1e\xde\x77\x24\x06\x94\x25\x14\x0a\x61\xb4\xab\xe5\xd0\x05\x67\x3e\x3a\x64\xfc\x5e\xa3\xc5\xdd\x28\x48\xaf\xf3\x12\xd6\x25\x8d\xe2\x98\x62\x26\x5a\xc8\xeb\x1f\xf1\xdd\xe7\x54\xb0\x26\x17\x82\xba\x66\x7c\x65\xd6\x2c\x8c\x15\xff\x4b\x97\x0a\xf9\x21\x76\x55\xbc\xec\x3f\x5d\x22\x83\x4f\xaf\x4b\x88\x57\x95\x69\xfb\x25\x8d\x26\x73\x4a\xce\xda\xeb\x7f\x2c\x4e\xf8\x3c\x89\x65\xbd\x4d\xe1\x6b\x14\xf9\xd2\xb5\xa5\x1a\x2d\x25\x8e\xb7\x9a\xec\x12\xb0\x91\x32\x79\xc2\x3d\x3d\x63\xd5\xd0\x02\x1e\xb0\xc6\x0d\x57\x2c\x4c\x2e\x85\xf7\x1f\xbb\x15\xf0\xe9\x03\xf9\xeb\x6b\xf8\xc3\x58\x6b\x5a\x40\xb0\x54\x90\x25\xad\xc2\xf8\xc6\xb9\x85\x81\x51\x0e\x46\x87\xb3\x1a\x9d\xa3\x7c\xdc\x26\x94\xe9\x69\xdd\x6c\x2a\x56\xff\xa0\x94\x63\x81\x8a\x04\x2c\x39\x53\xed\xc9\x3e\x52\x01\xb7\xb0\x25\xe9\x89\x9c\xb6\x9d\x8e\x59\xfe\xc9\x86\xb7\x2e\xdb\x04\x8a\x37\xef\xbf\xce\x6e\xf4\xdb\x5d\xa2\x83\x2a\x53\x8d\xe6\x18\xfe\xb9\xbf\x87\x1a\x35\xab\x24\x7e\x08\xab\xaf\x8d\x40\x07\x08\x33\xb8\xf3\xfe\x07\xdc\x0c\x3e\xe3\x0b\x81\x6b\x6c\xb7\xa8\xdd\x5d\xa5\xfc\x78\x4d\xc3\x8e\x24\xf1\x59\xed\x79\x37\x0a\x8f\x2d\x07\xae\xc3\x61\x9c\x86\xeb\x30\xec\x73\x12\xa7\xa7\xe1\xbd\x42\x99\x98\x6e\x05\x92\x74\x96\x6c\x3d\x59\x6b\x49\xc9\xbb\x38\x4d\xa3\xe9\x78\xbf\x38\xea\x56\x74\xd6\x9e\x25\xb1\x4c\xfb\xae\x9f\xd5\xda\x9b\x22\xcc\x66\x56\xc8\xb3\x9f\xfe\x9f\x28\x08\xb7\xd3\x09\x66\xfd\xef\xc1\xfa\x7c\x6a\xe2\xcf\x1a\xab\x68\x7d\xa8\x69\x09\x9a\xab\x45\xb0\x85\xee\x5f\xff\xf7\xe6\xdb\x5e\x9c\xad\xd6\x63\xa9\xbb\x24\x4d\x01\xdd\x3b\xf8\x7f\xe1\xf7\xd1\xf7\x06\xdd\x93\x85\x49\x52\x60\x96\x85\xab\x1d\x5f\x9c\xca\xd9\x14\x47\xa5\x27\x03\x27\xca\xbb\x2b\xbe\xab\x2b\xda\x91\x96\x41\xc9\xb1\xcc\xc0\x3a\xd4\xf3\xce\x67\x6c\x4e\xd6\xe7\xd0\x2b\xa9\x26\x98\xde\xdc\xae\xb3\xd3\xd9\x3d\x74\xe6\x88\xa0\xa9\x9d\xda\x23\x34\x6e\xfc\x52\x84\x90\x4f\xfe\x5d\x28\x3d\x1a\x34\xb0\x76\x9c\xd3\x29\xad\xd9\x90\xe9\x98\x76\x73\x35\x99\x78\x76\x8a\x9a\xcc\x79\x79\x8b\x01\x96\xe1\x9e\xf4\x66\x30\x46\x74\x76\x94\xf5\x4e\x9f\x39\xdc\x53\x72\x73\x75\x2c\xb6\x00\x31\xcb\xe9\x86\x0d\xa1\xde\x39\x8e\xf2\x5f\x54\xa2\xb3\x18\x50\x83\xb3\x1d\xa0\x30\x76\xe2\x56\x6d\xc9\xaa\x04\xd6\xaa\x6a\xf2\xde\x8f\xb3\xc7\x7e\x7b\x21\x7c\xf2\x0b\x54\x34\x53\x21\x24\x3e\x60\x0d\xb7\x03\x73\x35\xf1\xcd\xb1\x0d\x76\xae\xa1\x53\x0f\xca\x42\x0f\x6f\x77\xc9\x77\xbb\xb9\x04\x1d\x9a\x71\x65\x32\x30\x58\x00\xca\x5c\x98\x5d\xbf\x44\x1d\xd6\x0f\x29\x42\xaf\xb5\x19\xd7\xc5\x92\x22\xfe\xb6\x14\xc3\xeb\x1f\x55\xe3\xb1\xcf\xff\x59\x41\x26\x3c\xce\x35\x19\x5e\x4e\x34\x79\x8b\xde\x22\xf8\x2f\x00\x00\xff\xff\x13\x38\x56\x61\x0e\x0a\x00\x00"

func metadataSetup_account_from_addressCdcBytes() ([]byte, error) {
	return bindataRead(
		_metadataSetup_account_from_addressCdc,
		"metadata/setup_account_from_address.cdc",
	)
}

func metadataSetup_account_from_addressCdc() (*asset, error) {
	bytes, err := metadataSetup_account_from_addressCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metadata/setup_account_from_address.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa2, 0x4c, 0x98, 0x3e, 0x38, 0xf1, 0xd3, 0xff, 0xe6, 0x65, 0x5b, 0xc0, 0xea, 0xc6, 0x4a, 0x70, 0xa4, 0x4f, 0xc4, 0xe9, 0xf0, 0x7e, 0x8f, 0xcf, 0xf2, 0x35, 0x9b, 0xce, 0x1a, 0x5b, 0x4b, 0x9}}
	return a, nil
}

var _metadataSetup_account_from_vault_referenceCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x54\xc1\x6e\xe3\x36\x10\xbd\xeb\x2b\x06\x3a\xa4\x32\xe0\x95\xef\x86\xbd\x8b\xad\xdb\xed\x69\x81\x20\x71\x73\x1f\x4b\x23\x8b\x88\x4c\xaa\xe4\xd0\xaa\x11\xf8\xdf\x0b\x92\xa2\x4c\xa5\x31\x0a\xa4\x3e\x04\xca\x70\x66\xf8\xde\x9b\x37\x14\xa7\x5e\x69\x86\xfc\x87\x95\x47\x71\xe8\x68\xaf\x5e\x49\xe6\xd9\x87\xe1\x9f\xc4\x58\x23\xe3\x8b\xa0\xc1\xdc\x72\xdc\xbf\x4f\x64\x54\x77\x26\x9d\x67\xd9\x6a\xb5\x82\x7d\x2b\x0c\xb0\x46\x69\xb0\x62\xa1\x24\x08\x03\x43\x8b\x0c\x28\x01\xab\x4a\x59\xc9\x30\x28\xdb\xd5\xa0\xad\xf4\x15\xac\xc0\x10\x83\x60\x43\x5d\x03\xb6\x77\x81\x13\x4a\x3c\x12\x34\x23\x06\x60\x07\xc2\x94\xa1\x7b\x63\xa5\x6f\xed\xab\xad\x21\x03\x67\x07\xcb\xd5\xbd\x4a\x35\xc0\xd0\x92\xa6\xd8\xd6\xf5\x6b\x09\xce\x68\x3b\xf6\x05\x42\x82\x61\xa5\x5d\x7b\x94\xb5\x4b\xab\x34\x21\x93\x4f\xa3\x53\xcf\x97\x90\x5c\x66\x59\x42\xa3\xc0\xba\xd6\x64\xcc\x1a\xbe\x87\x8f\x25\xf4\xf6\xd0\x89\xea\x11\xb9\x5d\xc3\xe3\xf4\xbd\x80\xb7\x2c\x03\x00\xe8\x35\xf5\xa8\xa9\x30\xe2\x28\x49\xaf\x01\x2d\xb7\xc5\x33\x9e\xe9\x05\x3b\x4b\x4b\xd8\x61\x8f\x07\xd1\x09\x16\x64\x16\xf0\xf0\x3d\x68\xe3\xca\x61\xfc\xad\x56\xf0\xab\xd2\x5a\x0d\x80\xa0\xa9\x21\x4d\xb2\xf2\xbc\x26\x42\x9e\x09\xd5\xa0\xa4\x8f\xf5\x68\x0c\xd5\x93\xcc\xc8\x69\xf4\x06\x77\xba\xa0\x23\x06\x3d\x8e\xef\x89\x1a\xd8\xc2\x91\x78\x04\x12\x09\x2f\xa6\x6c\xf7\x2b\xab\x04\x75\x79\xf0\xe8\x36\x0f\x6f\xa9\x0f\xca\xf8\x71\xfd\x5a\xdc\xee\x9c\xb7\xf9\xf6\x0d\x7a\x94\xa2\x2a\xf2\x9d\xb7\x82\x54\x0c\x87\xbb\x54\xd3\xee\x6e\x7c\x91\x5f\x3e\xeb\x19\xe0\x29\x59\xe1\x84\xbd\x64\xf5\xcc\x5a\xc8\x63\xb1\x58\xc4\xa3\xdc\xc9\xd2\x23\xb7\x90\x4f\xb1\x1b\xcc\xb4\xe2\x6e\xf7\xbc\x84\x9f\xf8\x4a\x60\xac\x26\xb8\x28\x0b\xa8\x09\xfe\xb2\xa4\x2f\x42\x1e\xbd\xcf\xc3\xf5\xc0\xce\xf7\x2d\x1a\x40\x78\x09\xe3\x0a\x86\xec\xb5\xea\x49\x77\x97\x32\x5f\x2c\xb2\x74\xdc\x7f\x1a\x0a\x45\x33\x0d\x34\xb1\x16\x74\x0e\x0e\xfd\xb1\x77\x72\xc0\x6c\x86\x0d\xfb\xd8\x16\xee\xef\x6c\x79\x24\x0e\xa5\xc5\x39\x91\x73\x9d\xce\x7f\x8e\xe5\x0f\xe2\x78\xa1\xc3\xfe\x1b\x32\xfa\x3d\x83\x46\xab\x53\xf8\x73\xc3\xf3\x1e\xce\x54\xb1\x1d\xc1\x95\x69\x30\x8e\x1f\x8a\x7c\xdf\x52\x34\x71\x70\x74\x2d\x6a\xf9\x0b\x83\x38\xf5\x1d\x9d\x48\x72\x62\xf6\x3a\x42\xc8\xe7\x48\x77\x61\x7f\x11\x24\x0d\xe9\x06\x83\x35\x6e\x20\xae\x41\x58\xf1\xdf\xdd\x59\x98\x44\x7c\x43\x40\x48\x23\x6a\x7a\xcf\x74\xc6\x87\x6e\x65\x9b\x2f\x09\x8f\xf2\x7d\xd7\x62\x8e\xcb\x2d\x3b\x08\x8e\x36\x1e\x6d\x3b\x65\x84\x87\xa1\x1c\x1f\xa3\xd2\xe0\x99\x8a\xcd\x97\xdb\x65\x4b\x60\xb5\x4e\xc5\x8c\xa9\xf3\x7d\xfa\x50\x89\xe0\x68\x98\xb6\xf5\x02\x8d\xd2\x89\x94\x43\x2b\xaa\x16\x84\xac\x3a\x5b\x93\xf1\x07\x65\xb2\x62\x4c\xba\xc1\x8a\x66\x2a\xf8\xc2\x1d\xf6\xb0\x8d\xc8\x67\x6f\x41\xa4\x21\x8c\xb1\xb4\x79\x78\x9b\x59\xb1\xf4\x1c\xae\x5f\x8b\xff\x64\xf3\x51\x6b\x4f\xc6\xb4\x45\x44\xb0\x04\xe4\xb9\x30\xa7\xd1\xea\xa1\xd7\xa7\x14\xa1\xbf\x7b\x35\xd9\x45\x53\x45\xe2\xbe\x14\xf1\xf8\xb3\x6a\x3c\x8d\xf5\xff\x57\x90\x04\xc7\xbf\x35\x89\x87\x89\x26\xd7\xec\x9a\xc1\x3f\x01\x00\x00\xff\xff\x90\xd0\x7a\x24\xf7\x07\x00\x00"

func metadataSetup_account_from_vault_referenceCdcBytes() ([]byte, error) {
	return bindataRead(
		_metadataSetup_account_from_vault_referenceCdc,
		"metadata/setup_account_from_vault_reference.cdc",
	)
}

func metadataSetup_account_from_vault_referenceCdc() (*asset, error) {
	bytes, err := metadataSetup_account_from_vault_referenceCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metadata/setup_account_from_vault_reference.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x80, 0x57, 0xfe, 0x80, 0x1f, 0x27, 0x12, 0xe7, 0xf7, 0xbe, 0x85, 0xe5, 0x91, 0x5b, 0xa0, 0x98, 0xc5, 0x52, 0x30, 0xef, 0x9f, 0x8c, 0xaa, 0xcc, 0x2b, 0xd5, 0xfb, 0x52, 0xbe, 0xcf, 0x42, 0x7b}}
	return a, nil
}

var _mint_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x55\xc1\x6e\xe3\x38\x0c\xbd\xe7\x2b\xde\xf8\x50\xd8\xd8\x8e\x73\x59\xec\x21\x68\x5a\x74\x3a\xdb\x5b\x81\x45\x9b\xed\x9d\xb1\x99\x44\x3b\xb6\x64\x48\x74\xd2\xa0\xe8\xbf\x2f\x24\xd9\xae\xdd\x26\xc5\xf8\xd0\x22\x12\xc9\x47\x3e\x52\x8f\xaa\x6e\x8c\x15\x24\xf7\xad\xde\xaa\x75\xc5\x2b\xf3\x8b\x75\x32\xeb\x8f\xff\x7e\xa1\xba\xf9\x74\x3a\x31\x7e\x60\xa1\x92\x84\x9e\x15\x1f\x5c\x32\x9b\xcd\xe7\x73\xac\x76\xca\x41\x2c\x69\x47\x85\x28\xa3\xa1\x1c\x0e\x3b\x12\xc8\x8e\x51\x2b\x2d\x6c\x71\x5b\x14\xa6\xd5\x82\xd6\xb1\x83\x98\x70\x0c\xcd\x07\x88\x8f\xea\xba\x38\x7c\x44\x63\xcd\x5e\x95\x1c\x7c\x2d\x17\xaa\x51\xac\x05\x54\x96\x96\x9d\x03\xe9\x12\x54\x87\x48\x5d\x90\xcb\x70\xe6\xad\x47\x91\xc8\x72\x4c\x68\xc3\xd6\x72\xe9\x6d\xbd\xc5\x10\x65\xe3\x53\xf2\xde\x4a\x6f\x67\xb3\x51\xea\xe9\x00\xb9\xc0\x6d\xb4\xbe\xec\x00\x17\xf8\xf7\x5e\xbd\xfc\xf5\x67\x86\xd7\xd9\x0c\x00\x3c\xd0\x23\x6f\xd8\xb2\x2e\xb8\x87\xe8\x28\x44\x20\x0b\x0f\xb1\xf8\x47\x76\xa6\xb5\x05\xc3\xac\xff\xe3\x42\x82\x77\xc5\x12\x33\x8e\x36\x0b\x5c\x8c\xd9\xcf\xe3\xe9\x17\x40\x7d\x57\x3a\xa4\x47\x2e\x58\xed\xd9\xc2\x6c\xa6\xd4\x4d\xc1\x7a\xb3\x05\x2e\x5e\x27\x7d\xcd\xfb\x9b\xb7\x77\xcc\x55\x20\x55\xa8\x82\x6b\x9b\xa6\x3a\x86\xd8\x81\x64\xac\x79\x63\x6c\x6c\xd2\xba\xb5\x7a\x00\x89\x86\x3f\xc2\x6d\x4f\x58\x0c\xd8\x58\x6e\xc8\x72\xea\xd4\x56\x7b\x7c\x6a\x65\x97\xfe\x30\xd6\x9a\xc3\x33\x55\x2d\x67\xb8\xe8\x66\xc4\x13\x8c\xee\x73\x5c\x6d\xf2\x71\x50\x2c\x31\xe1\x29\xe4\xf7\x14\x0c\x66\x83\xd7\x7c\x8e\x18\x19\x04\xfb\x91\x38\x2a\x6b\xa5\xc7\x9d\x18\x70\x46\xed\xc0\x12\x31\xd1\xdc\x89\xb1\xb4\xe5\x7c\x1d\x02\x5e\x9d\xea\xd2\x75\xba\xb1\xa6\x5e\x4c\x13\xbb\xf5\x30\x4f\xd1\xf9\x1f\x92\x5d\x36\x60\xf9\xef\xe6\x06\x0d\x69\x55\xa4\xc9\x1d\x69\x6d\x24\x0c\xe3\x02\x4f\x01\x13\xa5\x61\x07\x7f\xea\xc1\x79\x3c\x57\x93\xb1\x52\xda\x5f\x29\x0b\x8a\xc4\x7d\x4b\xb2\x77\x0e\x7c\x37\xf6\xd4\x56\xf2\x93\x84\x3e\xb2\x66\xd9\x99\x6a\xcf\x77\x46\x8b\xa5\x42\xfc\x63\x4e\x6d\x37\xa4\xab\x63\xc3\x0b\x68\x55\x5d\x62\xaf\xf8\x10\x7f\xfa\xbf\x57\xe7\x85\x20\xbf\x5f\x3d\xf7\x58\xd7\x69\x96\x81\xdc\x37\xfc\x9e\xf9\xcd\x39\x5e\x4c\x5b\x95\x81\x84\x2e\x59\x8c\x9c\x42\x66\x79\x18\xd0\xa9\x66\xe1\xc3\x97\x17\x46\x17\x24\x69\x82\xa2\xab\x15\x9a\xb9\x0c\x12\xa4\xbc\x5f\xed\xd5\x25\xbc\xa7\x51\xf4\x3e\xd9\x00\xe3\x69\x36\xb6\x64\xeb\x7d\xf8\x85\x8b\x56\x7c\x4b\xa6\x92\x97\x27\x59\x6c\xf0\x89\x89\x1a\x9e\xe6\x12\x5b\x96\x6e\xc8\xdf\x85\x26\xcb\x0b\x6a\x68\xad\x2a\x25\x8a\xdd\x30\x67\xe7\x9e\xe7\x75\x3a\x74\x35\xb7\xdd\xe1\x97\xf3\x35\xf0\xb8\xee\x9f\xc4\x90\xd0\xa7\xb7\x31\xc1\x44\x20\xc4\x97\xdf\xcd\x17\xce\xf3\x3b\x54\x93\x8b\x79\x12\xab\xf4\x36\xcd\xb2\x77\xf2\x49\xd0\x90\xec\x90\x0c\x67\xa7\x8b\x18\x7b\x9f\xef\x65\x8e\x07\xfa\xc5\x70\xad\x65\x1c\x4d\x1b\xd4\xde\xb1\x2e\x95\xde\xfa\x42\x48\x0f\x42\x2f\x7e\x0b\xed\xc8\x21\xf9\x22\x1c\x9d\x2c\xdb\xb1\xa0\x6d\xfc\x3a\x6a\xd8\x56\x47\x74\xeb\xcc\x35\x5c\xa8\x8d\xe2\x32\x14\x34\xb4\xbd\x53\xcd\x7e\x3c\x5e\x27\x5a\x74\x67\x99\x24\x6e\xc2\x7e\x49\x8d\x5f\x69\xd8\x90\x65\x44\xbd\xfa\xfe\x49\x8a\x72\x7f\x1f\x32\x73\x69\xbf\x89\xe2\xff\x6c\x82\xf2\x93\x1b\xe3\x54\xc8\xb2\xee\xfb\x19\xb8\xe5\x3d\xdb\x2f\xc6\x32\x2f\xa3\x63\x27\x62\x57\xdf\x47\xf9\x4c\x8a\x6b\x8c\x93\x91\x34\x9f\x93\x61\x2c\x97\x27\x64\xfb\x8f\x61\x8b\x26\x9f\xd6\x4a\xdd\x3a\xc1\x9a\xa1\x74\x61\x99\x1c\x97\x58\x1f\xa3\x54\x07\x97\xa4\x4b\xe2\xed\xff\x00\x00\x00\xff\xff\xa1\x65\xfe\xdf\xbe\x08\x00\x00"

func mint_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_mint_tokensCdc,
		"mint_tokens.cdc",
	)
}

func mint_tokensCdc() (*asset, error) {
	bytes, err := mint_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "mint_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x7f, 0xfd, 0xc, 0x3d, 0xaa, 0x43, 0xca, 0x86, 0xb, 0x1e, 0xc5, 0x5c, 0xcc, 0xf5, 0x61, 0xfb, 0xff, 0x54, 0x1d, 0xf8, 0x47, 0x3a, 0x76, 0x4, 0x2e, 0xaf, 0x65, 0xbd, 0xd2, 0x8a, 0x55, 0xb4}}
	return a, nil
}

var _privateforwarderCreate_account_private_forwarderCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x54\xdd\x6e\xdb\x3c\x0c\xbd\xf7\x53\xf0\xcb\x45\x3f\x1b\x48\x9d\xfb\x22\x6d\xb7\x65\x0d\x50\x0c\x2b\x8a\x35\xeb\x3d\xa3\xb0\xb1\x30\x45\x32\x24\x3a\x6e\x50\xe4\xdd\x07\xd9\x96\x7f\xf2\xb3\xb5\xd3\x45\xd1\xd0\xe4\xe1\x39\xe2\x11\xe5\x26\x37\x96\x61\x34\x2f\xf4\x5a\x2e\x15\x2d\xcc\x2f\xd2\xa3\x28\x84\xef\x5e\x71\x93\x1f\x45\x1f\xad\xdc\x22\xd3\x0f\x12\x24\xb7\x64\xe7\xc6\x96\x68\x57\x64\xbb\x8c\x01\xdc\x77\x62\x5c\x21\xe3\xb3\xa4\xd2\x8d\xa2\x68\x32\x99\xc0\x22\x93\x0e\xd8\xa2\x76\x28\x58\x1a\x0d\xd2\x41\xe1\x68\x05\x6c\x40\x58\x42\x26\x40\x1f\xb0\xff\x3b\x98\x2b\x53\x02\x0a\x61\x0a\xcd\x50\x4a\xce\x00\x21\xaf\x29\xc0\x4b\xe8\x1d\x45\x7d\xb4\xb7\x28\x02\x00\xf0\x9d\x1e\xa8\x84\xcf\x4d\x31\x67\xe8\x11\x94\x82\xcc\xa8\x15\x70\xd6\x07\xf0\x05\x8a\x18\x34\x95\x4d\xfe\x15\x60\xc1\x59\xfc\xc4\xc6\xe2\x9a\xc6\x30\x33\x9a\x2d\x0a\x76\x63\xf8\x46\x3b\x37\x86\x7b\xbd\x34\xaf\x63\x98\x61\x8e\x4b\xa9\x24\x4b\x72\x09\x5c\x34\xd5\x35\x85\xdc\x52\x8e\x96\x62\x27\xd7\x9a\x6c\x83\xf8\xc5\x58\x6b\xca\x67\x54\x05\x75\xf9\x09\xbc\x55\x15\xfe\x38\x52\x2f\x69\x47\x04\xae\x83\x84\x38\xc7\x9d\x87\xa9\xe1\x92\xaa\x60\x5f\x77\xa2\x57\x12\x05\x53\xd0\x1e\xe4\x6c\xb1\x50\xfc\x15\x19\xe1\x1a\xfa\xe3\x4c\x2d\x39\xa3\xb6\x14\x44\xf9\xe9\xc4\x3e\x56\x58\x41\x8b\x5d\x4e\x57\xa0\xa5\x1a\xc3\x56\x52\x59\xff\xf4\x7f\xa7\xe7\x27\x9b\xce\x17\xcf\xa1\xd7\x4d\x9c\x24\x80\xee\x3f\x78\x5f\xfa\x6d\xcb\xd8\x9f\xdb\x5b\xc8\x51\x4b\x11\x8f\x66\xa6\x50\x2b\xd0\x86\xa1\x21\x0b\xbd\xa2\x8a\x59\x0a\x8b\x8c\x60\x68\x53\x38\x38\xa9\x30\x5a\x20\xc7\x23\x10\x8d\x56\xd0\x44\x2b\xe7\xbd\x26\x7d\xdd\x86\x2a\x6f\x0c\xd1\x03\xd9\xaa\x0d\x48\x0d\xc6\xbb\xc4\xd7\x84\x8b\xe6\x03\x0f\xa7\xa3\x24\xe9\xee\x7e\x32\x81\x27\xdc\x7a\x1b\x5b\x5a\x17\x0a\x6d\x3d\x09\x0f\xe0\x5b\x69\x6a\x3d\x7d\x6e\xea\xa9\xab\x8d\x97\x3a\xdc\x52\x3c\xbd\x1c\x4c\xaf\x7e\x24\x77\x9b\x9c\x77\x15\xe7\xb8\x42\xef\x0d\xea\xd3\x20\xbd\xca\xf1\x53\x19\x03\x9b\xab\xce\x14\xa1\xc7\x23\x72\x36\x24\x7f\xef\x5c\xe1\xd9\x87\x57\xde\xb9\x7c\x07\x8c\x76\x4d\xcc\x52\xaf\x2b\x2d\xfd\x4e\x50\x75\x1a\x38\xd0\x36\x08\x3d\x80\xeb\x23\xad\xa2\xf7\x86\x5a\xe1\xd2\x73\x98\x5e\xbc\x0d\x5c\x94\x06\x46\xfb\x9b\x78\x30\xeb\x93\xa2\xda\x8c\xa1\xba\x9f\x8e\x2a\xea\x61\x8f\x04\x8e\x83\xfd\x73\xbc\x64\xfa\xb2\xda\x28\x4c\x2f\xe1\xdc\x4a\x6c\xe6\xf4\x40\x65\x1b\x8a\x2d\x09\x99\x4b\xf2\xfb\xe5\xf8\x6a\x4e\x38\xa8\xcf\xb3\x6b\xca\xa6\xdd\x89\x8d\xdc\xf7\xfa\xa8\xc5\xa8\xbd\x70\x96\xfa\xc1\x87\xa7\xbf\x39\xa5\x6f\x90\xda\xe4\x2d\x16\x84\xc5\x72\xfa\x06\x67\x98\x7f\xd0\x12\x67\x49\xb7\xff\x1d\x98\xc3\x9f\x7f\x50\x3a\xc0\x48\xfa\xaa\x1f\x8b\xa5\x92\x2e\xab\x74\x7e\x48\xf9\x1f\x65\xe6\x35\xea\x90\x7b\xff\x9e\xc6\x83\x2f\xc8\xef\x9f\x5f\x45\x58\x9c\x7a\x13\xfb\x68\xff\x3b\x00\x00\xff\xff\x95\xd2\x3d\xd5\x08\x08\x00\x00"

func privateforwarderCreate_account_private_forwarderCdcBytes() ([]byte, error) {
	return bindataRead(
		_privateforwarderCreate_account_private_forwarderCdc,
		"privateForwarder/create_account_private_forwarder.cdc",
	)
}

func privateforwarderCreate_account_private_forwarderCdc() (*asset, error) {
	bytes, err := privateforwarderCreate_account_private_forwarderCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "privateForwarder/create_account_private_forwarder.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe7, 0x18, 0x17, 0x1, 0x9f, 0xfd, 0x54, 0x58, 0xff, 0x5d, 0x9c, 0x45, 0xc4, 0x80, 0x41, 0x19, 0x5a, 0xa6, 0x9c, 0x7f, 0x8d, 0xeb, 0xa6, 0xd9, 0xc7, 0x23, 0x8b, 0x4e, 0x6e, 0x9f, 0xdd, 0x69}}
	return a, nil
}

var _privateforwarderCreate_private_forwarderCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x54\xcd\x6e\xdb\x3c\x10\xbc\xeb\x29\xe6\xf3\x21\x9f\x04\x38\xf2\xdd\x70\x12\x14\x6e\x03\xf4\xd0\x22\x68\x0c\xdf\xd7\xd4\xd6\x22\xaa\x90\x02\xb9\x92\x13\x04\x79\xf7\x82\xfa\xb3\xe4\xd8\x40\x52\x1e\x0c\x7b\x97\xbb\x3b\xb3\x33\xb4\x7e\x2a\xad\x13\xcc\xee\x2b\xb3\xd7\xbb\x82\x37\xf6\x0f\x9b\x59\xd4\x87\xbf\x3d\xd3\x53\xf9\x2e\xfa\xe0\x74\x4d\xc2\xbf\x58\xb1\xae\xd9\xdd\x5b\x77\x20\x97\xb1\x3b\xde\x98\xb4\xfb\xc1\x42\x19\x09\x6d\x35\x1f\xfc\x2c\x8a\x16\x0b\x6c\x72\xed\x21\x8e\x8c\x27\x25\xda\x1a\x28\xc7\x24\xec\x41\x30\x7c\x40\xd9\x0e\x80\xeb\x26\x40\x1b\x90\x01\x29\x65\x2b\x23\x90\x9c\x04\xa1\x4d\x66\xd9\x9b\xff\x05\x54\x38\xa6\xec\x05\x39\xd5\x0c\x7a\x5f\x6e\x5d\x88\x56\xbb\x42\x2b\x48\x80\x34\xa4\x42\x97\x5d\x25\x4d\xa7\xd3\x36\x5b\xaa\x0a\x89\xa2\x31\xcc\xd7\x28\x02\x80\xd2\x71\x49\x8e\x63\xaf\xf7\x86\xdd\x12\x54\x49\x1e\x7f\xf7\xbe\xe2\x47\xb1\x8e\xf6\xbc\xa6\x92\x76\xba\xd0\xf2\xb2\xb6\x46\x9c\x2d\x0a\x76\x73\x3c\x04\x04\x3e\x3f\x26\xe7\x78\xa4\x9a\xb7\x54\x54\x9c\xe0\xea\x4b\x4b\x2f\xe9\xa7\x84\x53\xb0\xa0\x0e\x38\xbe\x92\x10\x6e\x30\x16\x24\x75\xec\x6d\x51\x73\x33\x82\x94\x84\xfd\xc6\x21\x56\x39\xc5\x9b\x97\x92\x97\x30\xba\x98\xa3\xd6\x7c\x68\x7f\x86\xcf\xd5\x65\x6d\xd2\xfb\xcd\xb6\x9f\x75\x1b\x27\x09\xc8\xff\x87\x8f\x5d\xbf\x1b\x10\x87\x73\x77\x87\x92\x8c\x56\xf1\x6c\x6d\xab\x22\x83\xb1\x82\x0e\x2c\x46\x45\x0d\xb2\x14\x9b\x9c\x31\x35\x1a\x4e\x4e\xaa\xac\x51\x24\xf1\x0c\xaa\xe3\x0a\xc3\x9c\x79\x88\x85\x0e\x75\x4f\xdc\xd8\x62\xda\xbd\x07\xdb\x8c\x09\x16\xb2\xc1\xa4\xa1\x86\x9f\x59\x55\xc2\x90\x13\x1b\xa6\xb3\x24\x39\xee\x7e\xb1\x40\xa3\x29\x08\xbd\xd5\x71\xd4\x0e\x42\x6e\xcf\x22\xda\xec\x9b\xc9\x63\x06\x9d\x75\xc6\x22\xf6\x86\x1b\x35\xb8\x41\xeb\x9f\x54\xf5\x31\xcd\x3e\xf5\xad\x83\x52\x1d\x46\xaf\xae\x5e\x27\xfb\x4f\x7b\x20\x6f\xb7\xf1\x64\x4b\x83\x47\xfa\xfa\x07\x92\x7c\xb8\x91\x8c\x39\xad\x9b\xa7\xd6\x6e\xab\x7f\xb9\xe8\x6d\x33\xc1\xfc\x7b\x48\xaf\xae\x71\xe9\xd1\xa7\xed\xd3\xfd\xc9\x87\x21\x14\x3b\x56\xba\xd4\x6c\x64\x79\x86\xf7\x04\x4c\xf0\xff\x05\x28\x41\xa8\x8e\xcc\x50\xd1\x2d\xac\xdf\x91\xa7\x9a\xe3\xd5\xf5\x80\x73\x0e\xb1\xcb\xcb\x48\x4f\x12\x8f\xc7\x4d\x25\xe7\x44\x1f\x6b\x6d\x3f\xb5\xaf\x35\x95\x1f\x53\xf7\x22\xd4\xe1\xdb\x89\xce\xe1\xfc\x03\xbf\x49\x8f\x09\xd9\xee\x3f\xa9\xa1\xf7\x29\xc2\xe7\xd8\x95\x6d\xb3\x29\xe4\xf1\x56\xe6\x93\x0c\xc9\xc7\xc5\x6a\x70\xaa\x33\xae\x7e\x8b\xde\xa2\xbf\x01\x00\x00\xff\xff\x9a\x08\x38\x42\xc6\x06\x00\x00"

func privateforwarderCreate_private_forwarderCdcBytes() ([]byte, error) {
	return bindataRead(
		_privateforwarderCreate_private_forwarderCdc,
		"privateForwarder/create_private_forwarder.cdc",
	)
}

func privateforwarderCreate_private_forwarderCdc() (*asset, error) {
	bytes, err := privateforwarderCreate_private_forwarderCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "privateForwarder/create_private_forwarder.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x37, 0xce, 0x26, 0x7c, 0x1, 0xf3, 0x59, 0x90, 0x44, 0xb9, 0x60, 0x91, 0x7e, 0x60, 0x0, 0xc2, 0x4f, 0x28, 0x9b, 0xd7, 0x74, 0x71, 0x61, 0xca, 0xb, 0x78, 0x74, 0x25, 0x4f, 0xa, 0xc5, 0x46}}
	return a, nil
}

var _privateforwarderDeploy_forwarder_contractCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\xc1\x4a\x03\x31\x10\x86\xef\x79\x8a\x39\xc9\x2e\x84\xee\x55\xf6\x56\x14\xc1\x8b\x14\xaa\x27\xf1\x30\x26\xe3\xee\x60\x3b\x09\x93\x59\x8a\x48\xdf\x5d\xb6\xdd\x2e\xab\x5e\x9a\x43\x48\xc8\xf7\x67\xfe\xaf\x69\x1a\xb8\xa7\xbc\x4b\x5f\x05\xac\x27\x78\x4e\x9f\x24\x0f\x49\x0f\xa8\x91\xa5\x83\x90\xc4\x14\x83\xc1\x81\xad\x3f\x11\x25\x53\xe0\x0f\xa6\x08\x2c\x6c\x90\x51\x71\x4f\x46\x5a\x9c\x33\x45\x29\x18\x8c\x93\x54\x97\xe0\x13\xee\xa9\x85\xad\x29\x4b\xe7\x1d\x2c\x56\x48\x91\x5a\x78\x7d\x79\x14\xbb\x7d\xfb\xfd\x54\x48\x22\xe9\xd6\x92\x62\x47\x1b\xb4\x7e\xfc\x61\xbe\xfc\x61\xaf\xa2\xf2\xf0\xbe\xe3\x70\x86\x36\xf3\xb9\x86\x6f\xe7\x00\xb2\x52\x46\xa5\xaa\x70\x27\xa4\x2d\xe0\x60\x7d\xb5\x8e\xf1\x6e\x72\xa8\xe1\x66\x1d\x42\x1a\xc4\xa6\x00\xc0\x19\x5d\x5d\x2c\xcb\x0a\x63\xac\xe4\xe4\xba\x34\xf7\x93\xe5\xb8\xfb\xff\x5a\x7e\xd9\xde\x2f\x4a\xd6\xe3\x94\xa3\x3b\x3a\x70\x3f\x01\x00\x00\xff\xff\xb6\x45\x50\xb4\xa2\x01\x00\x00"

func privateforwarderDeploy_forwarder_contractCdcBytes() ([]byte, error) {
	return bindataRead(
		_privateforwarderDeploy_forwarder_contractCdc,
		"privateForwarder/deploy_forwarder_contract.cdc",
	)
}

func privateforwarderDeploy_forwarder_contractCdc() (*asset, error) {
	bytes, err := privateforwarderDeploy_forwarder_contractCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "privateForwarder/deploy_forwarder_contract.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x16, 0x7f, 0x10, 0x12, 0xa4, 0xc2, 0xb6, 0x67, 0x4e, 0x42, 0xbd, 0x4e, 0xe5, 0x57, 0xd4, 0x8, 0xc8, 0x9d, 0x79, 0xd0, 0x13, 0x4e, 0x7e, 0x14, 0xe3, 0x37, 0x17, 0x7a, 0x3a, 0xb, 0x3b, 0x67}}
	return a, nil
}

var _privateforwarderSetup_and_create_forwarderCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x56\xc1\x6e\xe3\x36\x10\xbd\xeb\x2b\xa6\x3e\x04\x12\xa0\xc8\xf7\xc0\x49\xda\xba\x1b\xa0\x87\x16\x41\x63\xf8\x3e\xa6\xc6\x36\xb1\x32\x29\x90\x23\x7b\x8d\xc0\xff\x5e\x90\xb2\x64\xd2\x92\x77\xbd\xcb\x43\x90\x50\x22\xdf\x7b\x33\x6f\x9e\x92\xc8\x5d\xad\x0d\xc3\xe4\xad\x51\x1b\xb9\xaa\x68\xa1\xbf\x92\x9a\xf4\xdb\x5f\xbe\xe1\xae\x1e\xec\xbe\x1b\xb9\x47\xa6\xff\x48\x90\xdc\x93\x79\xd3\xe6\x80\xa6\x24\x33\x19\xbf\xee\x1f\x62\x2c\x91\x71\x29\xe9\x60\x27\x49\x32\x9d\x4e\x61\xb1\x95\x16\xd8\xa0\xb2\x28\x58\x6a\x05\x58\x96\x16\x10\x96\xd8\x54\x9c\x03\x42\xdd\x62\x80\x39\x83\xc0\xba\x43\xf1\xe7\x11\x56\x58\xa1\x12\x04\x02\x6b\x5c\xc9\x4a\xf2\x31\x07\x54\xa5\x3b\xda\xac\x2a\x29\x82\x07\xee\x2c\xf0\xf6\x72\x59\x92\x84\xd0\x9f\x49\x02\x00\x50\x1b\xaa\xd1\x50\x6a\xe5\x46\x91\x79\x02\x6c\x78\x9b\xfe\x6d\x6d\x43\x1f\xac\x0d\x6e\x68\xde\x5f\x38\xd7\x8a\x8d\xae\x2a\x32\x39\xbc\x3b\x34\xbb\x9d\x07\x34\x3e\x70\x4f\x4b\xac\x1a\xca\xe0\xe1\x0f\x21\x74\xa3\x38\x83\x4f\x0f\xe2\x56\x45\x0c\x7b\xa7\xf3\x2f\x64\x84\x67\x08\x8b\x5c\x18\xb2\xba\xda\x93\x47\x40\xc1\xae\x66\xa9\xdb\x6b\x8c\xa0\xc5\xb1\xa6\x27\x50\xb2\xca\x61\x2f\xe9\xd0\xfe\xe9\x7e\xce\x6e\xd7\xbb\x78\x5b\x2c\x3b\xac\x97\x34\xcb\x00\xed\x6f\x70\xdf\xeb\xaf\x3d\x63\xb7\x5e\x5f\xa1\x46\x25\x45\x3a\x99\xeb\xa6\x2a\x41\x69\x86\x33\x59\x08\x0e\x79\x66\x05\x2c\xb6\x04\xb1\x79\xe0\x6a\x15\x42\x2b\x81\x9c\x4e\x40\x9c\xb5\x82\x22\x2a\x2d\xb0\x06\xe9\xce\xed\x48\xb1\xef\x5a\x78\x7b\x47\xd6\xc3\x80\x54\xa0\x9d\x25\xdc\x19\xfa\x46\xa2\x61\x02\xbe\x72\x56\x31\xc9\xb2\xa4\x47\x97\x6b\x68\xfb\x5b\xf4\xf6\x90\x64\x8b\x0d\xf1\xec\xe1\x96\xad\x8b\xfe\xb7\x97\xf4\xe6\x3b\x57\x0f\xbc\x2b\xc4\x3b\xf2\x36\x2b\xc4\x96\xc4\xd7\x34\x74\x80\x5b\xd3\x69\xef\xf1\xde\xda\x70\x40\x0b\x58\x19\xc2\xf2\x08\x96\x18\x9a\x3a\x3a\x63\x88\x1b\xa3\xfa\xad\xd3\x98\x2e\xdb\x9a\xb5\x45\x9d\x3d\x44\xe6\xf2\x75\x7c\x49\xd7\x46\xef\x9e\x2e\x16\xec\x8e\x78\xb6\xf0\xfc\x0c\x6b\xac\x2c\x0d\xe9\xce\x0d\x39\xb6\x08\x8a\x0e\x51\x73\xdb\xa9\xf5\xd3\x57\x37\x0c\x92\x5d\x63\xce\x97\x46\x97\x5c\x51\xb4\xb8\xa7\x74\x60\x8c\xd9\x63\xc4\x59\x78\xd4\x2f\xbb\x9a\x8f\x1e\x26\xf5\xbc\x03\xef\xff\x3e\x26\x31\xcb\xf2\xc1\xc5\xac\x6f\x88\x8e\xde\xcc\xc6\xca\x1b\xaa\x3f\xc7\x4b\xab\xf9\x32\xf6\xae\x05\xce\xc0\x54\xfe\xc8\x6c\x2b\x6d\x8c\x3e\xcc\x1e\x3e\xa3\x31\x6c\x99\x9f\x5e\xd2\x0b\xc5\xdd\xd9\xec\x7d\x63\x94\xac\xae\xda\xd2\x67\xc9\x1c\x6b\x78\x1e\x85\xeb\xaa\x2d\x5d\x94\x0d\x50\xff\x6c\x63\x34\x87\x71\x32\x83\x22\xba\xf5\xe3\x22\xc6\x85\x0c\x5a\x1f\x31\xab\xdb\xe8\x4c\x3b\x01\x39\x20\x87\x2d\x8a\xf4\xdf\x68\x8b\x0f\x68\x40\xe8\x06\x2f\xec\x08\xa3\xd9\x10\xb3\x54\x1b\x9f\x23\x43\xcb\x46\x91\xdc\x7d\x1c\x82\x0b\x7e\xa5\xa0\x1d\x91\xb1\xe2\xdd\xe3\xbe\x88\xd3\x25\x19\x66\x8f\x70\x33\x7b\xda\x11\xf9\x97\x0e\xfd\x56\x6a\x48\xc8\x5a\x92\xe2\xa7\x11\x5d\x01\xc8\xd8\x44\xce\x1e\x7b\xd8\xdc\x0f\xcd\xbd\xa1\xf7\x11\xe4\xc8\x68\x93\xc2\xde\xe8\x36\xdb\x7b\x81\xdd\x47\x6e\x5c\xff\xdd\xf6\xbe\x27\xc4\x07\x7d\xf9\x05\x81\x37\x32\x63\x3a\xed\xfe\x21\xf0\xf2\x7e\x4a\xf0\xf7\x46\x24\x82\x0b\xab\x12\xc7\x9c\x9b\x9f\x9f\xff\x44\x25\xb1\x8e\x53\x72\x4a\xfe\x0f\x00\x00\xff\xff\x11\x73\x37\xae\x19\x0a\x00\x00"

func privateforwarderSetup_and_create_forwarderCdcBytes() ([]byte, error) {
	return bindataRead(
		_privateforwarderSetup_and_create_forwarderCdc,
		"privateForwarder/setup_and_create_forwarder.cdc",
	)
}

func privateforwarderSetup_and_create_forwarderCdc() (*asset, error) {
	bytes, err := privateforwarderSetup_and_create_forwarderCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "privateForwarder/setup_and_create_forwarder.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x1d, 0x63, 0xdb, 0xa7, 0x18, 0x85, 0x8e, 0xf2, 0x22, 0x8b, 0xcc, 0x85, 0xfe, 0x87, 0x4e, 0x5, 0xb1, 0x12, 0x4f, 0x58, 0x70, 0xe6, 0x5d, 0x3d, 0x51, 0xa8, 0xc9, 0xb8, 0xdd, 0x67, 0x1, 0xbc}}
	return a, nil
}

var _privateforwarderTransfer_private_many_accountsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\xcb\x6e\xdb\x30\x10\x3c\x47\x5f\xb1\xd6\x21\x95\x80\x54\xbe\x14\x3d\x08\x79\x20\x4d\xeb\x9e\x02\x04\x89\xeb\x1e\x8a\x1e\xd6\xd2\xda\x62\x23\x91\x02\xb9\xb2\x92\x06\xfe\xf7\x82\xa4\xe4\x48\x71\xdc\xb4\x3c\xf8\x41\xec\x63\x76\x66\xb8\xa2\xaa\x95\x66\x08\x67\x8d\x5c\x8b\x65\x49\x73\x75\x4f\x32\x0c\xfa\xeb\x2f\x0f\x58\xd5\x7b\xb7\x37\x5a\x6c\x90\xe9\x96\x32\x12\x1b\xd2\x33\xa5\x5b\xd4\x39\xe9\xe7\x88\x51\xb9\x6b\x62\xcc\x91\x71\x21\xa8\x35\x61\x10\x4c\xa7\x53\x98\x17\xc2\x00\x6b\x94\x06\x33\x16\x4a\xfa\xdf\x2b\xd2\x06\x58\x41\x85\xf2\x11\x30\xcf\x35\x19\x43\x06\xb8\xd0\xaa\x59\x17\xc0\x05\x09\x0d\xb5\xef\x0e\xba\x6b\x6f\x82\x60\x50\x28\xea\xd2\x2e\x2b\xd5\x48\xbe\xc6\x3a\x85\xa7\x4b\x7f\x95\xc2\xb7\x99\x78\xf8\xf8\x61\x1b\xc3\x53\x10\x00\x00\x38\x20\x04\x0b\x6c\x4a\x06\x4d\x46\x35\x3a\x23\xe0\x02\x19\x0a\x55\xe6\xb6\x33\x01\xdb\x19\x8c\xbf\x45\x4d\xb0\x24\x21\xd7\x3b\xbc\x9a\x72\x57\xaa\x24\x86\x8d\xad\x73\x4b\xab\x14\xb0\xe1\x22\x1a\x91\x90\x7c\x17\x5c\xe4\x1a\xdb\x18\x8e\x87\xac\x26\xae\x79\xb0\xab\xd1\x4d\xd7\x71\x2a\xe4\xfa\x8e\x64\x4e\x3a\x85\xe3\x43\xac\x27\x3e\xc2\x97\xa8\x35\xd5\xa8\x29\x32\x62\x2d\x6d\x96\x03\xf2\x49\x69\xad\xda\x05\x96\x0d\xc5\x70\x7c\x99\x65\x96\x9a\x1d\x09\x23\xf4\x9f\x91\x11\xce\x60\x84\xd0\x12\x53\x6e\xe8\x4a\x49\xd6\x98\xb1\x95\x31\xea\xc9\x9a\x3f\xd6\x94\x82\x14\xe5\x09\x6c\x04\xb5\xfe\xaf\xfd\x3c\x3d\x6c\x81\x64\x36\x5f\xf4\xbd\xce\xa3\x38\x06\x34\x13\xf8\xb7\xf0\x8b\x1d\x62\x7b\x2e\x2e\xa0\x46\x29\xb2\x28\xbc\x52\x4d\x99\x83\x54\x5e\xc5\x72\x43\x30\x48\x72\xc8\x12\xa7\xf4\xd8\xcf\xf0\xe2\x24\x99\x92\x19\x72\x14\x42\xd6\xcd\x0a\x92\x28\x77\x96\x14\x36\xaf\x22\xc9\xce\x13\xc3\xea\x3d\x58\xd7\x06\x84\x04\x65\x55\xb1\x39\xf4\x40\x59\xc3\xd6\x50\x63\xb3\x27\x61\x1c\x3f\x73\x3f\x9d\xc2\x57\x62\x40\xd0\xb4\x22\x4d\xd2\x3a\x50\xb9\x2e\x5e\xc4\x77\x06\x0c\x2b\x4d\xb9\x57\x68\x97\x67\xa8\x5c\x25\xbd\xe5\xe0\xac\x8b\x4e\x6c\x2c\xae\x29\x59\x3a\xd1\x4f\xff\xd7\x89\xe7\xd1\x4a\xab\x2a\x7d\x76\x43\x5f\xf0\x06\xb9\x88\x0f\xd0\x3f\xdf\x81\x85\x5c\x91\x71\x42\x38\xcc\x80\x12\xf6\x7b\x80\x5a\xfe\xa2\x8c\x01\x3d\x99\x35\x72\x01\xfb\x6a\x0c\x15\x79\x15\x4d\xc2\xea\x8e\xb5\x90\xeb\x28\x8e\xff\x9a\x1d\x7a\xf1\x3b\x84\x55\x63\x18\x84\x14\x2c\xb0\x14\xbf\xa9\xdb\x2a\xe8\x5f\x05\xb4\x82\x0b\x2f\x98\xeb\x09\x2b\xa1\x0d\x4f\x46\x82\x39\xe2\x0f\xbc\xd3\x83\x3a\xbc\xf5\x7c\x7b\xde\xdf\x08\xbb\x1b\x8a\x71\x74\x74\xf4\xda\x13\xf0\x1d\xf7\xed\xa4\x5a\xef\x26\xa7\xc1\x24\xec\x26\xda\xfa\xaf\xde\xab\x83\xa5\xb0\x52\xba\x5f\xc2\xd6\xd6\x2f\x17\x6b\x72\x4f\x8f\x66\x18\xff\x16\x37\x89\x21\x99\x77\xf3\x39\x37\x98\x7e\x59\x9f\x74\x4b\x36\x85\xd3\xf7\x23\x5b\x27\x6d\xe7\xd5\x08\x5d\xdb\x74\x0f\xc5\x8f\xee\xe2\xe7\x64\x28\xd1\xb6\x1b\x6d\x1b\xfc\x09\x00\x00\xff\xff\x9e\x33\x2b\x8b\xe1\x06\x00\x00"

func privateforwarderTransfer_private_many_accountsCdcBytes() ([]byte, error) {
	return bindataRead(
		_privateforwarderTransfer_private_many_accountsCdc,
		"privateForwarder/transfer_private_many_accounts.cdc",
	)
}

func privateforwarderTransfer_private_many_accountsCdc() (*asset, error) {
	bytes, err := privateforwarderTransfer_private_many_accountsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "privateForwarder/transfer_private_many_accounts.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xdd, 0x32, 0xbc, 0x5f, 0xf6, 0x6f, 0xa, 0x10, 0x1, 0x8e, 0xc7, 0xe5, 0x9c, 0x91, 0xe4, 0x9c, 0xf1, 0x26, 0xcc, 0x9b, 0xe, 0x3d, 0x18, 0x71, 0xc4, 0xba, 0x80, 0x6d, 0x62, 0xaf, 0x7d, 0x93}}
	return a, nil
}

var _safe_generic_transferCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x56\x41\x6f\xe3\x36\x13\x3d\x27\xbf\x62\xd6\x87\xac\x04\x64\x95\xcb\x87\xef\x60\x64\xbb\x4d\x17\x48\x0f\x45\xd1\x20\x71\xb7\xe7\xb1\x38\xb2\x66\x43\x93\x02\x39\x8a\xd7\x0d\xf2\xdf\x0b\x92\x12\x2d\xc5\x4e\xb0\xbe\x44\xa1\xa9\x37\x6f\x1e\xdf\x3c\x9a\xb7\x9d\x75\x02\x8b\xdb\xde\x6c\x78\xad\x69\x65\x1f\xc9\x2c\xce\xcf\xaf\xae\xae\xe0\x2b\x1a\xe8\xd0\x7b\x60\x03\x68\xf6\xe0\xc5\x3a\xdc\x10\x74\x28\x2d\xa0\x51\xe0\xa8\x26\x7e\x22\x97\x56\xd8\x78\x21\x54\x60\x1b\xf8\xde\x7b\x01\x69\x09\x14\x35\xd8\x6b\xa9\x22\xde\xaa\x65\x0f\x9a\xc4\xc3\xde\xf6\x50\xb7\xd6\x7a\x8a\xbb\x24\x14\x8d\x8b\x3b\x34\x02\x62\xc1\x93\x51\x80\x1e\x76\xa4\x75\xdc\x52\x63\x87\x6b\xd6\x2c\xfb\xe3\x7d\x1c\x1e\x63\x89\x58\xe6\xc6\xec\x07\xc4\x48\xab\x46\x03\x6b\x8a\x8d\x50\xc4\x44\x03\xe8\x36\xfd\x96\x8c\x40\x4b\x8e\x2e\xc1\x5b\xd8\xa1\x8e\xcc\x7c\x6b\x7b\xad\x22\x4e\x7a\x84\xba\xa5\xfa\xf1\xf0\xc6\x13\xea\x9e\x7c\xa8\xbd\xc5\x47\x02\xdf\xbb\xd4\x03\x1b\x21\xa3\x48\x4d\x4b\xb3\x1f\xcb\xb2\x89\xf4\xc4\xa1\xf1\x58\x0b\x5b\x53\xe0\xd6\xf6\x46\x96\xf0\xf7\x2d\xff\xf8\xff\xff\x2e\x41\xec\x12\x6e\x94\x72\xe4\xfd\x65\xec\x8b\xdc\x1d\x4a\xbb\x84\x87\x24\x7b\xf8\xe7\x32\x4b\x9e\xbe\xba\xeb\xd7\x9a\xeb\xf0\x5c\xc2\xf3\xf9\x39\x00\x40\xd4\x99\xe0\x5b\x90\x1d\x1c\x79\xdb\xbb\x3a\x30\x44\x81\xd6\x6a\xe5\x0f\x82\xfb\xb4\x8a\x8e\x60\x4d\x6c\x36\x10\xd9\x35\xe4\x1c\xa9\x08\xa5\x49\x40\x68\xdb\x45\xac\x25\xfc\x3a\xf3\x48\x15\x57\x73\xcd\xdf\xac\x73\x76\x17\xda\xa7\x86\x1c\x99\x9a\x46\xaa\x63\x31\x6e\x86\x95\x50\x0a\xeb\x3a\x74\x0f\xca\x92\x37\x1f\x05\x7c\xdf\x45\x1f\x06\x72\xa1\xf7\x48\x27\xbc\x97\x89\x24\x45\xee\x87\xf6\xef\xa9\x59\xc2\xc5\x73\x62\x32\x2e\xbe\x24\x36\x9d\xa3\x0e\x1d\x15\x9e\x37\x86\xdc\x12\xb0\x97\xb6\x48\xfc\xbe\x85\xc3\x2b\xe1\xe2\x26\x95\xcf\xa2\x0d\x4d\xfc\x4e\x02\x08\x2e\x77\x20\x36\x11\x8a\x40\x1f\x7d\x1c\x00\x52\xf0\x14\x3b\x1f\xdf\x0b\xe4\xe2\xca\x3d\x35\xf0\x79\xd8\x5c\x0d\xb3\x52\xad\x63\xdd\xeb\xc8\x61\xae\xdf\x3f\x2c\xad\x72\xb8\x2b\xe1\xe2\x79\xfe\xcd\x9d\xb3\x4f\xac\xc8\xbd\xfc\x52\x34\xce\x6e\x97\x13\x37\x94\xb9\x6c\xf8\x7c\xf9\x02\x1d\x1a\xae\x8b\xc5\x2a\xd3\x8c\x92\x82\xb1\x92\xd8\x02\xc2\x69\x70\xb0\xeb\xef\x54\x0b\x60\x12\x3d\xfa\x75\x31\x43\x1f\x3f\x55\x6d\x4d\x8d\x52\x1c\x58\x54\x62\x1f\xc4\xb1\xd9\x14\x65\xf9\xee\x2b\x8b\x0a\x26\xcc\xb6\x21\x15\xd8\xb0\x30\x6a\xfe\x37\x8e\x0d\xbb\x6c\x85\x1d\x4b\x0b\x12\x22\x62\x60\xd6\xb0\xf3\xf2\x61\x31\x29\x91\x1f\x3c\xe9\xa6\x3a\x72\xc4\x9b\xea\xbf\x16\x38\x1b\xe6\x94\xc0\x67\x67\x67\x07\x5d\xbf\xc6\x08\x08\x6a\x26\x28\x78\x0b\xe9\x1d\xd7\xc4\x41\xf9\xb0\x28\xcf\xe7\xf4\xf3\x64\xc1\xf5\xa7\x6c\xa0\x6a\x37\xb8\x22\xc7\x43\xfa\x9b\x34\x18\x0c\x4e\x3f\xa8\xee\x85\xe0\x79\xe6\x41\x37\x13\x62\x43\x32\x98\xbc\x10\x5b\x56\x39\x3e\x99\xfc\x4f\xa8\x32\x4d\x99\xb7\x2c\x77\x24\x0d\xc2\x88\x70\x2c\xc6\xac\xd2\x10\x4e\xe1\x56\x19\xce\xfe\xd8\x78\xa3\x83\xc4\x4e\xcd\x96\x7d\x15\x6c\x9b\x2c\x9b\xd7\xa6\x9c\xdf\x35\xe8\xc4\x9c\x7f\xe6\x08\x0f\x97\x4a\x48\xc2\x43\xf8\xc4\x7b\x22\xe5\xf1\x10\x9f\xe8\x61\xf1\x0e\x1c\x9e\xec\xd2\x93\x40\xdf\x41\xe7\x6c\x47\x4e\xef\xc7\x79\xf3\x1d\xd5\xdc\x30\xa9\xd8\x46\x15\x5c\x3e\x3b\xcd\x21\x10\x49\x45\x94\xd5\xbe\x23\x0f\x9f\xa7\x67\x5c\x6d\x48\x1e\x8e\x37\x15\xe5\x34\xd0\xfe\x32\x7a\x9f\x63\x7d\x0c\xe2\x5d\x4b\x26\x72\xc8\xd7\x37\x7b\xd8\xb1\xd6\x43\xdf\x39\xb7\xc3\x45\x81\x6e\x43\x42\x0a\x6e\x57\x55\x06\xe6\xe6\x14\xbd\xa0\x83\x20\x1b\xff\x07\xed\x8b\xb9\xc3\x03\xd7\xb0\xa7\x28\xcb\x89\x69\x07\x8e\xab\x57\xf4\xc2\x44\xbe\x1d\xbb\xa3\xa1\x32\xf7\xc3\x0f\x83\x19\xf0\x54\x29\x45\x9d\xf5\x2c\xc3\xac\x5f\x7f\x9a\x93\x3b\x08\xf6\x02\xa4\x3d\xbd\x62\x78\x3a\x6a\x7e\x1e\x73\x18\xdc\x97\xff\x02\x00\x00\xff\xff\x41\xfa\x6b\x98\x69\x09\x00\x00"

func safe_generic_transferCdcBytes() ([]byte, error) {
	return bindataRead(
		_safe_generic_transferCdc,
		"safe_generic_transfer.cdc",
	)
}

func safe_generic_transferCdc() (*asset, error) {
	bytes, err := safe_generic_transferCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "safe_generic_transfer.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc3, 0xb1, 0xa6, 0xdc, 0x29, 0x70, 0x93, 0x34, 0xa4, 0x77, 0x4e, 0xef, 0x42, 0xc6, 0xde, 0x6a, 0x11, 0xf9, 0x4b, 0x24, 0x19, 0xac, 0x84, 0xf2, 0xa6, 0x58, 0x10, 0x1a, 0xf2, 0xa1, 0xff, 0xb2}}
	return a, nil
}

var _scriptsGet_balanceCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\xcb\x6e\xdb\x3a\x10\xdd\xeb\x2b\xce\xd5\xe2\x56\x02\x0a\x7a\x53\x74\x11\xa4\x31\xd2\xb4\xde\x05\x28\x50\x37\xfb\x31\x35\xb6\x88\xd0\xa4\x4a\x0e\xfd\x40\x90\x7f\x2f\x28\xc9\xae\x0c\x38\x41\xb9\x10\x28\x6a\x86\x73\x5e\x9a\xcd\xb0\x6c\x4d\x44\xd4\xc1\x74\x82\xc0\xd4\x44\x48\xcb\x58\x91\x25\xa7\x19\x6b\xc3\xb6\x29\x66\x33\xf8\x35\xc8\x81\xb4\xf6\xc9\xc9\x87\x88\xef\x07\xda\x76\x96\x97\xfe\x99\x1d\xbe\x0e\xd5\x45\x61\xb6\x9d\x0f\x82\x72\x91\xdc\xc6\xac\xc6\xcf\xe5\xf9\x78\xda\x54\x5e\x2f\x7e\x64\xa1\x86\x84\x9e\x0c\xef\x63\x59\x14\xa4\x35\xc7\x58\x91\xb5\x35\xd6\xc9\x61\x4b\xc6\x55\xd4\x34\x81\x63\xbc\xc1\xfd\xb0\xa9\x6f\xf0\x6b\x61\x0e\x9f\x3f\xe1\xa5\x00\x00\xcb\x82\x1d\x25\x2b\xdf\x48\x08\x5f\x2e\xc0\xaa\xc0\xd1\xdb\x1d\x3f\x78\x27\x81\xb4\xe4\x41\x55\x3e\x4b\x41\xf3\xf2\xd8\xf1\x0d\x9c\xb1\x1f\xb1\x33\xbc\x1f\x5e\xf3\xf3\xf6\x6d\x90\x6a\xb1\x7c\x3a\xcd\xba\xab\xea\x1a\x14\xff\xc3\xbf\x95\xcf\x7b\xb4\x79\xcd\xe7\xe8\xc8\x19\x5d\x95\x0f\x3e\xd9\x06\xce\x67\x37\x7a\xa0\x98\x34\xf4\xa8\x14\x96\x2d\xe3\x52\x4b\x4c\x96\xd2\xde\x69\x92\xaa\x84\x1e\x39\xc2\x31\x67\x63\x3d\x4c\xee\xd9\xb2\x93\xde\xe5\xe9\xcd\x27\x90\xfd\x08\x18\x07\x1f\x1a\x0e\xb9\x87\x0f\xac\x93\x30\x24\x27\x45\x02\xb9\x48\x5a\x8c\x77\xaa\xac\xeb\xa2\x9f\x1c\x58\x52\x70\xd8\xb0\xdc\x0f\x01\x39\x39\x54\x2b\x4d\x1d\xad\x8c\x35\x62\x38\xaa\x95\x0f\xc1\xef\x6f\xff\x7f\xb9\x90\x47\x8d\xf1\x79\xbd\xab\x2e\x78\x9c\x1d\x54\xdb\x11\xdb\x0f\x92\xf6\x5c\x52\xcf\xd5\x98\xd2\x77\x55\x1c\x66\x82\xce\x91\x0e\xbc\xe6\xc0\x79\x27\x7e\x50\x61\x0a\x06\xbd\x22\x99\xff\x98\x75\x5c\x8a\x3b\x15\x78\x24\xa9\xc4\xff\x94\x60\xdc\xa6\xaa\xeb\xbf\xda\x93\xa0\x23\x69\x51\x9e\xcf\xae\xf3\x99\x76\xbf\x39\xa9\x54\x78\xa4\x67\x46\x4c\x81\x71\xf4\x09\x14\x18\xbf\x13\x87\xa3\x71\x9b\xfe\xc7\x1c\xa0\x40\x5a\x12\xb4\x14\x51\xbe\x73\x19\x5d\xa5\x1c\x59\x90\x3a\x74\xc1\x77\x1c\xec\x31\x13\xc8\xea\xc4\x8e\xb5\x59\x1b\x6e\x7a\x3a\xbd\xe7\xaf\xc5\x9f\x00\x00\x00\xff\xff\x98\x80\x6f\x23\x38\x04\x00\x00"

func scriptsGet_balanceCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_balanceCdc,
		"scripts/get_balance.cdc",
	)
}

func scriptsGet_balanceCdc() (*asset, error) {
	bytes, err := scriptsGet_balanceCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_balance.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe5, 0x2d, 0x41, 0xa, 0x7, 0x97, 0x2c, 0xbc, 0x58, 0x8f, 0x29, 0xa9, 0x43, 0xe1, 0xff, 0x24, 0xfb, 0x49, 0x11, 0x31, 0xe4, 0xb6, 0x3, 0xfe, 0xb2, 0x3b, 0xd0, 0x6, 0xbc, 0x80, 0xd3, 0x66}}
	return a, nil
}

var _scriptsGet_balance_genericCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x51\xcd\x8a\xd4\x40\x10\xbe\xe7\x29\x3e\xfa\x20\x09\x48\xe6\x22\x1e\x06\x71\x58\x85\xbd\x09\x0b\xae\xde\x2b\x9d\x9a\xa4\xd9\x9e\xee\xb6\xba\x7a\xd7\x61\x99\x77\x97\x4e\x9c\xe0\x80\x5a\xa7\xaa\x4a\xfa\xfb\xab\xdd\x6e\x87\xc7\xd9\x65\x64\x2b\x2e\x29\x84\x69\xcc\xd0\x99\x31\x90\xa7\x60\x19\xf1\x08\xc2\x33\x15\xaf\x20\xc5\xcb\x4c\xca\xcf\x2c\x48\xa4\x73\x53\x5f\xbb\x8c\x44\x39\xf3\x08\x17\x40\x19\x14\x40\x32\x95\x13\x07\x6d\x1a\x77\x4a\x51\x14\xe6\xbe\x84\xc9\x0d\x9e\x1f\xe3\x13\x07\xd3\x34\x64\x2d\xe7\xdc\x92\xf7\x1d\x8e\x25\xe0\x44\x2e\xb4\x34\x8e\xc2\x39\xef\x71\xb7\x36\x6f\x17\x92\x3d\x1e\xca\xe0\x9d\x7d\x20\x9d\xbb\x3d\xbe\xdd\xbb\x9f\xef\xdf\xe1\xb5\x01\x00\x61\x2d\x12\x30\xb1\xde\x59\x1b\x4b\xd0\x2b\x46\xd7\x5b\x4a\x34\x38\xef\xd4\x71\xee\x87\x28\x12\x5f\x3e\xbc\x79\xbd\xd1\xd1\x7f\x5a\x2d\x5e\x3e\xb6\x0b\xda\xb5\x16\x6b\xd7\xa1\x3b\xf4\xbf\x93\xd8\x56\x87\x03\x12\x05\x67\x5b\xf3\x39\x16\x3f\x22\x44\xc5\xca\x00\xda\x62\x13\x3e\xb2\x70\xed\x34\x2e\x79\xde\x50\xe3\xfb\x12\x68\x4d\x6c\x15\x0e\x73\x23\xa1\x56\x6f\x63\xb0\xb4\x59\xea\x35\x7e\x55\x71\x61\x6a\xbb\xee\xfa\xc9\xd4\x93\x54\xb9\x30\xdb\xae\x8e\x7f\xfe\xfb\x4f\x5c\xd3\xe3\x0b\x3d\x31\x72\x11\xc6\x39\x16\x90\x30\x7e\x14\x96\xb3\x0b\xd3\x72\xc6\x95\x18\x3a\x93\x62\xa6\x0c\xf3\x1f\x30\xfa\xab\xc1\xcc\x8a\x92\x90\x24\x26\x16\x7f\xae\x72\x6b\x16\x39\xb1\x75\x47\xc7\xe3\x22\xbe\x37\x5d\xd7\x5c\x9a\x5f\x01\x00\x00\xff\xff\x0c\x11\x5e\xc1\x8b\x02\x00\x00"

func scriptsGet_balance_genericCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_balance_genericCdc,
		"scripts/get_balance_generic.cdc",
	)
}

func scriptsGet_balance_genericCdc() (*asset, error) {
	bytes, err := scriptsGet_balance_genericCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_balance_generic.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x8e, 0x50, 0x6a, 0x82, 0x63, 0x49, 0xb0, 0x5, 0x37, 0xae, 0xf8, 0xee, 0xde, 0x1, 0x9a, 0xe0, 0xa8, 0x75, 0x8b, 0x74, 0x76, 0x16, 0xd2, 0x85, 0x66, 0x6f, 0x92, 0x4, 0x1, 0x4b, 0x64, 0x2d}}
	return a, nil
}

var _scriptsGet_supplyCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xce\x3d\x6a\xc3\x40\x10\xc5\xf1\x7e\x4e\xf1\x50\x25\x35\xd9\x26\xa4\x48\x9f\x5c\xc0\xf2\x01\x86\xd5\x08\x2d\xde\x2f\x66\x46\x20\x63\x7c\x77\x83\x2a\xbb\x7e\x8f\x3f\xbf\x10\x30\x6f\xc9\x60\x51\x53\x77\xa8\xf0\x62\xf0\x4d\xe0\xcd\x39\xc3\xf6\xde\xf3\x1d\x6b\x92\xbc\x50\x08\x68\xeb\x39\xfe\x1d\x5c\x7a\x96\xb9\xdd\xa4\xc2\x0a\xab\x23\xb6\xea\xca\xd1\x89\x52\xe9\x4d\x1d\xc3\xfb\x69\x20\xe2\x18\xc5\x6c\xe4\x9c\x27\xac\x7b\x45\xe1\x54\xc7\xe9\x17\xd7\xff\x74\xfc\x7c\xe3\x41\x00\xa0\xe2\xbb\xd6\x8f\xfe\xd7\x29\xb9\x9c\x10\x7a\xd2\x2b\x00\x00\xff\xff\xd2\xfd\xa1\x6d\xb1\x00\x00\x00"

func scriptsGet_supplyCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_supplyCdc,
		"scripts/get_supply.cdc",
	)
}

func scriptsGet_supplyCdc() (*asset, error) {
	bytes, err := scriptsGet_supplyCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_supply.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xdd, 0x3c, 0xc, 0x52, 0x8e, 0x74, 0x2e, 0x22, 0x44, 0xf5, 0xa0, 0x5, 0xc1, 0x1c, 0xd1, 0x7c, 0x1f, 0x2c, 0xff, 0x1, 0x86, 0x2b, 0xa5, 0xab, 0x70, 0xa3, 0x21, 0x31, 0xd1, 0x71, 0x8a, 0x8b}}
	return a, nil
}

var _scriptsGet_supported_vault_typesCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x93\x4f\x6f\x9b\x40\x10\xc5\xef\x7c\x8a\x27\x1f\x1a\x90\x2a\x7c\xb7\xda\x46\xe9\xa1\xea\x31\x4a\xd2\x9e\x59\x96\xc1\xbb\xca\xc2\xa2\x99\xc1\xc8\xb2\xfc\xdd\xab\x05\xbb\x31\x56\xeb\x93\xb5\x9a\xf7\x7e\x8f\xf9\xe3\xbb\x21\xb2\x62\xf3\x63\xec\xf7\xbe\x0e\xf4\x16\xdf\xa9\xdf\x64\xd9\x76\xbb\xc5\x9b\xf3\x02\xb1\xec\x07\x15\x30\xe9\xc8\xbd\x40\x1d\x41\xc6\x21\xa9\xa8\xc1\x4a\xf6\x20\xd0\xe3\x40\xa8\x8f\x73\xd5\xc0\xf1\xe0\x1b\x6a\x50\xa9\xe1\x3d\x69\x05\xd3\x34\x4c\x22\xe5\xec\x7e\xff\x0a\x71\x71\x0c\x0d\x5c\x0c\xcd\xac\xb7\x66\x30\xb5\x0f\x5e\x8f\x98\x9c\xb7\x0e\x36\xf6\x6d\xe4\x4e\x30\x79\x75\x6b\x74\xf9\x42\x96\xfc\x81\x18\x4c\xa2\xec\x6d\x0a\x97\xc2\xcc\xa8\xc9\xf9\x40\xf0\x8a\x26\x92\xf4\x0f\x8a\xce\xa8\x12\x63\x72\xa4\x8e\xf8\x96\xc4\xd4\x12\x0b\x34\xa2\xbd\xf8\x43\x13\x00\x91\x61\x60\x47\xd1\xd8\x81\xaf\xb0\xe0\xdf\x09\xcb\xd7\xac\xe2\xbc\x4e\x5e\xad\xab\xa3\xe1\xa6\x4a\xca\x6a\x7e\xbd\x66\xac\x4a\xfc\x8c\x13\x25\x83\x4b\x13\x9e\x8d\xba\x0a\x4a\x21\x48\x0a\xc5\x74\xdf\x00\xd1\xc8\x24\x99\xb1\x96\x44\x72\x13\x42\x91\xf2\xa1\x33\xbe\xcf\x17\x8b\x1d\x9e\x96\x3e\x7e\xc6\x87\xe7\x0e\xcf\x63\x1d\xbc\x4d\xff\x8b\x1d\x4e\x6f\xc7\x81\x76\xf8\x1e\x63\x38\xe3\x94\x65\x00\xb0\xdd\xe2\x69\x76\xbd\x47\xb6\x91\xd7\x63\x5c\x6c\xaf\xe3\x9a\xc5\x81\xf4\x46\xf2\x42\x2d\xbe\x62\x4f\xfa\x64\x6d\x1c\x7b\xbd\x24\x2b\xca\xbf\x25\x9e\xa4\xac\x23\x73\x9c\xbe\x7c\x3a\xfd\x7b\x80\xe7\x6f\xf9\x47\xfe\x62\xa6\xa4\xdf\xe3\x23\x06\xd3\x7b\x9b\x6f\x7e\xf5\x66\x99\x0a\x16\xa7\xd5\x9e\xa4\xc5\xb8\xd9\x00\x19\xeb\x65\x25\xff\x07\x43\xcb\xb1\xc3\x60\xd4\x6d\x4a\x1b\x7b\x6b\xf4\x86\x5e\x6a\x7c\x55\xf6\xfd\x3e\x2f\x8a\xe2\xda\xac\x97\xf9\x0e\xee\xce\xe0\x60\xc6\xa0\x33\x49\xca\xb9\x70\xb9\x96\x75\x6f\xca\x3d\xe9\xeb\x55\xf2\x3b\x29\xd2\x38\x24\x2f\xb2\x73\xf6\x27\x00\x00\xff\xff\x60\x93\xa8\xaa\x87\x03\x00\x00"

func scriptsGet_supported_vault_typesCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_supported_vault_typesCdc,
		"scripts/get_supported_vault_types.cdc",
	)
}

func scriptsGet_supported_vault_typesCdc() (*asset, error) {
	bytes, err := scriptsGet_supported_vault_typesCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_supported_vault_types.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe0, 0xc7, 0x62, 0xe7, 0x3d, 0xbc, 0xf3, 0x6f, 0xd, 0x82, 0x27, 0x6a, 0x8b, 0x4b, 0x9d, 0x4c, 0xcd, 0xb9, 0xe, 0x3b, 0x55, 0xa9, 0xd5, 0x69, 0x23, 0x2d, 0xfa, 0x9f, 0x6c, 0x4d, 0xa, 0xa9}}
	return a, nil
}

var _setup_accountCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x54\xcd\x6e\xf3\x36\x10\xbc\xeb\x29\xe6\xf3\x21\x95\x00\xc7\xbe\x07\x4e\xd2\xd6\x4d\x80\x1e\x0a\x04\x89\xe1\xfb\x9a\x5a\xc7\x44\x69\x52\x20\x57\x76\x8c\x20\xef\x5e\x90\xb2\x64\xc9\x55\xd0\x1e\x3f\x1d\x04\x70\xb9\x3f\xb3\xb3\xb3\x9c\xcf\xb1\xda\xe9\x00\xf1\x64\x03\x29\xd1\xce\x42\x07\x10\x84\xf7\x95\x21\x61\x6c\x9d\x8f\xc7\xde\xbd\x38\x90\x31\xee\x98\xcd\xe7\x20\x7b\x72\x96\x93\xa9\x2c\x41\x58\x53\x6d\x04\x9e\x83\xab\xbd\x4a\x76\xd9\xb1\xf6\x20\xa5\x5c\x6d\x05\x21\x1a\x48\x62\xa8\xec\xf8\x04\x45\x16\x75\xe0\x78\x00\x7f\xd0\xbe\x32\xbc\x72\x7f\xb3\xcd\x32\xbd\xaf\x9c\x17\x4c\x9e\x6b\xfb\xae\x37\x67\xf3\xa4\x33\x3f\xf5\x9c\x2f\xd6\xb5\xe6\xe3\x2b\x07\x67\x0e\xec\x27\xe3\x29\xfe\x62\xa1\x92\x84\xa2\x6b\x98\x64\x59\xbf\xb3\xbc\xc0\x67\x96\x01\x40\xe5\xb9\x22\xcf\x79\xd0\xef\x96\xfd\x1d\xa8\x96\x5d\xfe\xbb\xf3\xde\x1d\xd7\x64\x6a\x9e\xe2\xcf\x10\x6a\x7e\x13\xe7\xe9\x9d\x97\x54\xd1\x46\x1b\x2d\xa7\xa5\xb3\xe2\x9d\x31\xec\xa7\x78\xa9\x37\x46\x87\xdd\xe5\x72\x8a\x37\x3a\x70\x8a\x2f\x70\xf3\x5b\x43\x49\x57\x32\x7e\x86\x05\x87\x48\xe1\x1f\x24\x84\x7b\xf4\xbb\x9c\xf9\xa6\xb1\x54\x82\x94\xc4\x06\xf2\x96\xe9\xd5\xa9\xe2\x3b\x58\x6d\xa6\x38\x68\x3e\x36\xc7\xf8\x5f\x7c\xdf\xfc\xec\x79\xb5\x6e\x6b\x3d\xe4\x45\x01\x0a\x3f\xf0\xff\xdc\x1f\x3b\xc4\xf1\x7b\x7c\x44\x45\x56\xab\x7c\xb2\x74\xb5\x29\x61\x5d\x23\x01\x73\x60\xf4\x82\x12\xb2\x19\x56\x3b\xc6\x70\x7a\xb8\xfa\x66\xca\x59\x45\x92\x4f\xa0\xce\xbd\xc2\x32\x97\x21\xca\x49\xc7\xb8\x3d\x5b\x49\x92\xe9\x67\x6f\xc1\xa6\x32\xd0\x16\xce\x97\xec\x63\x0c\x7f\xb0\xaa\x25\x8a\x6c\xa8\xf4\xd9\xa4\x28\x2e\xdc\xcf\xe7\x78\x65\xa9\xbd\x05\x93\x37\x27\xe8\x6d\x2a\xd1\x2a\x97\x8c\x67\x2a\x4f\x08\xe2\x3c\xc7\x0d\xe9\xf7\xd0\xe8\xbe\x4b\xa5\xb7\x68\x84\x33\x0b\x8d\x40\x66\x9b\x24\x9d\xc5\xcd\x60\xa0\x29\xe8\x21\xdf\x7a\xb7\xbf\xbb\x8c\xbd\x8d\x79\x21\xd9\x15\xf8\x71\x1f\xa7\x8a\xcf\x01\x49\x3e\xe1\xec\x4c\x5f\x23\x02\xc2\xe2\x76\xa8\x1e\xe5\x99\x84\x9f\xf6\x95\x9c\x52\xdd\x3c\xb9\xf5\x84\xf2\xeb\x18\xb6\x2b\x82\x96\x29\x09\x08\x96\x8f\x23\x04\x80\x6c\x89\xaa\x16\x68\x89\x03\x38\x37\xd2\x25\xb8\xe2\x24\xd0\x81\xf3\xc5\x6d\xc2\x31\x85\xb8\xef\x38\x18\x47\x50\xc5\xed\x52\x50\xdd\x76\x9d\x1f\x9b\x33\x92\xf8\xca\x80\x3f\x2a\x17\x38\xf4\xcc\xda\x0a\xfb\x2d\x29\x0e\xff\xa6\x6c\x49\x15\xee\x5b\x90\x5d\x5e\xcd\xa1\x43\xac\xe3\xce\x8f\x0f\x71\x30\x9f\xd1\x3e\x3a\x8f\xe2\x9a\x90\x41\xad\xaa\x79\x35\xf2\x16\xd2\x14\x24\x7d\x66\xf6\x67\x99\xff\x37\x35\xcb\x71\x6a\x7e\x09\x78\x65\xc5\xfa\xc0\x1e\xdb\xda\xa6\x4d\xa0\xe8\x35\x60\xc4\x9f\x5d\x7e\x2e\x52\x7a\xa8\xae\x79\x69\xaf\x1a\x5e\x9a\xb5\xf8\xca\xfe\x09\x00\x00\xff\xff\x2a\x2e\x65\xf3\xe0\x06\x00\x00"

func setup_accountCdcBytes() ([]byte, error) {
	return bindataRead(
		_setup_accountCdc,
		"setup_account.cdc",
	)
}

func setup_accountCdc() (*asset, error) {
	bytes, err := setup_accountCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "setup_account.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x39, 0xbf, 0xe7, 0x76, 0xe8, 0x73, 0x2d, 0xac, 0x68, 0xb3, 0xd, 0xc5, 0x3a, 0x3, 0x2b, 0x91, 0x61, 0x1b, 0xe3, 0x55, 0xed, 0x44, 0x8a, 0x25, 0xa5, 0x68, 0x3e, 0x61, 0xfa, 0x56, 0xce, 0xbc}}
	return a, nil
}

var _switchboardAdd_vault_capabilityCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x58\x4d\x73\xdb\x36\x10\x3d\x47\xbf\x62\xa3\x83\x4a\x66\x54\xea\xae\xb1\x9d\x26\x6a\xd2\xe9\xa1\x6d\x26\x56\x7d\x5f\x81\x2b\x11\x0d\x05\x70\x80\xa5\x14\x37\xe3\xff\xde\x01\x3f\x44\x40\x22\x65\xd9\xf5\x58\x07\x9b\x92\xb0\xbb\x6f\x3f\xf0\x1e\x20\xb9\x2d\xb4\x61\x18\x7f\x2e\xd5\x46\xae\x72\x5a\xea\x6f\xa4\xc6\xa3\xde\x8f\x6f\xf7\x92\x45\xb6\xd2\x68\xd2\x6e\xc5\xa7\xef\xb8\x2d\xce\xdb\xfd\x41\x8c\x29\x32\xde\x49\xda\xdb\xf1\x68\x34\x9b\xcd\x60\x99\x49\x0b\x6c\x50\x59\x14\x2c\xb5\x02\x69\x01\x81\x69\x5b\xe4\xc8\x04\x6b\x6d\xdc\x5b\xef\x7b\xce\x90\x41\xe8\x32\x4f\x61\x45\x50\x5a\x4a\x61\x75\x0f\xa8\xee\xb5\x22\x60\x0d\x98\xa6\x80\xa0\x68\x0f\xeb\x26\x36\xb0\x0b\x0e\x3b\x2c\x73\xae\x62\x0a\x2c\x70\x25\x73\xc9\xf7\xce\x80\x33\x92\x06\x6c\x97\x13\x18\xb2\xba\x34\x82\xdc\xe2\x91\x1f\xfb\xc7\x68\x04\x00\x90\x13\x03\x79\xe9\xde\x39\xcf\x8b\x83\xd3\x39\x74\xcf\x57\x93\x1f\x41\x09\x92\xaf\x24\x48\xee\xc8\x3c\xdc\x1c\x5c\x79\xa1\xbf\xd2\x7a\x0e\x80\x25\x67\xd1\x50\xc5\x93\xbf\xf6\x8a\x4c\x0c\x93\xc1\x05\xde\x73\x8d\xb7\x30\x54\xa0\xa1\xc8\xca\x8d\x22\x33\xaf\xfd\x7f\xd4\xc6\xe8\xfd\x1d\xe6\x25\x4d\xe1\x77\x6b\x4b\xba\x65\x6d\x70\x43\x1d\xf8\x85\x56\x6c\x74\x9e\x93\x99\xc2\x97\x72\x95\x4b\x9b\x75\x5f\x4e\xe1\x16\x77\xd4\xd8\xff\xad\x8a\xe3\xef\x63\x98\x7c\x10\x42\x97\x8a\xe3\xb6\x6e\x6d\xc2\x55\x27\x7e\x45\x46\xb8\x06\x7f\x6c\x12\x57\xf8\x7c\x47\x55\x5c\x14\xec\xe6\x24\x6a\x9b\xb1\xbc\x2f\x68\x0e\x4a\xe6\x53\xd8\x49\xda\xd7\x6f\xdd\xdf\xab\xe1\x19\x4b\x3e\x2f\xef\xda\x58\x37\x51\x1c\x03\xda\xb7\x70\xd9\xf2\xf7\x07\xc4\xee\xf5\xfe\x3d\x14\xa8\xa4\x88\xc6\x8b\x6a\xf2\x94\x66\x68\xc0\x82\x67\x54\x21\x4b\x60\x99\x11\x84\xdb\x01\x8e\x5e\x89\xd0\x4a\x20\x47\x63\x10\x4d\xae\xa0\x88\x52\xeb\xe6\x51\x3a\xbb\x2d\x29\x76\x93\x19\x78\x6f\xc1\x56\x61\x40\x2a\xd0\x26\x25\xe3\x6c\xe8\x3b\x89\x92\x09\xf8\x68\x37\x25\xe3\x38\xee\x6a\x3f\x7b\x17\xc0\x82\xca\xb3\x43\xb0\x96\x9b\xd2\x60\x35\xe2\xef\x66\xdd\x72\xff\x11\x16\xcd\x32\x02\x54\x7d\x6e\xe4\xba\x4a\x81\xd2\x83\x91\x5c\x43\x3d\x71\x89\xad\x27\x2b\x59\x55\x33\x77\x35\x09\x9a\x5e\x99\xdf\x44\x6b\xa3\xb7\xf3\x6e\x34\x5a\x9b\x2f\xc8\x59\x0c\xd7\xd7\xae\xf3\xf0\x23\x28\xa4\x03\x65\xc8\xb1\x44\xbd\xdf\x7b\x40\xa1\x4a\xc1\xe2\x8e\x40\xb2\xab\x57\xe3\x33\xf0\x72\x04\xd1\xad\x8e\xae\x7e\x0e\x10\x8a\x2a\xca\xa7\x6d\xc1\xf7\x95\xdb\xa8\x42\xe9\x4d\xe0\x2f\x7d\x09\xc5\xf1\x14\x58\x0f\xa5\x74\x92\x49\x4e\x68\x80\xbe\x4b\xcb\x52\x6d\x3a\x06\x91\x64\xc1\x11\x1e\x2a\xad\xa4\xc0\x1c\x0a\xe4\xcc\xf6\x65\x20\x3c\x93\xa4\x6c\x37\x64\xd4\x85\xdf\x36\xe3\x73\x1a\xff\x52\x0f\xa6\x21\xaf\xde\x0c\x2a\x0e\x69\xea\x3e\x81\x96\xe7\x82\x4c\x02\x93\x03\x13\x2c\xb0\x80\xeb\x5e\x0c\x6d\x53\xa4\x73\x7d\x42\xa5\x1f\x31\x47\x25\x68\x1a\xee\xe8\xba\xfc\x0f\x37\xd1\x05\x75\x77\x10\xda\x9c\x9e\x8b\xa2\x23\xf4\x4b\x22\xce\x66\x2d\x93\x0e\x17\xa6\x0f\x43\xd0\x8b\x05\x16\x53\x40\xf6\x47\xeb\x69\xbd\x6d\xbd\x79\xb9\x1f\x3b\xec\x6f\xf5\xc3\xe1\xc9\xa7\x86\xdf\xa8\xe6\xaa\x46\x13\x7d\xbd\xf5\xb5\xd6\xed\xf0\x6a\x5d\x0d\xe9\x27\x0b\x58\x0b\xc4\xc1\x97\xa5\x7c\x9d\x9c\x51\xd6\x81\x06\x6d\x88\xcf\xb5\xe5\x84\x7d\x1f\xcb\x32\xa0\xbd\x8c\xc4\x37\x47\x65\x0e\x78\xbb\xdc\xcf\xaa\xda\xb2\x5d\x03\xd1\x5a\x32\x1c\xc6\x7c\x2c\xad\x44\xb8\x20\x51\x3c\x85\xc0\x6c\x4b\xd6\xe2\x86\xe6\x30\x5e\x1e\x8a\x06\xa9\x26\x5b\xc9\x8f\x1b\x31\xc7\x7c\x7d\x8c\xde\xa1\xc3\xba\x33\x8e\x34\x60\x58\x86\xfa\x0b\x92\xb0\xbe\x65\x23\xd5\x26\x8a\xe3\x61\x05\xab\xe5\xae\x41\xb7\x2d\xad\x23\x5a\xc9\x12\x73\xf9\x2f\x35\x67\xab\xa6\xcd\xb0\x97\x9c\xd5\x12\xa5\x57\xff\x90\x60\x58\x4b\x63\xf9\xed\xb8\xf3\xde\xd7\x83\x77\xe0\x1d\x68\xc0\x12\x97\xc5\x25\x2a\xe5\x1f\x83\x9e\x24\x4e\x97\x9c\xab\x5a\xb9\x1a\x5e\xfb\x64\xf5\xf2\xe1\x3e\x5b\xb6\x06\xf1\xd4\x12\xe6\x7d\x12\x35\xea\x74\x51\x06\xaf\x26\x56\x83\x68\xda\xed\x5c\x91\xa7\x78\xaa\x82\x0d\xba\x1d\x72\x77\x90\xb3\x83\x8c\x4d\x82\x06\x9d\x15\xb5\x17\x54\x94\x93\x6d\xe7\x5e\x97\xb4\xec\xc4\xf0\x54\xf8\xbc\x6b\x47\x5d\x86\x67\xe2\x1d\xd8\x22\xb5\xcf\x63\x71\x7e\x85\xdc\xfe\xaf\xc4\x9e\x88\xe2\x8b\x0e\x65\x1b\xa5\xaf\xfa\x8f\x84\xeb\x0b\xf3\x70\xac\xc3\x08\x86\xd6\x64\x48\x09\x6a\x2e\xb7\x0d\x0c\xeb\x37\x3c\x54\xdc\xf0\x02\xda\xcd\xc0\x11\x33\xbe\xdc\xb5\xb4\xa7\xf9\x4f\xe0\xd3\xd1\x9b\x37\x6f\xba\x0b\xd9\x39\x6d\x0c\xdc\x05\x1b\xb8\x11\xa0\xcb\xe4\xf1\x12\x54\xaf\x27\x96\xb5\xfb\x51\xdd\xfd\xea\x5f\x7b\xfb\xf3\xae\xd9\xb3\x19\x7c\x48\xd3\x2a\xb9\x93\x5f\x3b\x82\xdf\x3a\x4a\xeb\x18\x1c\xd3\xf4\x4f\xda\xd7\xa7\x87\x2d\x71\xa6\xcf\x4e\x48\xe2\x2d\x8f\x84\xf7\xbb\xc7\x63\x07\x9d\x10\xfa\xc3\xe8\xbf\x00\x00\x00\xff\xff\x89\x9f\x94\x93\x75\x12\x00\x00"

func switchboardAdd_vault_capabilityCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardAdd_vault_capabilityCdc,
		"switchboard/add_vault_capability.cdc",
	)
}

func switchboardAdd_vault_capabilityCdc() (*asset, error) {
	bytes, err := switchboardAdd_vault_capabilityCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/add_vault_capability.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x47, 0x6c, 0x9d, 0xae, 0x29, 0xc3, 0xa6, 0xc7, 0xf1, 0x27, 0x43, 0x26, 0x43, 0x7d, 0xb8, 0x5e, 0xfa, 0x2d, 0x91, 0x50, 0x9, 0x2, 0x39, 0x1d, 0xa1, 0x62, 0xb6, 0xa4, 0xd0, 0x2a, 0x99, 0x26}}
	return a, nil
}

var _switchboardAdd_vault_wrapper_capabilityCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x95\x4d\x6f\xdb\x46\x13\xc7\xcf\xe6\xa7\xf8\x47\x07\x3f\x24\x10\x50\x77\xc1\xb1\x9f\xd4\x6d\x7a\xea\x0b\x12\xc1\x3d\x8f\x96\x23\x71\x13\x72\x97\xd8\x1d\x9a\x56\x0d\x7f\xf7\x62\x97\xa4\x48\xc6\x91\xe0\x43\x51\x1e\x6c\x89\x9a\xf7\xff\x6f\x67\x75\xdd\x58\x27\x58\x7d\x6a\xcd\x41\xef\x2a\xde\xda\x6f\x6c\x56\xc9\x0f\x5f\x7f\xe9\xb4\xa8\x72\x67\xc9\x15\x93\xc5\x2f\x4f\x54\x37\x97\xfd\x7e\x63\xa1\x82\x84\x1e\x34\x77\x7e\x95\x24\xeb\xf5\x1a\xdb\x52\x7b\x88\x23\xe3\x49\x89\xb6\x06\xda\x83\x20\x5c\x37\x15\x09\x63\x6f\x5d\xf8\x3a\xfb\x5d\x4a\x12\x28\xdb\x56\x05\x76\x8c\xd6\x73\x81\xdd\x11\x64\x8e\xd6\x30\xc4\x82\x8a\x02\x04\xc3\x1d\x1e\xa9\xad\x04\x9d\xa3\xa6\x61\x07\x45\x0d\xed\x74\xa5\xe5\x18\xf3\x8a\x85\x94\xac\x1d\xfc\xd4\x0c\x1c\x7b\xdb\x3a\xc5\x43\x65\x7c\x44\x17\x13\x7d\x6d\xbd\xc0\x30\x17\xc1\x4d\x95\x64\x0e\x1c\xbc\xa1\xac\x11\x47\x4a\x60\xa8\x8e\x6f\x8e\x20\xc7\xe8\x9b\xd7\xe6\x80\xbd\xb3\xf5\x2c\x1d\x24\x8c\x61\x72\x8b\xbd\x44\xb7\x8e\x8c\x04\x23\xdf\x36\x71\x70\x9d\x96\xf2\x75\x81\x21\x54\x32\x1f\xc6\x73\x92\x00\x40\xc5\xd2\x87\xfe\xcc\x8a\xf5\x23\xbb\xfb\x53\xb3\x1b\x4c\x9f\x6f\xae\x9f\x17\x7a\xe4\xa3\xf9\xcb\xed\x29\xcc\x2c\xdb\x67\xde\x6f\x00\x6a\xa5\x4c\xcf\xc9\x9f\xff\xd1\x19\x76\x19\xae\xcf\x1a\xcc\x3e\xf7\xb5\x36\x8e\x1b\x72\x9c\x7a\x7d\x30\xec\x36\x7d\xfc\x9f\xac\x73\xb6\x7b\xa0\xaa\xe5\x0c\xd7\x1f\x95\xb2\xad\x91\x6c\x6c\x6f\xac\x2d\x0a\xfa\x33\x09\xe1\x03\xe6\xb8\xe5\x41\xb7\xea\x91\xef\x87\xb9\x06\xbe\xd2\x51\xcb\xed\xb1\xe1\x0d\x8c\xae\xde\xe3\x51\x73\xd7\x7f\x0d\x7f\x6f\xce\xb3\x99\x7f\xda\x3e\x8c\xb9\x6e\xd3\x2c\x03\xf9\x77\x78\x9b\xf9\xdd\xa9\xe2\xf0\xdc\xdd\xa1\x21\xa3\x55\xba\xba\x8f\x20\x19\x2b\x18\x8a\xc5\xcc\x29\x56\x96\x07\xe2\xb0\x3c\x46\xf8\xee\xc9\x95\x35\x8a\x24\x5d\xcd\xd0\x63\x2e\x7c\x40\x47\x07\xbf\x9a\x4d\x24\x6a\x11\x7d\x2c\x36\xa6\x81\x36\xb0\xae\x60\x17\x7c\xf8\x89\x55\x2b\x01\xdd\xe5\x29\x5c\x65\xd9\x34\xfa\xf5\x1a\xbf\xb2\xcc\xf8\xdd\x5b\xd7\x51\x0c\x31\x1d\xaa\x88\x7a\xb4\xe9\x85\xfd\x9f\x07\xf5\x32\x9e\xe2\x78\xae\xf6\xf9\x19\x4c\xf1\x61\xf0\xcb\x4f\x21\x35\xfb\xfc\xc0\x72\x01\xda\x74\x31\x9f\x13\x1d\xb9\x1b\x2c\xfe\x24\x29\x97\x7d\xdc\x97\xac\xbe\x41\xef\x63\xa1\xa3\xd9\xbc\x0b\x7e\xd2\x5e\xfc\xc9\x85\xbc\x67\x27\xcb\x3c\x97\xda\xc8\x55\x48\x90\x66\xef\x17\x1e\x35\x7b\x4f\x07\xde\x60\xb5\x3d\xcd\x07\x85\x65\x1f\x79\xf0\x62\x1d\x83\x16\xca\x23\x8a\x37\x2f\xac\x5f\x14\x68\x48\x4a\x9c\xe7\xe2\xc7\x33\xc8\xc5\x7e\x11\xa7\xcd\x21\xcd\xb2\xf3\x48\xf5\xfc\x0d\xd5\xd5\x61\xe3\x69\xa3\x45\x53\xa5\xff\xe6\x61\x15\x0d\x8a\x8e\xdb\x49\x7b\xd8\xdd\x57\x56\x82\xbd\x76\x5e\xde\xad\xa6\xe8\xaf\xf1\x21\x38\xde\xb3\x63\xa3\x78\xdc\x86\x7d\x2e\xbf\xd8\x70\x8b\x29\x2f\x97\xd1\xc4\x48\x18\x19\x1d\x38\xdf\xc5\xb5\x71\xf3\xef\xad\xa8\xef\x90\x0a\x4f\xe0\x7a\x83\xf3\xce\x7d\x29\x3d\x6a\x57\x57\x57\xd3\x89\xbf\xa4\xf5\x22\x1c\x66\xf1\xc6\x81\xbe\x4d\xee\xb7\x54\xf5\xdf\x89\x3f\x68\xfe\xd2\xff\x1b\x57\xcb\xf3\x82\x84\x8f\x45\xd1\xdf\x9c\x13\xd9\x23\x0c\xb3\x21\xb4\x3e\x5c\x9e\x54\x14\xbf\x73\xd7\x9f\x84\x9a\xa5\xb4\x17\xe9\xc8\x67\xe6\x7f\xf5\x77\xfe\x52\x4c\x35\xbb\x13\x2f\x9d\xe1\xe5\xd9\x95\xe9\xbe\xf8\xff\xe2\xce\x89\x89\x6e\xd3\x57\xc8\xbf\x24\xc9\x4b\xf2\x4f\x00\x00\x00\xff\xff\x4d\x64\xc6\x9f\x4e\x09\x00\x00"

func switchboardAdd_vault_wrapper_capabilityCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardAdd_vault_wrapper_capabilityCdc,
		"switchboard/add_vault_wrapper_capability.cdc",
	)
}

func switchboardAdd_vault_wrapper_capabilityCdc() (*asset, error) {
	bytes, err := switchboardAdd_vault_wrapper_capabilityCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/add_vault_wrapper_capability.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x48, 0x98, 0xa, 0xbb, 0x16, 0xe, 0x5c, 0x60, 0xa5, 0xc4, 0x6b, 0x2, 0x55, 0x0, 0xd4, 0xa4, 0x98, 0xae, 0x2c, 0x17, 0x56, 0x30, 0xd2, 0xd, 0x13, 0xcb, 0x27, 0xfe, 0xbd, 0x84, 0xc0, 0xd6}}
	return a, nil
}

var _switchboardBatch_add_vault_capabilitiesCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x95\x41\x8f\xdb\x36\x10\x85\xcf\xab\x5f\xf1\xe2\x43\x20\x01\x0b\xf9\x6e\x64\xb3\xd8\xa4\x4d\x4f\x6d\x83\xc6\xd8\x4b\x10\x20\x23\x72\x6c\xb1\x95\x49\x81\x1c\x59\x71\x83\xfd\xef\x05\x45\x59\x96\x16\x6b\x60\x0f\xf5\xc1\x90\xc4\x99\xe1\x9b\xe1\xf7\x24\x73\x68\x9d\x17\xac\x3e\x75\x76\x6f\xaa\x86\xb7\xee\x1f\xb6\x5f\x7a\x23\xaa\xae\x1c\x79\xbd\xca\xce\x11\xbf\xfe\xa0\x43\x3b\x06\x5c\x9e\x2e\xf2\x7e\x67\x21\x4d\x42\x8f\x86\xfb\xb0\xca\xb2\xf5\x7a\x8d\x6d\x6d\x02\xc4\x93\x0d\xa4\xc4\x38\x0b\x13\x40\x10\x3e\xb4\x0d\x09\x63\xe7\x7c\xbc\x9d\xad\x4b\x4d\x02\xe5\xba\x46\xa3\x62\x74\x81\x35\xaa\x13\xc8\x9e\x9c\x65\x88\x03\x69\x8d\xc0\x47\xf6\xd4\xc0\x72\x8f\xdd\xa8\x00\x12\x25\x0c\x7b\x1e\xa9\x6b\x24\xdc\xa2\xe2\xc6\xd9\xbd\xb1\xfb\x21\x0f\x8a\xbd\x90\xb1\xf8\xfe\xa0\xb5\xe7\x10\xbe\xc7\xc7\x52\xb3\xf1\x08\x97\x8e\xe1\x39\xb8\xce\x2b\x2e\x63\xad\x6c\x2e\x2d\xa7\x94\xb8\xc1\x58\xa1\xc0\xcf\x2c\x03\x80\x86\x05\x3c\x1b\xd0\x63\x54\xf0\x99\xa4\xde\xe0\x73\x57\x35\x46\xc5\xeb\x29\xf2\x78\x5e\x0d\x1b\x7c\xbd\xac\x7f\x9b\x02\x66\x72\xfe\xe2\xdd\x06\xa0\x4e\xea\xfc\xda\x19\x95\x7f\xf6\x96\x7d\x81\xb7\x57\x03\x66\xd7\x49\x6f\xeb\xb9\x25\xcf\x79\x30\x7b\xcb\x7e\x93\xea\x7f\x70\xde\xbb\xfe\x91\x9a\x8e\x0b\xbc\x7d\x50\xca\x75\x56\xa6\x16\x17\xe2\x7f\x21\x21\xdc\x61\xce\x44\x19\xe7\xd6\x1c\xf9\xa3\xb3\xe2\x49\x49\x84\x20\x3f\xcf\x72\x7b\x6a\x79\x03\x6b\x9a\x5b\x1c\x0d\xf7\xe9\x36\xfe\xbf\xbb\x0e\x50\xf9\x69\xfb\x78\xde\xeb\x7d\x5e\x14\xa0\xf0\x06\xaf\x0b\xbf\x9f\x14\xc7\xdf\xfd\x3d\x5a\xb2\x46\xe5\xab\x8f\x03\x56\xd6\x09\x46\xb1\x98\x25\x0d\xca\x4a\x6c\x6b\xc6\x92\x75\x3c\xfb\x95\xca\x59\x45\x92\xaf\xa0\xc6\x5e\x61\x99\x75\x88\x38\x99\x98\x77\x60\x2b\x11\xac\x45\xf5\xb3\xd8\x61\x1b\x18\x0b\xe7\x35\xfb\x98\xc3\x3f\x58\x75\xc2\x90\x67\x56\x29\x57\x45\x71\x99\xfd\x7a\x8d\xdf\x38\x95\x1d\x49\x4b\xc4\xa7\x03\x41\x4b\x52\x63\xe7\xdd\x61\x88\x38\x0b\x9b\xb2\x03\x37\xbb\xf2\x45\x42\x71\x77\x39\xd2\xd2\xb3\x62\x73\x64\x3f\xe1\x0a\xcc\x05\x3c\x58\x8d\x20\xce\x33\x8c\xc4\x16\xe2\x56\xe4\x3d\x9d\xe0\x76\x68\x07\x90\x07\x21\x21\xb9\xb8\x37\x4d\x13\x4d\xdc\x52\x88\x36\x4e\x6e\x9b\xd7\x9b\xdb\xee\xc0\x52\x3b\xbd\x14\x7c\x31\x0a\xee\xf0\xf5\xdb\xb5\xc5\x92\xda\x96\xad\xce\xaf\x37\x59\xbc\xd0\x4c\x9c\x26\xc1\xf3\x8e\x3d\x5b\xc5\xa3\x3c\x24\x4b\x84\xb9\xb6\xe5\xbe\x4b\x73\xe2\x6e\xcc\x28\xe3\x60\x68\xcf\x65\x35\xd8\xe8\xdd\xff\x67\xd9\xf7\xf9\x02\xc1\x78\xc8\x1b\x5c\x4f\x4c\x32\x52\xd7\x37\x37\x37\x17\xfa\xb7\x53\x77\xd0\x8e\xc3\xe0\x83\x74\x9a\xb4\x2c\x87\x59\x3d\xb8\xea\x6f\x56\x02\x4a\xe8\x0d\x98\x5d\xb7\xc4\x6b\x54\x95\xe2\xbe\x88\x37\x76\x9f\x17\xc5\x75\x6f\x25\x23\x8e\x72\x0f\x5d\x88\xbc\x19\x31\xd4\x98\x7f\x79\x7c\x69\x53\x7a\x43\xa1\x37\x52\x27\xf3\x8c\x5a\x77\xc6\x07\x79\xb3\x1a\xcb\x0f\x7f\x4f\xc9\x48\x67\xab\xfd\x5c\xf8\xea\x41\xeb\xe4\x1a\x6a\xa9\x32\x8d\x91\xd3\x04\xc3\x6c\x10\x5d\x88\x5f\x12\xd2\xfa\x0f\xee\x07\xb0\x5e\x44\x76\x49\x47\x39\x0b\x0f\x1f\x4e\xb1\xfd\xbc\x4d\x2f\xfe\x67\x0c\xdf\x62\xfa\xb8\x8c\x17\xa3\xf7\x9f\xb2\xec\x29\xfb\x2f\x00\x00\xff\xff\x07\xc0\xa0\x9f\xa7\x07\x00\x00"

func switchboardBatch_add_vault_capabilitiesCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardBatch_add_vault_capabilitiesCdc,
		"switchboard/batch_add_vault_capabilities.cdc",
	)
}

func switchboardBatch_add_vault_capabilitiesCdc() (*asset, error) {
	bytes, err := switchboardBatch_add_vault_capabilitiesCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/batch_add_vault_capabilities.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x70, 0x86, 0xe6, 0xce, 0xa3, 0x50, 0xa1, 0x38, 0xab, 0xab, 0xe8, 0x23, 0xbc, 0x11, 0x56, 0x5f, 0xc3, 0x98, 0x6d, 0xe2, 0xb7, 0x11, 0xcd, 0xa7, 0x56, 0xdb, 0x16, 0xe0, 0x82, 0xbd, 0xdc, 0x75}}
	return a, nil
}

var _switchboardBatch_add_vault_wrapper_capabilitiesCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x55\x5d\x6f\xdb\x36\x14\x7d\x8e\x7f\xc5\xa9\x1f\x5a\x19\x08\xe4\x77\xa3\x69\x96\x76\xeb\x9e\xb6\x15\x8b\x91\x3d\x14\x05\x72\x4d\x5d\x59\xdc\x64\x52\x20\xaf\xec\x7a\x45\xfe\xfb\x40\x8a\x96\x25\x37\x1a\x32\x60\x7e\xb0\x2d\xdd\xaf\x73\xc8\x73\x48\xbd\x6b\xac\x13\xcc\x3f\xb6\x66\xab\x37\x35\xaf\xed\x5f\x6c\xee\x0f\x5a\x54\xb5\xb1\xe4\x8a\xf9\xec\x94\xf1\xd3\x57\xda\x35\x29\xe1\xfc\x76\x54\xf7\x0b\x0b\x15\x24\xf4\xa0\xf9\xe0\xe7\xb3\xd9\x72\xb9\xc4\xba\xd2\x1e\xe2\xc8\x78\x52\xa2\xad\x81\xf6\x20\x08\xef\x9a\x9a\x84\x51\x5a\x17\x1e\x07\x71\xa9\x48\xa0\x6c\x5b\x17\xd8\x30\x5a\xcf\x05\x36\x47\x90\x39\x5a\xc3\x10\x0b\x2a\x0a\x78\xde\xb3\xa3\x1a\x8a\x1a\xda\xe8\x5a\x8b\x66\xdf\x15\x36\x56\x1b\x89\x83\xc5\xa2\x4c\xe0\x20\x01\x1d\xf6\xd4\xd6\xe2\x61\x4b\x10\x0a\x5d\x96\xec\xd8\x08\x1e\xd7\xc7\x86\x1f\x41\x26\xcc\xab\xad\xd9\xc6\x21\x50\xec\x84\xb4\xc1\xe3\x5d\x51\x38\xf6\xfe\xf1\x3a\xbc\x97\x8a\xb5\x83\x3f\xaf\x0f\x1c\x7b\xdb\x3a\xc5\x79\x18\x3a\x1b\x12\xc9\xa8\xab\x5c\x21\xb5\x58\xe0\xdb\x6c\x06\x00\x35\x4b\x07\xe6\x13\x49\xe5\x57\xf8\xfc\xa9\xdd\xd4\x5a\x85\xa7\x2f\xe3\x84\x80\x2d\x24\x84\xdf\x73\x68\x30\xff\x77\x2e\x57\x00\xb5\x52\x65\x53\x5b\x98\xff\x76\x30\xec\x16\x78\x3d\x99\x30\xf8\xdf\x01\x6c\x1c\x37\xe4\x38\xf3\x7a\x6b\xd8\xad\xba\xfe\xef\xad\x73\xf6\xf0\x40\x75\xcb\x0b\xbc\xbe\x53\xca\xb6\x46\x7a\x4e\x23\xd8\x3f\x92\x10\x6e\x30\x94\x4c\x1e\x16\xaa\xde\xf3\x07\x6b\xc4\x91\x92\xa0\x91\xec\xb4\x78\x81\xde\x0a\x46\xd7\xd7\xd8\x6b\x3e\x74\x8f\xe1\xfb\xed\xb4\xbe\xf2\x8f\xeb\x87\xd3\xac\x77\xd9\x62\x01\xf2\xaf\xf0\xb2\xf4\xdb\x1e\x71\xf8\xdc\xde\xa2\x21\xa3\x55\x36\xff\x10\x55\x67\xac\x20\x81\xc5\xa0\x28\x22\xcb\xb1\xae\x18\x63\x2b\xe0\xe2\x93\x2b\x6b\x14\x49\x36\x87\x4a\x5c\x61\x98\x0b\x1f\xf4\xa3\x43\xdd\x2e\xc8\x4e\xaa\x71\xf7\x13\xd8\x38\x06\xda\xc0\xba\x82\x5d\xa8\xe1\xaf\xac\x5a\x61\xc8\x85\x93\xf2\xf9\x62\x71\x5e\xfb\xe5\x12\xf7\x62\x1d\xc7\xc6\x09\x20\x22\x42\x38\x56\xac\xf7\xec\xde\x78\x34\x51\x68\x68\x48\xaa\x30\x23\xe4\x92\x73\x74\x0c\xa6\x48\xb1\x61\xc7\x90\x97\x8c\x75\xd0\x75\x1d\x0c\xd9\x90\x0f\x96\xec\xbc\x30\x72\xc2\x8e\xa5\xb2\x45\x5f\xee\xb9\x2e\xf3\xb3\xca\x71\x83\xcf\x5f\xa6\x82\x39\x35\x0d\x9b\x22\xeb\xc5\x93\x9f\x30\x87\xf0\x8b\x58\xbe\xf1\x90\x63\xc3\xdf\xb1\x0a\x2f\x9f\xa7\x30\x6c\xfa\x5f\xe8\x44\x4f\x4e\xd1\x89\xc1\x13\x9d\xa8\xe0\x1f\x46\x2e\x88\x1b\x1e\xe4\x9a\x6a\x87\x20\x7e\x66\x01\xc1\x71\x3c\x98\x14\xf7\xa0\xa2\x09\xfd\x10\xdc\x78\xf0\xf8\x38\xc0\x4d\xaa\xc8\xbd\x58\x47\x5b\xce\x37\xd1\xb8\x6f\xff\xbf\x43\xe2\x5d\xf6\x9d\xe8\x4b\x67\x77\x2b\x4c\x17\x77\x50\xba\xdd\xbc\xba\xba\x3a\x7b\x6e\xdd\x33\x44\x61\xd9\x47\xf7\xf9\xb8\xc5\x34\x6e\x87\x41\x3f\xd8\xcd\x9f\xac\x04\xd4\xf9\x28\xca\x79\xda\x88\x2f\x41\x95\x8b\xbd\x17\xa7\xcd\xf6\xbc\x35\xcf\x38\xba\xb3\x7f\x82\xbb\x6b\xbd\x40\x1b\x2d\x9a\x6a\xfd\x37\xa7\xbb\x81\xba\x73\x11\x07\x2d\x55\x67\xd9\x84\xb5\xd4\xce\xcb\xab\x79\x6a\x1f\xbf\x9e\x3a\x61\x9f\x0c\xfe\x6d\xa4\xf3\xbb\xa2\x88\xe4\xfa\x3b\xee\x98\x69\xf6\x8b\xe7\xa4\xda\x7a\x6d\xb6\xe1\x62\xfc\x95\x0f\x51\x60\x7f\xb8\xa0\x40\xe7\xdf\x1f\x03\xb7\x7f\x53\x4b\x3e\x59\x35\xde\xe3\xa6\xbb\xa9\x2e\x7c\x7b\x8d\x51\x92\x74\xb7\xd5\x85\x1b\xae\x47\x39\xfd\xa5\x98\xfe\xf4\xc1\xe4\xf2\xa7\xd9\xec\xe9\x9f\x00\x00\x00\xff\xff\x44\xa4\x90\xa7\x95\x08\x00\x00"

func switchboardBatch_add_vault_wrapper_capabilitiesCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardBatch_add_vault_wrapper_capabilitiesCdc,
		"switchboard/batch_add_vault_wrapper_capabilities.cdc",
	)
}

func switchboardBatch_add_vault_wrapper_capabilitiesCdc() (*asset, error) {
	bytes, err := switchboardBatch_add_vault_wrapper_capabilitiesCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/batch_add_vault_wrapper_capabilities.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x70, 0xa3, 0x8e, 0x81, 0xa8, 0x77, 0x76, 0xe6, 0x73, 0x4b, 0xdf, 0xff, 0x9f, 0x64, 0x9d, 0xf8, 0x4f, 0x7, 0x1f, 0x63, 0x3e, 0x19, 0xaf, 0x40, 0xc8, 0x52, 0x70, 0x2f, 0xf9, 0x34, 0x6a, 0xb7}}
	return a, nil
}

var _switchboardRemove_vault_capabilityCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x94\x4f\x53\x9c\x40\x10\xc5\xcf\xf2\x29\x5e\xf6\x60\xe0\x02\x77\xca\x68\x25\x56\x92\x63\x2c\xb5\xbc\x37\xb3\x0d\x4c\x02\x33\xd4\x4c\x8f\xeb\xc6\xf2\xbb\xa7\xf8\x23\xb0\xa5\x24\x97\x70\xd9\xdd\xd9\xfe\xf3\xeb\xd7\x8f\xd1\x6d\x67\x9d\x60\xf7\x2d\x98\x4a\x17\x0d\xdf\xdb\x5f\x6c\x76\xd1\xbb\xc7\x77\x07\x2d\xaa\x2e\x2c\xb9\xfd\x12\xf1\xf5\x89\xda\x6e\xce\x8b\xb2\x2c\xc3\x7d\xad\x3d\xc4\x91\xf1\xa4\x44\x5b\x03\xed\x41\x10\x6e\xbb\x86\x84\x51\x5a\xd7\xff\x5c\xfd\x2f\x35\x09\x94\x0d\xcd\x1e\x05\x23\x78\xde\xa3\x38\x82\xcc\xd1\x1a\x86\x58\x38\x6e\xed\x23\xa3\x9c\x60\x20\x7d\x33\x3c\x52\x68\x64\x68\xa8\xa8\xa3\x42\x37\x5a\x8e\x28\x9d\x6d\x21\x35\x6b\x07\xbf\xe0\xc2\xb1\xb7\xc1\x29\xee\xc3\xa3\x55\xeb\xb8\x23\xa9\x73\xdc\x84\xa2\xd1\xea\x86\xa4\x4e\xf0\x1c\x45\x00\xd0\xb0\x80\x57\xb3\x3d\xf4\xdd\xae\xc7\x46\x72\xcc\x71\x3d\xf7\xbc\x38\x7f\x3e\x91\x29\xbd\x65\xc5\xfa\x91\xdd\xcb\xe5\x5c\x69\xc5\x72\xcb\x65\x0e\x50\x90\x3a\xde\x52\x37\xfd\x71\x30\xec\x12\x9c\x6f\x06\xac\xbe\x8f\xb8\x9d\xe3\x8e\x1c\xc7\x5e\x57\x86\x5d\x3e\xd6\xff\x62\x9d\xb3\x87\x07\x6a\x02\x27\x38\xff\xac\x94\x0d\x46\xe6\x09\xfb\x27\xcb\xf0\x9d\xa5\x17\xec\x3d\x11\x31\x56\xfb\xe8\x41\x63\xee\x9c\xe7\xb9\x29\xd3\x6d\x79\xf0\x69\x4a\x4d\xe7\xaa\x9a\x7d\x5a\xb1\xfc\x45\xac\x61\x17\xc9\x1b\x36\x82\xe3\x92\x1d\x1b\x35\x78\x61\xc1\xf2\x6b\x55\x4f\xc9\x4e\xe5\x5e\x68\xbc\x58\x47\x15\xa7\xc5\x20\xcc\xc5\xff\x5b\xc2\x65\x3c\x03\xbc\x3e\xbd\x88\x39\xb6\x93\x47\x94\xc1\x73\xd1\xd9\xd9\xd9\xd5\x15\x3a\x32\x5a\xc5\xbb\xfb\x79\x42\xec\x2d\x7b\x18\x2b\xe8\xc1\x19\x74\x5a\x0e\xab\x7a\xb0\xc5\x4f\x56\x02\x1a\x97\xd9\x4b\x89\xdd\x1b\xa6\x54\x59\xa3\x48\xb6\x67\x5e\x51\xa5\x62\xef\xc4\x69\x53\xc5\x49\xb2\x59\x68\x97\x62\x85\xdb\x06\x2f\xd0\x46\x8b\xa6\x46\xff\xe6\xe9\x3d\x9c\xbc\x83\x83\x96\x1a\xd2\xdf\x0d\x13\x6b\xa9\x9d\x97\x0f\xbb\x64\xda\xf9\xcb\xf8\xc1\x4f\xac\x82\xf0\xe2\xd2\x2c\xc3\xed\x78\x01\x6c\xda\x74\xa5\x43\xf0\xda\x54\xc3\x69\x3a\x5e\x1b\x83\x33\xe3\x04\x2d\x4b\x6d\x5f\x7d\xf2\x8e\x4b\x4e\xc2\x97\x2e\xf9\xbf\xbc\xbe\xd0\xbf\x44\x7f\x02\x00\x00\xff\xff\x54\xe0\x3f\xb2\x4e\x05\x00\x00"

func switchboardRemove_vault_capabilityCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardRemove_vault_capabilityCdc,
		"switchboard/remove_vault_capability.cdc",
	)
}

func switchboardRemove_vault_capabilityCdc() (*asset, error) {
	bytes, err := switchboardRemove_vault_capabilityCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/remove_vault_capability.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2f, 0x27, 0xd6, 0xf2, 0xd2, 0x7e, 0xb3, 0x48, 0xa, 0x37, 0x73, 0x36, 0x95, 0xaa, 0x44, 0x94, 0x44, 0x55, 0xb9, 0x77, 0x48, 0xc8, 0xe7, 0x49, 0x0, 0x79, 0xf3, 0x79, 0xb6, 0x38, 0xab, 0x3d}}
	return a, nil
}

var _switchboardSafe_transfer_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x55\x4d\x6f\xe3\x36\x10\x3d\xc7\xbf\xe2\xad\x0f\x89\x04\xec\xca\x97\xa2\x87\x20\x1f\xdd\xdd\x36\x3d\x15\x58\xec\xa6\xe9\x99\xa2\x46\xd6\x74\x65\x52\x20\x47\x71\xdc\x20\xff\xbd\xa0\xa8\xcf\x7c\x14\xde\x4b\x7d\xb0\x41\x93\xf3\xe6\x71\xde\xe3\x0c\xef\x1a\xeb\x04\xeb\x9b\xd6\x6c\x39\xaf\xe9\xd6\x7e\x27\xb3\x5e\xbd\xfa\xf7\xb7\x3d\x8b\xae\x72\xab\x5c\x31\x9d\xf8\xed\x41\xed\x9a\xff\x8e\xfb\x83\x44\x15\x4a\xd4\x1d\xd3\xde\xaf\x57\xab\xcd\x66\x83\xdb\x8a\x3d\xc4\x29\xe3\x95\x16\xb6\x06\xec\xa1\x20\xb4\x6b\x6a\x25\x84\xd2\xba\xb0\x9c\xed\x4b\xa5\x04\xda\xb6\x75\x81\x9c\xd0\x7a\x2a\x90\x1f\xa0\xcc\xc1\x1a\x82\x58\x78\x32\x05\x24\xa4\xf3\x61\xa9\x8c\x95\x8a\x1c\x94\xd6\xb6\x35\xd2\xe5\x94\xca\xd9\x76\x5b\x41\xc1\x4f\x37\x41\xeb\xd9\x6c\x21\x15\xa1\xa0\xc6\x7a\x16\xec\x48\x2a\x5b\x20\x6f\x05\x39\x95\xd6\x8d\x3b\xe1\xe0\x9e\xb0\xe7\xba\x06\x3d\x34\x35\x6b\x96\xfa\x00\x5d\x91\xfe\x8e\x7d\x45\x5d\x46\x47\x9a\xf8\x9e\xcd\xb6\xcb\xa9\x55\xa3\x72\xae\x59\x0e\xe1\x86\xb9\x75\xce\xee\x55\x5e\x13\xac\x83\xb1\x02\x65\x0a\x70\x89\x03\xf9\x40\xc1\x80\x25\xc2\x0f\x5c\x02\xaf\x7b\xd5\xd6\x12\x2e\x15\x16\x11\x9e\xdc\x0c\x39\x0b\x99\x56\xb3\x62\x25\x62\xcf\xf1\xb1\x28\x1c\x79\xff\x1e\x6a\x17\x2a\x70\x8e\x3f\x6f\xf8\xe1\xe7\x9f\x52\x3c\xae\x56\x00\xd0\x89\x10\xf0\x4a\x72\x64\x34\x0d\x09\x62\xb6\xd2\xd9\x5d\xb7\x6c\xd4\x81\xdc\x99\x1f\x0b\x19\x42\x6b\x92\x78\xec\x2b\x95\xe7\x50\xad\x54\xc9\x42\xf0\xec\x2f\x96\xaa\x70\x6a\x9f\xe2\x74\xee\x8f\xec\x2e\x04\xc5\xf4\x8d\xa3\x46\x39\x4a\x3c\x6f\x0d\xb9\x1e\xe5\x53\x57\x9f\x3b\x55\xb7\x94\xe2\xf4\x63\x4c\x39\x32\x5e\xa4\xfe\x55\x89\xc2\x25\x16\xf0\x8e\xbc\xad\xef\xe9\xb3\x35\xe2\x94\x96\xe0\xb7\x24\xfc\xd7\x3a\x4d\xb7\x87\x86\xce\x61\xb8\x7e\x8f\x7b\xa6\x7d\x5c\x86\xef\x8b\xb7\xbd\x9a\xdd\xdc\xde\x0d\xb9\xae\x92\x34\x85\xf2\xef\x70\xdc\xf1\xeb\x91\x71\xf8\x5c\x5f\xa3\x51\x86\x75\xb2\xfe\xdc\x39\x38\x28\xdf\x93\xc5\x2c\xa8\x63\x96\x75\xb2\x2c\x9f\x15\x9e\x7d\x32\x6d\x8d\x56\x92\xac\xa1\xfb\xbb\xc2\x10\x15\x9d\xf3\x39\xc4\xed\xc8\x44\xef\xcc\xd1\x07\xb2\x5d\x1a\xb0\x81\x75\x05\xb9\x10\x43\x0f\xa4\x5b\x21\xc8\xb3\x57\xb9\x4e\xd3\xa9\xf4\x9b\x0d\x7e\x27\x81\x7a\x69\x99\xa8\xe1\x99\x87\x17\xeb\xa8\x88\x02\x8d\x71\x9e\xea\x32\x1b\xec\x82\xcb\xfe\x74\x16\xce\xaa\x2d\x65\xf1\x4d\x5c\xfc\xa8\x8b\xae\x92\x60\xd1\xf3\xc9\x0c\x03\xe0\x17\x25\x55\xba\x3a\x39\x39\x99\x8a\x7e\x3b\x72\x44\x61\xc9\x77\xe5\xef\xa8\x42\x2d\x0a\x8d\x0e\x19\x36\xff\x9b\xb4\x40\x49\xff\x00\xa4\xc2\xdb\x12\xbc\x9a\x3f\x13\xfb\x4d\x1c\x9b\x6d\x92\xa6\x6f\x8b\x17\x95\xee\x89\xed\x5a\x2f\x60\xc3\xc2\xaa\xe6\x7f\x82\x14\xc4\x63\xfb\xc2\x9e\xa5\x8a\xea\xf4\xe4\x4a\x76\x5e\xde\x8d\xfa\x3c\xc5\x9f\x41\xc7\xc7\x17\xaa\xf5\xad\x83\x1b\x26\x23\x67\x1e\x4d\x9b\xd7\xac\x47\xfc\x88\xba\x78\x65\xe3\x69\x5c\x62\x4b\xd2\x3f\xc6\x44\x6c\xba\x7c\x8d\x9e\x8c\xc4\xba\x5d\x7c\x58\x6a\x9d\xed\x7b\x01\x93\xa1\x05\xc5\xdf\xa3\x3c\x35\x27\x3b\x1b\x3c\x5f\x3a\xde\x4b\x02\xd3\x6e\x34\xd8\x18\x9a\x8d\x3d\x92\xc9\x0f\x46\x3b\x7d\x7c\x6b\xa8\x65\x2f\xf2\x3c\x5d\x25\x2f\xe4\x7b\x33\x3a\x86\xfc\xa0\xfd\x16\x68\xf3\x8b\xce\x27\xc7\x71\x4e\x3c\x82\xd8\xff\xe8\x4b\x60\xa1\xf2\x9d\xaa\xb9\x50\x5d\x8b\xa1\x69\x44\xce\x2f\x99\x1f\xfa\x51\xec\x55\x49\x71\x10\x7c\x3a\x84\x06\x3d\xc2\x70\x39\x18\x33\x46\xf7\xed\x64\x21\x7f\xf6\x3c\x3a\x91\xa9\xd3\xff\xf2\x5a\x1b\x49\xc3\x7c\x99\xd7\xe1\x19\x60\x3f\x89\xfb\x76\x73\xf1\x61\xf4\xfb\x54\xc1\x27\x50\xed\xe9\x19\xcc\x66\x83\xaf\x24\xad\x33\x28\x5b\x13\x5b\xf3\xd8\x27\x87\xf2\x71\x39\xcd\x73\x8e\xc6\xd0\xd6\x94\xbc\x6d\x43\x1b\x15\x3b\xec\x76\x55\xeb\x60\x96\x4c\x17\xaf\xed\x18\xa2\x43\xb3\x78\x5a\xfd\x1b\x00\x00\xff\xff\x21\xb1\xe7\x9a\xf9\x09\x00\x00"

func switchboardSafe_transfer_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardSafe_transfer_tokensCdc,
		"switchboard/safe_transfer_tokens.cdc",
	)
}

func switchboardSafe_transfer_tokensCdc() (*asset, error) {
	bytes, err := switchboardSafe_transfer_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/safe_transfer_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd1, 0xa5, 0xcf, 0x36, 0xa4, 0x19, 0xcb, 0x4b, 0xfa, 0x49, 0x32, 0x68, 0xf, 0xb2, 0xe6, 0x5a, 0x79, 0x30, 0xea, 0xcd, 0x56, 0x1f, 0xba, 0x5c, 0x59, 0xe6, 0xf2, 0xb7, 0x49, 0x1e, 0x44, 0x96}}
	return a, nil
}

var _switchboardScriptsGet_vault_types_and_addressCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x52\xc1\x6e\x9b\x50\x10\xbc\xf3\x15\x53\x0e\x15\xef\x82\xef\x51\xdb\x28\x97\xf6\x1a\x25\x56\x7b\xcd\xe3\xb1\xc0\xb6\xf0\x16\xed\x5b\x6a\xa5\x96\xff\xbd\xc2\xd8\x0e\x56\x63\xa9\x1c\x97\x9d\xd9\x99\x37\xc3\xc3\x28\x6a\xc8\xbf\x4e\xb1\xe5\xaa\xa7\xad\xfc\xa2\x98\x67\xef\x8e\x9f\x77\x6c\xa1\xab\xc4\x6b\x9d\x67\xd9\x66\xb3\xc1\xb6\xe3\x84\x14\x94\x47\x83\x92\xaf\x13\xac\x23\x24\x13\xa5\x1a\xbf\xfd\xd4\x1b\x82\x1f\x7d\xc5\x3d\x1b\x53\x42\xa3\x32\xc0\x23\xbd\x11\x41\xe2\x11\x33\xfa\x94\xa8\x86\x0f\x41\xa6\x68\x33\x79\xe6\x43\xa0\x94\x0a\xdf\xf7\x0e\xcd\x14\x31\x78\x8e\xc5\x69\xe1\x0e\x0f\x75\xad\x94\x92\xbb\xc3\x7e\xfb\x3a\xd2\x65\x70\xc0\x3e\xcb\x00\x60\xb3\xc1\x37\x32\x78\x28\x35\xa4\x14\x03\xc1\x64\xd1\xb7\x3a\x1f\x24\x36\xa2\x03\xc7\x76\xfe\xbb\x72\xf8\x38\x55\x3d\x87\x23\x53\x4f\xb6\xc6\x3c\x51\x83\xcf\x68\xc9\x1e\x16\x2d\x67\x4d\xae\x5c\x7b\x2d\x2b\x51\x95\xdd\xa7\x8f\xfb\x5b\x6f\x58\xfe\x73\xed\xf0\xa5\x38\x1e\x3c\x7f\x37\x91\xcb\xfa\xa3\xb7\xce\x5d\x00\xf7\xf7\x18\x7d\xe4\x50\xe4\xdb\xd9\x23\xb7\x91\x14\xb5\x50\x42\x14\x5b\x32\x81\xbf\xa6\x5c\xfb\x7d\x0b\xea\x15\xde\x4e\x99\x58\x87\xfc\x4a\x51\x19\x24\x06\x6f\xc5\x7f\x28\x2b\x4d\x9e\x4d\x39\xb6\x85\x73\xef\x72\xe4\x25\x56\x4a\x87\x29\x19\x38\xb2\xb1\xef\xf9\x0f\xcd\x02\x58\xcf\x7d\xc0\x8e\xad\x83\xcd\x6d\x93\xea\x27\x05\x43\xc3\x9a\xec\x43\xee\xdc\x25\xec\x27\xb2\x49\x97\x32\x29\xa5\xb9\x7a\xd2\xe0\xa5\x25\xfb\x3e\xf7\x70\xee\x48\xfa\xc1\xd6\x9d\x6a\x52\xb8\x97\x23\x50\x17\xd4\x75\xbc\xe5\x6d\x54\x96\x1d\xb2\xbf\x01\x00\x00\xff\xff\x8c\x10\xdc\x80\x34\x03\x00\x00"

func switchboardScriptsGet_vault_types_and_addressCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardScriptsGet_vault_types_and_addressCdc,
		"switchboard/scripts/get_vault_types_and_address.cdc",
	)
}

func switchboardScriptsGet_vault_types_and_addressCdc() (*asset, error) {
	bytes, err := switchboardScriptsGet_vault_types_and_addressCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/scripts/get_vault_types_and_address.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x95, 0xfc, 0xea, 0xf2, 0xf3, 0x54, 0x51, 0xbc, 0x65, 0xb4, 0x98, 0x36, 0x5d, 0xd2, 0x2b, 0xb1, 0x70, 0xb8, 0x64, 0xe5, 0x2d, 0x34, 0xba, 0x83, 0x51, 0x8b, 0x98, 0xd5, 0x3e, 0x46, 0x22, 0x7f}}
	return a, nil
}

var _switchboardSetup_accountCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x54\x5d\x6b\xe3\x38\x14\x7d\xf7\xaf\x38\xdb\x87\x92\x40\x36\x79\x2f\x6d\x61\x37\xb0\xb0\x6f\x65\xda\x99\xf7\x6b\xf9\x26\x16\x55\x24\x23\x5d\xb5\x35\x21\xff\x7d\x90\x1d\xbb\x76\x26\xce\x74\x3e\x60\x44\xa1\x91\x25\x1d\x9d\x73\xcf\xb9\xd2\xbb\xca\x79\xc1\xd5\x7f\xd1\x6e\x75\x6e\xf8\xc9\x3d\xb3\x7d\x7c\xd5\xa2\xca\xdc\x91\x2f\xae\xb2\xb3\x3b\xae\xb2\x6c\xb5\xc2\x53\xa9\x03\xc4\x93\x0d\xa4\x44\x3b\x0b\x1d\x40\x10\xde\x55\x86\x84\xb1\x71\x3e\x4d\x07\xeb\x52\x92\x40\xb9\x68\x0a\xe4\x8c\x18\xb8\x40\x5e\x23\x41\x91\xad\x9d\x65\x88\x4b\x7f\x54\x14\x20\x0c\x58\xc0\x73\x70\xd1\xab\x76\x43\xc9\xda\x83\x94\x72\xd1\x0a\x82\x6b\x51\xa5\xe4\x1a\x8a\x6c\x02\xf3\xac\x58\xbf\x30\x76\xd1\x88\xae\x0c\x63\x73\xe4\x0e\x49\xe4\x03\x62\xd0\x76\x0b\x42\xfa\x67\x18\xfb\x91\xb6\xe5\xa7\xf6\xb8\x3f\x64\x43\xee\xfb\x2c\x03\x80\xca\x73\x45\x9e\x67\x41\x6f\x2d\xfb\x1b\x50\x94\x72\xf6\xaf\xf3\xde\xbd\x7e\x21\x13\x79\x81\xff\x43\x88\xfc\x28\xce\xd3\x96\xd7\x54\x51\xae\x8d\x96\x7a\xed\xac\x78\x67\x0c\xfb\x05\x1e\x62\x6e\x74\x28\xdf\x17\x17\x78\xa4\x17\x3e\x9e\xff\x6c\xab\xd3\xf5\x39\xae\xff\x69\xf5\xce\x3b\x1e\x69\xac\x56\x58\x97\xac\x9e\xa1\x37\x49\x7f\x5f\x13\x32\x9e\xa9\xa8\x51\x52\x98\xa8\xe3\x02\x9e\x25\x7a\x0b\x26\x6f\xea\x74\x3e\xb8\x1e\x36\xcd\x1a\x75\xcb\xd0\xaa\x58\xe6\x8d\xbe\xdb\xeb\xa9\x94\x2c\x07\xbf\xef\x67\x1b\xef\x76\x37\x98\xde\xdb\x82\x3e\x90\x94\x73\xfc\x75\x07\xab\x0d\xf6\xfd\xe5\x69\xb4\xdc\xfa\x4f\x87\xd1\xe2\x48\xbd\xe7\x14\x34\x82\xe5\xd7\xf3\x79\x21\x5b\xa0\x8a\x02\x2d\xd0\x56\x1c\x8e\x8a\x7a\x90\x13\xa1\x81\x5e\x78\x36\xba\xee\xf6\xef\x69\x25\xaa\xb9\x7e\xf0\x65\x36\x5f\x8c\x0e\x8b\xfb\x58\x1d\xfa\x43\xf3\xb1\xb9\x86\xc9\x83\xdf\x74\x90\x94\xd7\x3e\x0f\x9a\x03\x52\x23\x91\x75\x56\x2b\x32\xa8\x48\xca\x70\xaa\x49\x0d\xb6\x2f\x63\x17\xaa\xd9\x24\x9f\x2e\xf6\x4d\x3a\x55\x63\xcf\xaf\x42\x0e\xa1\xce\xfa\xd6\x20\x28\xf4\xb8\xf5\xb1\xc1\x47\x66\xf2\x5b\xe5\x9a\x86\x4d\x0b\x05\xa7\x89\x0c\xd1\x36\xd1\x76\xcf\x8b\x77\x71\x5b\x36\xfb\xa6\x7a\x3a\xc5\x80\xfd\x86\xd4\x7b\x06\x0c\x4b\xf7\x64\xf8\x35\x55\xb8\x3b\x2b\xb7\x8b\x88\x4e\xed\x7d\x7b\x3d\x85\x7f\x3f\x8e\x4f\x1a\x3f\x94\x80\x36\x05\x97\xea\xde\x55\x7d\x40\x79\x01\x92\x0b\x49\xbb\xe4\xec\x6f\xb0\x25\x77\xd2\xd4\x7c\x08\xb5\xff\xc8\x53\xd1\xf2\x39\x34\x4d\x9a\xd0\xa7\x01\xce\xf9\x17\x46\x06\x86\x53\xd8\x9f\x74\xf2\x22\xd5\x05\xfe\xb8\xeb\xe7\x74\x7e\xc7\xfe\x6f\xba\xf0\x90\x65\x87\xec\x6b\x00\x00\x00\xff\xff\x0c\x98\xe2\x14\xfa\x07\x00\x00"

func switchboardSetup_accountCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardSetup_accountCdc,
		"switchboard/setup_account.cdc",
	)
}

func switchboardSetup_accountCdc() (*asset, error) {
	bytes, err := switchboardSetup_accountCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/setup_account.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa6, 0xad, 0xd5, 0x2a, 0x2a, 0xca, 0x5c, 0xb4, 0x7e, 0xa8, 0xbf, 0x89, 0x5e, 0x54, 0xfc, 0x30, 0xbe, 0xa4, 0xb4, 0xb7, 0x82, 0xf2, 0xcd, 0x40, 0x3d, 0xaa, 0x5b, 0x47, 0xe1, 0xf0, 0xe2, 0x2f}}
	return a, nil
}

var _switchboardSetup_royalty_accountCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x58\x4d\x73\xdb\x36\x10\x3d\x47\xbf\x62\xa3\x43\x4a\xce\xa8\xd4\xdd\xe3\x24\x4d\xdc\x3a\x93\x4b\xeb\x89\xed\xf4\xbc\x02\x97\x22\x6a\x08\xe0\x00\x4b\xab\xaa\xc7\xff\xbd\x03\x50\xa4\xa0\x0f\xca\x94\xa3\x4e\x71\x48\x64\x12\x78\xd8\x8f\xb7\x0f\x58\xca\x45\x65\x2c\xc3\xf8\xba\xd6\x73\x39\x53\x74\x67\x1e\x48\x8f\x47\x07\x1f\xdf\x2e\x25\x8b\x72\x66\xd0\xe6\xd1\x0c\x65\x96\xbb\x8b\x24\xf2\xfa\xd1\x68\x34\x9d\x4e\xe1\xae\x94\x0e\xd8\xa2\x76\x28\x58\x1a\x0d\xd2\x01\x02\xd3\xa2\x52\xc8\x04\x85\xb1\xfe\xcf\xe8\x3d\x97\xc8\x20\x4c\xad\x72\x98\x11\xd4\x8e\x72\x98\xad\x20\x60\xa1\x5e\x19\x4d\x50\xd4\x4a\xad\xc0\x11\xd7\x15\xa0\x06\x14\xc2\xd4\x9a\x03\x94\x25\x41\xf2\x51\xea\x39\xcc\x0c\x97\xe0\x0d\x04\xd4\x39\xdc\xdf\xfe\x7a\x05\xec\xed\x72\x80\x0c\x5c\x12\x38\x5c\x50\x40\xad\xea\x99\x92\x02\x2a\xe4\x12\x12\x0f\x22\xb5\x63\xd4\x82\xc2\x34\x6b\x56\xa8\x58\x92\x83\x69\x33\x71\xfa\x85\x34\x59\x29\xae\xef\xbe\x85\xcd\xc8\x86\xa5\x69\xc0\xba\x77\x7e\x6f\xbf\x0e\xf3\xfc\x77\x5a\x7e\xc7\x5a\xf1\x9f\x16\xab\x8a\xac\xfb\xbc\xba\xf1\x7b\xb8\x4d\x28\x61\x41\x5c\x9a\x1c\x50\x29\xb3\x74\xad\x7f\x6c\xbc\xdb\x01\x4f\x60\x85\x33\xa9\x24\xaf\x60\xb9\x46\x01\x57\x8b\x12\xd0\x41\x08\xf3\xb5\xb1\x4b\xb4\xb9\x7f\xee\xcd\x26\xcc\xc1\x14\x8d\x01\x82\x6b\x54\x8d\xd3\xf0\xe8\xed\xc8\x46\x71\x9c\x93\x14\x9e\x46\x23\x00\x00\x45\x0c\x45\x9b\xca\x60\xf1\x55\xb7\xed\x05\x6c\x7e\x5f\xbe\x7b\xda\xe2\x44\xd6\x06\xe0\xf9\xc3\x06\xa7\xcd\xff\xeb\x70\x00\xa0\x83\x8a\xe2\xf4\x8d\x8a\x0b\x00\xac\xb9\x4c\xfa\x58\x99\xfd\xb1\xd4\x64\x53\x78\xd7\x3b\x21\xfa\xdd\xf8\x5d\x59\xaa\xd0\x52\xe2\xe4\x5c\x93\xbd\x68\xf0\x3f\x1b\x6b\xcd\xf2\x3b\xaa\x9a\x26\xf0\xd5\xb9\x9a\x6e\xd9\x58\x9c\xd3\xc6\xfe\x2b\xa3\xd9\x1a\xa5\xc8\x4e\xe0\xc6\x73\xc2\x95\x9b\x97\x13\xb8\xc5\x47\x5a\xaf\xbf\xd7\xd5\xee\xfb\x14\x3e\x35\x7c\xed\xc2\xef\x87\x23\x55\x64\x7d\x39\x80\xf7\xd0\x98\x98\x75\x74\x90\xe4\xb2\x39\xf1\x91\x48\x26\x2d\x5d\x3b\xd4\xf6\x5d\xda\xed\xea\xc7\xc7\x8f\x50\xa1\x96\x22\x19\xdf\xf9\xa2\x08\xfb\x40\x6e\xc8\x81\x36\x0c\x8e\x8d\x25\x40\xe8\x2a\x1d\x82\x6d\x31\x2f\xd7\xe5\x14\xca\x67\xbc\x05\xed\x47\x26\x8c\x16\xc8\xc9\xb8\xd7\x9c\x0c\xa2\x8d\x17\xb5\x63\x90\x5a\xb2\x44\x25\xff\x09\x15\x28\x6d\x57\xe1\x4b\xc9\x25\xb0\x17\x14\x33\xfb\x8b\x84\x67\x9b\x75\xfc\x76\x9c\xa6\x9b\x48\x4e\xa7\x70\x55\x92\x78\x00\xd9\x96\x41\xb3\x16\x95\x25\xcc\x57\x50\xa2\xd7\x9f\xa0\x07\xc1\x95\x6e\xa1\x2c\xda\x28\xbb\x26\xe1\xd9\x2c\x50\xe1\xf2\x5d\xa7\x69\x59\x58\xf1\x21\x29\xac\x59\x5c\xc0\xce\xe3\x35\x4d\x7c\x89\xa7\xf0\xfe\x3d\x68\xa9\xe0\x69\x2b\x1e\xd3\x29\x7c\x2d\x7c\x58\x27\x20\x2c\x79\xf5\x43\xd0\xb4\x8c\x8c\x01\x4b\xce\xd4\x56\x50\x10\xad\xaa\x66\x90\x3e\x1c\x6c\x60\x6d\xd3\x16\xde\x8e\xb9\x0e\x1f\x29\xb9\xfc\x79\x63\x56\xb3\xc9\x6f\x8b\x8a\x57\x01\x3d\x09\x2a\x70\xb7\xaa\xe8\x02\xfc\xbf\x97\xbf\xec\x79\x96\xa6\x13\xd8\xcb\xe1\xb0\xc1\xe6\x68\x48\x3a\xd4\xe7\xde\x54\xd9\x56\x4f\x23\x76\x49\x07\x4a\xea\x07\xca\x21\x1c\x0d\xd4\x04\xcb\xc6\xca\x1b\x67\xf0\xed\xe9\x85\x72\x8a\xbb\xc9\x8e\x83\x2d\xca\x4d\x3d\x0b\x4e\xbe\xcd\x84\x77\x28\x48\xeb\x4e\xe6\x65\x01\x92\x7f\x72\x3b\xe9\x5f\x9f\x3d\x91\xc3\x6c\x36\x6e\x3e\x6e\x11\x14\xd6\xba\x18\x14\xfd\x0a\xab\x1e\x59\x68\xe9\x20\xbd\x76\x1d\x20\xef\x90\x1c\xc1\x86\x5d\x5b\xd8\x6b\x35\x4b\x5a\x13\x26\x80\xbc\x97\xf5\xdd\xa0\xec\x39\xd0\x66\xef\xff\xf5\x21\xb2\xe2\xa0\x1b\x9f\x51\xf9\x4b\xc0\x9e\x17\xcf\x3b\xa2\xdd\x73\xe0\xbd\x4e\xb4\x87\x86\xf2\x44\xb9\x8b\x8e\xbe\x4e\x62\x86\x08\xdf\x80\xa3\xf4\xe5\xfa\x69\xe5\xb2\x17\xec\xd5\xc2\x79\xc8\xad\x1f\x50\xce\x7e\x13\x9b\x5d\xa3\x27\xc9\xa9\x3a\x19\xd4\x71\x48\x04\xce\xa5\x93\x27\x4b\x64\x8f\x3b\xe7\x61\x41\xff\xb5\x2d\xa2\xb8\x92\xe2\xcc\x2a\x1a\x13\xe4\x0c\x32\x34\x24\x10\xfd\x9e\x9e\x49\xa5\x4e\x08\xe4\x00\x2e\x45\x08\xcd\xc2\x50\x3f\x05\x1f\x20\x99\xef\x81\xd0\xd2\x86\x67\x31\x68\xe8\xa8\xa2\x68\x47\x4d\xd5\xa0\xf3\xb9\x9b\x34\xec\xfe\x7e\x9c\x6d\xdd\x38\x92\x8d\x43\xbc\x7b\xe5\xcd\xe7\xe0\xf8\x2f\x38\xbc\x47\xe1\xad\x16\xe9\x34\x36\x6f\x61\x9d\x35\xe8\xed\x38\x77\x29\x1c\x76\xf6\x85\xaa\x78\xb1\x1a\xbe\x10\x03\x82\xa5\x82\x2c\x85\x9e\xdf\xec\x72\x79\xfb\xbc\xdf\xee\x4a\x37\xa1\xde\x39\x3b\xcf\xd7\xab\x9e\x70\x41\x3d\xe9\xa4\x1d\xbd\x79\xf3\x66\x60\xf3\x17\xe3\x6d\x69\xea\xba\x0d\x1b\xd6\x02\x0e\x31\x2b\x63\x73\xcb\x56\xea\x79\x92\xa6\xfd\xbd\xe4\x19\x5b\xc6\xe7\xe6\x3f\xfa\x9b\x44\xcd\x14\x15\xeb\x74\x0a\x9f\xf2\x3c\xf8\xb5\x5f\x93\xb1\xd2\xd5\xe1\x93\x4f\xf4\xb9\x67\xfd\x51\xe7\x18\x6d\xb2\x68\x7a\x22\xa2\x8f\x24\x47\xbf\x03\xa4\x3f\x00\xd9\x73\x4b\x4d\xdb\x20\x3c\x8f\xe0\xdf\x00\x00\x00\xff\xff\xe0\x3e\x88\x8b\x0f\x14\x00\x00"

func switchboardSetup_royalty_accountCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardSetup_royalty_accountCdc,
		"switchboard/setup_royalty_account.cdc",
	)
}

func switchboardSetup_royalty_accountCdc() (*asset, error) {
	bytes, err := switchboardSetup_royalty_accountCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/setup_royalty_account.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x8f, 0x5c, 0x5, 0xa4, 0xfc, 0xf0, 0x2a, 0xba, 0x71, 0xff, 0xc5, 0xbe, 0x67, 0xd4, 0x3e, 0xf3, 0x58, 0x37, 0xa5, 0xb1, 0x89, 0xf5, 0x39, 0xc9, 0xd3, 0xdb, 0xda, 0x11, 0x4e, 0x70, 0x67, 0x93}}
	return a, nil
}

var _switchboardSetup_royalty_account_by_pathsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x58\x4f\x6f\xe3\xb6\x13\x3d\xaf\x3e\xc5\xac\x0f\xf9\xc9\x80\x7f\xf2\xdd\x48\x76\x9b\xa4\xcd\x62\x2f\x6d\xb0\x49\xb6\x87\x45\x0e\x63\x69\x64\xb1\xa1\x49\x81\x1c\xc5\x75\x83\x7c\xf7\x82\xd4\x1f\x4b\xb6\x14\xdb\xa9\x8b\xea\x62\x4b\xe4\x3c\xce\x0c\x1f\x1f\x39\x14\xcb\x5c\x1b\x86\xd1\x4d\xa1\x16\x62\x2e\xe9\x5e\x3f\x91\x1a\x05\xbd\x9f\xef\x56\x82\xe3\x6c\xae\xd1\x24\xad\x1e\x52\xaf\xb6\x8d\x04\x72\xf5\x29\x08\xa6\xd3\x29\xdc\x67\xc2\x02\x1b\x54\x16\x63\x16\x5a\x81\xb0\x80\xc0\xb4\xcc\x25\x32\x41\xaa\x8d\x7b\x6d\xb5\x73\x86\x0c\xb1\x2e\x64\x02\x73\x82\xc2\x52\x02\xf3\x35\x78\x2c\x54\x6b\xad\x08\xd2\x42\xca\x35\x58\xe2\x22\x07\x54\x80\x71\xac\x0b\xc5\x1e\xca\x50\x4c\xe2\x59\xa8\x05\xcc\x35\x67\xe0\x1c\x04\x54\x09\x3c\xdc\xfd\x7c\x0d\xec\xfc\xb2\x80\x0c\x9c\x11\x58\x5c\x92\x47\xcd\x8b\xb9\x14\x31\xe4\xc8\x19\x84\x0e\x44\x28\xcb\xa8\x62\xf2\xdd\x8c\x5e\xa3\x64\x41\x16\xa6\x65\xc7\xe9\x17\x52\x64\x44\x7c\x73\xff\xcd\x0f\x46\xc6\x9b\x8e\x3d\xd6\x83\x75\x63\x3b\x3b\x4c\x92\x5f\x69\xf5\x1d\x0b\xc9\xbf\x1b\xcc\x73\x32\xf6\x6a\x7d\xeb\xc6\xb0\x9b\x54\xc2\x92\x38\xd3\x09\xa0\x94\x7a\x65\xeb\xf8\x58\xbb\xb0\x3d\x5e\x8c\x39\xce\x85\x14\xbc\x86\x55\x85\x02\xb6\x88\x33\x40\x0b\x3e\xcd\x37\xda\xac\xd0\x24\xee\xbb\x73\x9b\x30\x01\x9d\x96\x0e\xc4\x5c\xa0\x2c\x83\x86\x67\xe7\x47\x14\x04\xed\x44\x87\x98\x24\x86\xac\x9d\xc1\x65\xf9\x67\x0c\x2f\x41\x00\x00\x20\x89\x4b\x0b\xe7\xaf\x9d\xc1\x8f\x5b\x1f\xb9\x7b\x7b\xec\x76\xb8\x5f\xe7\xe4\x3a\xb8\xdf\x47\xd7\xd2\x34\xb7\xa2\xfc\x46\xe9\x0c\x00\x0b\xce\xc2\x21\x4e\x45\xbf\xad\x14\x99\x31\x9c\x0d\x76\x68\xfd\x2f\x9d\xcc\x0d\xe5\x68\x28\xb4\x62\xa1\xc8\xcc\x4a\xfc\x2b\x6d\x8c\x5e\x7d\x47\x59\xd0\x04\xbe\x5a\x5b\xd0\x1d\x6b\x83\x0b\xba\x6e\x12\x79\xad\x15\x1b\x2d\x25\x99\x09\xf8\xb8\x6c\xb6\x69\x9c\xc0\x1d\x3e\x53\x65\xff\xa0\xf2\xed\xf6\x31\x5c\x96\x6c\x6b\x72\xe5\x9e\xe9\x14\x6e\x4b\x6f\x7c\xe6\x1d\x1d\xac\xa7\x1d\xbb\xf4\x00\x1a\x83\x6b\x0b\x2b\xc1\x99\x6f\xef\x65\x65\x82\x8c\x0d\xa0\x25\x99\x46\x9b\x19\x80\x0b\xf8\xf1\x38\xd4\x18\x39\x5a\xa8\x24\xac\xe9\x99\xd6\x8b\xb2\xa6\xe7\x78\x9f\x65\xb3\x66\x23\x4f\xd7\xda\xee\xb6\x98\xdf\x7a\x62\xef\x9a\xfb\x69\x1f\xf2\xca\x37\xd6\xd8\xee\xe5\xfc\xa7\x46\x28\xca\x11\x3e\x85\xe3\x41\xd4\x2d\xc3\xae\x6b\xde\xb0\x9d\xf6\xeb\x8c\xe2\x27\x10\x35\xe3\x4b\x21\x40\x69\x08\x93\x35\x64\xe8\xa4\xc6\x27\xd9\x5b\x37\x86\x22\x85\x92\x35\x91\x2d\xd9\x11\xcd\x3d\x6f\xce\xcf\x76\xc6\x4b\x8d\x5e\xce\x60\xeb\x73\xc5\x29\x9f\x1d\xb8\xb8\x00\x25\x24\xbc\x34\xe8\x95\x6b\x5f\x53\x50\x9a\x27\x10\x1b\x72\x42\x87\xa0\x68\xd5\x72\x06\x0c\x59\x5d\x98\x98\x3c\x13\xf2\x82\x41\x30\x08\xc5\x1a\x2a\x9f\x3a\x78\x5b\xee\x5a\x7c\xa6\xf0\xfc\xff\x1b\xb7\xca\x41\x7e\x59\xe6\xbc\xf6\xe8\x61\x93\xd0\x19\x0c\x66\x72\x02\x9d\x31\x0e\x7f\x58\xbf\x99\x92\x06\xf5\x75\x78\xae\x4c\xad\x9d\x2d\x85\x13\x16\xa4\x50\x4f\x94\x80\xdf\x06\xa8\xcc\x96\x69\xab\x6c\x7b\x0a\x3f\x56\x49\x69\x10\x04\xd9\x68\x41\x7c\x7e\xf6\xd2\x51\x91\xa8\x26\xf4\xeb\xa7\x63\xe2\xdd\xb7\x2c\x3e\x46\xb1\x0b\x28\x1c\xef\x4e\xbd\x48\x41\xf0\xff\xec\xd6\xfc\x57\xfb\x4c\x2b\x60\xd6\x9b\x30\x9f\x3b\x0c\x85\x4a\x45\xbd\x38\x5c\x63\x0e\x17\xd0\x17\x6d\xcd\x07\xe1\x94\xae\x87\xbd\x87\x4c\x12\x6c\xe8\xd5\xc1\xae\xb4\x2f\xac\x5d\x98\x00\xf2\xce\xb4\x0f\x6a\x45\x1d\x40\x3d\x7b\xff\x6d\x0c\x2d\x2f\x7a\xc3\xb8\x42\xe9\x36\xfc\x9d\x28\x5e\xbb\x2a\x95\xd6\x56\xde\x68\xb3\x2b\x0c\x44\xf6\x36\x17\xf7\xca\xee\x91\x3a\xd7\xda\x20\x1b\x6d\x39\x44\xf1\x0e\xd8\x70\xf7\xaf\x9b\x5a\x27\x07\xc1\xde\xad\x98\x7d\x61\xfd\x03\xc9\x1c\x76\xb1\x1c\xb5\xf5\x25\x3c\x56\x20\xbd\x2c\x1e\x92\x81\x1e\x7e\xbd\x4b\x1f\x8f\x96\xc6\x81\x70\x4e\xc3\x82\xe1\xc3\x5d\x8b\xda\xd5\x31\xf2\x84\xea\xd9\x26\xc8\x09\xe4\xe7\x90\x44\x0c\x47\x7a\x22\x75\x3a\x22\x91\x07\x70\xa9\x85\x50\x1a\xfa\xf5\x93\x72\x0f\xc9\x84\x3f\xae\xd2\x86\x67\x6d\x50\x5f\x35\xb5\xb2\xdd\x2a\x9c\x0e\xda\x97\x9b\x4e\x87\x9d\xf2\xdf\x66\x5b\xf3\xbc\x31\x1b\x7d\xbc\x7b\xe7\x91\xa7\xf7\xf9\x37\x38\xbc\x43\xe1\x4e\x21\x75\x1c\x9b\x3b\x58\x27\x4d\x7a\xfd\x9c\x7a\x29\xf4\x07\xbb\x67\x55\xec\x5d\x0d\x5f\x88\x01\xc1\x50\x4a\x86\x7c\x5d\xaf\xb7\xb9\xdc\xdd\xe7\xbb\xb5\xeb\x26\xd5\x5b\x7b\xe7\xe9\x2a\xda\x23\x0e\xa6\x47\xed\xb4\xc1\x87\x0f\x1f\x3e\x7f\x86\x1c\x95\x88\xc3\xd1\xbd\x8b\xd9\x47\x02\x89\x26\x4f\x4e\xbf\x73\x3a\x6a\x76\xf0\x3a\x9a\xaa\xe7\x7f\x50\xcc\xf5\xad\x89\xbf\x25\x19\xed\xb8\x1b\xc5\x5a\xc5\xc8\x07\xb1\x21\x62\x7d\xc7\x46\xa8\x45\xbb\x0a\xdc\x06\x1a\x45\xd0\x72\x77\x59\x58\xb7\xd3\x0b\x16\x28\xc5\x5f\xbe\xca\x16\xa6\x39\x07\x55\x85\xb5\xb0\xb5\xaf\xa9\x30\x96\x3f\x8e\x2a\xf8\xaa\x0a\xa1\x3f\x29\x2e\x98\x36\x75\xfb\x74\x0a\x97\x49\xe2\xa3\xea\xe8\xdf\x2e\x3b\xa0\xf0\xd7\x3a\x83\x57\x3a\xc1\x20\x77\xa2\x41\x9b\x30\x2f\xef\x56\xb6\x6a\xf2\x63\x8f\x1c\xe5\xfd\xcb\x56\x0d\x3d\x81\xe6\x6a\xa7\xfa\x53\x9d\x26\x5f\x83\xe0\x35\x80\xbf\x03\x00\x00\xff\xff\x14\x19\xb4\xd9\xf8\x13\x00\x00"

func switchboardSetup_royalty_account_by_pathsCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardSetup_royalty_account_by_pathsCdc,
		"switchboard/setup_royalty_account_by_paths.cdc",
	)
}

func switchboardSetup_royalty_account_by_pathsCdc() (*asset, error) {
	bytes, err := switchboardSetup_royalty_account_by_pathsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/setup_royalty_account_by_paths.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x9, 0x8e, 0x4d, 0x7b, 0xf6, 0x2, 0xf4, 0xa2, 0x16, 0x83, 0x39, 0x56, 0x83, 0xf5, 0xb1, 0x41, 0x65, 0x17, 0xe2, 0x7a, 0x94, 0xad, 0xf9, 0xcb, 0x86, 0xf0, 0x74, 0x21, 0x21, 0x17, 0xcd, 0x4d}}
	return a, nil
}

var _switchboardTransfer_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x55\x4d\x73\xdb\x46\x0c\x3d\x5b\xbf\xe2\x45\x07\x87\x9c\x71\xe9\x4b\xa7\x07\x8d\x3f\x26\x4d\xea\x9e\x32\x93\x49\x5d\xf7\x0c\x91\x90\x88\x86\xda\x65\x77\x41\xc9\xaa\xc7\xff\xbd\xb3\xcb\x25\x45\xc9\x71\xeb\xea\x60\x9a\x20\x80\xf7\x76\xf1\x00\xc8\xa6\xb5\x4e\x31\xbf\xeb\xcc\x5a\x96\x0d\xdf\xdb\x6f\x6c\xe6\xb3\xc1\xfc\xcb\x23\x6d\xda\x17\xd6\x23\xe7\xcf\xac\x54\x91\xd2\x83\xf0\xce\xcf\x67\xb3\xcb\xcb\x4b\xdc\xd7\xe2\xa1\x8e\x8c\xa7\x52\xc5\x1a\x88\x07\x41\x79\xd3\x36\xa4\x8c\x95\x75\xe1\x75\xf2\x5d\x6b\x52\x94\xb6\x6b\x2a\x2c\x19\x9d\xe7\x0a\xcb\x3d\xc8\xec\xad\x61\xa8\x85\x67\x53\x41\x03\x9c\x0f\xaf\x64\xac\xd6\xec\x40\x65\x69\x3b\xa3\x11\x53\x6b\x67\xbb\x75\x0d\x82\xdf\x89\x96\xf5\xd2\x92\xab\x2e\x40\x1e\x8d\x35\xeb\xf0\xd4\x9a\xf7\xa8\x69\xcb\xf0\xac\xe8\xda\x60\x10\x37\x75\x07\x99\xaa\xf7\xa0\xaa\x0a\x9f\xd1\x3a\xdb\xb2\x43\x49\x2d\x2d\xa5\x11\xdd\x07\x78\x89\x88\xe9\xa4\xd1\xd7\xb1\xf7\xb0\xab\x18\xe2\xb8\x64\xd9\x1e\xd8\x5d\x44\x2b\x6d\xc2\xff\x21\x3a\x9e\x7b\x15\xbe\x9b\x1e\xe3\x4b\xb7\x6c\xa4\xfc\x42\x5a\xc7\x9b\x09\xa6\x35\x1b\x76\x52\xe2\xee\xfe\x90\x6e\x27\x4d\x83\x25\xa7\xc3\x32\x5a\x72\xb4\x61\x65\xe7\x23\x9b\xc9\x75\x66\x6a\x17\xf8\xd0\xb3\xba\x48\xc8\x0b\xfc\x7e\x27\x8f\x3f\xfd\x78\x31\x26\x0c\x80\x8b\x09\x78\x8e\xa7\xd9\x0c\x00\xd2\xb1\xbc\xac\x0d\xbb\xf7\x1e\x5b\xea\x9a\xc8\x7c\x27\x5a\x57\x8e\x76\x58\x39\xbb\x89\xae\x0d\x2b\xbc\xed\x5c\xc9\x0f\xc1\x69\x01\xea\xb4\xce\x8e\xf4\x51\xfc\x91\xa2\x72\x9c\x4f\xe5\x54\xc4\x88\x1e\xb1\x75\xdc\x92\xe3\xac\x87\x4c\x59\x7e\xb6\xce\xd9\xdd\x03\x35\x1d\xe7\x38\xff\xd0\x5f\xe6\x48\x72\x40\x8f\xe4\x3e\x91\x12\xae\x71\x94\xde\xb1\xb7\xcd\x96\x3f\x5a\xa3\x8e\x4a\x0d\xf2\xcc\x82\x2d\x90\xbd\xdf\xb7\xbc\x80\x91\xe6\x02\x5b\xe1\x5d\xff\x1a\xfe\x5e\xbd\x2e\xed\xe2\xee\xfe\x61\xc0\xba\xc9\xf2\x1c\xe4\xdf\xe1\x6d\xee\xb7\x23\xe3\xf0\xbb\xbd\x45\x4b\x46\xca\x6c\xfe\x31\x0a\xde\x58\x45\x22\x8b\x49\x50\x64\x56\xc4\x4a\x1c\x77\x21\x4e\x7e\x45\x69\x4d\x49\x9a\xcd\x51\xa6\xb3\xc2\x30\x57\xb1\x51\x24\xc4\x6d\x38\x08\xaf\x3e\xce\x3e\x90\x8d\x30\x10\x03\xeb\x2a\x76\x21\x86\x1f\xb9\xec\x94\xa1\x27\x4d\x3c\xcf\xf3\xc3\xd5\x5f\x5e\xe2\x57\x56\x10\x1c\xaf\xd8\xb1\x29\x63\x9b\xea\x54\x36\x5e\xad\xe3\xaa\x2f\xd0\x18\xe7\xb9\x59\x15\x13\xc5\xe0\x3a\x05\x14\xc1\x9d\xd6\x5c\x2c\x63\xd9\xaf\xfe\xaf\x90\x6e\xb2\x20\xca\xc5\x41\x0f\x43\xc2\x28\xed\xd9\xd9\xd9\xd9\xe1\xde\x0f\xea\x46\x65\xd9\xc7\x0a\x44\xb6\xa0\xa3\xbb\x46\x4f\xd1\x2e\xff\xe4\x52\x41\x9a\xda\x4e\x6b\xbc\x5e\x85\xef\xe2\x17\x6a\x7f\x53\x27\x66\x9d\xe5\xf9\xeb\xf5\x2b\x26\x6d\x87\x4d\xe7\x15\x62\x44\x85\x1a\xf9\x9b\xd3\xac\x4a\x23\x25\x76\x62\x5f\xa0\x44\x6e\x25\xce\xeb\xbb\xb1\x44\xcf\xfd\x63\x28\xe5\xd3\x8b\xc2\xa5\x41\x25\xad\xb0\xd1\xf7\x1e\x6d\x1c\x03\x63\xfe\x3e\xeb\x51\xa3\x8d\xde\xb8\xc6\x9a\x35\xf5\x63\xa6\xf6\x4d\xaa\x98\x62\x7d\x4d\x03\xe8\x34\x7d\x34\x7e\xe5\x15\xae\x0f\xee\xc5\x38\x79\x85\xfd\xa0\x8d\xf3\xa7\x63\x61\x0c\x09\x9f\x6f\xb2\xe9\x70\xcb\xff\xb3\xed\xfa\x7c\xa0\x91\xd2\x4b\xe2\x47\x48\x49\x10\x62\xc6\x8b\x7a\x5d\x08\x6a\xa7\x55\x3f\x34\x29\x69\x92\xd0\x68\x9b\x72\x7e\xab\x52\x3e\xd3\x37\x86\xef\x1c\x63\x6f\x3b\x90\x63\xfc\xd5\xb1\xdb\x4b\xd8\x74\x66\xdc\x48\x71\xad\xd6\xe4\x31\xff\x97\x64\xf4\xdd\x33\xa6\x15\xd9\xef\xbf\x66\x3f\xa8\xdf\xb7\x5c\xca\x4a\xb8\x8a\x87\x28\x4e\x67\xc2\x27\x6e\xad\x97\xde\x75\xd8\x16\x66\x58\xdc\x62\x5e\x48\xc1\x9d\x4a\x61\x22\x83\xa2\xea\x93\xa5\xc6\xbe\xfa\xe1\x74\x76\x14\x03\x42\x36\xac\xb8\xfe\x39\x69\x82\xe7\xd9\x3f\x01\x00\x00\xff\xff\xe7\xcd\x22\x19\xe1\x08\x00\x00"

func switchboardTransfer_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardTransfer_tokensCdc,
		"switchboard/transfer_tokens.cdc",
	)
}

func switchboardTransfer_tokensCdc() (*asset, error) {
	bytes, err := switchboardTransfer_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/transfer_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb0, 0xd0, 0xd5, 0x25, 0xc5, 0xd7, 0x2c, 0xc4, 0x83, 0x89, 0xa9, 0xf, 0x82, 0x8b, 0x38, 0x9a, 0xa4, 0x3, 0x94, 0x3a, 0x59, 0x15, 0xa4, 0x7f, 0xb7, 0xa0, 0x42, 0xec, 0xd0, 0x5d, 0x72, 0x66}}
	return a, nil
}

var _tokenforwarderChange_recipientCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x92\xcd\xae\x9b\x30\x10\x85\xd7\xf1\x53\x4c\x59\xa4\x90\x05\xec\xa3\xfb\xa3\xdb\xaa\xe9\xb2\x57\xd1\x55\xf7\x83\x19\x8c\x55\x62\xa3\xf1\x50\x5a\x45\x79\xf7\x8a\x9f\xb8\x24\x61\x05\xe3\xe1\xcc\x39\xdf\xb8\xd8\xed\x94\xfa\x68\x6c\x00\x61\x74\x01\xb5\x58\xef\x40\x37\xe8\x0c\x05\x90\x86\x80\x49\xdb\xce\x92\x13\xa8\x3d\x03\x82\xf8\x5f\xe4\xc6\xf7\x01\xb9\x22\x1e\xcf\x7d\xcf\x9a\x94\x78\x40\xa8\x6c\x5d\x13\x8f\xdd\xa8\xb5\xef\x9d\x28\xb5\x2b\x94\xb2\xa7\xce\xb3\x40\x72\xe8\x9d\xb1\x65\x4b\x1f\xa3\x48\x12\xcb\xdf\xfe\xe0\xa9\x7b\xa8\x4e\x9f\x87\x79\x90\x75\x26\x51\x6a\xe5\x31\x75\x34\x1c\xaf\xd6\xf6\xf0\x56\x55\x4c\x21\x64\x70\x56\x0a\x00\xa0\x63\xea\x90\x29\x0d\xd6\x38\xe2\x3d\x60\x2f\x4d\xfa\xc5\x33\xfb\xe1\x27\xb6\x3d\x65\xb0\x7d\x9b\x0d\xc6\x5f\xc6\xa7\x28\xe0\x3b\xc9\x35\x37\xd9\xdf\xc4\xa0\xb1\xc3\xd2\xb6\x56\xfe\x4e\x04\xc6\xb3\x25\x1b\x94\x64\x9d\x89\x2c\x2a\x10\x1f\x95\x5a\x92\x15\xba\x67\x30\x24\xcb\xc0\x1b\xe7\x59\x1e\xe5\x2d\x85\xdc\x90\x3c\x6d\xcf\x37\x94\xf2\xe3\x62\xe4\xf2\x92\xae\x39\xc5\xfa\x7b\x5f\xb6\x56\xbf\xa3\x34\xd9\x43\x10\x04\xa6\x69\x1f\x9a\x40\xfc\xe4\x7d\x26\xf2\x39\xfc\x5f\xe1\x8d\xe7\x58\x3d\x52\x0d\xcf\x4b\x77\x1e\xc4\x33\x1a\xca\xcb\x89\xe0\xd3\x44\xf3\x6e\x3d\xf9\x8f\xc1\x11\x67\xb0\xbd\xaf\x1f\xae\x8a\x2f\x69\xcd\xfe\xb4\x87\x62\x51\x2b\x68\x15\x27\x76\x65\x6a\xb3\xd9\xbc\xbe\x42\x87\xce\xea\x34\xf9\xea\xfb\xb6\x02\xe7\x05\xe6\xd9\x8f\x81\xfc\x70\x97\xe7\x53\xb2\x02\xb1\xce\x93\xcf\xf7\x3a\xc2\x4f\xe3\x82\xb2\xa9\xff\xa2\x2e\xea\x5f\x00\x00\x00\xff\xff\xfd\x77\x6b\x63\x11\x03\x00\x00"

func tokenforwarderChange_recipientCdcBytes() ([]byte, error) {
	return bindataRead(
		_tokenforwarderChange_recipientCdc,
		"tokenForwarder/change_recipient.cdc",
	)
}

func tokenforwarderChange_recipientCdc() (*asset, error) {
	bytes, err := tokenforwarderChange_recipientCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tokenForwarder/change_recipient.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x80, 0xa6, 0x29, 0xbd, 0x62, 0x6b, 0xaf, 0x7e, 0x9b, 0xb4, 0xa5, 0xf3, 0xd2, 0x7, 0x11, 0x6d, 0x8, 0xed, 0x54, 0xe7, 0x1c, 0x3b, 0xdd, 0xce, 0xeb, 0x3a, 0x5, 0xf7, 0x4d, 0x69, 0x5a, 0x38}}
	return a, nil
}

var _tokenforwarderCreate_forwarderCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x55\x4f\x6f\xe3\xb6\x13\xbd\xf3\x53\xcc\xcf\x87\xfd\xd9\x81\x23\xa3\xff\x2e\x46\xb2\xc1\xd6\xdb\x14\x0b\xb4\xc5\xa2\xc9\xe6\xda\x1d\x93\x63\x93\x5d\x99\x14\xc8\x91\x15\x63\x91\xef\x5e\x90\x94\x64\xc9\xce\x06\xe9\xa5\x3e\x04\x91\xc8\x99\x79\xf3\xde\x9b\xd1\xe2\xe2\x42\x88\x7b\x6d\x02\xb0\x47\x1b\x50\xb2\x71\x16\x4c\x00\x04\xa6\x5d\x55\x22\x13\x6c\x9c\x8f\x8f\x83\x73\xd6\xc8\x20\x5d\x5d\x2a\x58\x13\xd4\x81\x94\x60\x07\x81\x18\xea\x0a\xd0\x02\x4a\xe9\x6a\xcb\xc0\x2e\x06\x37\xe8\x15\x28\xaa\x5c\x30\x4c\x0a\xd8\x7d\x21\x1b\xe2\x19\x5a\xc7\x9a\x3c\x78\x92\x64\xf6\xe4\x0b\x21\x3e\x6c\x00\xed\xc1\x59\x82\x40\x56\x85\xe1\xe5\x58\xc7\xff\x3f\xc0\x6d\xce\x48\x1e\xfe\x6c\xe3\xe6\x82\x35\xf5\x4f\xd0\x98\xb2\x84\xbf\xeb\xc0\x7d\x71\xd6\x2e\xd0\x20\x57\xbc\xfe\x80\x75\xc9\xb9\x13\x8d\x01\xd6\x44\x56\xc4\x0e\x30\xa4\x63\x4f\xd2\x54\x86\x2c\x03\x5a\x05\xb4\x33\xf1\x1f\xa0\x7d\x7c\x93\x82\x8c\x55\x46\x22\x53\x10\x8d\x36\x52\x27\x74\x5d\xc1\xd8\xa5\xee\x0a\x16\x2d\xc1\x0d\x1e\xe6\x60\x62\x7f\xe0\x36\x9b\x4b\xa9\xd1\x58\x08\xe4\xf7\x46\x12\x34\x68\x39\x41\xdb\x39\x6b\xd8\x79\x68\xb4\x8b\x32\xb4\x09\x8d\xdd\x8a\x23\x7c\xc3\x73\x30\x0c\x12\x2d\x34\xc8\x52\x67\x58\xe9\x28\x10\x41\xa3\xc9\xd3\x00\x00\x48\xdc\x11\x6c\xbc\xdb\x15\x42\xdc\x31\x55\xed\xcd\xac\x56\x96\x2a\x40\x63\x58\xe7\x80\xbe\x0b\xbf\x14\xe2\xbb\x02\xee\x35\xc1\x6d\x6d\xb7\x66\x5d\x12\xdc\xa7\x1b\xd2\x59\xf6\x28\x23\x0b\x4c\x7e\x83\x92\x20\xe8\xe4\x07\x2c\x3d\xa1\x3a\x44\x5f\x28\xaa\x4a\x77\x20\x05\xc1\xed\x28\x81\x12\xdf\xe7\x6c\x58\x55\xa5\x91\x18\xf3\xf1\x38\x5f\x9b\x65\x10\x5d\x88\x1f\x72\xd0\x40\x91\xd6\x5e\xed\x65\x8d\x7b\x02\x6c\x05\x8d\x66\xe5\xe4\xe7\x9c\xd8\x13\x32\x29\x01\x00\x49\xc8\xc0\xce\x93\x02\x63\xc1\x70\x48\x4f\xb8\xa5\xdc\x3b\x42\x55\xaf\x4b\x13\x34\xa9\xde\x4b\xe2\xc7\x02\xde\x27\x20\x89\xcf\xcf\xa9\xfb\xdb\x5e\x93\x42\x2a\xf9\xf9\x08\x3e\xb9\x54\x99\xcd\x86\xfc\x00\xa6\xf8\xa9\x88\x9e\x05\x04\x4b\x0d\xbc\xcb\x2f\x97\xb0\x4a\xc8\x52\xda\xae\x1f\xeb\xfc\x0e\xcb\xf2\x30\x4f\x70\x59\x93\x05\x5f\xdb\x5c\x39\x37\xf2\x57\x2f\x4d\x2e\x3d\x18\xca\x1c\xb4\x25\x66\x63\xb7\x30\x1a\x88\x28\xfd\xa8\x50\x36\xf0\x89\xd1\x0b\x71\xb1\x10\xc2\xec\x2a\xe7\x19\x26\x9d\xe0\xa9\xe3\x49\xff\xfa\x97\x47\xdc\x55\x67\x6f\x4f\x68\x99\x3c\x9f\xe5\x77\x62\x54\xc8\xf8\x60\xa8\x09\x13\x21\x06\xe0\xa7\xdd\x0a\x58\xc2\x3b\xa5\x3c\x85\x30\x83\xaf\x22\x75\x54\x79\xaa\xd0\xd3\x34\x98\xad\x8d\xe7\x58\xb3\x9e\xfe\xec\xbc\x77\xcd\x03\x96\x35\xcd\xe1\x43\x08\x35\xdd\x65\x29\x57\x58\xe1\xda\x94\x86\x0f\xab\xa8\x8a\x2b\x4b\xf2\x73\xf8\x98\x85\x3d\x1e\xce\xe1\x0e\xf7\xd4\xc6\x7f\xb2\xd5\xe9\xf9\x0c\xde\xb4\x42\xf5\x38\xe2\xaf\x24\x86\x7d\xb4\xd9\x7b\x64\x84\x6b\x18\xb2\x51\x78\x0a\xae\xdc\xd3\xaa\x75\x43\xec\x72\x1a\xdf\xd5\x5e\xd2\xfd\xa1\xa2\x25\x58\x53\xce\x61\x6f\xa8\xc9\x8f\xf1\xef\xd5\xb7\x19\x2a\x6e\xef\x1f\xba\x5a\x6f\xa7\xb3\x19\x60\xf8\x1f\xbc\xee\xfa\x4d\x8f\x38\xfe\x6e\x6e\xa0\x42\x6b\xe4\x74\xb2\x4a\xf3\x62\x1d\x43\x0b\x16\x06\x41\x09\x59\x1e\xb5\xb1\xca\x70\xf2\x2b\xa4\xb3\x12\x79\x3a\x39\x3a\xdf\x12\xa9\xbc\x9a\x62\xdc\x2e\x2f\xc9\x71\xf6\x0e\x6c\x2a\x13\x07\xd0\xa5\x1d\xce\x0e\xe8\x91\x64\x9d\x46\x61\xfc\x19\x9a\xcc\x66\x47\xea\x17\x0b\xf8\x95\xb8\x73\x6c\xf6\xb5\xec\xf5\x6a\xc7\xfe\xe8\xf0\x35\xc5\x29\x18\xac\x63\x37\x12\xf1\xb8\x4b\xae\xe3\xc8\xb4\x5a\xf7\x2e\x9c\x15\x7d\x6a\x43\xa1\xd8\x12\x5f\xbd\xf9\x3a\xa2\xbe\xe8\x86\xeb\xe9\xed\xb4\x77\x44\xd1\xc5\x7f\x44\xd6\x63\xec\x83\x69\xef\x47\x38\x2f\xa4\xb8\xbc\x0c\x77\x5f\xa5\xd3\x09\x55\xae\x9b\xe6\xc1\x97\xe0\xcc\x8e\x70\x75\x09\x67\xab\x29\x55\xfc\x83\x9a\xfe\x7b\x39\xed\xbb\x5e\x1e\x09\x98\xf5\xd9\xf2\x80\x15\xed\x4e\x2c\x22\xb0\xe9\xd5\x65\xca\x3f\x07\x76\x4b\x58\xb4\x47\x0b\x1a\xd8\xa3\xcf\x3e\xee\xf7\x93\x2d\x8d\xfd\x92\x80\xd3\xa3\x09\x69\x27\x1d\xe5\x3a\xad\x39\x62\xbb\xee\xc6\xf1\x55\xc4\xfe\xd6\x95\x89\xcb\xf5\xc8\xd1\x73\x26\x19\xf1\x96\x3e\x0f\x9d\x88\x2b\xac\xe0\xfa\x59\x30\x1d\x1b\x26\xee\x98\x97\x4c\x70\x36\x25\x2f\xb3\x35\xba\x7e\xa6\xc1\x08\x42\xc7\xc6\x29\xe2\x39\x20\x2f\xe1\x5f\x73\xd4\x43\x48\x4b\x51\xbe\xc8\x4f\x7f\xf7\xf5\x04\x9d\xda\xf0\xa4\xdc\x7f\xc7\xd4\x10\x7b\xa6\x6a\x91\xce\xe5\xb7\xec\x1b\xb3\x3e\x89\x27\xf1\x4f\x00\x00\x00\xff\xff\x14\x98\x99\x06\x13\x0b\x00\x00"

func tokenforwarderCreate_forwarderCdcBytes() ([]byte, error) {
	return bindataRead(
		_tokenforwarderCreate_forwarderCdc,
		"tokenForwarder/create_forwarder.cdc",
	)
}

func tokenforwarderCreate_forwarderCdc() (*asset, error) {
	bytes, err := tokenforwarderCreate_forwarderCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tokenForwarder/create_forwarder.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xdd, 0xb2, 0x37, 0x11, 0x8d, 0xf4, 0xc4, 0x1b, 0x61, 0x52, 0x13, 0x1f, 0xef, 0x32, 0xf5, 0x7, 0x80, 0xca, 0xe7, 0xa0, 0xf2, 0x8a, 0xbc, 0xd0, 0x5b, 0x77, 0x1d, 0xf2, 0xdb, 0x46, 0x5a, 0xc2}}
	return a, nil
}

var _tokenforwarderScriptsIs_recipient_validCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xce\xb1\x6a\x03\x31\x0c\x06\xe0\xdd\x4f\x21\x32\x14\x1b\x8a\x1f\xe0\x68\x0b\xe9\x90\x39\x94\xbe\x80\x4e\xd6\x25\x26\x8e\x15\x64\x99\x0c\x21\xef\x5e\x7a\x47\x87\x2b\xa7\x49\xc3\xaf\x5f\x5f\xbe\xde\x44\x0d\x76\xdf\x72\xe1\x7a\x10\xbd\xa3\xa6\x5c\x4f\x3b\xe7\x90\x88\x5b\xf3\x58\x4a\x80\xa9\x57\xb8\x62\xae\x1e\x53\xd2\x01\xf6\x29\x29\xb7\xf6\x0a\xb6\xbe\x3a\xa2\x9d\x07\x38\xf6\xb1\x64\xfa\xdd\xc3\x00\x9f\x22\x05\x1e\x0e\x00\xa0\xb0\xc1\xb4\x64\x59\xbf\x78\x82\x77\x38\xb1\xed\x89\xa4\x57\x9b\x9b\xc3\x9c\xdb\x98\x48\x78\xc3\x31\x97\x6c\x99\x5b\x1c\x45\x55\xee\x6f\x2f\x8f\x7f\xe8\x78\xf8\x6b\x5f\x08\xcf\x0f\xbf\x01\x0c\x6e\xfe\xa2\x6c\x5d\xeb\x0a\x14\xe9\xcc\x74\xf1\xc1\x3d\x7f\x02\x00\x00\xff\xff\x63\xb3\x87\xb4\x16\x01\x00\x00"

func tokenforwarderScriptsIs_recipient_validCdcBytes() ([]byte, error) {
	return bindataRead(
		_tokenforwarderScriptsIs_recipient_validCdc,
		"tokenForwarder/scripts/is_recipient_valid.cdc",
	)
}

func tokenforwarderScriptsIs_recipient_validCdc() (*asset, error) {
	bytes, err := tokenforwarderScriptsIs_recipient_validCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tokenForwarder/scripts/is_recipient_valid.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa1, 0xd5, 0x8d, 0x4, 0x81, 0x73, 0xb6, 0xfa, 0xe1, 0x31, 0x67, 0x35, 0x66, 0x5d, 0x6c, 0xb5, 0x1f, 0x3c, 0x61, 0x81, 0x36, 0x95, 0x6f, 0x71, 0xb8, 0x3, 0xfd, 0x72, 0x60, 0x53, 0x8a, 0xeb}}
	return a, nil
}

var _transfer_many_accountsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x56\x4d\x6f\xe3\x36\x10\xbd\xeb\x57\x4c\x74\xc8\x4a\x40\x57\xbe\x14\x3d\x18\xf9\x40\xba\xdb\xf4\x14\xa0\x48\xdd\xf4\x50\x14\xd8\xb1\x34\xb2\xd8\xc8\x24\x41\x8e\xec\xa4\x81\xff\x7b\xc1\x0f\xc9\x92\x3f\xb6\x89\x0e\x09\x4c\x91\xf3\xde\xcc\x7b\x33\x94\x58\x6b\x65\x18\xd2\xfb\x4e\xae\xc4\xb2\xa5\x85\x7a\x26\x99\x26\xfd\xf2\x2f\x2f\xb8\xd6\x47\xab\x93\xcd\x0f\xc4\x58\x21\xe3\x93\xa0\xad\x4d\x93\x64\x36\x9b\xc1\xc2\xa0\xb4\x35\x19\x0b\xec\xb6\xb8\x7f\x80\xd0\x0a\xcb\xa0\x6a\xc0\xaa\x32\x64\x2d\x59\xb0\x9a\x4a\x51\x0b\xaa\x40\x48\xe0\x86\xe0\x5b\x7c\x77\xb7\x56\x9d\xe4\x07\xd4\xdf\x40\xa3\xc1\x35\x31\x99\x24\x61\x17\x16\x4b\x16\x4a\x66\x87\x1b\xe7\xf0\x76\x17\x96\xe6\xf0\xc7\xbd\x78\xf9\xe9\xc7\x5d\x0e\x6f\x49\x02\x00\xe0\x28\xdd\x2f\x9e\xb0\x6b\xf9\x2b\x32\xc2\x3a\x52\x86\x8d\xa0\x2d\xd4\xca\x78\x6c\x4f\x15\x96\x24\xe4\x0a\x3a\x4b\x95\x3f\xda\x12\xc3\xa6\x3f\x38\x87\xf3\x99\x17\x23\x80\x3d\xea\xa2\x21\xf0\xcb\x60\xc8\xaa\xce\x94\x04\xdc\x20\x43\xa3\xda\xca\xee\x51\x6d\x58\x45\x43\x11\x9f\x63\x01\xcd\x21\x8d\x47\xaa\xe7\x80\x1d\x37\xd9\x84\x4a\xf1\xa7\xe0\xa6\x32\xb8\xcd\xe1\x72\xac\x59\xe1\xc1\x03\x1f\x6d\x48\xa3\xa1\xcc\x8a\x95\x24\x13\xa3\xfc\xac\x8c\x51\xdb\x27\x6c\x3b\xca\xe1\xf2\xae\x2c\x5d\x39\x5d\xe1\x20\x3e\x96\xda\xba\x18\x2a\x00\xd7\x30\x09\xef\xb2\x6a\x37\xf4\x45\x49\x36\x58\xb2\xab\x44\xd6\x67\xba\x78\xd5\x34\x07\x29\xda\x1f\x7c\x9d\xc3\x4f\xf7\xf7\xea\x7d\x55\xbc\xc9\xf2\x1c\xd0\x5e\xbc\xb3\xe8\xb7\x03\x65\xf7\xdc\xde\x82\x46\x29\xca\x2c\xfd\xa2\xba\xb6\x02\xa9\x82\x04\xed\x86\x26\x56\x70\xcc\x0a\x2f\xd3\xd4\xea\x70\xf0\x14\xa5\x92\x25\x72\x96\x42\x19\x73\x05\x49\x54\x79\x67\x0b\x77\x6e\x4d\x92\xbd\xa0\xe3\xe8\x0f\x13\xa3\x09\x09\xca\x54\x64\xdc\x19\x7a\xa1\xb2\x63\xe7\x06\x61\x61\xe4\xeb\x22\xcd\xf3\x64\x40\x9f\xcd\xe0\x57\x62\x40\x30\x54\x93\x21\xe9\xec\xa3\x3c\x4a\x10\xf1\x93\x05\xcb\xca\x50\x15\xcc\x71\x42\xb4\x47\xaa\xe1\x3a\xee\x2e\xdc\x5e\x5c\x51\xb1\xf4\xa2\x5f\x7d\xd4\x46\x37\x59\x6d\xd4\x7a\x7e\x60\x89\x3e\xea\x6f\xc8\x4d\x7e\x46\x83\xc5\xc0\x18\x2a\x45\xd6\xab\xe1\x89\x03\x4a\x38\x06\x02\xb5\xfc\x87\x4a\x06\x0c\x15\xd5\xc8\x0d\x1c\x4b\x32\x96\xe5\x3c\xa5\x82\xd5\xef\x6c\x84\x5c\x65\x79\xfe\xdd\x10\x69\xb0\x41\xa4\xb9\xee\x2c\x83\x90\x82\x05\xb6\xe2\x5f\xa7\x13\x09\x03\x18\xfa\x03\xb6\x82\x9b\x20\x9d\xc7\x84\x5a\x18\xcb\x17\x69\x44\xd8\x05\x01\x7b\x89\xdf\xf6\x7a\xba\x51\x13\x07\x97\x73\xc3\xe1\x0c\x2b\x9e\xe9\xd5\x8e\xf7\x47\x0f\xf4\xaa\xf4\xc3\xc2\xc9\xf0\x0e\x17\xf4\x83\xc3\x92\xe4\x50\xd7\xab\xcf\x53\x6b\x14\xdb\x18\x39\x43\xcf\x61\x7e\x44\xe9\xaf\xb8\xf0\xf7\x45\x7e\x44\xcb\x59\xd3\xb1\x30\x54\x0a\x2d\x48\xf2\x27\x0b\xba\x5b\xb6\xa2\x1c\x0a\x15\x84\x3c\x62\x34\x9c\x80\x6b\x58\x11\xc7\xb1\xd3\xcf\xf4\xd3\x48\x27\x9a\x60\x0c\xfc\x48\x25\x89\x0d\x99\x53\x58\xfe\x45\xe8\x84\xe1\x48\x51\xa2\xc6\xa5\x68\x05\x0b\xb2\x7d\x47\x5c\xbe\x4d\xdb\xa1\x0f\xba\xbb\x39\x74\x58\x1f\xf5\xd8\xf5\x70\x66\xfa\x04\x08\xc0\x81\xe9\x71\x3e\x13\xf0\x78\x6f\x38\x9b\xc4\x62\x7e\xbf\x05\x62\xf1\xc6\x7e\xdf\x0f\x2d\xe4\xd8\x45\xf9\x99\x8e\x19\xe7\xf3\x91\x96\x79\xc0\x67\x02\xdb\x19\x82\x57\xd5\xf9\x0b\xcc\x92\xac\xfc\x15\xa6\x5c\x73\xf7\x6e\x0f\xb7\x1e\x5a\x48\xff\x27\x24\x9e\xac\x82\x25\x86\x4e\x83\x36\x4a\x93\x69\x5f\xfb\xc9\xb0\xff\x7e\x70\xd9\x4d\x67\x67\xb4\xce\x57\xd2\xca\x8a\xb0\xbd\x77\xbb\xec\x1b\x29\x7e\x75\x8c\x7d\x64\x4e\xf9\x68\xe4\xa1\xa2\x0a\x01\xe3\x2c\xbc\xfa\x3c\x74\xd7\x08\x7b\x17\xe7\xc0\x2e\xf9\x2f\x00\x00\xff\xff\xb1\x2b\xa6\x52\x60\x09\x00\x00"

func transfer_many_accountsCdcBytes() ([]byte, error) {
	return bindataRead(
		_transfer_many_accountsCdc,
		"transfer_many_accounts.cdc",
	)
}

func transfer_many_accountsCdc() (*asset, error) {
	bytes, err := transfer_many_accountsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transfer_many_accounts.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x1d, 0xf6, 0xd7, 0x23, 0x9f, 0xf1, 0xe9, 0x2a, 0x79, 0x23, 0x66, 0x9d, 0xa7, 0x82, 0x31, 0x19, 0x4a, 0xd1, 0xf9, 0xe0, 0x4, 0x62, 0xe0, 0xbf, 0x4b, 0xd3, 0x9e, 0xb7, 0xaa, 0x89, 0x84, 0x61}}
	return a, nil
}

var _transfer_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x56\x4d\x6f\xe3\x36\x10\xbd\xeb\x57\xbc\xf5\x21\x2b\x01\xbb\xd2\xa5\xe8\xc1\xc8\x47\xb7\xbb\x4d\x4f\x01\x8a\xad\x9b\x9e\xc7\xd2\xd8\x66\x23\x93\x02\x39\xb2\xe3\x06\xf9\xef\x05\x29\x51\x96\xec\x3a\x1b\x1d\x12\x88\x26\x67\xde\xcc\x7b\xf3\xc4\xa2\xc0\x62\xa3\x1c\xc4\x92\x76\x54\x8a\x32\x1a\xca\x81\x20\xbc\x6d\x6a\x12\xc6\xca\x58\xff\x3a\xfa\x5d\x36\x24\x49\x51\xa0\x34\x6d\x5d\x61\xc9\x68\x1d\x57\x58\x1e\x40\xfa\x60\x34\x43\x0c\x1c\xeb\x0a\x62\x9e\x58\x3b\xff\x4a\xda\xc8\x86\x2d\xa8\x2c\x4d\xab\xc3\x61\x1f\x04\x1b\x72\x58\x32\x6b\x38\x16\xb4\x8d\xdf\x6a\xb9\x64\xb5\xe3\xfe\x70\x9e\x14\x45\x12\x30\x32\xf6\x4a\x36\x95\xa5\x3d\x68\xeb\x83\x80\x7c\x8a\x0d\xc7\xa0\x58\x59\xb3\xc5\x9a\xe5\xcb\x31\xc9\x3e\x22\xf4\xfb\x1a\xb2\xb4\x65\x61\x1b\x20\xf9\x95\x51\x51\x49\xa2\xb6\x8d\xb1\x82\xd9\x7d\xab\xd7\x6a\x59\xf3\xc2\x03\x98\x0d\xcb\xbf\x3d\xd3\xb6\x39\x5b\x9d\x6c\x7e\x60\xa1\x8a\x84\x1e\x15\xef\xdd\x2c\x49\x46\xe1\xd3\x0e\xf3\x1c\x7f\xdd\xab\xe7\x9f\x7f\xfa\x04\x31\x73\x7c\xa9\x2a\xcb\xce\x65\x78\x49\x12\x00\x28\x8a\x02\xf7\x8b\x47\x6a\x6b\xf9\x46\x42\xd8\xf6\xf1\xb0\x53\xbc\x0f\x3c\x04\xd0\x3e\x15\x96\xac\xf4\x3a\x34\x3e\x1c\xad\x59\xb0\x8b\x07\xe7\xb8\x0c\x2b\x1f\x25\x88\x59\x43\x77\xc3\x2a\x2c\x3b\xd3\xda\x92\x7b\x7a\x4c\x5d\xb9\x63\x52\xd7\xad\x92\xe5\x3e\x7d\x28\x70\xc5\xd6\x8e\x50\x38\xd6\x12\x62\xcd\xf1\xcb\xcb\x04\x47\x1e\x96\x5f\xbb\xac\x8d\xe5\x86\x2c\xa7\x4e\xad\x35\xdb\x39\xa8\x95\x4d\xfa\xab\xb1\xd6\xec\x1f\xa9\x6e\x39\xc3\x55\xcf\xe3\xd0\x1e\xff\x38\xae\x57\xf9\x50\x28\x6e\x30\xa6\x25\xf7\xe8\xeb\x1d\x7f\x35\x5a\x2c\x95\xe2\x0b\x4e\x63\x45\x8b\x43\xc3\x73\x68\x55\x7f\x0a\xed\xec\x5e\xfd\xdf\xeb\xf7\x35\xeb\x36\xcd\x32\x90\xfb\xf0\xce\xde\xde\x0d\x90\xfd\x73\x77\x87\x86\xb4\x2a\xd3\xd9\xd7\xa0\x48\x6d\xba\x56\xd7\x3b\x9e\x30\xee\x91\xe5\x81\x8e\xa9\xdc\x70\xf2\xe4\xa5\xd1\x25\x49\x3a\x43\xd9\xd7\x0a\xcd\x5c\x05\x61\x2b\x7f\x6e\xcb\x5a\x02\x71\xe3\xe8\x0f\x13\x3d\x29\x0d\x63\x2b\xb6\xfe\x0c\x3f\x73\xd9\x8a\x67\x7d\x6a\x05\xf9\x2c\xcb\x8e\xcd\x2f\x0a\xfc\xce\x02\x82\xe5\x15\x5b\xd6\x25\xc7\x41\xea\x58\xfc\xe8\xe0\xc4\x58\xae\x3a\x29\x0e\xe7\x06\x71\x7e\xe7\x15\x6e\xfa\xcd\xb9\xdf\x4a\x6b\xce\x97\x81\xf4\xeb\x20\x80\xa9\x5e\xfe\xee\x07\x3e\xc3\xd5\x84\xe6\x50\xd1\x6d\xea\xe7\x7d\x7e\xa2\x88\x18\xf5\x0f\x92\x4d\x76\x81\x82\xc5\x00\x18\x95\x61\x17\xc8\x08\xb8\x41\x1a\xe7\x89\x60\x96\xff\x70\x29\x20\xe9\x5d\x44\x36\x38\x67\x64\xcc\xca\x65\x48\xb9\x98\x3f\xc5\x2a\xbd\x4e\xb3\xec\xcd\x10\xb3\x4e\x05\x3d\xcc\x6d\xeb\x04\x4a\x2b\x51\x54\xab\x7f\x83\x9b\xa9\xc1\x4c\x83\x2f\x76\xcc\x85\x9c\x58\x29\xeb\xe4\xc3\x29\x73\xb1\x99\x71\x94\x83\x5b\xfe\x98\xbb\x50\xcb\x30\xd3\xb8\xfe\x3c\x30\x99\x47\x3f\x1e\xbc\xad\xfb\xdf\x15\xd6\x8f\x79\x14\xd6\xcb\x99\x8a\x7c\x6a\xcb\xa5\x6a\x14\x6b\xf9\xe8\xd0\xb4\xcb\x5a\x95\x43\x51\x5d\xd3\x27\x12\x1a\x76\xe3\x66\x64\xf3\xa9\x98\x77\x49\x74\x9c\xeb\x7b\xf7\x8d\xb1\xa7\xe1\xc3\x62\x27\xd2\x61\x7b\x5e\x52\x43\x4b\x55\x2b\x51\xec\xa2\x58\xaf\x4e\x9c\x2d\x06\x7c\xbd\x3d\x25\x3f\x46\x7d\x4b\x90\x47\x4f\xe8\xc2\x83\x06\x84\xe7\x75\x4c\x12\xf7\xae\xad\xf4\xd0\xb7\xcb\x5e\x21\x66\xac\xbe\xa3\x83\x90\xf4\x9a\xce\x2e\xe8\x77\x5c\xc2\x9b\x02\x1e\x89\xf7\x81\x9e\x18\xae\xb5\x8c\x83\x69\xc3\x17\xc3\xdf\x08\xc2\x37\xc3\xdf\x06\x40\xdd\xa7\xef\x78\x0b\x98\xbd\x11\x8e\xfe\xb7\xe8\xfe\xca\xd0\x58\xd3\xb0\xad\x0f\x71\x3e\x5d\xc3\xa5\x5a\x29\xae\x42\x55\x67\x06\xf6\x8d\x1b\xe3\x54\xb7\x35\x0a\x58\xc7\x99\x50\xfa\x4c\x2a\xf6\x54\x2a\x23\x99\xe4\x55\x17\xac\x77\xa2\xeb\xcf\xd3\x61\x89\x83\xf0\x9a\xfc\x17\x00\x00\xff\xff\x9a\x8f\xff\xf0\x65\x09\x00\x00"

func transfer_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_transfer_tokensCdc,
		"transfer_tokens.cdc",
	)
}

func transfer_tokensCdc() (*asset, error) {
	bytes, err := transfer_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transfer_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xbb, 0x63, 0xc7, 0x95, 0x3f, 0xfe, 0x6d, 0x26, 0xf3, 0x64, 0x62, 0x5a, 0xe3, 0x44, 0xb7, 0xa7, 0x18, 0xef, 0x69, 0x9e, 0xb9, 0x68, 0x19, 0x93, 0xed, 0xb3, 0x76, 0x8a, 0xb8, 0x64, 0xa3, 0xb9}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"burn_tokens.cdc":                                       burn_tokensCdc,
	"generic_transfer_with_address.cdc":                     generic_transfer_with_addressCdc,
	"generic_transfer_with_paths.cdc":                       generic_transfer_with_pathsCdc,
	"metadata/scripts/get_token_metadata.cdc":               metadataScriptsGet_token_metadataCdc,
	"metadata/scripts/get_vault_data.cdc":                   metadataScriptsGet_vault_dataCdc,
	"metadata/scripts/get_vault_display.cdc":                metadataScriptsGet_vault_displayCdc,
	"metadata/scripts/get_vault_supply_view.cdc":            metadataScriptsGet_vault_supply_viewCdc,
	"metadata/scripts/get_views.cdc":                        metadataScriptsGet_viewsCdc,
	"metadata/setup_account_from_address.cdc":               metadataSetup_account_from_addressCdc,
	"metadata/setup_account_from_vault_reference.cdc":       metadataSetup_account_from_vault_referenceCdc,
	"mint_tokens.cdc":                                       mint_tokensCdc,
	"privateForwarder/create_account_private_forwarder.cdc": privateforwarderCreate_account_private_forwarderCdc,
	"privateForwarder/create_private_forwarder.cdc":         privateforwarderCreate_private_forwarderCdc,
	"privateForwarder/deploy_forwarder_contract.cdc":        privateforwarderDeploy_forwarder_contractCdc,
	"privateForwarder/setup_and_create_forwarder.cdc":       privateforwarderSetup_and_create_forwarderCdc,
	"privateForwarder/transfer_private_many_accounts.cdc":   privateforwarderTransfer_private_many_accountsCdc,
	"safe_generic_transfer.cdc":                             safe_generic_transferCdc,
	"scripts/get_balance.cdc":                               scriptsGet_balanceCdc,
	"scripts/get_balance_generic.cdc":                       scriptsGet_balance_genericCdc,
	"scripts/get_supply.cdc":                                scriptsGet_supplyCdc,
	"scripts/get_supported_vault_types.cdc":                 scriptsGet_supported_vault_typesCdc,
	"setup_account.cdc":                                     setup_accountCdc,
	"switchboard/add_vault_capability.cdc":                  switchboardAdd_vault_capabilityCdc,
	"switchboard/add_vault_wrapper_capability.cdc":          switchboardAdd_vault_wrapper_capabilityCdc,
	"switchboard/batch_add_vault_capabilities.cdc":          switchboardBatch_add_vault_capabilitiesCdc,
	"switchboard/batch_add_vault_wrapper_capabilities.cdc":  switchboardBatch_add_vault_wrapper_capabilitiesCdc,
	"switchboard/remove_vault_capability.cdc":               switchboardRemove_vault_capabilityCdc,
	"switchboard/safe_transfer_tokens.cdc":                  switchboardSafe_transfer_tokensCdc,
	"switchboard/scripts/get_vault_types_and_address.cdc":   switchboardScriptsGet_vault_types_and_addressCdc,
	"switchboard/setup_account.cdc":                         switchboardSetup_accountCdc,
	"switchboard/setup_royalty_account.cdc":                 switchboardSetup_royalty_accountCdc,
	"switchboard/setup_royalty_account_by_paths.cdc":        switchboardSetup_royalty_account_by_pathsCdc,
	"switchboard/transfer_tokens.cdc":                       switchboardTransfer_tokensCdc,
	"tokenForwarder/change_recipient.cdc":                   tokenforwarderChange_recipientCdc,
	"tokenForwarder/create_forwarder.cdc":                   tokenforwarderCreate_forwarderCdc,
	"tokenForwarder/scripts/is_recipient_valid.cdc":         tokenforwarderScriptsIs_recipient_validCdc,
	"transfer_many_accounts.cdc":                            transfer_many_accountsCdc,
	"transfer_tokens.cdc":                                   transfer_tokensCdc,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"burn_tokens.cdc": {burn_tokensCdc, map[string]*bintree{}},
	"generic_transfer_with_address.cdc": {generic_transfer_with_addressCdc, map[string]*bintree{}},
	"generic_transfer_with_paths.cdc": {generic_transfer_with_pathsCdc, map[string]*bintree{}},
	"metadata": {nil, map[string]*bintree{
		"scripts": {nil, map[string]*bintree{
			"get_token_metadata.cdc": {metadataScriptsGet_token_metadataCdc, map[string]*bintree{}},
			"get_vault_data.cdc": {metadataScriptsGet_vault_dataCdc, map[string]*bintree{}},
			"get_vault_display.cdc": {metadataScriptsGet_vault_displayCdc, map[string]*bintree{}},
			"get_vault_supply_view.cdc": {metadataScriptsGet_vault_supply_viewCdc, map[string]*bintree{}},
			"get_views.cdc": {metadataScriptsGet_viewsCdc, map[string]*bintree{}},
		}},
		"setup_account_from_address.cdc": {metadataSetup_account_from_addressCdc, map[string]*bintree{}},
		"setup_account_from_vault_reference.cdc": {metadataSetup_account_from_vault_referenceCdc, map[string]*bintree{}},
	}},
	"mint_tokens.cdc": {mint_tokensCdc, map[string]*bintree{}},
	"privateForwarder": {nil, map[string]*bintree{
		"create_account_private_forwarder.cdc": {privateforwarderCreate_account_private_forwarderCdc, map[string]*bintree{}},
		"create_private_forwarder.cdc": {privateforwarderCreate_private_forwarderCdc, map[string]*bintree{}},
		"deploy_forwarder_contract.cdc": {privateforwarderDeploy_forwarder_contractCdc, map[string]*bintree{}},
		"setup_and_create_forwarder.cdc": {privateforwarderSetup_and_create_forwarderCdc, map[string]*bintree{}},
		"transfer_private_many_accounts.cdc": {privateforwarderTransfer_private_many_accountsCdc, map[string]*bintree{}},
	}},
	"safe_generic_transfer.cdc": {safe_generic_transferCdc, map[string]*bintree{}},
	"scripts": {nil, map[string]*bintree{
		"get_balance.cdc": {scriptsGet_balanceCdc, map[string]*bintree{}},
		"get_balance_generic.cdc": {scriptsGet_balance_genericCdc, map[string]*bintree{}},
		"get_supply.cdc": {scriptsGet_supplyCdc, map[string]*bintree{}},
		"get_supported_vault_types.cdc": {scriptsGet_supported_vault_typesCdc, map[string]*bintree{}},
	}},
	"setup_account.cdc": {setup_accountCdc, map[string]*bintree{}},
	"switchboard": {nil, map[string]*bintree{
		"add_vault_capability.cdc": {switchboardAdd_vault_capabilityCdc, map[string]*bintree{}},
		"add_vault_wrapper_capability.cdc": {switchboardAdd_vault_wrapper_capabilityCdc, map[string]*bintree{}},
		"batch_add_vault_capabilities.cdc": {switchboardBatch_add_vault_capabilitiesCdc, map[string]*bintree{}},
		"batch_add_vault_wrapper_capabilities.cdc": {switchboardBatch_add_vault_wrapper_capabilitiesCdc, map[string]*bintree{}},
		"remove_vault_capability.cdc": {switchboardRemove_vault_capabilityCdc, map[string]*bintree{}},
		"safe_transfer_tokens.cdc": {switchboardSafe_transfer_tokensCdc, map[string]*bintree{}},
		"scripts": {nil, map[string]*bintree{
			"get_vault_types_and_address.cdc": {switchboardScriptsGet_vault_types_and_addressCdc, map[string]*bintree{}},
		}},
		"setup_account.cdc": {switchboardSetup_accountCdc, map[string]*bintree{}},
		"setup_royalty_account.cdc": {switchboardSetup_royalty_accountCdc, map[string]*bintree{}},
		"setup_royalty_account_by_paths.cdc": {switchboardSetup_royalty_account_by_pathsCdc, map[string]*bintree{}},
		"transfer_tokens.cdc": {switchboardTransfer_tokensCdc, map[string]*bintree{}},
	}},
	"tokenForwarder": {nil, map[string]*bintree{
		"change_recipient.cdc": {tokenforwarderChange_recipientCdc, map[string]*bintree{}},
		"create_forwarder.cdc": {tokenforwarderCreate_forwarderCdc, map[string]*bintree{}},
		"scripts": {nil, map[string]*bintree{
			"is_recipient_valid.cdc": {tokenforwarderScriptsIs_recipient_validCdc, map[string]*bintree{}},
		}},
	}},
	"transfer_many_accounts.cdc": {transfer_many_accountsCdc, map[string]*bintree{}},
	"transfer_tokens.cdc": {transfer_tokensCdc, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
