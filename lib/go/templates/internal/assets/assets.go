// Code generated by go-bindata. DO NOT EDIT.
// sources:
// burn_tokens.cdc (1.718kB)
// create_forwarder.cdc (3.035kB)
// generic_transfer.cdc (1.331kB)
// metadata/setup_account_from_vault_reference.cdc (1.911kB)
// mint_tokens.cdc (1.827kB)
// privateForwarder/create_account_private_forwarder.cdc (2.025kB)
// privateForwarder/create_private_forwarder.cdc (1.703kB)
// privateForwarder/deploy_forwarder_contract.cdc (418B)
// privateForwarder/setup_and_create_forwarder.cdc (2.527kB)
// privateForwarder/transfer_private_many_accounts.cdc (1.543kB)
// safe_generic_transfer.cdc (1.888kB)
// scripts/get_balance.cdc (724B)
// scripts/get_supply.cdc (195B)
// scripts/get_supported_vault_types.cdc (921B)
// scripts/metadata/get_token_metadata.cdc (816B)
// scripts/metadata/get_vault_data.cdc (880B)
// scripts/metadata/get_vault_display.cdc (874B)
// scripts/metadata/get_vault_supply_view.cdc (957B)
// scripts/switchboard/check_receiver_by_type.cdc (570B)
// scripts/switchboard/get_vault_types.cdc (698B)
// scripts/switchboard/get_vault_types_and_address.cdc (676B)
// scripts/test/example_token_vault_display_strict_equal.cdc (2.25kB)
// scripts/tokenForwarder/is_recipient_valid.cdc (444B)
// setup_account.cdc (1.728kB)
// switchboard/add_vault_capability.cdc (4.281kB)
// switchboard/add_vault_wrapper_capability.cdc (1.756kB)
// switchboard/batch_add_vault_capabilities.cdc (1.607kB)
// switchboard/batch_add_vault_wrapper_capabilities.cdc (1.84kB)
// switchboard/remove_vault_capability.cdc (1.241kB)
// switchboard/safe_transfer_tokens.cdc (2.226kB)
// switchboard/safe_transfer_tokens_v2.cdc (2.129kB)
// switchboard/setup_account.cdc (2.091kB)
// switchboard/setup_royalty_account.cdc (5.997kB)
// switchboard/setup_royalty_account_by_paths.cdc (6.068kB)
// switchboard/transfer_tokens.cdc (1.709kB)
// transfer_many_accounts.cdc (1.841kB)
// transfer_tokens.cdc (1.872kB)

package assets

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	clErr := gz.Close()
	if clErr != nil {
		return nil, clErr
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _burn_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x54\x4f\x6f\x9b\x30\x14\xbf\xf3\x29\xde\x38\x74\x20\xad\xe4\x32\xed\x10\x25\xed\xda\xae\xbd\x4d\x9a\xd4\x2c\x3b\x3f\xe0\x11\xac\x81\x8d\xec\x47\x93\xaa\xeb\x77\x9f\x6c\x03\xc1\x4d\x53\x0e\x89\x6c\xde\xfb\xfd\x79\xfe\x19\xd1\x76\x4a\x33\x3c\xf4\x72\x27\xf2\x86\x36\xea\x2f\x49\xa8\xb4\x6a\x21\x0e\xf6\xe2\x68\xa8\xbc\x3f\x60\xdb\x85\x85\xf3\xad\xa9\x2e\xe8\xfe\x49\x8c\x25\x32\x6e\x05\xed\xcd\x7b\xf0\x41\xc1\x84\x71\xdb\x6b\x49\x7a\xa8\xf7\x8b\x38\x8a\x16\x8b\x05\x6c\x6a\x61\x80\x35\x4a\x83\x05\x0b\x25\x41\x18\x40\x60\x6a\xbb\x06\x99\xa0\x52\xda\x2e\x67\xef\xb9\x46\x86\x42\xf5\x4d\x09\x39\x41\x6f\xa8\x84\xfc\x19\xb8\x26\xc0\xb2\x15\x12\xb0\x28\x54\x2f\x19\x58\x41\xde\x6b\x09\x6c\x55\x0d\x52\xb9\x26\xa1\x1d\xad\x61\xa5\xa9\x84\x2d\xf6\x0d\xdb\x8d\x41\x0b\xb9\x1e\x21\x77\x80\xad\x43\xd9\x8f\x44\x08\x1d\x6a\x6c\x89\x49\x5b\x68\xcb\x37\x53\xe5\x20\x66\xeb\xc4\xb7\x2f\xe1\xf7\x83\x38\x7c\xfb\x9a\xc2\x4b\x14\x01\x00\x8c\x2c\xac\x18\x1b\x30\x7d\xd7\x35\xcf\xa0\xaa\x51\x64\x4e\x95\xd2\xe4\xc0\xad\x0e\xd7\xd2\x10\x0f\x85\xb7\xee\xed\x88\x79\x04\x74\x26\x40\x93\x51\xbd\x2e\xc8\x0f\xa8\x56\x4d\x69\xbc\x4a\x0f\xed\x76\x51\x13\xe4\x64\xed\x59\x78\x2a\x27\x02\xbb\x74\x30\x4b\xf8\x3e\x0f\x41\xe6\x07\xe4\xea\x3a\x4d\x1d\x6a\x4a\x8c\xd8\x49\xd2\x4b\xc0\x9e\xeb\xe4\x56\x69\xad\xf6\x5b\x6c\x7a\x4a\xe1\xe2\xc6\xcf\x7e\xb2\x6b\x1f\x43\x4d\x95\xcd\x0d\xc0\x3a\x88\x5e\xe6\x66\xf1\xe8\x0a\x8e\x5d\x56\xd4\x93\xe5\xfe\x81\x8c\x6f\x3b\xac\xd5\xe6\x89\xee\x94\x64\x8d\x05\xdb\xa8\x25\xa3\xfd\xcd\x73\x47\x4b\x90\xa2\xf9\x02\x4f\x82\xf6\x7e\x69\x7f\x57\xe7\x63\x9a\x3d\x6c\xb6\x23\xd7\x55\x92\xa6\x80\xe6\xd3\x07\xb1\x9f\x97\x5f\x4f\x8a\xed\x73\x7d\x0d\x1d\x4a\x51\x24\xf1\x9d\xcb\x8d\x54\x0c\xbb\xd1\x09\x58\x00\x27\xca\xa5\xda\x9e\x4d\x31\x38\x88\xd3\xa3\xf3\xc5\x02\xfe\x08\xae\x4b\x8d\xfb\xb7\xd9\x05\x3f\xfa\xcf\x66\x00\x14\xd2\xe5\x18\x77\x14\xcc\xcd\x0f\xc2\xa7\x62\x3d\xf4\x64\x43\x61\x96\xbb\x03\x5b\xb9\xc3\x0b\x2c\x66\x23\x6b\x0a\x17\xa7\x11\xb8\x4a\x02\xa3\xf6\xb1\xaa\x96\xc7\x43\x1a\x19\x7e\x21\xd7\x41\x6d\xfa\xee\x58\xbc\x0e\x40\xd0\x54\x91\x26\x69\x83\xab\x42\x93\xc1\x07\xca\xf1\xc4\x69\x18\xab\x29\xb6\xb0\xba\x9c\xdb\xce\xf6\x83\x97\xe9\x1e\xfa\x7f\x7f\xb2\xef\x25\xdc\x42\xbe\xfa\x43\xa0\x03\x15\x3d\xd3\x3c\xc3\xfe\x8b\xe5\xe8\x92\xd5\x65\x48\x3d\x1c\xdd\xd0\xdc\x29\xc3\xf0\x32\x35\x9e\x0b\x3a\xac\xd7\x90\x9c\xde\x8c\xcb\x51\xe7\x32\x98\x60\x3c\xde\xfc\x38\x2b\x94\x2c\x90\x4f\x5b\x33\x56\x8f\xac\x85\xdc\x25\x69\x1a\xf4\x8e\x1d\x31\xfc\x83\x9b\x8a\xed\xc5\x9d\x50\xce\xa9\x9b\x83\x9d\x47\xbb\x3f\x74\x54\x30\x95\x33\xc0\x8f\x2c\x9d\x82\xbe\x46\xaf\xd1\xff\x00\x00\x00\xff\xff\xc6\xcc\x49\x87\xb6\x06\x00\x00"

func burn_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_burn_tokensCdc,
		"burn_tokens.cdc",
	)
}

func burn_tokensCdc() (*asset, error) {
	bytes, err := burn_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "burn_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf0, 0x1d, 0x1d, 0x8c, 0x4, 0x1f, 0xef, 0x3e, 0x70, 0x68, 0xcb, 0x78, 0xd1, 0x5, 0x2a, 0x92, 0xc2, 0xfc, 0x2c, 0xa1, 0x9e, 0x59, 0xb, 0xc1, 0x13, 0xa8, 0x45, 0x6e, 0x12, 0x72, 0xfc, 0x70}}
	return a, nil
}

var _create_forwarderCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x55\x4d\x8f\xdb\x36\x10\xbd\xf3\x57\x4c\x7d\x48\xed\xc0\x91\xd1\xaf\x8b\xb1\xc9\x22\x71\xba\x45\x80\xb6\x08\xb2\x9b\xbd\x36\x63\x6a\x6c\xb1\xa1\x49\x81\x1c\x59\x31\x82\xfd\xef\x05\x49\x89\x96\xb4\x1f\x4d\x2f\xf5\x61\xb1\x12\x87\x33\x6f\xde\x7b\x33\x5a\x3d\x7f\x2e\xc4\x4d\xa5\x3c\xb0\x43\xe3\x51\xb2\xb2\x06\x94\x07\x04\xa6\x43\xad\x91\x09\x76\xd6\x85\xc7\xc1\x39\x57\xc8\x20\x6d\xa3\x4b\xd8\x12\x34\x9e\x4a\xc1\x16\x3c\x31\x34\x35\xa0\x01\x94\xd2\x36\x86\x81\x6d\xb8\xdc\xa2\x2b\xa1\xa4\xda\x7a\xc5\x54\x02\xdb\xcf\x64\x7c\x38\x43\x63\xb9\x22\x07\x8e\x24\xa9\x23\xb9\x42\x88\x77\x3b\x40\x73\xb2\x86\xc0\x93\x29\xfd\x30\x38\xd4\x71\xdf\x7b\xb8\x4a\x19\xc9\xc1\x87\xee\xde\x52\x70\x45\xf9\x09\x5a\xa5\x35\xfc\xdd\x78\xce\xc5\xb9\xb2\x9e\x06\xb9\x42\xf8\x2d\x36\x9a\x53\x27\x15\x7a\xd8\x12\x19\x11\x3a\x40\x1f\x8f\x1d\x49\x55\x2b\x32\x0c\x68\x4a\xa0\x83\x0a\xff\x00\x1d\xc3\x9b\x78\x49\x99\x52\x49\x64\xf2\xa2\xad\x94\xac\x22\xba\xbe\x60\xe8\xb2\xea\x0b\x16\x1d\xc1\x2d\x9e\x96\xa0\x42\x7f\x60\x77\xbb\x17\xb2\x42\x65\xc0\x93\x3b\x2a\x49\xd0\xa2\xe1\x08\xed\x60\x8d\x62\xeb\xa0\xad\x6c\x90\xa1\x4b\xa8\xcc\x5e\x9c\xe1\x2b\x5e\x82\x62\x90\x68\xa0\x45\x96\x55\x82\x15\x8f\x3c\x11\xb4\x15\x39\x1a\x00\x00\x89\x07\x82\x9d\xb3\x87\x42\x88\x6b\xa6\xba\x8b\x4c\x6a\x25\xa9\x3c\xb4\x8a\xab\x74\x21\x77\xe1\xd6\x42\xfc\x50\xc0\x4d\x45\x70\xd5\x98\xbd\xda\x6a\x82\x9b\x18\x21\xad\x61\x87\x32\xb0\xc0\xe4\x76\x28\x09\x7c\x15\xfd\x80\xda\x11\x96\xa7\xe0\x8b\x92\x6a\x6d\x4f\x54\x82\xb7\x07\x8a\xa0\xc4\x8f\x29\x1b\xd6\xb5\x56\x12\x43\x3e\x1e\xe7\xeb\xb2\x0c\x6e\x17\xe2\xa7\x74\x69\xa0\x48\x67\xaf\x2e\xb8\xc2\x23\x01\x76\x82\x06\xb3\x72\xf4\x73\x4a\xec\x08\x99\x4a\x01\x00\x51\x48\xcf\xd6\x51\x09\xca\x80\x62\x1f\x9f\x70\x4f\xa9\x77\x84\xba\xd9\x6a\xe5\x2b\x2a\xb3\x97\xc4\xcf\x05\xbc\x8d\x40\x22\x9f\x9f\x62\xf7\x57\x59\x93\x42\x96\xf2\xd3\x19\x7c\x74\x69\xa9\x76\x3b\x72\x03\x98\xe2\x97\x22\x78\x16\x10\x0c\xb5\xf0\x3a\xbd\x5c\xc3\x26\x22\x8b\x69\xfb\x7e\x8c\x75\x07\xd4\xfa\xb4\x8c\x70\xb9\x22\x03\xae\x31\xa9\x72\x6a\xe4\xaf\x2c\x4d\x2a\x3d\x18\xca\x74\x69\x4f\xcc\xca\xec\x61\x34\x10\x41\xfa\x51\xa1\x64\xe0\x89\xd1\x0b\xf1\x7c\x25\x84\x3a\xd4\xd6\x71\xd6\x3b\xc9\x1d\x13\xcc\x46\xef\x66\x7d\xe4\xaf\x5f\xf0\x50\x8f\x03\x87\xaf\x72\xdc\x84\xba\x2e\x74\xf2\x76\xf6\x60\xfd\x3f\x88\xb1\x44\xc6\x5b\x45\xad\x7f\x08\xcc\x28\x60\x26\xc4\x80\x96\x79\xbf\x5c\xd6\xf0\xba\x2c\x1d\x79\xbf\x80\xaf\x22\x72\x55\x3b\xaa\xd1\xd1\xdc\xab\xbd\x09\xe7\xd8\x70\x35\x7f\x63\x9d\xb3\xed\x2d\xea\x86\x96\xf0\xce\xfb\x86\xae\x93\x49\x36\x58\xe3\x56\x69\xc5\xa7\x4d\xd0\xdb\x6a\x4d\x6e\x09\xef\x93\x65\xce\x87\x4b\xb8\xc6\x23\x75\xf7\x3f\x9a\x7a\x7a\xbe\x80\x67\x9d\x05\x32\x8e\xf0\xd3\xc4\x70\x0c\x06\x7e\x8b\x8c\xf0\x72\xc4\x6a\xe1\xc8\x5b\x7d\xa4\x4d\xe7\xb3\xd0\xe5\x3c\xbc\x6b\x9c\xa4\x9b\x53\x4d\x6b\x30\x4a\x2f\xe1\xa8\xa8\x4d\x8f\xe1\xef\xc5\xe3\x0c\x15\x57\x37\xb7\x7d\xad\x57\xf3\xc5\x02\xd0\x7f\xf7\x04\xe3\xc3\xf0\xcb\x8c\x38\xfc\x2e\x2f\xa1\x46\xa3\xe4\x7c\xb6\x89\x93\x68\x2c\x07\x07\xa6\x4e\x20\x24\x88\xa0\xba\xa1\xa4\x3c\x29\xb3\x45\x4c\x73\xbf\xfb\x0f\xb4\x83\x97\x90\x04\x29\x64\x4f\x9a\x22\x5f\x6c\xa3\x2e\x17\xcf\xbe\x8e\x70\x16\x6f\x50\xa3\x91\x74\xf7\x6a\x9e\xd9\x2b\x0e\x1d\xf8\xf7\xc8\xd5\xe2\x5f\xf1\xa6\xc4\xd0\x25\x02\x47\x71\x7a\x25\x8d\xbe\x13\xb3\xc5\x59\xaa\xd5\x0a\x7e\x23\xee\x67\x27\x4d\x58\x86\x7a\xca\xbd\xf6\xb3\xb6\xa5\xe8\xf6\xf3\x87\xc1\x8e\xda\x3e\x6f\xb5\x97\x81\xba\xce\x1b\xd9\xb5\x8b\x31\x0b\x7b\xe2\x7b\x14\xf4\x63\x3e\xe2\xa0\xbf\xff\x6d\x1c\xec\x1f\xef\x67\xd2\xf9\x60\x6b\xe5\x55\x94\x16\x6b\x58\xc2\x8a\x7b\xd6\xa6\x9b\xa6\xb4\xfd\x56\x1a\x7c\xd1\xee\xc9\x0f\x17\x2f\xa6\x7b\xa2\x48\x8b\xef\x4f\x6a\xf3\x77\x7f\x9e\x39\x5b\x9f\xe9\x3b\x37\xd9\xb9\xa7\xdb\xed\x45\x00\x36\xbf\x78\x11\xf3\x2f\x81\xed\x1a\x56\xdd\xd1\x8a\x06\x43\x96\xb3\x8f\xfb\xfd\x68\xb4\x32\x9f\x23\x70\xfa\xa2\x7c\xdc\xad\x67\x72\xa6\x35\x47\x5a\x35\xfd\xf0\x3f\x2a\xcb\xb0\xd0\xef\x7d\x19\x93\xe6\xa5\x5f\x93\x0f\x48\x32\xe2\x2d\x7e\xe6\x7a\x0b\x6c\xb0\x7e\x64\x7c\x7a\x36\x54\xd8\x68\x4f\x59\x68\xe4\x95\x88\xed\x49\xb6\x46\xe1\xf7\x34\x18\x41\xe8\xd9\x98\x22\x5e\x02\xf2\x1a\xfe\x33\x47\x19\x42\x5c\xc1\xf2\x49\x7e\x72\xec\xb7\x13\x34\xb5\xe1\xa4\xdc\xff\xc7\xd4\x10\x7b\xa2\x6a\x15\xcf\xe5\x63\xf6\x0d\x59\xef\xc4\x9d\xf8\x27\x00\x00\xff\xff\x42\xf6\xb5\x93\xdb\x0b\x00\x00"

func create_forwarderCdcBytes() ([]byte, error) {
	return bindataRead(
		_create_forwarderCdc,
		"create_forwarder.cdc",
	)
}

func create_forwarderCdc() (*asset, error) {
	bytes, err := create_forwarderCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "create_forwarder.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf6, 0x4f, 0x7d, 0x59, 0xb9, 0x58, 0x9, 0x5a, 0x94, 0xf9, 0x87, 0x2c, 0x10, 0x98, 0xce, 0xe6, 0x32, 0x96, 0x59, 0x4d, 0xb7, 0xfc, 0x1d, 0x68, 0x7f, 0x4f, 0x37, 0xda, 0x7d, 0x16, 0x8f, 0xa3}}
	return a, nil
}

var _generic_transferCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\x4d\x6f\xe2\x48\x10\x3d\x87\x5f\xf1\x96\x43\x02\x12\x71\x2e\xab\x3d\xa0\x7c\x6c\x36\x52\xf6\x1a\x65\x32\x99\x73\xd1\x5d\xe0\x9e\x98\x6e\xab\xbb\x8c\x83\x22\xfe\xfb\xa8\xcb\xc6\x40\xa2\x39\x0c\x17\x4c\x51\xf5\xde\xab\xd7\xcf\xed\xd6\x75\x88\x82\xc7\xc6\xaf\xdc\xa2\xe2\x97\xf0\xc6\x1e\xcb\x18\xd6\x18\x9f\xd4\xc6\xa3\xd1\xd5\xd5\x15\x1e\xc8\xa3\xa6\x94\xe0\x3c\xc8\x6f\x91\x24\x44\x5a\x31\x6a\x92\x12\xe4\x2d\x22\x1b\x76\x1b\x8e\x5d\xc5\xf9\x24\x4c\x16\x61\x89\x9f\x4d\x12\x48\xc9\xb0\xbc\xa4\xa6\x92\x42\xf1\x5e\x4a\x97\x50\xb1\x24\x6c\x43\x03\x53\x86\x90\x58\xbb\x44\x85\xe4\x62\x4b\x5e\x20\x01\x89\xbd\x05\x25\xb4\x5c\x55\xda\x62\xa8\xa6\x85\xab\x9c\x6c\xbf\xf6\xb9\xfc\xa8\x14\x4a\x73\xef\xb7\x3d\xa2\xca\x32\xe4\xb1\x60\x5d\x84\x15\x93\x3c\x28\xae\x9a\x35\x7b\x41\xc9\x91\x67\x48\x01\x2d\x55\xaa\x2c\x95\xa1\xa9\xac\xe2\x74\x8f\x30\x25\x9b\xb7\xc3\xc4\x86\xaa\x86\x53\xe6\x5e\xd3\x1b\x23\x35\xb1\xdb\xc1\x79\x61\x6f\xd9\x1e\x53\xbb\xb4\xa7\x75\x5e\xe5\x49\x24\x9f\xc8\x88\x0b\x7e\x42\xeb\xd0\x78\x99\xe3\xfb\xa3\x7b\xff\xe7\xef\x19\x24\xcc\x71\x6f\x6d\xe4\x94\x66\xba\x17\xc7\x27\x92\x72\x8e\x6f\x9d\xed\xf9\xc7\x6c\xb0\xbc\xfb\xeb\xa9\x59\x54\xce\xe4\xe7\x29\x3e\x46\x23\x00\x50\x9f\x19\xaf\xd9\x76\x44\x4e\xa1\x89\x26\x2b\x24\x41\x19\x2a\x9b\x0e\x86\xa7\xae\x4a\x91\xb1\x60\xe7\x57\x50\x75\x4b\x8e\x91\xad\x42\x55\x2c\x10\x5e\xd7\x8a\x35\xc7\xbf\x1f\x27\x21\x29\xb4\xbc\xeb\x58\xeb\xc8\x35\x45\x9e\x24\xb7\xf2\x1c\xe7\xa0\x46\xca\xc9\x7f\x21\xc6\xd0\xbe\x66\xc3\xa6\x38\xbf\x37\x26\x2f\x3c\x08\xed\xc5\xfe\xcf\x02\x42\xe4\x25\x47\xf6\x59\x69\x50\x85\x1d\xd0\x45\xd2\xd0\xb1\xc5\x26\x93\x0d\x73\x59\x99\x56\x9e\x79\x89\x9b\xbe\xb9\xe8\xf3\x59\x2c\x94\xf7\x5a\x35\x9c\x4a\xfe\xe1\xa4\xb4\x91\xda\x29\xce\x3f\x2d\xf3\x14\xc3\xc6\x59\x8e\xbb\xdb\x49\x7e\x21\xe6\x47\x27\x30\x1d\x9d\x9d\x9d\xdd\xdd\xa1\x26\xef\xcc\x64\xfc\xa0\xa9\xf0\x41\xd0\xf1\x7c\xd5\x1e\xda\x4e\xba\x1a\xf4\xd7\x78\x7a\xd8\x37\x71\xb5\x2c\x06\x4b\x71\x7d\x39\x6c\x51\xb4\xbd\xb4\x21\x17\xdd\xf7\x54\x67\x7b\x97\xf9\x9d\x4d\x23\x8c\x8f\x13\x23\x22\x1b\x57\xbb\x9c\xcd\x1b\xac\x58\x7a\x9f\x27\x12\xa6\x9f\xdb\x34\x39\x9d\x65\xc3\x50\x31\xbc\x59\x8e\xd3\xde\xba\xcf\xee\x3c\xf7\xb3\xbb\xdb\xc9\x71\x00\x0f\x04\xf9\xf3\x27\x16\x0d\xf4\x17\x09\x7b\xf0\x13\xa7\x72\x8c\xfb\x38\xee\xd3\xaa\x17\xd5\x6f\xb3\x71\x84\xdc\xdd\x49\x87\x1b\x63\x00\x3d\xb2\xa0\xb0\x5c\x87\xe4\xa4\x3f\xed\xeb\xcb\xd3\xa3\xd9\xdb\xbe\xfb\x15\x00\x00\xff\xff\xab\x62\xdc\x5e\x33\x05\x00\x00"

func generic_transferCdcBytes() ([]byte, error) {
	return bindataRead(
		_generic_transferCdc,
		"generic_transfer.cdc",
	)
}

func generic_transferCdc() (*asset, error) {
	bytes, err := generic_transferCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generic_transfer.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa3, 0xa7, 0x57, 0x32, 0xee, 0x9d, 0x77, 0x16, 0x42, 0xa5, 0xd5, 0x7, 0xd8, 0x9e, 0xbc, 0xc3, 0x5e, 0x9c, 0x54, 0xb3, 0x9a, 0x47, 0x6f, 0x4d, 0x39, 0xf2, 0x89, 0xd2, 0xde, 0x79, 0x85, 0x57}}
	return a, nil
}

var _metadataSetup_account_from_vault_referenceCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x53\xcd\x6e\xf3\x36\x10\xbc\xeb\x29\x06\x3e\xa4\x32\xe0\x4f\xbe\x1b\x76\x82\xc4\x6d\x7a\x2a\x10\xa4\x6e\xee\x6b\x69\x65\x11\x91\x49\x81\x5c\x59\x0d\x02\xbf\x7b\x21\xea\xc7\x94\xeb\x36\x40\x3e\x1d\x0c\x7a\xb9\xbb\x9c\x99\x9d\x55\xc7\xca\x58\xc1\x73\xad\x0f\x6a\x5f\xf2\xce\xbc\xb3\x46\x6e\xcd\x11\xb3\x49\x6c\x16\xdd\xca\xfc\x83\x85\x32\x12\x7a\x53\xdc\xb8\x5b\x65\x93\x84\xb1\x47\xfb\xef\x95\x9d\x29\x4f\x6c\xfb\xaa\x30\x34\x8b\xa2\xe5\x72\x89\x5d\xa1\x1c\xc4\x92\x76\x94\x8a\x32\x1a\xca\xa1\x29\x48\x40\x1a\x94\xa6\xa6\xd6\x82\xc6\xd4\x65\x06\x5b\x6b\x5f\x21\x06\x8e\x05\x4a\x1c\x97\x39\xea\xaa\x0d\x1c\x49\xd3\x81\x91\xf7\xa8\x20\x2d\x2c\x97\x74\xdd\xf3\x5a\xfb\xd6\xbe\xba\x76\xec\x70\xf2\x4c\xc4\xe0\x5d\x9b\x06\x4d\xc1\x96\x87\xb6\x6d\xbf\x82\x71\xa2\xba\x14\x5f\xa0\x34\x9c\x18\xdb\xb6\x27\x9d\xb5\x69\xa9\x65\x12\xf6\x69\x7c\xac\xe4\xa3\x4b\x4e\xa2\x28\xa0\x11\x53\x96\x59\x76\x6e\x85\xc7\xee\xb0\x40\x55\xef\x4b\x95\xbe\x90\x14\x2b\xbc\x8c\xe7\x39\x3e\xa3\x08\x00\x2a\xcb\x15\x59\x8e\x9d\x3a\x68\xb6\x2b\x50\x2d\x45\xfc\x27\x9d\xf8\x8d\xca\x9a\x17\xd8\x52\x45\x7b\x55\x2a\x51\xec\xe6\xb8\x7b\xec\xb4\x69\xcb\xd1\x7f\xcb\x25\x9e\x8c\xb5\xa6\x01\xc1\x72\xce\x96\x75\xea\x79\x8d\x84\x3c\x13\xce\x60\xb4\x8f\x55\xe4\x1c\x67\xa3\xcc\x24\x61\xf4\x02\x77\x7c\xa0\x64\x81\xed\xc7\xf7\xca\x39\x36\x38\xb0\xf4\x40\x06\xc2\xf3\x31\xbb\xfd\x92\x34\x40\x9d\xec\x3d\xba\xf5\xdd\x67\xe8\x83\x64\x38\x9c\xef\xe3\xcb\x9b\xd3\x36\x0f\x0f\xa8\x48\xab\x34\x9e\x6d\xbd\x15\xb4\x11\xec\xbf\xa0\xda\xce\x78\x44\x8b\xd9\x3c\x0a\x75\xfa\xcb\xb5\xf3\x23\x99\x16\x5b\x16\xab\xf8\xd4\x8d\xf6\x79\xd7\xa2\xc4\x84\x7c\x2e\x3e\xb6\xf9\x9f\xfd\x48\x0e\x2c\x5d\x69\x7c\x0a\x58\xae\x42\xe1\xa6\x58\x7e\x67\x19\x1e\x6c\x81\xff\x4a\x42\x1d\x78\xbf\x33\xfe\xe7\x82\xe7\x1a\xce\x58\xb1\xe9\xc1\x25\x61\x70\xd0\x0d\xf1\x6c\x57\xf0\x30\xfd\x4e\x9f\x4c\x65\xfa\x17\x81\x3a\x56\x25\x1f\x59\x4b\x20\x5d\x36\x40\xb8\x52\x6d\xdb\x19\x9f\xa0\xb9\x09\xad\x8f\xda\x29\x7d\xf0\x0d\xba\xdd\xf8\xad\xbd\xf3\x30\xc6\xe5\x83\xd2\x4e\x65\x7c\xcd\x74\xc2\x87\x2f\x65\xeb\x1f\x01\x8f\xe4\xba\x6b\x3c\xc5\xd5\x6e\x09\x94\x0c\xf3\xef\xfd\x3c\x66\x74\x1b\x95\xf4\x5b\x9c\x38\x3a\x71\xbc\xfe\x71\x79\x6c\x01\x31\xab\x50\xcc\x21\x75\x6a\xc4\x9b\x4a\x74\x8e\xc5\x68\xf3\x0f\xe4\xc6\x06\x52\x36\x85\x4a\x0b\x28\x9d\x96\x75\xc6\xce\x5f\x8c\x86\x87\xd2\xc2\x36\xa7\x94\x27\x2a\xf8\xc2\x2d\x55\xd8\x0c\xc8\x27\x4b\x34\xd0\x50\xce\xd5\xbc\xbe\xfb\x9c\x58\x31\x79\xa2\x92\x74\xca\xe7\xfb\xf8\x4b\x3e\xb7\x9a\x7b\x3a\xae\x88\x07\x0c\x0b\x90\x4c\xa5\x39\xf6\x66\xef\x7a\x7d\x4b\x13\xfe\xbb\x32\xa3\x61\x2c\xa7\xac\xfe\x5b\x8c\xe1\xfa\xbb\x7a\xbc\xf6\xf5\x3f\x2b\x48\x80\xe3\xdf\x9a\x0c\x97\x81\x26\xe7\xe8\x1c\xe1\x9f\x00\x00\x00\xff\xff\xcf\xec\xdd\x4c\x77\x07\x00\x00"

func metadataSetup_account_from_vault_referenceCdcBytes() ([]byte, error) {
	return bindataRead(
		_metadataSetup_account_from_vault_referenceCdc,
		"metadata/setup_account_from_vault_reference.cdc",
	)
}

func metadataSetup_account_from_vault_referenceCdc() (*asset, error) {
	bytes, err := metadataSetup_account_from_vault_referenceCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metadata/setup_account_from_vault_reference.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x16, 0xa0, 0xe3, 0xbc, 0x9e, 0x19, 0xff, 0xd7, 0xa2, 0xab, 0x8d, 0x3e, 0x4b, 0xd6, 0xaa, 0x10, 0x78, 0xa4, 0xea, 0xd6, 0xe5, 0x5a, 0xc1, 0x42, 0xfd, 0x9e, 0xaa, 0x1c, 0xd1, 0x1c, 0x9c, 0x62}}
	return a, nil
}

var _mint_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x54\x4b\x4f\xdb\x40\x10\xbe\xfb\x57\x4c\x7d\x40\xb6\x0a\xce\xa5\xea\x21\x4a\x40\x3c\xca\x0d\xa9\x82\x94\xfb\xd8\x1e\x27\xdb\xda\xbb\xd6\xec\x3a\x21\x42\xfc\xf7\x6a\x1f\x76\x6c\x48\xe2\x03\x28\xb3\x33\xdf\x37\xf3\xcd\x43\x34\xad\x62\x03\x8f\x9d\x5c\x8b\xbc\xa6\x95\xfa\x47\x12\x2a\x56\x0d\xc4\x13\x5b\x1c\x05\xcf\x5f\x6f\xd8\xb4\x53\xc7\xb1\x69\xf0\x9b\x44\x3f\x91\xc1\x12\x0d\xbe\x0a\xda\xe9\x63\xf0\x13\x87\x38\x8a\x66\xb3\x19\xac\x36\x42\x83\x61\x94\x1a\x0b\x23\x94\x04\xa1\x61\xb7\x41\x03\x66\x43\xd0\x08\x69\x88\xe1\xb6\x28\x54\x27\x0d\x74\x9a\x34\x18\xe5\xcc\x20\x69\x07\xc6\xa2\xea\x80\x43\x7b\x68\x59\x6d\x45\x49\x2e\x96\xa9\x10\xad\x20\x69\x00\xcb\x92\x49\x6b\x40\x59\x02\x36\x0e\x29\x80\x5c\x3a\x9b\xf5\x1e\x21\x21\x93\x4f\xa8\x22\x66\x2a\xad\xaf\xf5\x18\x50\x2a\x9b\x92\x8d\x16\x72\x1d\x45\xa3\xd4\x93\x81\x72\x0e\xb7\xde\xfb\x32\x10\xce\xe1\xcf\xa3\x78\xfb\xf9\x23\x85\xf7\x28\x02\x00\xb0\x44\xcf\x54\x11\x93\x2c\xa8\xa7\x08\x12\x83\x97\xfd\xc9\x17\xff\x4c\x5a\x75\x5c\x10\xa8\xfc\x2f\x15\xc6\x45\xd7\x64\x7c\xc6\xde\x67\x0e\x17\xe3\xee\x64\xde\x7a\x86\xa8\xef\x4a\x60\x7a\xa6\x82\xc4\x96\x18\x54\x35\x95\x6e\x4a\xd6\xbb\xcd\xe1\xe2\x7d\xd2\xd7\xac\x7f\xf9\x38\x70\xae\x9c\xa8\x06\x6b\xd0\x5d\xdb\xd6\x7b\x87\xed\x44\x86\x9c\x2a\xc5\xbe\x49\x79\xc7\x72\x20\xf1\x8e\x77\xee\xb5\x17\xcc\x03\xb6\x4c\x2d\x32\x25\x5a\xac\xa5\xe5\xc7\xce\x6c\x92\x3b\xc5\xac\x76\xaf\x58\x77\x94\xc2\x45\x98\x11\x2b\x30\x84\x4f\x53\x5d\x65\x63\x50\x58\x4e\x06\x3b\x73\xf9\xbd\x38\x87\x68\x88\x9a\xcd\xc0\x23\x03\x02\x7f\x16\x0e\xcb\x46\xc8\x71\x27\x06\x9e\x51\x3b\x60\x09\x3e\xd1\x4c\x1b\xc5\xb8\xa6\x2c\x77\x80\x8b\x63\x5d\xba\x4e\xec\xa2\xcc\xa7\x89\xdd\x5a\x9a\x17\x1f\xfc\x1b\xcd\x26\x1d\xb8\xec\x77\x73\x03\x2d\x4a\x51\x24\xf1\x8b\xa3\xb1\x2b\x23\x95\x39\xcc\xb1\x4f\x33\x4e\x0f\x45\x59\x79\xb7\xd8\xd5\xe6\x01\x0d\x7e\x96\x81\x49\xab\x7a\x4b\xf7\x4a\x1a\xc6\xc2\xd8\xed\x4c\x38\x4c\xdd\x6a\xdf\xd2\x1c\xa4\xa8\x2f\x61\x2b\x68\xe7\x7f\xda\xbf\x8b\xd3\x9b\x9d\x3d\xae\x5e\x7b\xae\xeb\x24\x4d\x01\xf5\xb7\x33\x97\x62\xec\x7e\x73\xa2\xd0\x7b\xd5\xd5\xa5\x2b\x72\xdd\x57\x02\x16\xc0\x25\x05\x95\x62\x57\x7c\x11\x2a\x88\xbd\x5e\x47\x1a\x34\x4c\xfa\xd2\x02\x85\x99\x39\xec\x6d\x9a\x15\xd8\x62\x2e\x6a\x61\x04\xe9\xa1\x6d\xa7\xa6\xfd\x3a\x19\x34\xcd\x38\x18\xcf\xb5\xeb\x50\x85\x47\x86\x3e\xe8\xeb\xa0\x39\x45\x42\x1d\x61\xab\xe8\x8d\x8a\xce\x50\x7f\x41\xc2\xac\xde\x33\xa1\xf1\x97\xb2\x3f\x62\xe3\xa6\xbb\x0b\x5a\x3a\x34\x58\x5c\x7d\x19\xd5\xcc\xbe\xbb\xaa\x74\xd2\x5f\x2a\xff\x3f\x9d\xb0\x3c\x50\xab\xb4\x70\x23\xd6\xf4\x29\xba\xe4\x69\x4b\x7c\x46\xe7\xac\xf4\x81\x61\xc8\x17\x57\xa3\x7c\x26\xc5\xb5\x4a\x9b\xd1\xea\x9e\x5a\x53\x58\x2e\x8f\xac\xf5\xf7\xe1\xca\xc6\x5f\xce\x4e\xd3\x69\x03\x39\x81\x90\x05\x13\x6a\x2a\x21\xdf\xfb\x55\x76\x21\x71\x48\xe2\xe3\x7f\x00\x00\x00\xff\xff\xf3\x77\x90\x72\x23\x07\x00\x00"

func mint_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_mint_tokensCdc,
		"mint_tokens.cdc",
	)
}

func mint_tokensCdc() (*asset, error) {
	bytes, err := mint_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "mint_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x4b, 0xf1, 0x4e, 0x1, 0x16, 0x2, 0x4c, 0xf9, 0x39, 0x6e, 0xb5, 0x5b, 0xcf, 0x75, 0x79, 0x75, 0x20, 0xc8, 0x14, 0x5d, 0x76, 0x81, 0xf4, 0x57, 0xc8, 0xe0, 0xbd, 0xe7, 0xaf, 0x8e, 0x3c, 0x5a}}
	return a, nil
}

var _privateforwarderCreate_account_private_forwarderCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x54\x4d\x4f\xdb\x40\x10\xbd\xfb\x57\x4c\x73\xa0\xb6\x64\x92\x3b\x0a\xd0\x36\x25\x12\xaa\x8a\x50\x49\xb9\x4f\x9c\xc1\x5e\x75\xb3\x6b\xed\x8e\x6d\x22\x94\xff\x5e\xad\xbf\x97\x24\x14\xea\x03\x22\xe3\x99\x37\xef\xcd\xbc\xb1\xd8\xe6\xda\x30\x2c\x0b\x95\x8a\xb5\xa4\x95\xfe\x43\x0a\x9e\x8c\xde\xc2\xc4\x8b\x4d\x82\x36\xf3\xe6\x19\xb7\xb9\x9f\x38\x0e\xf5\x79\xf7\x46\x94\xc8\xf4\x8b\x12\x12\x25\x99\xa5\x36\x15\x9a\x0d\x99\xb6\xe6\xd4\xeb\xbe\xde\xeb\xfe\x93\x18\x37\xc8\xf8\x28\xa8\xb2\xc7\xe8\x79\x09\x93\x20\x98\xcd\x66\xb0\xca\x84\x05\x36\xa8\x2c\x26\x2c\xb4\x02\x61\xa1\xb0\xb4\x01\xd6\x90\x18\x42\x26\x40\x17\x30\x9f\x2d\x2c\xa5\xae\x00\x93\x44\x17\x8a\xa1\x12\x9c\x01\x42\xde\x50\x84\xa7\x8e\x5b\x10\x8c\xd1\x5e\x82\x00\x00\xc0\x75\xba\xa3\x0a\xbe\xb6\xc5\x9c\xa1\x43\x90\x12\x32\x2d\x37\xc0\xd9\x18\xc0\x15\x48\x62\x50\x54\xb5\xf9\x17\x80\x05\x67\xe1\x03\x6b\x83\x29\xc5\xb0\xd0\x8a\x0d\x26\x6c\x63\xf8\x41\x3b\x1b\xc3\xad\x5a\xeb\xe7\x18\x16\x98\xe3\x5a\x48\xc1\x82\x6c\x04\x67\x6d\x75\x43\x21\x37\x94\xa3\xa1\xd0\x8a\x54\x91\x69\x11\xbf\x69\x63\x74\xf5\x88\xb2\xa0\x21\x3f\x82\x97\xba\xc2\x3d\x96\xe4\xd3\x74\x20\x02\x97\x9d\x84\x30\xc7\x9d\x83\x69\xe0\xa2\xba\x60\xdf\x74\xa2\x67\x4a\x0a\xa6\x4e\x7b\x27\xa7\xc4\x42\xf2\x77\x64\x84\x4b\xcf\x1f\x53\x43\x56\xcb\x92\x3a\x51\x6e\x3b\xa1\x8b\x15\x26\xa1\xd5\x2e\xa7\x0b\x50\x42\xc6\x50\x0a\xaa\x9a\x9f\xee\xef\xfc\xf4\x66\xa7\xcb\xd5\x63\xd7\xeb\x2a\x8c\x22\x40\xfb\xe9\x0d\xa7\x8c\xd3\xaf\x7b\xc6\xee\xb9\xbe\x86\x1c\x95\x48\xc2\xc9\x42\x17\x72\x03\x4a\x33\xa4\x9d\x12\x70\x00\x35\x29\xb7\xba\x7a\x85\x49\xab\x60\x12\x0d\xca\x67\x33\x78\xc0\xd2\x99\xc8\x50\x5a\x48\x34\x6d\x35\xeb\xba\x44\x51\xef\xa8\x53\x33\x9f\xda\x66\xed\x53\x8b\x25\x85\xf3\x73\x6f\x76\x8d\x45\x6f\xb6\x39\xef\x6a\x11\x61\x8d\x3e\x1a\xd3\x17\x2f\xbd\xce\x71\x33\x89\x81\xf5\xc5\xb0\x92\xae\xc7\x3d\x72\xe6\x93\xbf\xb5\xb6\x70\xec\xbb\x1b\x1c\x3c\xb6\x03\x46\x93\x12\xb3\x50\x69\xad\xc5\x3b\xfa\xba\x93\xb7\x7f\xd3\x22\x8c\x00\x2e\x0f\xb4\x26\x23\x07\xf7\xc2\x85\xe3\x30\x3f\x7b\xf1\x76\x38\xed\x18\xed\xaf\x42\x6f\x6b\x47\x45\xf5\x19\xbe\xba\xdf\x96\x6a\xea\xdd\x15\x77\x1c\xbd\xeb\x3f\x3c\xf1\xb1\xac\x3e\x0a\xf3\xf3\x93\xdf\xb3\x76\x4f\x77\x54\xf5\xa1\xd0\x50\x22\x72\x41\xee\xba\x0f\x47\x73\xc4\x41\x63\x9e\x43\x53\xd6\xfd\x17\xa9\x95\xfb\x5e\x1f\xf5\x18\x8d\x17\x4e\x52\x7f\xf5\xe2\xe1\x5f\x4e\x19\x1b\xa4\x31\xf9\xf0\x59\xef\xce\xfa\xf8\x04\x17\x98\x7f\xd0\x12\x27\x49\xf7\xff\xbd\x32\x87\x7b\xfe\x43\xa9\x87\x11\x8d\x55\xdf\x17\x6b\x29\x6c\x56\xeb\xfc\x90\xf2\x37\x65\xe6\x0d\xaa\xcf\x7d\x3c\xa7\xd8\x7b\x83\xfc\xfe\xfd\xd5\x84\x93\x63\x37\xb1\x0f\xf6\x7f\x03\x00\x00\xff\xff\x21\x83\x93\xcd\xe9\x07\x00\x00"

func privateforwarderCreate_account_private_forwarderCdcBytes() ([]byte, error) {
	return bindataRead(
		_privateforwarderCreate_account_private_forwarderCdc,
		"privateForwarder/create_account_private_forwarder.cdc",
	)
}

func privateforwarderCreate_account_private_forwarderCdc() (*asset, error) {
	bytes, err := privateforwarderCreate_account_private_forwarderCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "privateForwarder/create_account_private_forwarder.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x20, 0xfc, 0xb5, 0x37, 0xa5, 0xe, 0xd, 0x99, 0x7e, 0xe1, 0xc8, 0x1c, 0x7e, 0x23, 0xf0, 0xa2, 0x91, 0xb1, 0x97, 0x2b, 0xdc, 0xb, 0x1a, 0x8a, 0x53, 0xdd, 0x4c, 0x6a, 0x5c, 0xf3, 0xd3, 0xc1}}
	return a, nil
}

var _privateforwarderCreate_private_forwarderCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x54\x4d\x8f\xda\x3c\x10\xbe\xe7\x57\xcc\xcb\x61\xdf\x44\x62\xc3\x1d\xb1\xbb\xaa\x68\x57\xea\xa1\x15\x2a\x88\xfb\x60\x86\xc4\xaa\xb1\x23\x7b\x12\x8a\x56\xfc\xf7\xca\xf9\x22\xa6\xa4\xda\xad\x0f\x08\x66\xc6\x33\xcf\xc7\x18\x79\x2c\x8c\x65\x78\x2d\x75\x26\x77\x8a\x36\xe6\x27\x69\x38\x58\x73\x84\x49\x10\x9b\x44\x6d\xe5\x97\x5f\x78\x2c\xc2\xc2\x61\xa8\xaf\x5b\x59\x59\x21\xd3\x0f\x12\x24\x2b\xb2\xaf\xc6\x9e\xd0\xee\xc9\xb6\x77\xc6\xd2\xfd\xfd\x60\xfa\x37\x62\xdc\x23\xe3\x56\xd2\xc9\xdd\x83\x17\x14\x4c\xa2\x68\x36\x83\x4d\x2e\x1d\xb0\x45\xed\x50\xb0\x34\x1a\x84\x25\x64\x72\x80\xa0\xe9\x04\x45\x03\x00\x6c\x8b\x00\xa4\x06\xd4\x80\x42\x98\x52\x33\x70\x8e\x0c\xbe\xcd\xde\x90\xd3\xff\x33\xa0\xb2\x84\xfb\x33\xe4\x58\x11\xe0\x9f\xd7\x8d\xf5\xd1\x72\xa7\xa4\x00\xae\xc5\xe9\x52\xbe\xcb\xae\xe4\xba\xd3\x6d\x9b\x2d\x96\x8a\xa3\x68\x08\xf3\x2d\x8a\x00\x00\x0a\x4b\x05\x5a\x8a\x9d\xcc\x34\xd9\x39\x60\xc9\x79\xfc\xd5\xb9\x92\xd6\x6c\x2c\x66\xb4\xc4\x02\x77\x52\x49\x3e\x2f\x8d\x66\x6b\x94\x22\x3b\x85\x95\x47\xe0\xf2\x6b\x72\x0a\x6b\xac\x68\x8b\xaa\xa4\x04\x1e\x3e\x35\xf4\x92\x6e\x8a\x3f\x8a\x18\x2a\x8f\xe3\x33\x32\xc2\x53\xe0\x70\x6a\xc9\x19\x55\x51\x3d\x02\x05\x7b\x7d\x63\x1f\x2b\xad\xa0\xcd\xb9\xa0\x39\x68\xa9\xa6\x50\x49\x3a\x35\x3f\xfd\xe7\x62\xdc\x9b\xf4\x75\xb3\xed\x66\x3d\xc7\x49\x02\xe8\xfe\xfb\x8b\xd7\xc3\xf2\x97\x1e\xb1\x3f\x2f\x2f\x50\xa0\x96\x22\x9e\x2c\x4d\xa9\xf6\xa0\x0d\x43\xd6\x31\x01\xdf\xa0\x06\x05\x07\x63\x81\x73\x02\xd1\x32\x98\x24\x57\xe6\xb3\x19\xd4\x8a\x02\x42\xb7\x88\x70\x55\x0e\x18\x6d\x46\xcc\x52\x67\x75\x87\x60\xf3\x1b\xe3\x86\x12\x76\x76\x0f\x1a\x3c\x41\xe3\x5e\x2a\xba\x98\x24\x97\xba\xc6\xbf\x54\xfa\xd1\x8b\x87\xb7\x80\x7d\xda\x01\xb9\x3c\xc7\x01\xdf\xde\xa1\xee\xfe\x0a\x39\xef\x2b\x92\x21\xa7\x65\xbd\xe8\x35\xe6\xeb\xb3\xeb\x4c\x0b\x30\x1f\xfa\xf4\xe2\x71\xf4\xc5\xa6\xcd\xc3\xf9\x4e\xa7\x3e\x14\x5b\x12\xb2\x90\xa4\x79\x7e\x87\x77\x00\xc6\x6f\xdf\x08\x14\x60\x03\x2d\x99\xfe\x46\x2b\x58\xa7\x91\xc3\x8a\xe2\xc5\x63\x8f\x73\x0a\x6c\xe6\xe3\x48\x6f\x12\xeb\xab\x52\xc9\x3d\xd3\x87\x5e\x9b\x0f\xe9\xb5\xc4\xe2\x7d\xee\x8e\x42\xed\xbf\xdd\xf8\xec\xcf\x3f\xf0\x0b\x7a\x04\x64\xdb\x7f\x84\x9a\xde\x87\x08\xdf\x63\x57\x34\xcd\x42\xc8\x43\x55\xa6\x41\x06\xf9\xfd\x66\xd5\x38\xc5\x9d\xad\xbe\x44\x97\xe8\x77\x00\x00\x00\xff\xff\x50\x45\x63\xdc\xa7\x06\x00\x00"

func privateforwarderCreate_private_forwarderCdcBytes() ([]byte, error) {
	return bindataRead(
		_privateforwarderCreate_private_forwarderCdc,
		"privateForwarder/create_private_forwarder.cdc",
	)
}

func privateforwarderCreate_private_forwarderCdc() (*asset, error) {
	bytes, err := privateforwarderCreate_private_forwarderCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "privateForwarder/create_private_forwarder.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x98, 0xff, 0x61, 0x1c, 0x7c, 0x46, 0xa2, 0xe6, 0xc3, 0x93, 0xd9, 0xce, 0xec, 0xf1, 0x88, 0x96, 0x4c, 0x17, 0x51, 0xe1, 0x89, 0xac, 0xce, 0x3e, 0x46, 0xb4, 0xb6, 0xf9, 0xb7, 0x2e, 0x1a, 0xb}}
	return a, nil
}

var _privateforwarderDeploy_forwarder_contractCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\xc1\x4a\x03\x31\x10\x86\xef\x79\x8a\x39\xc9\x2e\x84\xee\x55\xf6\x56\x14\xc1\x8b\x14\xaa\x27\xf1\x30\x26\xe3\xee\x60\x3b\x09\x93\x59\x8a\x48\xdf\x5d\xb6\xdd\x2e\xab\x5e\x9a\x43\x48\xc8\xf7\x67\xfe\xaf\x69\x1a\xb8\xa7\xbc\x4b\x5f\x05\xac\x27\x78\x4e\x9f\x24\x0f\x49\x0f\xa8\x91\xa5\x83\x90\xc4\x14\x83\xc1\x81\xad\x3f\x11\x25\x53\xe0\x0f\xa6\x08\x2c\x6c\x90\x51\x71\x4f\x46\x5a\x9c\x33\x45\x29\x18\x8c\x93\x54\x97\xe0\x13\xee\xa9\x85\xad\x29\x4b\xe7\x1d\x2c\x56\x48\x91\x5a\x78\x7d\x79\x14\xbb\x7d\xfb\xfd\x54\x48\x22\xe9\xd6\x92\x62\x47\x1b\xb4\x7e\xfc\x61\xbe\xfc\x61\xaf\xa2\xf2\xf0\xbe\xe3\x70\x86\x36\xf3\xb9\x86\x6f\xe7\x00\xb2\x52\x46\xa5\xaa\x70\x27\xa4\x2d\xe0\x60\x7d\xb5\x8e\xf1\x6e\x72\xa8\xe1\x66\x1d\x42\x1a\xc4\xa6\x00\xc0\x19\x5d\x5d\x2c\xcb\x0a\x63\xac\xe4\xe4\xba\x34\xf7\x93\xe5\xb8\xfb\xff\x5a\x7e\xd9\xde\x2f\x4a\xd6\xe3\x94\xa3\x3b\x3a\x70\x3f\x01\x00\x00\xff\xff\xb6\x45\x50\xb4\xa2\x01\x00\x00"

func privateforwarderDeploy_forwarder_contractCdcBytes() ([]byte, error) {
	return bindataRead(
		_privateforwarderDeploy_forwarder_contractCdc,
		"privateForwarder/deploy_forwarder_contract.cdc",
	)
}

func privateforwarderDeploy_forwarder_contractCdc() (*asset, error) {
	bytes, err := privateforwarderDeploy_forwarder_contractCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "privateForwarder/deploy_forwarder_contract.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x16, 0x7f, 0x10, 0x12, 0xa4, 0xc2, 0xb6, 0x67, 0x4e, 0x42, 0xbd, 0x4e, 0xe5, 0x57, 0xd4, 0x8, 0xc8, 0x9d, 0x79, 0xd0, 0x13, 0x4e, 0x7e, 0x14, 0xe3, 0x37, 0x17, 0x7a, 0x3a, 0xb, 0x3b, 0x67}}
	return a, nil
}

var _privateforwarderSetup_and_create_forwarderCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x55\x41\x6f\xf2\x38\x10\xbd\xe7\x57\xcc\xc7\x01\x25\x12\x85\x3b\x02\xba\x2b\xf6\xab\xb4\x87\x5d\x55\x5b\xc4\x7d\x70\x06\xb0\xbe\x60\x47\xf6\x04\x16\x55\xfc\xf7\x95\x1d\x12\xec\x92\xb4\x74\x7d\xa8\x8a\x63\xcf\xbc\x79\x6f\xde\x38\x91\x87\x52\x1b\x86\x97\x4a\xed\xe4\xa6\xa0\x95\xfe\x45\x0a\xb6\x46\x1f\x60\x10\xed\x0d\x9a\x93\x3f\xff\xc5\x43\x19\x1f\x0c\xb7\xda\x73\xaf\x46\x1e\x91\xe9\x1f\x12\x24\x8f\x64\x5e\xb4\x39\xa1\xc9\xc9\x5c\xef\xf4\x7d\x1e\x74\x22\xfa\x8b\x18\x73\x64\x5c\x4b\x3a\xd9\x2e\x78\xd1\x81\x41\x92\x4c\x26\x13\x58\xed\xa5\x05\x36\xa8\x2c\x0a\x96\x5a\x01\xe6\xb9\x05\x84\x35\x56\x05\x8f\x00\xa1\xac\x31\x80\xb9\x82\x80\x6d\x83\xc2\xdf\x47\xd8\x60\x81\x4a\x10\x08\x2c\x71\x23\x0b\xc9\xe7\x11\xa0\xca\xdd\xd5\x6a\x53\x48\x11\x7c\x70\x77\x81\xf7\xb7\x60\x49\x12\xa6\x7e\x4f\x12\x00\x80\xd2\x50\x89\x86\x52\x2b\x77\x8a\xcc\x14\xb0\xe2\x7d\xfa\xa7\xb5\x15\xbd\xb1\x36\xb8\xa3\x65\x1b\x70\xa9\x15\x1b\x5d\x14\x64\x46\xf0\xea\xb2\xd9\xfd\x32\x80\xf1\x86\x47\x5a\x63\x51\x51\x06\xc3\xdf\x85\xd0\x95\xe2\x0c\xde\x7d\x12\xb7\x0a\x62\x38\xba\x3a\xff\x40\x46\x98\x47\xaa\x8d\x0d\x59\x5d\x1c\xc9\x67\x40\xc1\x8e\xb3\xd4\xed\x55\x46\xd0\xea\x5c\xd2\x14\x94\x2c\x46\x70\x94\x74\xaa\x7f\xba\xbf\xb3\x7e\xbe\xc7\x2f\xab\x75\x93\x6b\x91\x66\x19\xa0\xfd\xf1\x89\x7e\xe1\xf1\xe7\x16\xb1\x5b\xcf\xcf\x50\xa2\x92\x22\x1d\x2c\x75\x55\xe4\xa0\x34\xc3\xae\xa9\x04\x5c\x00\x0f\xaa\xe5\x5a\x5c\x2b\x18\x64\x49\x1b\x47\x6e\xa1\x66\x77\xdc\x8a\x23\xc9\x8e\x77\xc4\xb3\x61\x5f\xd3\x8d\xdb\xff\x16\x69\xef\x99\x0f\x1f\xbc\x26\xe2\x15\x79\x9f\xc1\x8f\xb9\x63\x2c\xa0\xdf\xad\xc9\xa4\x6d\xb0\xb6\xaf\xe0\x84\x16\xb0\x30\x84\xf9\x19\x2c\x31\x54\x65\x74\xc7\x10\x57\x46\xb5\x5b\x97\xae\xb2\x6c\xdd\x29\x63\xb1\x27\xf1\x6b\x36\x8c\x94\xf5\xbc\x2e\x52\x67\x90\xe9\x4d\xff\xe6\x4a\x0d\x76\x3e\x87\x2d\x16\x96\xee\xe1\x2e\x0d\x39\xb4\x08\x8a\x4e\xb1\xcf\x7d\x5c\xdf\xfa\x65\xc5\x20\x19\xa4\x82\x6b\xd0\x28\xc8\x07\x88\x16\x8f\x94\x46\x07\xdc\x9a\x3d\x45\x98\x85\xcf\xfa\xf3\x50\xf2\xd9\xa7\x49\x3d\xee\xa0\xf1\x7e\xeb\x2a\x31\xcb\x46\x77\x81\x59\xf7\x14\x1d\x9d\xcc\xba\xe8\x0d\xab\xbf\x7a\xbb\xae\xf9\xe6\x39\x27\x81\x22\xca\x29\xff\xaa\xd7\x36\xda\x18\x7d\x9a\x0d\xdf\x23\x0f\xd4\xc8\x2f\x8b\xf4\x06\xf1\x70\xb5\x45\x2b\xcc\x7d\x17\xb5\x46\x5e\x62\x09\xf3\xce\x74\x0d\xdb\xd2\xcd\x91\xee\x86\xb8\xa3\xca\xad\xaf\xa9\x8a\xe9\x0a\x04\x8e\xf2\x97\xf5\x74\x4a\x1b\x98\x23\x40\x0e\x85\x88\xaa\xec\x21\xdf\xcf\x40\x40\x68\xdc\x15\xf2\xce\x68\x76\xc4\x2c\xd5\xce\x9b\xfe\xbe\x31\xa3\xa9\xd7\xcc\xdf\x20\xc0\x43\xb4\x7d\x10\xab\x01\x72\xe9\x20\xef\x91\x1e\x8b\x30\xdd\xfc\x3f\x7b\xea\x7d\x18\xaf\x46\xf8\x9b\x4e\xed\x56\x6a\x48\xc8\x52\x92\xe2\x69\x47\x5d\x41\x92\x2e\xdf\xcd\x9e\xda\xb4\x23\x6f\x8d\x47\x27\xdb\x5b\x30\x2d\x3a\x45\x0a\xb5\xd1\x5e\x93\xdb\xeb\xde\xbc\x23\xdd\xf5\x3f\xdc\xc4\x8f\x4c\xea\x3b\x5d\xfe\x47\x81\x3d\x93\x61\x32\x69\xde\x5c\x5f\xde\xb7\x0a\xfe\xcc\x22\x51\xba\x90\x95\x78\x98\x39\xff\x7c\xff\x1d\x4a\xe2\x3a\x2e\xc9\x25\xf9\x2f\x00\x00\xff\xff\x99\x97\xb9\xa2\xdf\x09\x00\x00"

func privateforwarderSetup_and_create_forwarderCdcBytes() ([]byte, error) {
	return bindataRead(
		_privateforwarderSetup_and_create_forwarderCdc,
		"privateForwarder/setup_and_create_forwarder.cdc",
	)
}

func privateforwarderSetup_and_create_forwarderCdc() (*asset, error) {
	bytes, err := privateforwarderSetup_and_create_forwarderCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "privateForwarder/setup_and_create_forwarder.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd4, 0xa3, 0xf6, 0x5c, 0xa2, 0x5a, 0x74, 0x24, 0xd, 0xb6, 0xe8, 0x5c, 0xdb, 0xfb, 0x3d, 0xe6, 0x7a, 0x15, 0x1e, 0xda, 0xa0, 0xdd, 0x37, 0x3a, 0x92, 0x47, 0x75, 0x59, 0x4, 0x73, 0x27, 0x5b}}
	return a, nil
}

var _privateforwarderTransfer_private_many_accountsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\x4d\x6f\x9b\x4c\x10\x3e\x87\x5f\x31\xf1\x21\x2f\x48\x79\xf1\xa5\xea\x01\xe5\x43\x69\x5a\xf7\x14\x29\x4a\x5c\xf7\x50\xf5\x30\x81\x31\xac\x82\x77\xd1\xec\x60\x12\x45\xfe\xef\xd5\xc2\x42\xa0\x89\x6b\x55\xaa\x0f\xfe\x58\x3f\x33\xf3\x7c\x0c\xab\x36\x95\x61\x81\x45\xad\x73\xf5\x50\xd2\xd2\x3c\x92\x86\x35\x9b\x0d\xcc\x26\x67\xb3\xc0\x23\xbf\x3c\xe1\xa6\x9a\x02\xc7\x47\x03\xee\x96\xd5\x16\x85\xee\x28\x25\xb5\x25\x5e\x18\x6e\x90\x33\x62\x5f\xb3\xef\xef\xa1\x7e\x32\xfd\x86\x04\x33\x14\x5c\x29\x6a\xec\x7b\xf4\x26\x80\x59\x10\xcc\xe7\x73\x58\x16\xca\x82\x30\x6a\x8b\xa9\x28\xa3\xbb\xef\x6b\x62\x0b\x62\x60\x83\xfa\x19\x30\xcb\x98\xac\x25\x0b\x52\xb0\xa9\xf3\x02\xa4\x20\xc5\x50\x75\xec\x80\x3d\x3d\x1b\x04\xa3\x46\xa1\x2f\xbb\xda\x98\x5a\xcb\x0d\x56\x09\xbc\x5c\x75\x47\x09\x7c\x5b\xa8\xa7\x8f\x1f\x76\x11\xbc\x04\x01\x00\x40\x4b\x84\x60\x85\x75\x29\xc0\x64\x4d\xcd\x29\x81\x14\x28\x50\x98\x32\x73\x93\x09\xc4\x69\xb0\xdd\x29\x32\xc1\x03\x29\x9d\x0f\x7c\x99\xb2\xb6\x55\x49\x02\x5b\xd7\xe7\x8e\xd6\x09\x60\x2d\x45\x38\x31\x21\xfe\xae\xa4\xc8\x18\x9b\x08\x4e\xc6\x99\xc4\xed\xf0\x60\xe8\xe1\xd5\x79\xcf\x95\xce\xef\x49\x67\xc4\x09\x9c\xec\x4b\x25\xee\x10\x5d\x8b\x8a\xa9\x42\xa6\xd0\xaa\x5c\xbb\xaa\x96\xc8\x27\xc3\x6c\x9a\x15\x96\x35\x45\x70\x72\x95\xa6\xce\x9a\xc1\x84\x09\xfb\xcf\x28\x08\xe7\x93\x45\x8a\x9d\x31\xe5\x96\xae\x8d\x16\xc6\x54\x5c\x8c\x61\x6f\xd6\xf2\xb9\xa2\x04\xb4\x2a\x4f\x61\xab\xa8\xe9\x7e\xba\xf7\xb3\xfd\x2b\x10\x2f\x96\xab\x7e\xd6\x45\x18\x45\x80\xf6\xf8\x0f\x2b\x35\x86\x5f\x0e\x8c\xdd\xeb\xf2\x12\x2a\xd4\x2a\x0d\x67\xd7\xa6\x2e\x33\xd0\x46\x20\xef\x95\x80\x6b\xd0\x92\x82\xb5\xe1\x36\xc9\xd4\x2b\x98\x45\xaf\xca\xe7\x73\xf8\x4a\x02\x08\x4c\x6b\x62\xd2\x2e\x7f\xd3\xa2\x3b\x0b\xff\xb3\x60\xc5\x30\x65\x5d\xd7\xa1\xce\x52\xb9\x8e\xfb\xc0\xe1\xdc\xa3\x63\x87\xc5\x9c\xe2\x87\xd6\xf2\xb3\xbf\xdd\x83\x8b\xd0\x3d\x3f\xc9\x6b\x16\x7d\xc3\x5b\x94\x22\x0a\x8e\x8e\x8e\xde\xd3\xdc\x0d\x7b\xab\xc0\x34\x9d\x80\xb6\xf5\xf1\x58\x75\xcb\x7e\xcf\xaa\xed\x15\x73\x68\x03\x7b\xf2\x07\x60\xf7\xff\x5c\xd1\xae\xfb\xa0\x27\x4a\x6b\xa1\xf1\x5e\xbb\xe4\xfd\x85\x00\x4a\xc3\xef\x77\x43\xfc\x48\xcf\x76\x8c\x3f\xe4\x4d\x6c\x49\x67\x5e\x5f\x1b\x9b\xed\xef\x9b\x53\x7f\x4f\x24\x70\xf6\xff\x64\x37\xe2\xc6\x07\x1e\x62\x3b\x36\x79\xc3\xe2\x87\x3f\xf8\x79\x1c\x8d\x22\xda\x79\x69\xbb\xe0\x57\x00\x00\x00\xff\xff\x28\x58\x16\x99\x07\x06\x00\x00"

func privateforwarderTransfer_private_many_accountsCdcBytes() ([]byte, error) {
	return bindataRead(
		_privateforwarderTransfer_private_many_accountsCdc,
		"privateForwarder/transfer_private_many_accounts.cdc",
	)
}

func privateforwarderTransfer_private_many_accountsCdc() (*asset, error) {
	bytes, err := privateforwarderTransfer_private_many_accountsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "privateForwarder/transfer_private_many_accounts.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x81, 0x7e, 0xe4, 0x34, 0xd4, 0xa, 0x7b, 0x43, 0x36, 0x20, 0xf7, 0x1a, 0x33, 0xe, 0x77, 0xdd, 0x87, 0x7e, 0x9c, 0xff, 0xf3, 0x23, 0x21, 0xbf, 0x15, 0xaa, 0xed, 0xa4, 0xd4, 0xf7, 0xc0, 0x10}}
	return a, nil
}

var _safe_generic_transferCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x95\xc1\x6e\xdc\x36\x10\x86\xcf\xde\xa7\x98\xf8\xe0\x48\x80\x23\x5f\x8a\x1e\x16\x4e\x53\x37\x80\x7b\xe8\xa1\x86\xe3\xa6\xe7\x59\x71\x24\xb1\xe6\x92\x02\x67\x64\x65\x61\xec\xbb\x17\x24\x25\xee\xca\x6b\x03\xce\xc9\xf4\x88\x9c\xff\x9b\x9f\x33\x5c\xbd\xed\x9d\x17\xb8\x1d\x6c\xab\x37\x86\x1e\xdc\x23\x59\x68\xbc\xdb\xc2\xf9\x22\x76\xbe\x5a\x5d\x5d\x5d\xc1\x57\xb4\xd0\x23\x33\x68\x0b\x68\x77\xc0\xe2\x3c\xb6\x04\x3d\x4a\x07\x68\x15\x78\xaa\x49\x3f\x91\x4f\x11\x6d\x59\x08\x15\xb8\x06\xfe\x1b\x58\x40\x3a\x02\x45\x0d\x0e\x46\xaa\x98\xef\xa1\xd3\x0c\x86\x84\x61\xe7\x06\xa8\x3b\xe7\x98\xe2\x2e\x89\x20\x21\x38\xa2\x15\x10\x07\x4c\x56\x01\x32\x8c\x64\x4c\xdc\x52\x63\x8f\x1b\x6d\xb4\xec\x4e\xf7\xe9\xb0\x8c\x12\x51\xe6\xc6\xee\xa6\x8c\x11\xab\x46\x0b\x1b\x8a\x85\x50\xcc\x89\x16\xd0\xb7\xc3\x96\xac\x40\x47\x9e\x2e\x81\x1d\x8c\x68\x22\x19\x77\x6e\x30\x2a\xe6\x49\x4b\xa8\x3b\xaa\x1f\x0f\x27\x9e\xd0\x0c\xc4\x41\x7b\x8b\x8f\x04\x3c\xf8\x54\x83\xb6\x42\x56\x91\x3a\x96\xd6\x3c\xcb\x6a\x1b\xf1\xc4\xa3\x65\xac\x45\x3b\x5b\xe0\xd6\x0d\x56\xd6\xf0\xcf\xad\xfe\xf1\xeb\x2f\x97\x20\x6e\x0d\x37\x4a\x79\x62\xbe\x8c\x75\x91\xbf\x43\xe9\xd6\xf0\x2d\xd9\x1e\xfe\xb9\xcc\x96\xa7\x4f\x77\xc3\xc6\xe8\x3a\xac\x4b\x78\x5e\xad\x00\x00\xa2\xcf\x04\xdf\x83\xed\xe0\x89\xdd\xe0\xeb\x40\x88\x02\x9d\x33\x8a\x0f\x86\x73\x8a\xa2\x27\xd8\x90\xb6\x2d\x44\xba\x86\xbc\x27\x15\x53\x19\x12\x10\xda\xf6\x31\xd7\x1a\x7e\x5f\xf4\x48\x15\xa3\x59\xf3\x0f\xe7\xbd\x1b\x43\xf9\xd4\x90\x27\x5b\xd3\x8c\x3a\x8b\xe9\x66\x8a\x04\x29\xac\xeb\x50\x3d\x28\x47\x6c\x3f\x0a\xf0\xd0\xc7\xd6\x0c\x70\xa1\xf6\x88\x13\xce\x65\x90\xe4\xc8\xfd\x54\xfe\x3d\x35\x6b\xb8\x78\x4e\x24\x73\x70\x9f\x68\x7a\x4f\x3d\x7a\x2a\x58\xb7\x96\xfc\x1a\x70\x90\xae\x48\x7c\xdf\xc3\xe5\x95\x70\x71\x93\xe4\xb3\x69\x53\x11\x7f\x92\x00\x82\xcf\x15\x88\x4b\x40\x31\xd1\x47\x8e\x03\x40\x0a\x9e\x62\xe5\xf3\xb9\x00\x17\x23\xf7\xd4\xc0\xe7\x69\x73\x35\xcd\x4a\xb5\x89\xba\xd7\x91\x61\xe9\xdf\xbf\x5a\x3a\xe5\x71\x2c\xe1\xe2\x79\xf9\xe5\xce\xbb\x27\xad\xc8\xef\x7f\x2b\xc2\x70\xae\x8f\xba\xa1\x5c\x9d\x9d\x9d\x7d\xf9\x02\x3d\x5a\x5d\x17\xe7\x5f\x63\x87\x5a\x27\x90\x74\x4e\xd9\xdd\x98\xd0\xe3\x6d\x7d\x38\x2f\x33\x76\x5e\x30\x99\xa6\x3a\x71\xf7\xcd\x4a\x5e\xc2\x66\xf3\x7f\x1e\xf6\xad\x4c\xef\xa8\x62\x49\x9f\x9b\x14\xae\x3f\xe5\xbb\xa8\xc6\xc9\xe0\x3c\x69\xe9\x6f\xb2\x60\xea\x15\xfa\x41\xf5\x20\x04\xcf\x8b\xeb\xf4\x0b\x1f\x5a\x92\xa9\x5f\x0a\x71\x65\x95\x5f\x22\x4d\xfc\x0e\x53\x8e\x07\xb6\xfc\xb0\x90\x99\x9a\x9e\x54\x64\x7f\xd8\xf5\xc4\xf0\xf9\x58\xbc\x6a\x49\xbe\x9d\x6e\x2a\xca\xe3\xa6\xfd\xdb\x9a\x5d\x1e\xdd\x79\xd8\xc6\x8e\x6c\x74\x2e\x3f\xd1\x9a\x61\xd4\xc6\xa4\xc1\x3a\xcc\x66\x78\x0c\xd0\xb7\x24\xa4\xe0\xf6\xa1\xca\x89\x75\xf3\x1a\x5e\x55\x3b\x2b\xa8\x2d\xff\x45\xbb\x62\x69\x7d\x60\x0d\x7b\x8a\xb2\x3c\x72\x73\x7e\x91\x5e\xe0\xc5\xdf\x9c\x37\x47\x6b\xbe\xf5\xcc\x7e\x78\xfc\x17\x89\x8f\x9d\x52\xd4\x3b\xd6\x32\xf5\xe0\xf5\xa7\x25\xdc\xc1\xb0\x3d\x90\x61\x7a\x41\xf8\xfa\x08\xbc\x3f\xe7\xd4\x51\xfb\xff\x03\x00\x00\xff\xff\xec\x0b\x40\x8e\x60\x07\x00\x00"

func safe_generic_transferCdcBytes() ([]byte, error) {
	return bindataRead(
		_safe_generic_transferCdc,
		"safe_generic_transfer.cdc",
	)
}

func safe_generic_transferCdc() (*asset, error) {
	bytes, err := safe_generic_transferCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "safe_generic_transfer.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x3d, 0x4, 0xb0, 0x62, 0x41, 0xad, 0xf6, 0xd, 0x6a, 0x5d, 0xe0, 0x39, 0xdc, 0xc1, 0xb7, 0x9a, 0xec, 0xfd, 0x69, 0xf0, 0xe1, 0xc6, 0x9c, 0x6a, 0x4d, 0x55, 0xe7, 0x8f, 0x39, 0x5d, 0xe3, 0xfc}}
	return a, nil
}

var _scriptsGet_balanceCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x52\x4d\x6f\xdb\x30\x0c\xbd\xeb\x57\xbc\xf9\xb0\x59\xc0\xe0\x5c\x86\x1d\x82\xae\x41\xd7\x2d\xb7\x01\x3b\x64\xbd\xd3\x32\xdd\x08\x93\x25\x43\xa2\x93\x0e\x45\xff\xfb\x20\x7f\x04\x35\xd0\x46\x07\x43\xa6\x1e\x1f\xdf\x23\xb9\xd9\xe0\x70\xb4\x09\xc9\x44\xdb\x0b\x22\x53\x93\x20\x47\x46\x4d\x8e\xbc\x61\xb4\x96\x5d\xa3\x36\x1b\x84\x16\xe4\x41\xc6\x84\xc1\xcb\xa7\x84\x9f\x4f\xd4\xf5\x8e\x0f\xe1\x2f\x7b\x7c\x9f\xd0\x4a\xd9\xae\x0f\x51\xb0\x1f\xfc\xa3\xad\x97\xd7\x36\x86\x0e\xc5\x2a\x56\x2c\xc8\x15\xcd\x04\x7c\x1d\x2a\xde\x64\xfc\xc5\x42\x0d\x09\x3d\x58\x3e\xa7\xb7\xe8\x57\x80\x42\x29\x32\x86\x53\x2a\xc9\x39\x8d\x76\xf0\xe8\xc8\xfa\x92\x9a\x26\x72\x4a\x5b\xdc\x4d\x17\xbd\xc5\x9f\xbd\x7d\xfa\xfa\x05\xcf\x0a\x00\x1c\x0b\x4e\x34\x38\xf9\x41\x42\xf8\xb6\x92\x5a\x45\x4e\xc1\x9d\xf8\x3e\x78\x89\x64\x24\x17\x2a\x73\x6c\x88\x86\x0f\xff\x7a\xde\xc2\x5b\xf7\x19\x27\xcb\xe7\xe9\x37\x7f\x6f\xde\x17\x59\xed\x0f\x0f\x4b\xad\xdb\x52\x6b\x50\xfa\x70\xc5\xf4\x6b\xf8\x6e\x54\x9b\xcf\x6e\x87\x9e\xbc\x35\x65\x71\x1f\x06\xd7\xc0\x07\xc1\xe3\xe2\x02\x39\x79\x14\x84\x36\xc4\x71\xc8\x66\x56\x5f\x68\x35\x72\x44\x96\x21\xfa\x9c\x72\x37\xcd\x79\xe9\x91\xae\x0c\xf5\x54\x5b\x67\xc5\x72\xaa\xea\x10\x63\x38\xdf\x7c\x7c\x5e\x09\xac\xe6\x2d\x78\xb9\x2d\x2f\x8a\xf2\xb9\xf4\xb0\xea\x66\x0b\xbf\x49\x8e\x17\x88\xde\x55\xf3\xb2\x5d\xf5\x31\xd5\x5c\x36\x0d\x91\x5b\x8e\x9c\x6f\x12\x46\x2f\x63\x3b\x0a\xad\x5e\xd4\xff\x00\x00\x00\xff\xff\x02\x72\x91\x6a\xd4\x02\x00\x00"

func scriptsGet_balanceCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_balanceCdc,
		"scripts/get_balance.cdc",
	)
}

func scriptsGet_balanceCdc() (*asset, error) {
	bytes, err := scriptsGet_balanceCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_balance.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x7c, 0x55, 0xda, 0x1a, 0xda, 0xf0, 0xe5, 0x7d, 0x21, 0xa2, 0x8d, 0x36, 0x41, 0x1, 0xc1, 0x8c, 0xaa, 0x5b, 0x83, 0x3d, 0xd4, 0xae, 0x3, 0xc0, 0x69, 0x41, 0xdf, 0x3a, 0xa1, 0xf3, 0xcd, 0x89}}
	return a, nil
}

var _scriptsGet_supplyCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xce\x3d\xaa\xc3\x30\x10\x04\xe0\x7e\x4f\x31\xb8\xb2\x9b\xa7\xe6\xf1\x8a\xd7\x27\x17\x88\x73\x80\x45\x96\xb0\x88\xfe\xd8\x5d\x83\x43\xc8\xdd\x03\xae\xe2\x76\x66\x18\x3e\xe7\x30\xaf\x49\xa1\x5e\x52\x37\x48\xe0\x45\x61\x6b\x80\x35\xe3\x0c\xdd\x7a\xcf\x4f\xc4\x14\xf2\x42\xce\xa1\xc5\xa3\xbc\xec\x5c\x7a\x0e\x73\x7b\x84\x0a\x2d\x2c\x06\xdf\xaa\x09\x7b\x23\x4a\xa5\x37\xb1\xf3\x26\x4a\x2b\x18\xbe\xa3\x81\x88\xbd\x0f\xaa\x23\xe7\x3c\x21\x6e\x15\x85\x53\x1d\xa7\x7f\xdc\xaf\x69\xff\xfb\xc5\x8b\x00\x40\x82\x6d\x52\x4f\x6f\x3f\x87\xed\x76\xd0\xe8\x4d\x9f\x00\x00\x00\xff\xff\x8f\xf7\xbd\x87\xc3\x00\x00\x00"

func scriptsGet_supplyCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_supplyCdc,
		"scripts/get_supply.cdc",
	)
}

func scriptsGet_supplyCdc() (*asset, error) {
	bytes, err := scriptsGet_supplyCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_supply.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa9, 0xd5, 0xf3, 0x75, 0xbf, 0xc, 0x80, 0x25, 0xb3, 0x59, 0x1, 0x8c, 0xc6, 0x48, 0xfe, 0x86, 0xbb, 0x9, 0x17, 0xd, 0xcc, 0x8c, 0x6a, 0xbd, 0x42, 0x10, 0xf, 0x68, 0x44, 0x60, 0xad, 0x57}}
	return a, nil
}

var _scriptsGet_supported_vault_typesCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x53\x4d\x8f\x9b\x30\x10\xbd\xf3\x2b\x9e\x72\xe8\x82\x54\x91\x7b\xd4\x76\x95\x1e\xaa\x1e\x57\x49\xda\x33\xc6\x0c\xb1\xb5\x06\xa3\xf1\x10\x14\x45\xf9\xef\x95\x4d\xd2\x0d\x51\xcb\x09\x8d\xe6\x7d\xf8\xcd\x8c\xed\x06\xcf\x82\x1f\x63\x7f\xb4\xb5\xa3\x83\x7f\xa7\x1e\x2d\xfb\x0e\xab\x45\x6d\x95\x65\xeb\xf5\x1a\x07\x63\x03\x82\x66\x3b\x48\x00\x93\x8c\xdc\x07\x88\x21\x84\x71\x88\x44\xd4\x2c\xa9\x5e\x02\xe4\x3c\x10\xea\x73\xea\x1a\xd8\x9f\x6c\x43\x0d\x2a\x51\x7c\x24\xa9\xa0\x9a\x86\x29\x84\x32\xb1\x3f\x57\x11\x8c\x1f\x5d\x03\xe3\x5d\x93\xf0\x5a\x0d\xaa\xb6\xce\xca\x19\x93\xb1\xda\x40\xfb\xbe\xf5\xdc\x05\x4c\x56\xcc\x52\xba\xdc\x91\x26\x7b\x22\x06\x53\x10\xb6\x3a\x9a\x8b\x66\x92\xd4\x64\xac\x23\x58\x41\xe3\x29\xf4\x2f\x82\x4e\x89\x10\x63\x32\x24\x86\xf8\x51\x89\xa9\x25\x0e\x10\x8f\xf6\xc6\x0f\x49\x31\x79\x86\x82\x1e\x83\xf8\x0e\x7c\x17\x73\xf6\x9d\x30\xbf\x66\x61\x67\x3f\x59\xd1\xa6\xf6\x8a\x9b\x2a\x22\xab\x54\xbd\x7b\xac\x4a\xfc\xf4\x13\x45\x82\x5b\x08\x6f\x4a\x4c\x05\x21\xe7\x42\x34\xc5\xf4\x1c\x40\x10\xcf\x14\x32\xa5\x35\x85\x90\x2b\xe7\x8a\xe8\x0f\x9d\xb2\x7d\x3e\x53\x6c\xb0\x9d\x73\xfc\x8c\x0f\xce\x0d\xde\xc6\xda\x59\x1d\xff\x8b\x0d\x2e\x87\xf3\x40\x1b\x7c\xf7\xde\x5d\x71\xc9\x32\x00\x58\xaf\xb1\x4d\xac\xcf\x92\xad\xe7\xe5\x18\x67\xda\xfb\xb8\x12\xd8\x91\x3c\x40\x76\xd4\xe2\x2b\x8e\x24\x5b\xad\xfd\xd8\xcb\xcd\x59\x51\xfe\x6d\xb1\x14\xca\xda\x33\xfb\xe9\xcb\xa7\xcb\xbf\x07\x78\xfd\x96\x7f\xf8\x2f\x92\x4a\xfc\x5e\x5f\x31\xa8\xde\xea\x7c\xf5\xab\x57\xf3\x54\x30\x33\x2d\xf6\x24\x2e\xc6\xc3\x06\x84\xb1\x9e\x57\xf2\x7f\x62\xf3\xf6\x0f\x4a\xcc\xaa\xd4\xbe\xd7\x4a\x1e\xd4\x4b\xf1\x7b\x61\xdb\x1f\xf3\xa2\x28\xee\x61\xed\xd2\x1d\x3c\x9d\xc1\x49\x8d\x4e\x92\x52\x28\x53\xe3\x7c\x2d\xcb\x6c\xca\x23\xc9\xfe\x0e\xf9\x1d\x11\x71\x1c\x21\x2f\xb2\xeb\x9f\x00\x00\x00\xff\xff\x7f\xdd\x37\x37\x99\x03\x00\x00"

func scriptsGet_supported_vault_typesCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_supported_vault_typesCdc,
		"scripts/get_supported_vault_types.cdc",
	)
}

func scriptsGet_supported_vault_typesCdc() (*asset, error) {
	bytes, err := scriptsGet_supported_vault_typesCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_supported_vault_types.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x6d, 0x4, 0x1a, 0x9c, 0x9f, 0x51, 0xb3, 0xec, 0xab, 0x13, 0xc, 0x39, 0xf6, 0x88, 0xd5, 0x1c, 0x77, 0x74, 0x44, 0x9a, 0x7, 0xb2, 0x58, 0xf0, 0x1e, 0x1e, 0x32, 0x3, 0xcf, 0x2f, 0x96, 0xbd}}
	return a, nil
}

var _scriptsMetadataGet_token_metadataCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x92\xc1\x0a\x9b\x40\x10\x86\xef\x3e\xc5\xd4\x43\x51\x28\x3e\x80\xc4\x84\x34\x6d\x6e\x85\x12\x42\xef\x93\x75\x4c\x96\xae\xbb\xb2\x3b\x9a\x96\x90\x77\x2f\xeb\xae\x62\x4a\x6a\x3d\xa8\x3b\xfc\xf3\xfb\xcd\xef\xc8\xb6\x33\x96\xe1\xeb\x2f\x6c\x3b\x45\x67\xf3\x93\x34\x34\xd6\xb4\x90\x2e\x4b\x69\x12\x75\xc7\x5e\x5f\xe5\x25\x56\xbf\x11\x63\x8d\x8c\x3f\x24\xdd\x5d\xec\xfa\xb7\xe0\xbd\xc7\xbb\xb6\x59\xe9\xfb\x4e\xe4\x8c\x1a\xc8\x46\xe1\xb2\x94\x26\x09\x0a\x41\xce\x65\xa8\x54\x0e\x4d\xaf\xa1\x45\xa9\x33\xac\x6b\x4b\xce\x95\xb0\x0f\x2f\x79\xb9\xc2\x5d\x1c\xcf\xfe\x09\x8f\x04\x00\x40\x11\x03\x0a\x61\x7a\xcd\x50\xc1\x95\x78\x1f\x0e\x93\x67\x9e\xcc\xb2\x01\x7b\xc5\x5f\x90\x11\xaa\x97\xf8\x0a\x1b\xf0\x0e\x46\xb3\x45\xc1\xde\x3d\xf3\xb5\xde\x0a\x3a\xff\xee\xa8\x04\x2d\xd5\x27\x18\x24\xdd\xc3\xd1\xdf\x37\xeb\x84\xd3\xb7\xb6\x59\x9e\x03\xba\x0f\xff\x19\x68\x92\xef\x46\x5a\x7f\xed\x76\xd0\xa1\x96\x22\x4b\x0f\xa6\x57\x35\x68\xc3\x7e\xbc\x30\x05\xf8\xe6\x11\x08\x1a\x63\x81\x6f\x04\x22\xd2\xa7\x7f\x4f\x7c\xa2\x06\xaa\x29\xa3\x42\x60\x87\x17\xa9\x24\x4b\x72\xc5\xc5\x58\x6b\xee\x9b\x8f\x8f\x17\xb8\xe2\x33\x2a\xd4\x82\x9e\xdb\x6c\x8e\xac\x68\x23\xf1\x77\xe4\x5b\xbe\x0a\x19\x4c\x01\xc1\x52\x43\x96\xb4\x20\x60\x33\x22\x06\x74\x3b\x2d\xc3\x02\xb4\x19\x43\x87\x6a\x2d\xa5\x2b\x71\xf8\xf3\xd9\xb0\x58\xa9\x72\x1e\x32\xda\x59\xe2\xde\xea\xe8\x98\x3c\x93\x3f\x01\x00\x00\xff\xff\xef\x98\xde\x00\x30\x03\x00\x00"

func scriptsMetadataGet_token_metadataCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsMetadataGet_token_metadataCdc,
		"scripts/metadata/get_token_metadata.cdc",
	)
}

func scriptsMetadataGet_token_metadataCdc() (*asset, error) {
	bytes, err := scriptsMetadataGet_token_metadataCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/metadata/get_token_metadata.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc9, 0x27, 0x32, 0xf6, 0x6f, 0xbc, 0xc7, 0x69, 0x60, 0x42, 0x21, 0x3a, 0x7f, 0x8f, 0x6b, 0x44, 0xae, 0x69, 0xb6, 0x27, 0x30, 0xef, 0x7a, 0x4d, 0x71, 0x96, 0xc5, 0x95, 0xbc, 0x93, 0x91, 0x4e}}
	return a, nil
}

var _scriptsMetadataGet_vault_dataCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\xcf\x6a\xc2\x40\x10\xc6\xef\x79\x8a\x69\x0e\x25\x81\x92\x07\x10\xff\x60\x6d\xbd\x15\x8a\x88\xf7\x71\x33\xd1\xa5\x9b\xdd\xb0\x3b\xd1\x16\xf1\xdd\xcb\x66\x93\x34\x16\x15\x73\x08\xd9\x61\xbe\xc9\xef\xfb\x76\x64\x59\x19\xcb\xf0\xfe\x8d\x65\xa5\x68\x6d\xbe\x48\x43\x61\x4d\x09\xf1\xb0\x14\x47\x6d\xdf\xb2\xd6\x3b\xb9\x6d\xab\x1f\xc4\x98\x23\xe3\x46\xd2\xd1\xb5\xaa\xdb\x0d\xd7\x67\x5c\x93\xf5\x9d\x5e\xb7\x22\x67\xd4\x81\x6c\xdb\x38\x2c\xc5\x51\x84\x42\x90\x73\x09\x2a\x95\x42\x51\x6b\x28\x51\xea\x04\xf3\xdc\x92\x73\x23\x98\x87\x8f\x74\x74\x87\x3b\x5b\xae\x37\x58\x2b\x7e\x43\x46\x38\x45\x00\x00\x8a\x18\x50\x08\x53\x6b\x86\x09\xec\x88\xe7\xe1\xd0\x0d\x4e\xa3\xbe\xed\xd0\x4b\x27\x17\x19\x66\x36\x30\x2e\x8c\x66\x8b\x82\xfd\xaf\x12\x5f\xab\xad\xa0\xf5\x4f\x45\x23\xd0\x52\xbd\xc0\x41\xd2\x31\x1c\xfd\x7b\xfc\x18\xe6\x34\x49\x53\x40\xf7\xf4\xa0\xab\x59\x43\xeb\x9f\xd9\x0c\x2a\xd4\x52\x24\xf1\xc2\xd4\x2a\x07\x6d\xd8\xdb\x0b\x2e\xc0\x8b\x1b\x20\x28\x8c\x05\xde\x13\x88\x96\x3e\xfe\xef\x78\x45\x05\x4c\xba\x8c\x32\x81\x15\x6e\xa5\x92\x2c\xc9\x65\x5b\x63\xad\x39\x8e\x9f\x4f\x17\x70\xd9\x2b\x2a\xd4\x82\xce\xd3\xa4\x8f\x2c\x2b\x5b\xe2\x4f\xe4\x7d\x7a\x17\x32\x0c\x05\x04\x4b\x05\x59\xd2\x82\x80\x4d\x83\x18\xd0\x6d\xb7\x11\x37\xae\xe6\x4e\x50\x3b\xe2\x41\x56\x49\x67\xef\x1a\x4f\x58\xd8\xdc\x90\x6b\xa0\xa4\xbf\xed\x92\x34\xc3\x70\x85\x7c\x80\x1d\x86\x25\xae\xad\xfe\x23\x89\xce\xd1\x6f\x00\x00\x00\xff\xff\x01\xa8\xd7\x14\x70\x03\x00\x00"

func scriptsMetadataGet_vault_dataCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsMetadataGet_vault_dataCdc,
		"scripts/metadata/get_vault_data.cdc",
	)
}

func scriptsMetadataGet_vault_dataCdc() (*asset, error) {
	bytes, err := scriptsMetadataGet_vault_dataCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/metadata/get_vault_data.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x26, 0x34, 0x86, 0x5c, 0xb8, 0x74, 0x3f, 0x48, 0xec, 0x71, 0xb9, 0x5a, 0x4b, 0x3b, 0xd0, 0x7b, 0x8, 0x14, 0x2a, 0x33, 0x99, 0x5e, 0x2c, 0x1e, 0xd, 0x31, 0x8b, 0x17, 0x81, 0x8f, 0xcc, 0x78}}
	return a, nil
}

var _scriptsMetadataGet_vault_displayCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\xd1\x8a\xea\x30\x10\x86\xef\xfb\x14\x73\x7a\x71\x68\xe1\xd0\x07\x10\xab\x78\x74\xbd\x5b\x58\x44\xbc\x1f\xd3\xa9\x86\x4d\x93\x92\x4c\x75\x45\x7c\xf7\x25\x4d\x5b\x75\x71\xdb\x8b\x92\x0c\xff\x4c\xbe\xf9\x67\x64\x55\x1b\xcb\xf0\xf6\x85\x55\xad\x68\x6b\x3e\x49\x43\x69\x4d\x05\xf1\x63\x28\x8e\x3a\xdd\xba\xd1\x07\xb9\xef\xa2\xef\xc4\x58\x20\xe3\x4e\xd2\xd9\x75\x59\xbf\x0b\x5e\xd7\x78\x95\x36\x28\x7d\xde\x86\x9c\x51\x27\xb2\x9d\xf0\x31\x14\x47\x11\x0a\x41\xce\x25\xa8\x54\x0a\x65\xa3\xa1\x42\xa9\x13\x2c\x0a\x4b\xce\x4d\x60\x11\x0e\xe9\x64\x84\x3b\x5b\x6f\x57\xd2\xd5\x0a\x2f\x70\x8d\x00\x00\x14\x31\xa0\x10\xa6\xd1\x0c\x39\x1c\x88\x17\xe1\xd2\x97\x4d\xa3\x41\x76\xc2\x46\xf1\x0a\x19\x21\x7f\x72\x30\xb3\x81\x70\x69\x34\x5b\x14\xec\x1f\x4a\x7c\xac\xb1\x82\xb6\x97\x9a\x26\xa0\xa5\xfa\x07\x27\x49\xe7\x70\xf5\xff\xe9\x28\xe4\xae\x7f\x6b\x96\xa4\x29\xa0\xfb\x33\xde\xd3\x20\x9f\xb7\xb4\xfe\x9b\xcf\xa1\x46\x2d\x45\x12\x2f\x4d\xa3\x0a\xd0\x86\x7d\x7b\xa1\x0b\xf0\xc9\x2d\x10\x94\xc6\x02\x1f\x09\x44\x47\x1f\xff\xec\x78\x43\x25\xe4\xbd\x47\x99\xc0\x1a\xf7\x52\x49\x96\xe4\xb2\xbd\xb1\xd6\x9c\xa7\x7f\xaf\x4f\x70\xd9\x7f\x54\xa8\x05\xdd\x66\xc9\x60\x59\x56\x75\xc4\x1f\xc8\xc7\x74\x14\x32\x14\x05\x04\x4b\x25\x59\xd2\x82\x80\x4d\x8b\x18\xd0\x6d\xbf\x0f\x0f\xa0\x25\xf7\x53\xcd\xc7\x8c\x3a\x10\x0f\xf3\x4f\xfa\xe6\x5e\xd1\x84\x65\x2d\x0c\xb9\x16\x49\xfa\x59\x57\xa4\x19\xee\xeb\xe3\xcd\xeb\x11\x2c\x71\x63\xf5\x9d\x22\xba\x45\xdf\x01\x00\x00\xff\xff\x7f\x69\x99\x2c\x6a\x03\x00\x00"

func scriptsMetadataGet_vault_displayCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsMetadataGet_vault_displayCdc,
		"scripts/metadata/get_vault_display.cdc",
	)
}

func scriptsMetadataGet_vault_displayCdc() (*asset, error) {
	bytes, err := scriptsMetadataGet_vault_displayCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/metadata/get_vault_display.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x18, 0x10, 0x18, 0x71, 0x73, 0xc8, 0x69, 0xb8, 0xb8, 0xbe, 0x13, 0x21, 0x7d, 0xfc, 0x8, 0x2, 0xa0, 0x87, 0xc1, 0xe9, 0xa8, 0x98, 0x95, 0xd3, 0xa9, 0x5d, 0x16, 0x5a, 0x1, 0x6b, 0x71, 0xfd}}
	return a, nil
}

var _scriptsMetadataGet_vault_supply_viewCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x52\xc1\x6e\xdb\x30\x0c\xbd\xeb\x2b\x58\x1f\x36\x1b\x18\x9c\xcb\xb0\x43\x50\x37\xe8\xba\x65\xa7\x01\x43\xe7\xf5\xce\xc8\x74\x2b\x4c\x96\x0c\x89\x4a\x1a\x14\xfd\xf7\x41\x96\xed\xb8\x43\xdb\xf8\x60\x48\xd4\xe3\xe3\xe3\x23\x55\xd7\x5b\xc7\xf0\xfd\x11\xbb\x5e\x53\x6d\xff\x92\x81\xd6\xd9\x0e\xb2\x65\x28\x13\x23\x6e\x1b\xcc\xbd\xda\x8d\xd1\x9f\xc4\xd8\x20\xe3\x9d\xa2\x83\x1f\xb3\xde\x06\xbc\xce\xf1\x5a\xda\x8c\x8c\x79\xb7\xe4\xad\xde\x93\x1b\x81\xcb\x50\x26\xc4\x6a\xb5\x82\x1f\xc4\x1e\xf8\x81\x80\x2d\xa3\x06\x1f\xfa\x5e\x1f\xc1\xb6\x43\x6c\x8f\x41\xf3\x47\x0f\x3c\x14\x6b\x94\x23\xc9\xfa\x98\xc8\xe6\x77\x21\x50\x4a\xf2\x3e\x47\xad\x0b\x68\x83\x81\x0e\x95\xc9\xb1\x69\x1c\x79\xbf\x86\xeb\x74\x28\xd6\xf0\x67\xab\x1e\xbf\x7c\x86\x27\x01\x00\xa0\x89\x01\xa5\xb4\xc1\x30\x54\x70\x4f\x7c\x9d\x2e\x53\x62\x21\x66\xd8\x50\xe6\x1b\x32\x42\xf5\xc2\xeb\xd2\xa5\x5e\x6e\xac\x61\x87\x92\x63\x7b\x79\x8c\x05\x27\xa9\x3e\xf6\xb4\x06\xa3\xf4\x27\xd8\x2b\x3a\xa4\x6b\xfc\x5f\xbe\xed\x72\xb9\xad\xef\xa6\x5a\x57\x79\x51\x00\xfa\x8b\x77\xa6\xb6\x84\x6f\x06\xb5\xf1\xdb\x6c\xa0\x47\xa3\x64\x9e\xdd\xd8\xa0\x1b\x30\x96\x63\x7b\xa9\x0b\x88\xc9\x83\x20\x68\xad\x1b\x4c\x94\xa3\xfa\xec\xff\x8e\x6f\xa9\x85\x6a\xf2\xa8\x94\xd8\xe3\x4e\x69\xc5\x8a\x7c\xb9\xb3\xce\xd9\xc3\xe5\x87\xa7\x17\xe2\xca\xaf\xa8\xd1\x48\x7a\xbe\xca\x67\xcb\xca\x6e\x54\xfc\x0b\xf9\xa1\x78\x57\x64\x22\x05\x04\x47\x2d\x39\x32\x32\x2e\xc5\x69\xce\xe0\xa6\xcd\x59\x08\x6d\xf9\x77\xda\x98\x6a\xd6\x3c\x4d\x65\x98\xc6\x39\xc3\xeb\xb8\x75\x89\x22\x1a\x7e\x71\x62\x4e\x9b\x18\x51\x50\x9d\xca\x9c\x19\xc8\x82\x2e\x31\x39\xe2\xe0\xcc\x82\xac\x4c\x47\xf1\x2c\xfe\x05\x00\x00\xff\xff\x3f\x27\xba\x7c\xbd\x03\x00\x00"

func scriptsMetadataGet_vault_supply_viewCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsMetadataGet_vault_supply_viewCdc,
		"scripts/metadata/get_vault_supply_view.cdc",
	)
}

func scriptsMetadataGet_vault_supply_viewCdc() (*asset, error) {
	bytes, err := scriptsMetadataGet_vault_supply_viewCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/metadata/get_vault_supply_view.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x97, 0xd8, 0x1f, 0xa, 0x79, 0xbf, 0xb8, 0x87, 0x1b, 0x50, 0xf7, 0x33, 0xd1, 0xd5, 0xc4, 0x27, 0xf9, 0x81, 0xc3, 0x8d, 0x3b, 0x78, 0x47, 0x38, 0xc9, 0x50, 0xf0, 0x9b, 0x91, 0xc1, 0xe7, 0xf3}}
	return a, nil
}

var _scriptsSwitchboardCheck_receiver_by_typeCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x91\x41\x6f\xe2\x30\x14\x84\xef\xf9\x15\xa3\x1c\x56\xf6\x25\x3f\x00\xb1\xb0\xb0\x6a\xcf\x08\x68\xef\xce\xcb\x4b\x62\xe1\xd8\x91\xf3\x52\x1a\x21\xfe\x7b\x45\x93\xb6\x69\x25\x0e\xbd\x3d\x7b\x66\xec\xcf\x63\xdb\xb4\x21\x0a\x1e\x7b\x5f\xd9\xdc\xf1\x31\x9c\xd8\x1f\xce\x56\xa8\xce\x83\x89\x05\xca\x18\x1a\xa4\xf7\xe4\x34\x99\xf2\x0f\xaf\xa6\x69\x27\x7d\xca\xcc\xb7\xd2\x24\x31\x44\xdc\x75\xca\x38\xa7\x51\xf6\x1e\x8d\xb1\x5e\x75\x5f\x47\x2d\xb0\x29\x8a\xc8\x5d\xa7\x17\xd8\x86\xe0\x70\x49\x1c\x0b\x66\x8e\x3d\x97\xf8\x8b\x8a\x65\x43\x14\x7a\x2f\xf3\xb4\x4e\x00\x20\xab\x58\xfe\x9b\xd6\xe4\xd6\x59\x19\x96\x7f\x2e\xf7\xb8\xb3\xd9\xbc\xeb\x73\x67\xe9\xba\x52\x77\xcd\xa3\x63\x67\xa4\x9e\xae\xc9\x43\x8c\xe1\xac\x34\xde\x97\xeb\x35\x5a\xe3\x2d\xa9\xf4\xc9\x9b\xdc\x31\x24\x60\x74\x80\x3e\x61\x70\xb6\x52\x23\x72\x27\xd1\x92\x70\x01\x19\x5a\x46\x28\xf1\x1b\xc6\xa9\xd9\x8c\x82\x27\xf3\xed\xfd\x99\x84\x83\x44\xeb\x2b\xa5\xf5\x87\x8c\xd4\x8c\x45\xa5\x7a\xe4\x8e\x2c\x7d\xf4\x3f\x2a\xcd\xa8\x66\x3a\xed\x99\xd8\xbe\x70\xdc\x0e\xc7\xa1\x65\x75\x83\x5b\xe0\x36\x2e\xff\xcd\xff\x31\x7b\x36\xbd\x93\x95\xd2\x3a\xb9\xbe\x05\x00\x00\xff\xff\xda\xcb\x5c\xb3\x3a\x02\x00\x00"

func scriptsSwitchboardCheck_receiver_by_typeCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsSwitchboardCheck_receiver_by_typeCdc,
		"scripts/switchboard/check_receiver_by_type.cdc",
	)
}

func scriptsSwitchboardCheck_receiver_by_typeCdc() (*asset, error) {
	bytes, err := scriptsSwitchboardCheck_receiver_by_typeCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/switchboard/check_receiver_by_type.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x81, 0xb8, 0x6e, 0x4b, 0xcb, 0x6a, 0xa3, 0x48, 0xfb, 0xf, 0xdc, 0xa5, 0xe5, 0x47, 0xac, 0x7c, 0xae, 0xc4, 0x91, 0x8b, 0x70, 0x1, 0x95, 0xf7, 0x73, 0xee, 0xf6, 0x9e, 0x85, 0x22, 0xec, 0xc9}}
	return a, nil
}

var _scriptsSwitchboardGet_vault_typesCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\xcd\x0a\xdb\x30\x10\x84\xef\x7a\x8a\xc1\x87\x62\x5f\xec\x7b\x68\x1a\x42\xa0\xbd\x86\x34\xf4\x52\x0a\x91\xe5\xb5\x2d\x2a\x4b\x46\x5a\x37\x84\x90\x77\x2f\xb2\x9a\xc6\x29\x09\xd4\x27\xa3\xfd\x66\x66\x7f\xf4\x30\x3a\xcf\xf8\x3c\xd9\x4e\xd7\x86\x8e\xee\x27\x59\xb4\xde\x0d\xc8\x9e\xde\x32\xf1\x8a\xfc\x7a\xd6\xac\xfa\xda\x49\xdf\xbc\x12\x2d\xca\x99\x10\x55\x85\x63\xaf\x03\x82\xf2\x7a\x64\x78\x92\x4d\x00\xf7\x84\xc0\xce\x53\x83\x5f\x72\x32\x0c\x25\x47\x59\x6b\xa3\x59\x53\x48\x9e\x12\x61\x11\xe3\x6c\xd4\x44\xb3\x51\x86\x40\x0d\xa4\x52\x6e\xb2\x2c\xa4\x52\x14\x42\x2e\x8d\x29\xd0\x4e\x16\x83\xd4\x36\xff\x53\x5c\x61\xdb\x34\x9e\x42\x28\x56\xf8\x7e\xbc\x8c\xf4\x03\x57\x21\x00\xc0\x10\x47\x07\xc6\x1a\x1d\xf1\x36\xe1\x77\x59\x91\x98\xaa\xc2\x97\x88\xc1\x53\x4b\x9e\xac\x22\xb0\x4b\x9d\x2f\x1a\x53\xce\xb6\xce\x0f\xda\x76\xb1\xba\x18\x7d\x3f\xd5\x46\xab\xbf\x69\x0b\xcd\x81\x5a\xac\xe7\xf8\xb2\x23\xde\xdd\x27\xbf\xe4\xef\xb6\x58\x26\xaf\xbd\xe4\xbe\x98\x0d\xe3\x57\xd6\xce\x7b\x77\xfe\xf8\xe1\xad\x6a\xf1\x7f\xfd\x1f\x28\xa5\xdc\x3e\xe5\x8f\x90\xcd\x06\xa3\xb4\x5a\xe5\xd9\xce\x4d\xa6\x81\x75\x8c\x94\xfb\xbc\x95\xc5\x74\xd9\x63\x7d\x07\xe2\xc9\xcf\x87\x83\xa7\x10\xcf\xec\x5a\x9c\x3a\xe2\x6f\xf1\xe6\xf1\x20\x21\x2f\x4e\x33\xed\x13\xfa\xbc\xa5\xf2\x1f\x54\x88\x9b\xf8\x1d\x00\x00\xff\xff\x0f\x40\x25\x01\xba\x02\x00\x00"

func scriptsSwitchboardGet_vault_typesCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsSwitchboardGet_vault_typesCdc,
		"scripts/switchboard/get_vault_types.cdc",
	)
}

func scriptsSwitchboardGet_vault_typesCdc() (*asset, error) {
	bytes, err := scriptsSwitchboardGet_vault_typesCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/switchboard/get_vault_types.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x31, 0x74, 0x9c, 0xc1, 0x57, 0xd3, 0x1b, 0xfe, 0x8, 0x2c, 0x71, 0xb9, 0x27, 0x9a, 0xd1, 0x61, 0xe0, 0x73, 0x5e, 0x58, 0xb4, 0xd9, 0x69, 0x25, 0x6f, 0x62, 0x61, 0x45, 0x1a, 0xbd, 0x79, 0x52}}
	return a, nil
}

var _scriptsSwitchboardGet_vault_types_and_addressCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\x41\x6f\xa3\x30\x10\x85\xef\xfe\x15\x4f\x1c\x56\x70\x81\x7b\xb4\xbb\x51\xb4\xd2\xf6\x1a\xa5\x51\x7b\x8d\x31\x03\x58\x35\x36\x1a\x0f\x8d\xaa\x28\xff\xbd\x02\x92\x88\xa8\x89\x8f\x9e\xf9\xe6\xbd\x79\x63\xbb\x3e\xb0\xe0\xff\xe0\x1b\x5b\x3a\xda\x87\x0f\xf2\xa8\x39\x74\x48\xee\xfe\x12\xf5\xa8\xf3\xf5\x68\xc5\xb4\x65\xd0\x5c\x3d\x82\x16\xe5\x44\xa9\xa2\x28\xb0\x6f\x6d\x44\x34\x6c\x7b\x01\x93\xae\x22\xa4\x25\x44\x09\x4c\x15\x3e\xf5\xe0\x04\x46\xf7\xba\xb4\xce\x8a\xa5\x38\x0f\xd5\x88\x0b\x9d\xe0\x27\xa6\xd7\x31\x52\x05\x6d\x4c\x18\xbc\x8c\xc3\x95\x36\x86\x62\x4c\xb5\x73\x19\xea\xc1\xa3\xd3\xd6\xa7\x97\x86\x15\x36\x55\xc5\x14\x63\xb6\xc2\x69\xff\xd5\xd3\xed\xe3\x8c\x93\x52\x00\x50\x14\x78\x21\x81\x06\x53\x4d\x4c\xde\x10\x24\xcc\xfe\x16\xf2\x26\xf8\x3a\x70\x67\x7d\x33\x56\x17\x1b\x6e\x87\xd2\x59\x33\x4d\x72\x24\x4b\x66\x47\x35\xfe\xa0\x21\xd9\xcc\x5e\xae\x9e\xb2\x7c\xb9\x6b\x5e\x06\xe6\x70\xfc\xfd\xeb\xf4\x2c\xc3\xfc\x87\xda\xf9\x6f\x3a\x09\x5e\xdf\x53\x72\x6e\xdf\x6a\x69\x6f\xfd\x19\xd6\x6b\xf4\xda\x5b\x93\x26\xff\xc2\xe0\x2a\xf8\x20\x98\x4d\xdc\x47\xb0\x58\x25\xc9\x6e\x59\xed\x48\x06\x9e\x6f\xc1\x14\xc7\xcb\x85\x1a\x87\x86\xe4\x6d\x3c\xe3\x18\x71\x7c\xb7\xd2\x5e\x52\x4e\xb3\xc3\x04\xf2\x4c\xdd\xa7\x93\x3f\xa7\x94\x3a\xab\xef\x00\x00\x00\xff\xff\x7f\x15\x84\x88\xa4\x02\x00\x00"

func scriptsSwitchboardGet_vault_types_and_addressCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsSwitchboardGet_vault_types_and_addressCdc,
		"scripts/switchboard/get_vault_types_and_address.cdc",
	)
}

func scriptsSwitchboardGet_vault_types_and_addressCdc() (*asset, error) {
	bytes, err := scriptsSwitchboardGet_vault_types_and_addressCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/switchboard/get_vault_types_and_address.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xef, 0x17, 0x56, 0x85, 0xb2, 0xb9, 0xd7, 0x4f, 0x34, 0xc6, 0xf8, 0xef, 0x17, 0xce, 0xe0, 0x3, 0x4e, 0x33, 0x6c, 0x36, 0xe4, 0xa5, 0x3a, 0xa8, 0x49, 0xdf, 0xda, 0xe2, 0x4c, 0x71, 0xeb, 0x71}}
	return a, nil
}

var _scriptsTestExample_token_vault_display_strict_equalCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x5d\x6f\xdb\x38\x10\x7c\xd7\xaf\xd8\xd3\x01\x86\x84\x4b\xe9\xf4\x23\xb9\xd6\xa8\x1b\xf4\xcb\xb8\x87\x16\x28\x02\x5f\xef\xa1\x28\x82\x35\xb5\x96\x89\x50\xa4\x40\xae\x6c\x07\x45\xfe\xfb\x81\xfa\xb2\xec\xe8\x8c\xe3\x83\x61\x71\x67\x67\x87\x23\x71\x54\x51\x5a\xc7\xb0\xa8\x4c\xae\x56\x9a\x96\xf6\x9e\xcc\x57\x62\xcc\x90\xf1\xbb\xa2\x9d\x87\xb5\xb3\x05\xc4\xff\x0d\x88\xa3\x96\x63\xac\x6d\x1c\x19\x9e\x6e\xc9\x5b\xbd\x25\xd7\x02\x87\x5b\x3d\xee\xf3\x1e\x8b\xb2\x9d\xd9\xe2\x86\x5b\x71\x14\x4d\xa7\x53\x58\x92\x67\xd8\x90\x2e\xc9\x81\x97\x4e\x95\x0c\x6c\x61\x8b\x5a\x65\xc8\x74\x4c\xe2\xc9\x6d\xc9\xc3\x62\xf9\x49\xf9\x52\xe3\x03\xa0\x07\xda\x97\x24\x99\xb2\x40\x16\xa1\x94\xe4\x7d\x82\x5a\xa7\xb0\xae\x0c\x14\xa8\x4c\x82\x59\xe6\xc8\xfb\x19\xbc\x6f\xfe\xa4\x33\xf8\x60\xad\x86\x5f\x11\x00\x80\x26\x06\x94\xd2\x56\x86\x61\x0e\x39\xf1\xfb\xe6\xa1\x6b\x4b\xa3\x1e\xd6\x8d\x82\xf9\x19\xc7\x45\xaf\x2e\xa9\x1b\xbb\x65\xb0\xa0\x59\xef\x40\x4f\x00\x8d\x17\x17\x47\x58\xff\x50\xac\xac\x0e\xe8\xc5\xf2\xa4\x94\x51\x63\x92\xb2\x66\x06\xf1\x72\xa3\x7c\x38\x68\x43\xc5\xb5\x49\xca\x43\xe5\x29\x0b\xde\xa0\x01\x6a\xe7\xb1\xad\x4d\x86\x07\x5b\x41\x46\x5b\xd2\xb6\xfe\xef\xc0\xd0\x9e\x61\xb1\x84\xdf\xad\x59\x68\xbb\x13\x27\xf3\x68\xcf\xe4\x0c\xea\xbf\x6f\xbf\xcc\x8e\xbf\x11\xf1\xf9\x50\x4a\xe2\x0d\x73\xe9\x67\xd3\x69\x3b\xef\xd9\x9a\x85\x35\xeb\x40\x68\x5d\x1e\xa7\xc7\xa4\xda\xe6\xd6\x9f\xd2\x7d\xa5\x4c\xa1\x4f\x7e\x1c\x21\xc3\x1a\x81\x25\x4f\x40\x61\xad\x95\xa6\x53\xd6\xbf\x96\xcb\x6f\x0b\xa5\x69\xbc\x23\xac\xca\x05\xa7\x3b\xfd\xe8\x3d\xb1\x17\x3b\x5a\x79\xc5\xf4\x2c\x50\x7a\x21\x6d\x31\xbd\x5a\x5f\xbf\x78\xf3\x4a\x5e\xca\x3f\xf1\xb5\xcc\xb2\xeb\x57\x2f\x57\xcf\xe5\xeb\x17\x97\x27\x05\xbc\xba\x92\xab\xe7\xf2\xcd\xcb\xeb\xbb\x60\xe7\xdd\x3f\xd6\x65\x05\xba\x7b\xe1\xb7\x79\x3c\xaa\xe1\xc4\x9b\x6e\x15\xe1\x9c\xcb\x87\x32\x7c\x34\xaa\xc0\x9c\xa6\x7e\x9b\xff\xb1\x2f\xf4\x53\x96\xf4\x67\x74\x86\xd0\x5b\xa9\x50\xfb\x59\xfb\xbd\x0f\x57\xcc\x3b\xc5\x4c\x2e\xfe\x5f\xaf\xb6\x05\xd7\x6e\x84\x37\x7b\xb7\xd2\x56\xde\xcb\x0d\x2a\x13\xa7\x47\xdc\x8f\xfd\xd3\xe0\xf6\x6c\xb1\xd2\xfc\x09\x19\x61\x7e\x74\xab\x85\x6b\x82\xe3\xa3\x35\xec\x50\x72\x50\x90\x84\xbd\xca\x49\x6a\x0c\x30\x4a\x5f\xc0\x56\xd1\xae\x79\x0c\xbf\x6f\xcf\xde\xc0\xef\xdd\xac\x77\x49\x9a\x02\xfa\xdf\xce\x5f\xd8\x1e\x7e\xd3\x0b\xbf\xb9\x81\x12\x8d\x92\x49\xfc\xd1\x56\x3a\x03\x63\x39\x84\x43\x73\x0a\x08\xcd\xb5\x20\x58\x5b\x07\xbc\x21\x90\xad\xfa\xf8\xf4\xc4\xb7\xb4\x86\x79\x97\x30\x42\x62\x89\x2b\xa5\x15\x2b\xf2\x62\x65\x9d\xb3\xbb\xb7\x93\x5f\x47\xe2\xc4\x07\xd4\x68\x24\x3d\xbe\x4b\x7a\xcb\x44\xd1\x2a\xfe\x86\xbc\x49\xcf\x8a\x6c\x48\x01\xc1\xd1\x9a\x1c\x19\x59\xdf\xfd\x20\xb1\x91\xee\xba\x98\x1e\x08\x45\xc9\x15\xea\xf3\xb1\x96\x13\x1f\x92\xad\x3b\xd9\x98\x94\x26\xaa\x33\x4b\xbe\xd6\xa3\xc2\x8b\x2e\xc8\xf0\x20\xb6\x83\x73\xdd\xfc\x70\xe1\x1c\x27\x8d\x04\x51\x27\x83\x50\x4c\x85\x17\x9a\x4c\xce\x1b\x98\xcf\xfb\xe0\x1d\x29\x5f\x40\x41\xde\x63\x1e\xae\x49\x93\x20\xd0\xf6\x15\xca\x17\xc8\x72\x13\x8f\x24\xf8\x17\x9b\xdb\x1a\x0d\xe3\xe4\x3f\x2e\x7f\x9e\x98\x33\xec\x78\xaa\xb5\xc3\x3b\xe2\xca\x99\x03\x65\x08\xfd\x70\x80\xb6\xa3\x7e\x9c\x4c\x0e\xf5\x26\xe8\x07\x88\x76\x63\x32\xe9\x8d\xed\xb1\x83\xe4\x1f\x34\x0c\x77\x87\xcc\x83\xdc\x16\x95\x1b\x8e\x38\xad\x4c\x26\xf0\x64\x58\x7f\x5a\x11\x02\x50\x54\x4e\x25\xe9\x81\x62\xb4\x3a\x18\x7e\xa8\xf7\x21\x36\xd6\xdc\x17\xa3\xc7\x28\xfa\x37\x00\x00\xff\xff\xd6\x72\xf9\x6e\xca\x08\x00\x00"

func scriptsTestExample_token_vault_display_strict_equalCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsTestExample_token_vault_display_strict_equalCdc,
		"scripts/test/example_token_vault_display_strict_equal.cdc",
	)
}

func scriptsTestExample_token_vault_display_strict_equalCdc() (*asset, error) {
	bytes, err := scriptsTestExample_token_vault_display_strict_equalCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/test/example_token_vault_display_strict_equal.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x24, 0xb8, 0xd3, 0x89, 0x76, 0xb4, 0x57, 0x9c, 0xe2, 0xc6, 0xef, 0xd5, 0xa9, 0xcb, 0x5c, 0x87, 0xfa, 0xac, 0x7f, 0xfc, 0x43, 0xac, 0x1, 0xc6, 0x3a, 0x17, 0xce, 0x73, 0x52, 0x58, 0x24, 0x89}}
	return a, nil
}

var _scriptsTokenforwarderIs_recipient_validCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x50\x4b\x6a\xc3\x40\x0c\xdd\xfb\x14\x0f\x2f\xca\x18\x8a\x0f\x60\xda\x86\xb4\x90\x75\x28\xed\x01\xe4\xb1\xec\x0c\x19\x8f\x8c\x2c\x13\x42\xc8\xdd\x4b\x6d\x5a\x48\x48\x88\x56\x42\xbc\x9f\x5e\xe8\x07\x51\xc3\x97\xec\x39\x6d\x44\x0f\xa4\x4d\x48\x1d\x5a\x95\x1e\xf9\xd5\x35\xcf\x32\xf2\x9e\xc7\xd1\x51\x8c\x05\xda\x29\xa1\xa7\x90\x1c\x35\x8d\x56\x58\x37\x8d\xf2\x38\x3e\xc3\x2e\x59\x5b\xb2\x5d\x85\xed\x54\xc7\xe0\x7f\xf7\xa2\xc2\xbb\x48\xc4\x29\x03\x80\xc8\x86\x76\xc1\xb2\x7e\x72\x8b\x57\x74\x6c\x6b\xef\x65\x4a\x36\x2b\x17\x33\xee\xc6\x94\x1d\xdb\x07\x0d\x54\x87\x18\xec\xf8\xf2\x74\xba\x8a\x5b\x6e\xfe\x74\x17\xf3\xf3\x9b\xbb\x11\xed\xbe\x7c\x2d\xaa\x72\x70\x77\x01\xab\x15\x06\x4a\xc1\xbb\xfc\x3b\x51\x1d\x19\x26\x58\x38\x78\x18\x05\xca\xa3\x69\xf0\x06\x3b\x0e\xbc\xd4\x4d\xf0\xff\xdf\xe4\x45\x36\xdb\x2a\xdb\xa4\xe9\xa2\xa1\xd2\xef\xd8\xef\x5d\x91\x9d\x7f\x02\x00\x00\xff\xff\x1c\x3c\x53\x68\xbc\x01\x00\x00"

func scriptsTokenforwarderIs_recipient_validCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsTokenforwarderIs_recipient_validCdc,
		"scripts/tokenForwarder/is_recipient_valid.cdc",
	)
}

func scriptsTokenforwarderIs_recipient_validCdc() (*asset, error) {
	bytes, err := scriptsTokenforwarderIs_recipient_validCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/tokenForwarder/is_recipient_valid.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x7a, 0x23, 0x4d, 0x2, 0xff, 0x47, 0x5f, 0xfa, 0x75, 0xc3, 0x97, 0xa7, 0xe, 0x25, 0x75, 0xe4, 0xab, 0xb9, 0x6d, 0xd0, 0x4a, 0x83, 0x54, 0x49, 0x43, 0x4e, 0x6f, 0xf8, 0x6a, 0xd6, 0x3b, 0xf9}}
	return a, nil
}

var _setup_accountCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x94\x4f\x6f\xdb\x3c\x0c\xc6\xef\xfe\x14\x4f\x73\xe8\x6b\x03\x69\x72\x2f\xd2\xf6\x5d\xb3\x16\xd8\x61\x40\xd1\x06\xb9\x33\x0e\xd3\x08\x53\x24\x43\xa2\x93\x1a\x45\xbf\xfb\x20\xf9\x4f\xed\xce\xdd\x80\x01\xf3\xc1\x80\x28\x8a\x7c\xf8\x23\xa5\xf9\x1c\xab\xbd\xf2\x10\x47\xc6\x53\x2e\xca\x1a\x28\x0f\x82\xf0\xa1\xd0\x24\x8c\x9d\x75\x61\xd9\xdb\x17\x0b\xd2\xda\x9e\x92\xf9\x1c\x64\x2a\x6b\x38\x9a\xb6\x5b\x10\xd6\x54\x6a\x81\x63\x6f\x4b\x97\x47\xbb\xec\x59\x39\x50\x9e\xdb\xd2\x08\x7c\x30\x90\x84\xa3\xb2\xe7\x0a\x39\x19\x94\x9e\xc3\x02\xfc\x42\x87\x42\xf3\xca\xfe\x60\x93\x24\xea\x50\x58\x27\xb8\x2f\xcd\xb3\xda\x34\x56\xec\x9c\x3d\x60\x32\xb0\x4d\x5a\xcf\xbb\xde\xf1\xc6\xb1\x6f\xea\xfc\xd6\x8a\x4f\x8f\xec\xad\x3e\xb2\x6b\xfc\xfa\xa6\xc9\x68\xe6\xef\x2c\xb4\x25\xa1\xe0\xe9\xc7\x64\x0c\x1c\x26\x49\xd2\x07\x96\x66\x78\x4d\x12\x00\x28\x1c\x17\xe4\x38\xf5\xea\xd9\xb0\xbb\x04\x95\xb2\x4f\x6f\xad\x73\xf6\xb4\x26\x5d\xf2\x14\xdf\xbc\x2f\xf9\x49\xac\xa3\x67\x5e\x52\x41\x1b\xa5\x95\x54\x4b\x6b\xc4\x59\xad\xd9\x4d\xf1\x50\x6e\xb4\xf2\xfb\xf7\xcd\x29\x9e\xe8\xc8\xf1\x7c\x86\xf3\x2f\x35\xe9\x2e\x65\xf8\x34\x0b\x8e\xa1\x33\x5f\x49\x08\x57\x03\x54\x33\x57\x17\x1e\x53\x50\x2e\xa1\x80\xb4\x6d\xe0\xaa\x2a\xf8\x12\x46\xe9\x29\x8e\x8a\x4f\xf5\x32\xfc\x17\x9f\x17\x3f\xbb\x5f\xad\xdb\x5c\xd7\x69\x96\x81\xfc\xd9\x6f\x60\xf6\xdd\x6f\x3a\xc5\xe1\xbb\xb9\x41\x41\x46\xe5\xe9\xa0\x3f\xd8\x5a\xf6\x30\xb6\x9e\x32\x7d\x64\xf4\x02\x44\x95\x93\xec\xbd\xf2\xf9\x1c\x8f\x2c\xa5\x33\x60\x72\xba\x82\xda\xc5\x51\x6b\xc7\x91\xb4\x63\xda\x56\xf0\x62\x1d\x87\xb1\x1f\x0c\x51\x0c\xdb\x85\x52\x3b\xd4\x6d\x9b\xf9\xba\x3d\xb3\x4d\x6c\xdc\xe2\x7c\x80\x33\x1e\xba\x4e\xc3\x88\x5c\xbe\x43\x6f\xcf\x3c\x90\xec\x33\x9c\x5d\x05\xa6\x78\x1d\x94\xeb\xa2\xce\xce\xf4\x36\xd2\x3e\x2c\x2e\x86\xbd\xcb\x1d\x93\xf0\xdd\xa1\x90\x2a\xe6\x4d\xa3\x5b\xaf\x4d\xff\x8f\x69\xcb\x86\x80\x96\x31\x08\x08\x86\x4f\x23\x00\x40\x66\x8b\xa2\x14\x28\x81\x32\x68\x0a\xe9\x02\x7c\x60\xe2\xe9\xc8\xe9\xe2\x22\xea\x98\x42\xec\x67\x0c\xc6\x15\x14\x61\xb6\x73\xe4\xdd\x6c\x37\x2f\x48\xa3\x24\x3c\x1d\xe0\x97\xc2\x7a\xf6\x3d\xb3\x32\xc2\x6e\x47\x39\xfb\x5f\x91\x2d\xa9\xc0\x55\x2b\xb2\x8b\xab\xd8\x77\x8a\x55\xb8\x71\x8b\xf3\xd7\xc1\x88\xce\x6e\x49\x93\xc9\xf9\xed\x3a\x1d\x34\x69\xb4\x98\xce\x23\xfb\x48\x65\x90\xb0\xa8\x2f\x6e\xda\xea\x9a\x82\xa4\x8f\xe7\xd0\x5c\x8b\x3f\xf3\x59\x8e\xf3\xf9\xcf\xe3\x91\x73\x56\xf1\x61\x2b\x4d\x7c\x7c\x28\x78\x0d\xb0\xb8\xc6\xe5\x6f\xc9\xb4\x29\xfe\x05\x9a\x9e\xb6\x8f\x74\xda\xad\x9a\x4e\x7d\x43\xde\x92\x9f\x01\x00\x00\xff\xff\xaa\x1b\x52\x89\xc0\x06\x00\x00"

func setup_accountCdcBytes() ([]byte, error) {
	return bindataRead(
		_setup_accountCdc,
		"setup_account.cdc",
	)
}

func setup_accountCdc() (*asset, error) {
	bytes, err := setup_accountCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "setup_account.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x30, 0xc4, 0x81, 0xb9, 0xd2, 0xa2, 0x3c, 0x67, 0xf4, 0x73, 0x77, 0x1, 0xa3, 0x30, 0x6a, 0x32, 0xa5, 0xd5, 0xb7, 0xd8, 0x48, 0xca, 0x8c, 0x17, 0x56, 0x24, 0xa3, 0xe3, 0x21, 0x3f, 0x60, 0x79}}
	return a, nil
}

var _switchboardAdd_vault_capabilityCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x57\x4d\x6f\xdb\x38\x10\xbd\xfb\x57\x0c\x7c\xf0\x4a\x81\x57\xbe\x1b\x49\xba\xad\xb7\x5d\xec\x61\x17\x45\x93\xcd\x7d\x4c\x8d\x2c\xa2\x32\x29\x90\x94\x1d\x23\xf0\x7f\x5f\x90\xfa\x22\x6d\x29\x71\xdc\xa2\x3a\x24\xb2\xc4\x99\x79\xf3\x66\x38\x4f\xe4\xdb\x52\x2a\x03\x5f\x2a\xb1\xe1\xeb\x82\x1e\xe5\x77\x12\x90\x29\xb9\x85\x69\xf0\x6c\x3a\x19\x5a\xf9\xb0\xe7\x86\xe5\x6b\x89\x2a\x1d\x32\xf2\x5e\x77\xf6\x9f\x9f\x71\x5b\x86\x81\xfc\x47\xc3\x71\xfe\x21\x83\x29\x1a\x7c\xe2\xb4\xd7\x43\x91\x82\x05\xd3\xc9\x64\xb1\x58\xc0\x63\xce\x35\x18\x85\x42\x23\x33\x5c\x0a\xe0\x1a\x10\x0c\x6d\xcb\x02\x0d\x41\x26\x95\xfd\xe9\xbd\x37\x39\x1a\x60\xb2\x2a\x52\x58\x13\x54\x9a\x52\x58\x1f\x00\xc5\x41\x0a\x02\x23\x01\xd3\x14\x10\x04\xed\x21\x6b\x62\x83\x71\x69\xec\xb0\x2a\x8c\x8b\xc9\xb0\xc4\x35\x2f\xb8\x39\x58\x03\x93\x13\x57\xa0\x3d\x92\x14\x69\x59\x29\x46\x76\xf1\xc4\x8f\xfd\x32\x99\x00\x00\x14\x64\x80\x3c\x3a\x9e\xac\xe7\x55\xe7\x74\x09\xfd\xfd\xed\xec\x25\xa0\x20\xf9\x46\x8c\xf8\x8e\xd4\xf1\xbe\x73\xe5\x85\xfe\x46\xd9\x12\x60\x36\x56\x9f\xc4\xbb\xaf\xa1\x94\x8a\x4a\x54\x14\x69\xbe\x11\xa4\x96\x80\x95\xc9\xa3\x4f\x52\x29\xb9\x7f\xc2\xa2\xa2\x39\xfc\xad\x75\x45\x0f\x46\x2a\xdc\x50\x8f\x6b\x25\x85\x51\xb2\x28\x48\xcd\xe1\x6b\xb5\x2e\xb8\xce\xfb\x97\x73\x78\xc0\x1d\x35\xf6\xff\x89\xf2\xf4\x7d\x0c\xb3\x8f\x8c\xc9\x4a\x98\xb8\xa5\xa4\xcd\xc5\x91\xfc\x27\x1a\x84\xbb\xa0\x89\x12\xcb\x69\xb1\x23\x17\x17\x99\xb1\x2d\x10\xb5\x3c\x3f\x1e\x4a\x5a\x82\xe0\xc5\x1c\x76\x9c\xf6\xf5\x4f\xfb\xf7\x76\xbc\x7d\x92\x2f\x8f\x4f\x6d\xac\xfb\x28\x8e\x3b\x14\xf6\xfa\xf0\x01\x4a\x14\x9c\x45\xd3\x95\x6b\x14\x21\x0d\x6c\x5a\x74\x60\x7d\xb8\x40\xae\xbb\x4c\x4e\xc0\x1a\x54\xd3\xb8\xcf\x66\x71\x13\xee\x02\x17\xcd\xae\xcc\xf8\xa6\x52\xe8\xfa\xe1\x66\xd1\x2f\xf7\x6f\x61\xd5\x2c\x23\x40\x31\xe4\x86\x67\x20\x88\x52\x4a\x3b\x23\x9e\x41\x5d\xc3\x44\xd7\xb5\x4a\xd6\xae\x8a\xb7\xb3\x80\x46\x67\x7e\x1f\xd9\xcd\xb5\xec\xc9\x6e\x6d\xbe\xa2\xc9\x63\xb8\xbb\xb3\x5c\xc2\x4b\x40\x89\x05\xa5\xc8\x6e\xa9\x7a\x73\x0c\x80\x42\x91\x82\xc6\x1d\x01\x37\xc0\x05\x34\x3e\x03\x2f\x27\x10\xed\xea\xe8\xf6\xf7\x00\x21\x73\x51\x3e\x6f\x4b\x73\x70\x6e\x23\x87\xd2\xab\xe9\x1f\x43\x09\xc5\xf1\x1c\x8c\x1c\x4b\xe9\x2c\x93\x82\x50\x01\x3d\x73\x6d\xb8\xd8\xf4\xdb\x8d\x93\x06\x3b\x1d\x50\x48\xc1\x19\x16\x50\xa2\xc9\xf5\x50\x06\xcc\x33\x49\xaa\xb6\xc5\xa3\x3e\xfc\xb6\x69\xb6\xf3\xf8\x97\x7a\x50\xcd\x4e\x1f\xcc\xc0\xed\xca\x86\xf7\x19\xb4\x43\x21\xc8\x24\x30\xe9\xf6\xd6\x0a\x4b\xb8\x1b\xc4\xd0\x16\x85\x5b\xd7\x67\x73\xe7\x13\x16\x28\x18\x1d\xef\xa3\x0b\x28\xb6\xd1\x5a\xf8\xd7\x06\xec\x07\xdd\x25\x11\x17\x8b\x76\x0c\x8d\x73\x30\x84\x21\xa0\x7d\x85\xe5\x1c\xd0\xf8\x5d\xf4\xbe\x32\xb6\xde\xbc\xdc\x4f\x1d\x0e\x57\xf5\xd8\xdd\xf9\x53\xe0\x2f\x32\x6e\xbc\x34\x5a\xe1\xeb\x90\xaf\x41\x4e\x29\xed\xba\x1a\xd2\x6f\x1a\xb0\x9e\xae\x9d\x2f\x4d\x45\x96\xbc\xa2\x38\x23\x05\xda\x90\x79\xad\x2c\x01\x1d\xf6\x1a\xce\x32\x58\x16\x7b\xb3\xf5\xc1\x85\x84\x54\x92\x76\x13\x36\xb7\xb3\x03\xdb\xc9\x02\xf5\x68\x69\x3d\x79\x09\x4f\xe3\x41\xb6\x56\x39\xb1\xef\x76\x0e\x5a\x2a\x06\xcc\xea\xfd\xde\xb7\x04\x6a\x4d\xca\x84\x59\xbc\x45\x54\xc2\x6c\x90\x28\x9e\x43\x60\xb6\x25\xad\x71\x43\x4b\xb8\x3e\xa7\xce\xdf\x50\x72\x37\xe0\x7f\x83\x69\x32\x55\x79\x89\x76\xf8\x72\xff\x2e\xc9\xb8\xe4\xfb\xa1\x15\x91\xf1\xb5\xef\xd6\x14\x1f\xee\xd5\x62\x32\x8a\xa7\x16\x16\xef\x49\xd4\x68\xc6\x45\x19\xfc\x32\x09\x19\x45\xd3\xee\x3c\x37\xe7\xd8\x7b\x75\x65\xd4\xed\x98\xbb\x4e\x64\x3a\x71\x99\x05\x05\x7a\x55\x6a\x7e\xe2\xf0\x3f\x9b\x32\xf6\xba\xa4\x64\x67\x86\xe7\x1a\xe5\x7d\x39\xd7\x34\x5c\x89\x77\x64\x8b\xd4\x3e\xe7\xf0\xcb\x73\xfb\x51\x35\x3c\xd3\xaf\x9f\xda\x94\x6d\x94\x21\xf6\xdf\x08\x37\x14\xe6\x78\x2a\x99\x08\x8a\x32\x52\x24\x18\x35\xe7\xb3\x06\x86\xf6\x0b\x1e\x8a\x63\x78\x86\xea\x7b\xe0\xba\xc9\x78\x56\x9e\xcb\x47\xe5\xa8\x5a\xf6\x27\x91\x1a\x4b\x98\xa4\x87\xbf\x91\xc7\x49\xcd\x8d\xfb\x47\xcf\xc4\x2a\x43\xfe\x61\x6b\xb1\x80\x8f\x69\x5a\x9f\x5e\x4e\x8f\xb3\xc1\x61\xb6\xd2\x76\xbe\x61\x9a\xfe\x4b\xfb\xfa\x7b\x73\x4b\x26\x97\xaf\xf2\x97\x78\xcb\x23\xe6\x1d\x6c\xdf\xd2\xd7\x10\xfa\x71\xf2\x7f\x00\x00\x00\xff\xff\x7f\x23\x7a\x17\xb9\x10\x00\x00"

func switchboardAdd_vault_capabilityCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardAdd_vault_capabilityCdc,
		"switchboard/add_vault_capability.cdc",
	)
}

func switchboardAdd_vault_capabilityCdc() (*asset, error) {
	bytes, err := switchboardAdd_vault_capabilityCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/add_vault_capability.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x84, 0x71, 0xd2, 0xa1, 0x52, 0xd1, 0x47, 0xc2, 0xe0, 0x23, 0x38, 0x53, 0x30, 0x6b, 0xdf, 0x15, 0xea, 0x94, 0x34, 0x56, 0xb5, 0x9f, 0x47, 0xec, 0xb6, 0x76, 0xb5, 0x3c, 0x56, 0xbd, 0xd2, 0x42}}
	return a, nil
}

var _switchboardAdd_vault_wrapper_capabilityCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\xcb\x6e\xdb\x3a\x10\xdd\xeb\x2b\x06\x5e\xe4\x4a\x40\x20\xed\x8d\x3c\x6e\xae\x6f\xd3\x55\x8b\x22\x31\xd2\xf5\x98\x1a\x49\x44\x64\x52\x20\x47\x56\x8c\xc0\xff\x5e\x50\x2f\x93\xad\x6c\x54\x0b\x5b\x8f\x19\x9e\x39\xe7\xcc\x8c\xdc\x37\xda\x30\x3c\xb7\xaa\x94\xbb\x9a\xb6\xfa\x9d\x14\x14\x46\xef\x61\x15\xbc\x5b\x45\x4b\x91\xaf\x9d\x64\x51\xed\x34\x9a\x7c\x29\xc9\xfb\x3c\xe7\x7f\xf9\xc0\x7d\x13\x02\xf9\xaf\x96\x71\xbe\x11\x63\x8e\x8c\x6f\x92\x3a\xbb\x84\x14\x04\xac\xa2\x28\xcb\x32\xd8\x56\xd2\x02\x1b\x54\x16\x05\x4b\xad\x40\x5a\x40\x60\xda\x37\x35\x32\x41\xa1\x8d\x7b\xf4\xbe\x73\x85\x0c\x42\xb7\x75\x0e\x3b\x82\xd6\x52\x0e\xbb\x23\xa0\x3a\x6a\x45\xc0\x1a\x30\xcf\x01\x41\x51\x07\x07\x6c\x6b\x86\xce\x60\xd3\x90\x01\x81\x0d\xee\x64\x2d\xf9\xd8\xe3\xb2\x06\xae\x48\x1a\xb0\x9e\x3a\x86\xac\x6e\x8d\x20\x17\x11\xf9\xa0\x9f\x51\x04\x00\x50\x13\x03\x3b\x26\xcf\xda\x74\x68\x72\x32\x9b\xf9\xd4\x35\x9c\xef\xef\x6e\x3e\x03\xe2\xe9\x0b\x09\x92\x07\x32\xa7\x87\xf9\x1c\x0f\xf7\x85\x8a\x35\xc0\xcd\x25\x57\x52\xef\x7e\xa8\xa3\x31\xd4\xa0\xa1\xd8\xca\x52\x91\x59\x03\xb6\x5c\xc5\xff\x69\x63\x74\xf7\x86\x75\x4b\x09\xdc\x3c\x09\xa1\x5b\xc5\xc9\x54\xfa\x04\xdb\x8b\xf2\x3f\x32\xc2\x7d\xe0\x72\xea\xb8\xd7\x07\xda\x68\xc5\x06\x05\x3b\x8f\xe2\x49\x8f\xed\xb1\xa1\x35\x28\x59\xdf\xc2\x41\x52\x37\x3c\xba\xdf\xbb\xcb\xfe\xa6\xcf\xdb\xb7\x09\xeb\x21\x4e\x92\xb9\x0a\x77\x3d\x3e\x42\x83\x4a\x8a\x78\xb5\xe9\x9d\x54\x9a\xa1\x9c\xaa\x03\x77\x46\x0f\xd4\xdb\xcf\x15\x81\x18\xab\x5a\x25\x67\x36\x59\x06\x5f\x9d\x1f\x15\x0d\x9e\xb8\xe0\xc1\x14\xcf\xeb\xa1\x0d\x5d\xcc\xa0\xd5\x3f\x16\x70\x50\x66\x3e\xc7\x52\x5d\xa4\x97\x5c\x85\xfb\x31\x31\x9d\xcf\x94\x64\xd3\x92\xf8\x8a\xc7\x71\xc0\xd5\x5d\xb3\xea\xa9\x19\xa3\x7e\x20\x57\x41\x58\xc8\x6c\x53\x91\x78\x07\x59\xf4\xa5\x4f\x39\x3e\x2f\xfa\x90\x96\xed\x9c\x82\xd6\x92\xe1\x10\xf8\x2a\xb1\x54\x38\x84\x38\xb9\x0d\x52\xf6\x64\x2d\x96\xb4\x86\xd5\x6b\xcf\x1a\x72\x4d\xb6\x77\xa7\xc2\x03\x01\x42\xa7\xcd\xbb\x54\x25\x14\x23\xf5\x51\xfa\x85\x0a\x57\xd1\x32\x33\xe7\x19\x82\xa1\x82\x0c\x29\x41\xe3\x20\x8e\x2a\x5b\x7f\x2c\x42\x87\xc2\x79\x39\xfb\x62\x59\x1b\x2c\x29\xdd\xf5\xed\x7f\xf7\x57\x53\xb4\xe0\x90\xeb\x93\xf5\xc5\xbd\x99\xbe\x0e\x28\x7f\xba\xb6\xd8\xca\x43\x2d\x21\x49\xaf\xfe\xa9\x8b\x4f\xc3\x1f\x7d\x90\x68\x99\xfc\x49\xcd\x32\x78\xca\xf3\xa1\xf5\xcf\x9e\x4f\x52\x79\x1b\xab\xb5\xce\x0d\xcc\xf3\xef\xd4\xf5\xe3\x06\x7b\xe2\x4a\x5f\xd5\x2e\xf5\xc2\x7f\x0e\xdb\x31\xd4\x43\x78\x4b\xed\x6a\x13\x85\xcd\xc3\xe7\xb5\xf0\x6f\xb0\x5a\x7a\xa4\x87\x38\xf9\xbd\x23\x4e\x51\x74\x8a\x7e\x05\x00\x00\xff\xff\x81\x27\xa5\x64\xdc\x06\x00\x00"

func switchboardAdd_vault_wrapper_capabilityCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardAdd_vault_wrapper_capabilityCdc,
		"switchboard/add_vault_wrapper_capability.cdc",
	)
}

func switchboardAdd_vault_wrapper_capabilityCdc() (*asset, error) {
	bytes, err := switchboardAdd_vault_wrapper_capabilityCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/add_vault_wrapper_capability.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x70, 0xc8, 0xf7, 0x96, 0x40, 0x2a, 0x3f, 0xc3, 0x4, 0xe6, 0xff, 0x36, 0xa5, 0xbe, 0x6a, 0x17, 0xb5, 0x9b, 0xf8, 0xb5, 0x4d, 0x8d, 0xd5, 0x53, 0xaf, 0xe0, 0xbb, 0x3f, 0xe2, 0x21, 0x5a, 0xc7}}
	return a, nil
}

var _switchboardBatch_add_vault_capabilitiesCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x4d\x6b\xeb\x38\x14\xdd\xfb\x57\x1c\xb2\x78\x38\x50\x9c\x7d\x78\x69\x69\x3b\xd3\x59\xcd\x50\xa6\x21\x9b\x52\xe8\xb5\x7d\x13\x8b\x51\x24\x23\x5d\x27\x0d\x43\xff\xfb\x20\xcb\x71\xe4\x21\x81\xa7\x85\x91\x7d\xbf\x8e\xce\x39\x96\xda\xb7\xd6\x09\x5e\x3a\xb3\x53\xa5\xe6\xb5\xfd\x87\xcd\xdb\x51\x49\xd5\x94\x96\x5c\x8d\xad\xb3\x7b\xcc\x6e\x85\x67\xd9\x50\xff\xfb\x17\xed\xdb\x21\x3e\xd4\xa4\x9f\xc6\xbc\x49\xa3\x3f\x59\xa8\x26\xa1\x8d\xe2\xa3\xbf\x36\x69\x92\x30\xcb\xb2\xc5\x62\x81\x75\xa3\x3c\xc4\x91\xf1\x54\x89\xb2\x06\xca\x83\x20\xbc\x6f\x35\x09\x63\x6b\x5d\x78\x4d\xe2\xd2\x90\xa0\xb2\x9d\xae\x51\x32\x3a\xcf\x35\xca\x13\xc8\x9c\xac\x61\x88\x05\xd5\x35\x3c\x1f\xd8\x91\x86\xe1\x23\xb6\x03\x02\x48\x80\xd0\xcf\x3c\x50\xa7\xc5\xdf\xa1\x64\x6d\xcd\x4e\x99\x5d\x5f\x87\x8a\x9d\x90\x32\xf8\x7c\xac\x6b\xc7\xde\x7f\x86\xcf\xd2\xb0\x72\xf0\x09\x85\x8e\xbd\xed\x5c\xc5\x45\xe8\x95\xa5\xd0\x72\x8a\x85\x4b\x0c\x1d\xe6\xf8\x37\xcb\x00\x40\xb3\x80\x13\x02\x37\x01\xc1\x2b\x49\xb3\xc4\x6b\x57\x6a\x55\x85\xfd\x98\x79\x38\x47\xfd\x12\xef\x97\xf8\xc7\x98\x90\xc0\xf9\x9b\xb7\x4b\xe0\xc7\x2d\x45\x8b\x64\x1f\xa1\xb4\x8e\x5b\x72\x9c\x7b\xb5\x33\xec\x96\xa0\x4e\x9a\xfc\xc9\x3a\x67\x8f\x1b\xd2\x1d\xcf\xf1\xe3\xb1\xaa\x6c\x67\x64\x44\x3f\xc1\xf5\x1b\x09\x61\x35\x71\x48\x11\x28\xd1\x07\x7e\xb6\x46\x1c\x55\x12\xf4\xcd\xcf\x34\xad\x4f\x2d\x2f\x61\x94\xbe\xc3\x41\xf1\x31\xbe\x86\xe7\xcf\xdb\xde\x28\x5e\xd6\x9b\xf3\xac\xfb\x7c\x3e\x1f\x51\x84\xf5\xf0\x80\x96\x8c\xaa\xf2\xd9\x73\xef\x02\x63\x05\xbb\x33\x3a\x84\x1e\xfd\xa0\xde\x3a\xd2\x30\xaa\x01\xd5\x6c\x7e\x39\xcd\x62\x81\x3f\x58\xfa\xf0\x20\x4b\xb4\xc7\xd0\xa4\x25\x69\xa2\x81\xd3\x06\x63\xb5\x67\xbd\x2d\xae\xca\x89\xd5\x85\xa4\xc2\x71\xc5\xea\xc0\x6e\xd4\x16\x48\x01\x3c\x9a\x1a\x5e\xac\x63\x28\x81\x32\xfd\x28\x72\x8e\x4e\xb0\x5b\xb4\xbd\xea\x3d\x10\x1f\x2d\x7f\x54\x5a\x07\xc7\xb7\xe4\x83\xe7\xa3\x35\xd3\x7e\xa9\x47\xf7\x2c\x8d\xad\xa7\x80\x2f\xae\xc2\x0a\xef\x1f\xb7\x82\x05\xb5\x2d\x9b\x3a\xbf\x7d\xc8\xf9\x95\xc3\x04\x36\x09\x8e\xb7\xec\xd8\x54\x3c\xc0\x43\x34\x99\x4f\xb1\x4d\xe7\x4e\x9d\x8c\xd5\x50\x51\x04\x62\x68\xc7\x45\xd9\x1b\xf3\xe7\x2f\xf9\xfb\x3e\x9f\xf8\x24\xac\xa0\xe1\xf2\xe6\x6d\x58\xbc\xc5\x29\x89\x40\x71\xcd\xaf\x9a\x2c\x62\x99\x1e\x32\xc1\x3f\x8b\xbc\xf4\x8f\xef\x68\x35\xfe\xe2\xaa\x13\x4e\xff\xa3\x20\x7c\x5d\x47\x5f\x51\x4b\xa5\xd2\x4a\x4e\x23\x5d\x89\x84\x9d\x0f\x17\x13\xd5\xf5\x5f\x7c\xec\xa9\xbf\x2a\xea\x94\xbf\x22\x49\xf7\x4f\xa7\xde\x91\x79\x1b\x2f\x92\xff\xc9\x7c\x87\xf1\xb2\x1a\x36\xc3\xef\xf1\x9d\x65\xdf\xd9\x7f\x01\x00\x00\xff\xff\x53\xe7\x9d\xf9\x47\x06\x00\x00"

func switchboardBatch_add_vault_capabilitiesCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardBatch_add_vault_capabilitiesCdc,
		"switchboard/batch_add_vault_capabilities.cdc",
	)
}

func switchboardBatch_add_vault_capabilitiesCdc() (*asset, error) {
	bytes, err := switchboardBatch_add_vault_capabilitiesCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/batch_add_vault_capabilities.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf5, 0xa4, 0x10, 0x87, 0xdc, 0x1b, 0x72, 0x21, 0x22, 0xfd, 0xb, 0x25, 0x8a, 0xbe, 0x55, 0xe6, 0xf2, 0x94, 0x6d, 0x7, 0xc6, 0x7c, 0x1a, 0xe8, 0xfe, 0xd9, 0x58, 0xa7, 0x70, 0x9f, 0x6e, 0x65}}
	return a, nil
}

var _switchboardBatch_add_vault_wrapper_capabilitiesCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\x4f\x6f\xdb\x3e\x0c\xbd\xfb\x53\x10\x39\xb4\x0e\x10\x38\xf7\xa0\x7f\x7e\x6d\x7f\xeb\x4e\x1b\x8a\x35\xe8\x0e\x45\x81\x30\x32\x1d\x0b\x53\x24\x41\xa2\x93\x06\x43\xbf\xfb\x20\xd9\x71\xad\x2e\x06\xba\x1c\x1c\x5b\x24\xc5\xf7\xc8\x47\xca\xad\x35\x8e\xe1\xbe\xd1\x1b\xb9\x56\xb4\x34\xbf\x48\x3f\xee\x25\x8b\x7a\x6d\xd0\x95\x50\x39\xb3\x85\xc9\x98\x79\x92\x75\xf1\x5f\x5e\x71\x6b\x3b\x7b\x17\x33\x3c\xea\xfd\x92\x8b\xbe\x11\x63\x89\x8c\x4f\x92\xf6\xfe\x54\xa6\xc4\x61\x92\x65\xf3\xf9\x1c\x96\xb5\xf4\xc0\x0e\xb5\x47\xc1\xd2\x68\x90\x1e\x10\x98\xb6\x56\x21\x13\x54\xc6\x85\xcf\x81\x9d\x6b\x64\x10\xa6\x51\x25\xac\x09\x1a\x4f\x25\xac\x0f\x80\xfa\x60\x34\x01\x1b\xc0\xb2\x04\x4f\x3b\x72\xa8\x40\xa0\xc5\xb5\x54\x92\x25\xf9\x36\xd0\x1a\xa9\x39\x26\x66\x03\x55\x07\x0e\x38\xf2\xdc\x61\xa3\xd8\x83\xa9\x00\xa1\x94\x55\x45\x8e\x34\xc3\x6a\x79\xb0\xb4\x02\xd4\x21\x9f\x32\x7a\x13\x93\x80\x20\xc7\x28\x35\xac\x6e\xca\xd2\x91\xf7\xab\x59\x38\xe7\x9a\xa4\x03\x3f\x28\xb8\x23\x6f\x1a\x27\xa8\x08\x49\xb3\x21\x91\x1c\xdb\xc8\x05\x74\x57\x4c\xe1\x77\x96\x01\x00\x28\xe2\x16\xcc\x03\x72\xed\x17\xf0\xfc\xd0\xac\x95\x14\xe1\xeb\x25\x75\x08\xd8\x82\x43\xf8\x7f\x37\x0d\xf2\xff\xa0\x6a\x01\x70\x36\xd6\xf0\x62\xf0\xde\xe6\xb6\x8e\x2c\x3a\xca\xbd\xdc\x68\x72\x0b\xc0\x86\xeb\xfc\xd6\x38\x67\xf6\x4f\xa8\x1a\x9a\xc2\xd9\x8d\x10\xa6\xd1\xdc\xc3\x4d\x10\xfd\x8f\x8c\x70\x99\x08\xa8\x08\x35\x50\x3b\xba\x33\x9a\x1d\x0a\x0e\xed\xcf\x8f\x75\x09\xc8\x17\xa0\xa5\x9a\xc1\x4e\xd2\xbe\xfd\x0c\xcf\x8b\x71\xe9\x14\xf7\xcb\xa7\x63\xae\xab\x7c\x3a\xed\x51\x84\xdf\xf5\x35\x58\xd4\x52\xe4\x93\xbb\x28\x12\x6d\x18\x36\x47\x74\x10\xee\x88\x89\xa2\xb2\xb8\x26\x10\x1d\xaa\xc9\xf4\x9d\xcd\x7c\x0e\x8f\x6c\x1c\x45\x87\x8e\x0a\xb4\xc3\xe0\x48\x90\xdc\x91\x3b\xf7\x60\x63\x57\xc0\x22\xd7\x20\x75\xf4\x45\xe7\xf0\x10\x14\xd4\xd9\x86\x37\x06\xbf\x4e\x85\x7b\xa9\x54\x50\xaf\x45\x1f\xf4\xdb\x0a\x27\x91\xcd\x96\xb8\x36\x65\x1f\xee\x49\x55\xc5\xbb\x24\xe0\x12\x9e\x5f\xc6\x8c\x05\x5a\x4b\xba\xcc\xfb\x76\x14\x47\xcc\xc1\xfc\x29\x96\xe7\x1e\xf8\x60\xe9\x2f\x56\xe1\xf0\x34\x85\xe1\xa5\xff\x42\x27\x0a\x78\x8c\x4e\x34\x1e\xe9\x44\x4d\xfc\x97\xe8\x2a\x8a\x60\x20\x80\x21\x88\xaf\xc4\x80\xe0\x28\x4e\xb1\xa0\x1e\x54\x94\xb5\x1f\x82\x4b\x13\xa7\xb3\x03\x97\x5d\x44\xe1\xd9\x38\xdc\x50\xb1\x8e\xa3\x70\xf1\xa9\x89\xba\xca\x13\x65\x86\x5f\xd8\x8a\x8b\xd1\xf5\x5c\x3c\xb6\x59\x42\xa3\x92\xd0\xe9\x49\x59\xb7\x58\x52\x92\x03\xfc\x93\xb6\x2e\xf1\xf1\xd6\xb6\x9d\x5e\x49\x34\x4c\xc3\xc9\x9d\xcf\xc3\xfe\x69\x47\xe1\xb8\x2e\x0f\xb9\x24\x3f\x3d\xd5\xc8\xc6\x4b\xbd\x09\x3b\xf6\x3b\xed\x63\xf9\x7f\xba\xd0\x1f\xe7\x6f\x0f\x09\xe8\x13\xb5\x2c\x46\xa3\xd2\x32\xd9\x76\xe9\x7d\x50\xf5\x0c\x12\x27\x6e\x17\xdf\x07\xad\xcc\x12\x9f\x7e\xbf\x76\x2f\xbd\xb1\x9b\x81\xb7\x2c\x7b\xfb\x13\x00\x00\xff\xff\x7b\xb9\xab\xc6\x30\x07\x00\x00"

func switchboardBatch_add_vault_wrapper_capabilitiesCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardBatch_add_vault_wrapper_capabilitiesCdc,
		"switchboard/batch_add_vault_wrapper_capabilities.cdc",
	)
}

func switchboardBatch_add_vault_wrapper_capabilitiesCdc() (*asset, error) {
	bytes, err := switchboardBatch_add_vault_wrapper_capabilitiesCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/batch_add_vault_wrapper_capabilities.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x86, 0xfc, 0x8e, 0x81, 0xcf, 0xed, 0xdb, 0x37, 0xa9, 0x8, 0x21, 0xc9, 0xf8, 0xe7, 0x1c, 0xd2, 0xed, 0xfc, 0xff, 0x5d, 0xe1, 0x49, 0x43, 0x91, 0xf9, 0xbe, 0xa4, 0x97, 0x4a, 0x11, 0x3f, 0x33}}
	return a, nil
}

var _switchboardRemove_vault_capabilityCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x93\x41\x6f\xa3\x3e\x10\xc5\xef\x7c\x8a\xa7\x1c\xfa\x87\x0b\xdc\x51\xff\xad\x76\xab\xdd\xbd\x56\x49\xd5\xfb\xe0\x0c\x60\x2d\xd8\xc8\x1e\xd2\x46\x55\xbe\xfb\xca\xd0\x10\xa3\x4d\x76\xd7\x97\x04\xdb\x33\x6f\xde\xcf\x33\xba\x1f\xac\x13\x7c\x1f\x4d\xa3\xab\x8e\x5f\xec\x4f\x36\xa8\x9d\xed\xb1\x59\xed\x6d\x92\x6b\x37\x77\x6f\x5a\x54\x5b\x59\x72\xfb\x6b\x41\xd1\xf1\x12\xff\xed\x9d\xfa\x61\x2d\x14\x6f\x6d\x92\xa4\x28\x0a\xbc\xb4\xda\x43\x1c\x19\x4f\x4a\xb4\x35\xd0\x1e\x04\xe1\x7e\xe8\x48\x18\xb5\x75\xe1\x33\x3a\x97\x96\x04\xca\x8e\xdd\x1e\x15\x63\xf4\xbc\x47\x75\x04\x99\xa3\x35\x0c\xb1\x70\xdc\xdb\x03\xa3\xfe\x2c\x0f\x32\xe9\x1f\x68\xec\x64\x12\x54\x34\x50\xa5\x3b\x2d\xc7\xb9\x28\x69\x59\x3b\xf8\xc8\x9f\x63\x6f\x47\xa7\x38\x5c\x4f\x22\xe9\x74\x20\x69\x4b\x3c\x8f\x55\xa7\xd5\x33\x49\x9b\xe1\x23\x49\x00\xa0\x63\x01\x47\xde\x5e\x83\xda\xd3\x2c\x24\xc7\x12\x4f\x8b\xe6\xfd\xdd\xc7\x0a\x5c\xbe\x65\xc5\xfa\xc0\xee\xf4\xb0\x64\x8a\x6a\xd9\x72\x5d\x02\x77\xb7\x58\xe7\xd1\xff\xb9\x92\xc1\xf1\x40\x8e\x53\xaf\x1b\xc3\xae\x04\x8d\xd2\xa6\x5f\xad\x73\xf6\xed\x95\xba\x91\x33\xdc\x7d\x51\xca\x8e\x46\x96\xe2\xc3\x2a\x0a\xfc\x60\x09\x2c\xae\xf1\xc1\x9c\xed\x3f\x0f\x9a\x63\x97\x38\xcf\x5d\x9d\xdf\x76\x8e\xff\x3f\x43\xf3\x25\xab\x66\x9f\x37\x2c\x7f\xe0\x30\x61\xce\x16\x89\xb0\x1e\x1f\x31\x90\xd1\x2a\xdd\xec\xa6\x74\xd8\x5b\xf6\x30\x56\xd0\xd2\x81\x71\x8e\x8d\x38\x83\x04\x8d\x3e\xb0\x41\xc8\xb6\xc9\x7e\xb3\x4a\x70\x5c\xb3\x63\xa3\xa6\xae\xb9\xb8\xf4\x31\xff\xb5\xd1\xf5\xc3\x5c\xcc\x79\xb1\x8e\x1a\xce\xab\x89\xf3\xfd\x3f\x3d\xd7\x43\xba\x72\x18\x56\xc0\x5d\xde\x1c\xbb\x7c\x37\xab\x84\xc6\x5b\x85\x66\x11\x9e\xa7\x69\x2e\x02\x98\xb9\x96\xb5\xc9\xa8\xfe\x33\x91\xd3\xfc\xc3\xef\xac\x46\xe1\x4b\x4b\x14\x05\xb6\xf3\x20\xdd\xec\x89\x68\x62\x46\xaf\x4d\x33\xed\xe6\xf3\xf8\x4d\x6d\x90\x66\xe8\x59\x5a\x7b\xa6\x78\x85\xe1\xea\xfa\x45\xa5\xfc\x5b\x63\x5d\xaa\x3f\x25\xbf\x02\x00\x00\xff\xff\x3d\x55\x3c\x24\xd9\x04\x00\x00"

func switchboardRemove_vault_capabilityCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardRemove_vault_capabilityCdc,
		"switchboard/remove_vault_capability.cdc",
	)
}

func switchboardRemove_vault_capabilityCdc() (*asset, error) {
	bytes, err := switchboardRemove_vault_capabilityCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/remove_vault_capability.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x46, 0x4f, 0xc7, 0x3c, 0x6, 0x9f, 0xb3, 0x52, 0xf6, 0x12, 0x96, 0x57, 0x15, 0xd1, 0xdc, 0x4f, 0x26, 0x26, 0x38, 0x2c, 0x8f, 0x74, 0xd4, 0xb9, 0xd7, 0x51, 0x0, 0x6f, 0xcd, 0x1e, 0x92, 0x28}}
	return a, nil
}

var _switchboardSafe_transfer_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x55\x4d\x6f\xe3\x36\x10\x3d\xc7\xbf\x62\xd6\x87\x44\x02\x5c\xe5\x52\xf4\x60\x24\x59\x6c\x93\xa6\xa7\x02\x8b\xad\x9b\x9e\xc7\xe4\x48\x62\x57\x26\x05\x72\x64\xc5\x08\xf2\xdf\x0b\x92\xfa\xa0\x36\x0e\x9a\xe6\x10\x9b\xd2\x7c\xbc\x79\xef\x71\xac\x0e\xad\xb1\x0c\x8f\x9d\xae\xd4\xbe\xa1\x9d\xf9\x4e\x1a\x4a\x6b\x0e\xb0\x5e\x3c\x5b\xaf\xce\x45\xfe\xd9\x2b\x16\xf5\xde\xa0\x95\xe7\x92\x92\xd7\x53\xfe\x6f\xcf\x78\x68\x97\x8d\xd2\x47\xe7\xfb\xfc\x41\x8c\x12\x19\x9f\x14\xf5\xee\x5c\xa7\x45\xc0\x7a\xb5\xba\xbe\x86\x5d\xad\x1c\xb0\x45\xed\x50\xb0\x32\x1a\x94\x03\x04\xa6\x43\xdb\x20\x13\x94\xc6\xfa\x63\xf2\x9e\x6b\x64\x10\xa6\x6b\x24\xec\x09\x3a\x47\x12\xf6\x27\x40\x7d\x32\x9a\xc0\x57\x64\x03\x8e\xb4\x04\xf6\x1d\x9d\x3f\xa2\x36\x5c\x93\x05\x14\xc2\x74\x9a\x81\x6b\x6b\xba\xaa\x06\x04\x97\x30\xd3\x39\xa5\x2b\xe0\x9a\xc0\x61\x49\x0f\xd4\x1a\xa7\xd8\x17\x3c\x10\xd7\x46\x16\x11\x6a\x3c\x40\xaf\x9a\x06\xb4\x61\x68\x51\x2b\x01\xaa\x8c\x89\x49\x39\x69\xc8\x85\x88\x1a\x8f\xe4\xdf\xfa\x52\x02\x5b\xdc\xab\x46\xf1\x29\xc0\x64\x63\xc3\x2b\x90\xe4\x94\x25\x09\x8f\xbb\x0d\x58\xe2\xce\xea\x11\x8b\x8c\x38\x48\xc2\x11\xbb\x86\x41\x69\xc7\x84\xb2\x88\xdc\x11\xf4\x8a\x6b\x69\xb1\x07\x3c\x84\xd9\xd0\x4f\x5e\xd3\x34\x6b\x50\xa1\x22\xfe\x32\x9c\xfb\x91\x39\x1f\xd4\xa2\xc5\x03\x31\x59\x37\x32\xe7\x9f\x26\x6c\x17\xab\xe4\x90\xb1\xd9\xc2\x17\x29\x2d\x39\xb7\x19\xfa\x6d\xe1\xaf\x47\xf5\xfc\xcb\xcf\x39\xbc\xac\x56\x00\x00\x03\x2c\x4b\x25\x59\xd2\x82\xc6\xa2\x11\x7d\x40\x13\x3b\x9f\xc8\x5e\xb9\x11\x66\x48\x6d\x88\x63\xd8\x37\x2a\xb7\x80\x1d\xd7\xd9\xc2\x3d\xc5\xdf\xc3\xac\x39\x5c\xa6\x66\x2c\x9e\x7c\x52\x6c\xdf\x5a\x6a\xd1\x52\xe6\x54\xa5\xc9\x0e\x55\x7e\x35\xd6\x9a\xfe\x09\x9b\x8e\x72\xb8\x1c\x98\x98\x10\x2f\x5a\x3f\x20\x23\xdc\x2e\xec\x5f\x58\x72\xa6\x39\xd2\xbd\xd1\x6c\x51\xb0\x37\x6f\xe6\x9f\x75\x56\xd0\xee\xd4\xd2\x16\xb4\x6a\x36\x70\x54\xd4\xc7\xa3\xff\x7f\xf3\xbe\xf1\x8b\xc7\xdd\xd3\xd8\xeb\x2e\xcb\xf3\x09\x85\xff\xfb\xfc\x39\x5a\x2a\x5b\xdf\x07\xa5\xbc\x83\xaa\x11\x1d\xf8\x1a\xa1\x51\xb8\x18\x9e\x48\x31\xa0\x5a\xe7\xf3\x34\xd7\xd7\xf0\x3b\x31\xe0\x5b\x15\x22\x2d\x57\x2e\x5a\x6f\xf0\xd4\x94\xe7\xa8\x29\x8b\x51\x01\xb8\x1d\xa2\x0b\x1f\x8b\x15\x15\xfb\x40\xe3\xcd\xff\x15\xe6\x2e\xf3\xaa\x6f\x67\x7e\xc7\x82\x5f\x91\xeb\x7c\x75\x71\x71\x71\x6e\xe6\xd8\xec\xed\x04\xa6\x8f\x03\x84\xd2\x9f\xc6\xa9\x5f\xe3\x07\x3d\x93\xe8\x98\x52\x65\x07\x2e\x38\x78\x52\xa8\x56\x91\xe6\x2b\x07\x6d\xb7\x6f\x94\x98\x6e\x89\xd9\xff\x43\x82\x17\x76\x98\xa2\xe1\x36\xb9\x3f\x19\x9b\x7c\x69\x1b\x47\x9a\x03\x18\xb8\xf9\x69\xc9\x60\x31\xde\xcd\x6c\xbc\x2b\xf1\xf3\x43\x4a\xa5\x60\xd3\xfd\xfd\x8d\x04\xa9\x23\xd9\x25\x86\x39\x20\x2a\x37\x65\x17\x15\xf1\xfd\xb4\x74\xb2\xf7\xf6\x7e\xf1\x35\xf0\x11\x15\x49\xed\x38\x8a\x7e\xf9\x6e\x66\xf2\xfd\xe5\x23\x41\xb1\xd3\xeb\x5d\xf6\xdf\xd2\xc7\x49\x97\xdc\x24\xa3\x7e\x5a\xe7\x1e\xe2\x82\xcd\x61\x6d\x07\x0a\xcb\x4e\x4b\x07\xe1\x27\x63\xb1\x9a\x37\xe3\xba\x1e\x76\xeb\xbc\xaa\x85\xf1\xde\xe5\xb8\x1c\xd3\x4d\x1f\x77\xf2\x5c\x35\x6d\x39\x6c\x64\x30\x65\x1c\xe5\xbb\xd2\xd5\x06\x9c\x81\x9e\x86\xdd\x6f\xfc\x2c\xc6\x8f\xc2\xb5\x71\x3f\x96\x50\x65\xd0\x50\x1b\x7e\x18\x77\xfd\xec\xa7\x85\xb0\x45\xf2\xc3\x34\x5c\xaa\xe0\xb9\xc1\x80\xef\xfa\x2d\x7f\x59\x68\xba\x34\xa9\xfc\xa1\xde\x1b\x1c\xb3\x21\x5e\x67\xaa\x25\x39\xb6\xe6\x14\x6b\x4d\x08\xa6\xcb\xf8\xba\xfa\x37\x00\x00\xff\xff\xfe\x7e\x74\x01\xb2\x08\x00\x00"

func switchboardSafe_transfer_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardSafe_transfer_tokensCdc,
		"switchboard/safe_transfer_tokens.cdc",
	)
}

func switchboardSafe_transfer_tokensCdc() (*asset, error) {
	bytes, err := switchboardSafe_transfer_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/safe_transfer_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb4, 0xee, 0x88, 0x3d, 0x6e, 0x49, 0xe2, 0x64, 0xb9, 0xd0, 0x9e, 0xb2, 0x9b, 0x79, 0x4d, 0xeb, 0x29, 0xd8, 0x5f, 0x11, 0x3c, 0xba, 0xb3, 0xd4, 0x76, 0xc4, 0x87, 0x6e, 0xe0, 0xec, 0xef, 0x54}}
	return a, nil
}

var _switchboardSafe_transfer_tokens_v2Cdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x55\xc1\x6e\xdb\x46\x10\x3d\x5b\x5f\x31\xd1\xc1\x26\x81\x84\xba\x14\x3d\x08\xb6\xd3\x24\xad\x7b\x2a\x10\xa4\xae\x7a\x1e\x2e\x87\xe2\x36\xab\x5d\x62\x77\x68\x5a\x08\xfc\xef\xc5\x70\x49\x8a\x6b\xcb\x80\xa3\x83\x85\xd5\xee\xcc\x9b\x79\xef\xcd\x58\x1f\x5a\xe7\x19\xee\x3a\xbb\xd7\xa5\xa1\x7b\xf7\x9d\x2c\xd4\xde\x1d\x60\x9d\xfc\xb6\x5e\x9d\x7b\xf9\x77\xaf\x59\x35\xa5\x43\x5f\x9d\x0b\x5a\x5c\xcf\xf1\x7f\x3c\xe2\xa1\x4d\x81\x96\x3f\x9d\xc7\xf9\x8b\x18\x2b\x64\xdc\x69\xea\xc3\x39\xa4\xe4\xc1\x7a\xb5\xda\x6c\x36\x70\xdf\xe8\x00\xec\xd1\x06\x54\xac\x9d\x05\x1d\x00\x81\xe9\xd0\x1a\x64\x82\xda\x79\x39\x2e\xee\xb9\x41\x06\xe5\x3a\x53\x41\x49\xd0\x05\xaa\xa0\x3c\x02\xda\xa3\xb3\x04\xec\x20\x90\xad\x80\x05\x2e\xc8\x11\xad\xe3\x86\x3c\xa0\x52\xae\xb3\x3c\x60\x72\xe3\x5d\xb7\x6f\x00\x21\x2c\xa8\xe9\x82\xb6\x7b\xe0\x86\xa0\xa2\xd6\x05\xcd\x70\x20\x6e\x5c\x05\x65\xc7\x50\x52\xed\xfc\x7c\x23\x0f\x7b\x82\x5e\x1b\x03\xf4\xd8\x1a\xad\x34\x9b\x23\xa8\x86\xd4\x77\xe8\x1b\x1a\x10\x3d\x29\xd2\x0f\xda\xee\x07\x4c\x85\x2d\x96\xda\x68\x3e\x4a\x87\xa5\xf3\xde\xf5\x58\x1a\x02\xe7\xc1\x3a\x06\xb4\x15\xe8\x1a\x8e\x14\xa4\x04\x0b\x9a\x63\xfa\xa9\x16\xa9\xeb\x01\x3b\xc3\xd2\x94\x1c\x62\x7a\xf2\x8b\xcc\x85\x20\xad\x16\x64\x65\xec\xb6\xf0\xa9\xaa\x3c\x85\xf0\x1e\xf0\x20\x0c\x6c\xe1\x9f\x3b\xfd\xf8\xeb\x2f\x39\xfc\x58\xad\x00\x00\x06\x11\x24\x5f\x4d\x9e\xac\xa2\x09\x20\xa2\x0d\x32\xca\xb1\xc5\x23\xf9\xab\x30\x13\x29\xa1\x86\x38\x3e\xfb\x46\xf5\x16\xb0\xe3\x26\x4b\x04\x2f\xfe\xd5\xdc\x54\x1e\xfb\x1c\x2e\x97\xfe\x29\x76\x12\x14\xe1\x5b\x4f\x2d\x7a\xca\x82\xde\x5b\xf2\x63\x96\xcf\x03\x3f\x3b\x34\x1d\xe5\x70\xf9\x29\x42\xce\x15\x27\xd0\xbf\x23\x23\xdc\x24\x8e\x2d\x3c\x05\x67\x1e\xe8\x8b\xb3\xec\x51\xb1\xf8\x2d\x93\xdf\x3a\xaf\xe8\xfe\xd8\xd2\x16\xac\x36\xef\xe1\x41\x53\x1f\x8f\xf2\xf7\xfa\x75\xaf\x16\x77\xf7\xbb\x09\xeb\x36\xcb\xf3\xb9\x0a\xf9\x7c\xfc\x08\x2d\x5a\xad\xb2\xf5\x97\xc1\x95\xa2\xe6\x7e\xaa\x0e\x24\xc7\x00\x34\x58\x59\x88\x54\x63\x55\xeb\xfc\xd4\xcd\x66\x03\x7f\x12\x03\xbe\x54\x21\xd2\x72\x15\x20\xb0\xf3\x54\xc5\xac\x73\x5c\x20\x53\x17\x93\x02\x70\x33\xbe\x2e\xe4\x2d\xee\xa9\x88\x36\xbb\xfe\x59\x61\x6e\x33\x51\x7d\x7b\xe2\x77\x4a\xf8\x15\xb9\xc9\x57\x17\x17\x17\xe7\x7a\x8e\x60\x2f\x3b\x70\x7d\x6c\x60\x48\xfd\x6e\xea\xfa\x29\x7e\xd1\x23\xa9\x8e\x69\xa9\xec\xc8\xc5\xe8\x71\xdd\x6a\xb2\x7c\x15\xa0\xed\x4a\xa3\xd5\x64\x3f\x70\xe5\x7f\xa4\x38\xb1\xc3\xfc\x1a\x6e\x44\x80\xd1\x35\x19\xbb\x3c\xb5\x4d\x20\xcb\x43\x31\x70\xfd\x21\x65\xb0\xe8\x47\x5a\xb2\x69\x56\xe2\xf7\x9b\x94\x5a\x16\xbb\xd8\xa9\x5f\x87\xba\xd3\x02\x4e\xb7\x51\xb6\x39\xb4\x98\x87\x59\x53\x98\xe4\xbb\xfc\xf1\xda\xbe\x2e\x5e\xe0\x3c\xdd\x66\x89\x39\xe5\xf3\x6a\x74\x0c\x11\x51\x93\x98\xfc\xac\xa5\x67\x79\xc7\xb5\x93\xf4\xbf\xe8\xe8\xdd\x3a\x97\x24\x09\x63\x3b\x34\xba\x92\x75\x7e\x5a\x5c\xb2\x42\x17\x3b\xb1\x3c\x8e\xfb\x37\x60\x4d\x71\xfa\x3f\x1f\x65\x2a\xe7\x34\xba\x9e\x44\x8e\xd1\xa3\xe1\x13\x2a\x8b\xe7\xd1\x19\x9f\xc6\xfb\xb7\x73\x46\xcf\x65\xa9\x2c\x9b\x7f\x96\x70\x5c\xbf\xe3\x40\x5c\x7f\x98\xbd\x73\xda\x01\x4f\x40\x26\xd0\xb3\x34\x9b\x0d\x7c\x23\xee\xbc\x85\xba\xb3\xd5\xf0\x9f\x68\x9e\xe4\xc9\xc2\xba\x3e\xb1\xa9\xc3\x40\xb2\x72\xb6\xd6\xfb\x4e\x06\x9d\xdd\x74\x3b\xb0\x36\xa4\x49\x2b\x4d\x9c\xfb\x96\x42\xa7\xc1\x7b\x5a\xfd\x1f\x00\x00\xff\xff\x3d\xfb\xb8\xeb\x51\x08\x00\x00"

func switchboardSafe_transfer_tokens_v2CdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardSafe_transfer_tokens_v2Cdc,
		"switchboard/safe_transfer_tokens_v2.cdc",
	)
}

func switchboardSafe_transfer_tokens_v2Cdc() (*asset, error) {
	bytes, err := switchboardSafe_transfer_tokens_v2CdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/safe_transfer_tokens_v2.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa5, 0x59, 0xbf, 0x63, 0xc2, 0xe7, 0x0, 0x50, 0x3d, 0x63, 0x1d, 0x22, 0xec, 0x4, 0x1b, 0x3a, 0xa2, 0x1d, 0x30, 0x44, 0xe1, 0x7b, 0x74, 0xd4, 0x67, 0xd9, 0x74, 0xb9, 0x81, 0x15, 0x30, 0x85}}
	return a, nil
}

var _switchboardSetup_accountCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x54\x5d\x6b\xe3\x3a\x10\x7d\xf7\xaf\x38\xb7\x0f\x25\x81\xdc\xe4\xbd\xb4\x85\x7b\x03\x17\xee\x5b\xd9\x76\xf7\x7d\x2c\x4f\x62\x51\x45\x32\xd2\xa8\x6d\x08\xf9\xef\x8b\xec\xd8\xb5\xb3\x76\xb6\xfb\x01\x2b\x0a\x8d\x3c\x9a\xa3\x39\x73\xce\x48\xef\x2a\xe7\x05\xff\x45\xbb\xd5\xb9\xe1\x27\xf7\xcc\xf6\xf1\x55\x8b\x2a\x73\x47\xbe\xc0\xc6\xbb\x1d\xae\xa6\xc2\x57\xd9\x58\xfe\x58\xd2\x55\x96\xad\x56\x78\x2a\x75\x80\x78\xb2\x81\x94\x68\x67\xa1\x03\x08\xc2\xbb\xca\x90\x30\x36\xce\xa7\x6d\x2f\x2e\x25\x09\x94\x8b\xa6\x40\xce\x88\x81\x0b\xe4\x7b\x24\x28\xb2\x7b\x67\x19\xe2\xd2\x1f\x15\x05\x08\xfd\xba\x3d\x07\x17\xbd\x6a\x0e\x94\xac\x3d\x48\x29\x17\xad\x20\xb8\x06\x55\x4a\xde\x43\x91\x4d\x60\x9e\x15\xeb\x17\xc6\x2e\x1a\xd1\x95\x61\x6c\x4e\xb5\x43\x52\xf1\x01\x31\x68\xbb\x05\x21\xfd\x33\x8c\xc3\x80\xdb\xf2\x53\x93\xee\x8f\x59\xbf\xf6\x43\x96\x01\x40\xe5\xb9\x22\xcf\xb3\xa0\xb7\x96\xfd\x0d\x28\x4a\x39\xfb\xd7\x79\xef\x5e\xbf\x90\x89\xbc\xc0\xff\x21\x44\x7e\x14\xe7\x69\xcb\x6b\xaa\x28\xd7\x46\xcb\x7e\xed\xac\x78\x67\x0c\xfb\x05\x1e\x62\x6e\x74\x28\xdf\x83\x0b\x3c\xd2\x0b\x9f\xf2\x3f\xdb\xea\x3c\x3e\xc7\xf5\x3f\x0d\xdf\x79\x5b\x47\x5a\xab\x15\xd6\x25\xab\x67\xe8\x4d\xe2\xdf\xf5\x84\x8c\x67\x2a\xf6\x28\x29\x4c\xf4\x71\x01\xcf\x12\xbd\x05\x93\x37\xfb\x94\x1f\x5c\x07\x9b\x76\x35\xbb\x65\x68\x58\x2c\xf3\x9a\xdf\xed\xf5\x94\x71\x96\xbd\xdf\xf7\xb3\xe4\x97\x9b\x49\x0f\x2e\x4f\xad\x79\x20\x29\xe7\xf8\xeb\x0e\x56\x1b\x1c\xba\xcb\xd3\x6a\x6a\xeb\x3e\x1d\x07\xc1\x01\x7b\xcf\xc9\x68\x04\xcb\xaf\xe3\x7e\x21\x5b\xa0\x8a\x02\x2d\xd0\x56\x1c\x4e\x8c\x3a\x90\x33\xa2\x81\x5e\x78\x36\xb8\xee\xf6\xef\x69\x26\xaa\xbe\xbe\xf7\x65\x36\x5f\x0c\x92\xc5\x7d\xac\x0f\x5d\xd2\x7c\x28\xae\x61\xf2\xe0\x37\x1d\x24\xf9\xb5\xf3\x83\xe6\x80\x34\x48\x64\x9d\xd5\x8a\x0c\x2a\x92\x32\x9c\x73\x52\xbd\xe3\xcb\xd8\x9a\x6a\x36\x59\x4f\x6b\xfb\xda\x9d\xaa\x96\xe7\x57\x21\xfb\x50\xa3\xba\xd5\x08\x0a\x1d\xee\xfe\x34\xe0\x03\x31\xf9\xad\x72\xf5\xc0\xa6\x40\xc1\x69\x23\x7d\xb4\x4d\xb4\xed\xf3\xe2\x5d\xdc\x96\xf5\xb9\xa9\x99\x4e\x36\x60\xbf\x21\xf5\xee\x01\xc3\xd2\x3e\x19\x7e\x4d\x15\xee\x46\xe9\xb6\x16\xd1\x69\xbc\x6f\xaf\xa7\xf0\xef\x87\xf6\x49\xeb\x87\x1c\xd0\xb8\xe0\x52\xdf\xdb\xae\xf7\x4a\x5e\x80\xe4\x82\xd3\x2e\x29\xfb\x1b\x64\xc9\x9d\xd4\x3d\xef\x43\x1d\x3e\xf2\x54\x34\xf5\x1c\xeb\x21\x4d\xe8\xd3\x00\x63\xfa\x85\x81\x80\xe1\x1c\xf6\x27\x95\xbc\x58\xea\x02\x7f\x5c\xf5\x31\x9e\xdf\x91\xff\x9b\x29\x3c\x66\xd9\x31\xfb\x1a\x00\x00\xff\xff\xd7\x8b\x14\x2a\x2b\x08\x00\x00"

func switchboardSetup_accountCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardSetup_accountCdc,
		"switchboard/setup_account.cdc",
	)
}

func switchboardSetup_accountCdc() (*asset, error) {
	bytes, err := switchboardSetup_accountCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/setup_account.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x92, 0xf5, 0x43, 0x80, 0x12, 0x2b, 0xe9, 0xd6, 0xc5, 0x8d, 0x39, 0xa0, 0xb7, 0xb, 0x9a, 0xc2, 0x9a, 0x3a, 0xec, 0x9, 0xab, 0xe, 0xda, 0xed, 0x5d, 0xcf, 0xd4, 0xa5, 0x0, 0x38, 0xa7, 0x4d}}
	return a, nil
}

var _switchboardSetup_royalty_accountCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x58\xc1\x6e\xe3\x36\x10\xbd\xfb\x2b\x5e\x73\xd8\xca\x40\x6a\xdf\x83\x24\xdb\x34\x6d\x16\xbd\x14\x8b\x4d\xb6\x3d\xd3\xd2\xc8\x22\x22\x93\x02\x39\x8a\xd7\x08\xf2\xef\x05\x29\x4b\xa6\x9c\xc8\x96\x14\xa3\xa9\x0e\x89\x2d\x91\xc3\x79\x33\xef\x3d\x53\x94\xab\x42\x1b\xc6\x5d\xa9\x96\x72\x91\xd3\x83\x7e\x24\x85\xd4\xe8\x15\xce\x5a\xf7\xce\x26\x6f\x8d\xbc\x5f\x4b\x8e\xb3\x85\x16\x26\x79\x6b\x52\xf0\x78\x37\x3f\xd7\xeb\xd6\x2a\xf5\xf7\xdd\x08\x29\xb8\x35\xa2\xfe\x7e\x36\x99\x4c\xe6\x73\x3c\x64\xd2\x82\x8d\x50\x56\xc4\x2c\xb5\x82\xb4\x10\x60\x5a\x15\xb9\x60\x42\xaa\x8d\xfb\x1a\x3c\xe7\x4c\x30\x62\x5d\xe6\x09\x16\x84\xd2\x52\x82\xc5\x06\x2e\x94\x50\x1b\xad\x08\x69\x99\xe7\x1b\x58\xe2\xb2\x80\x50\x10\x71\xac\x4b\xc5\x3e\x92\xa1\x98\xe4\x93\x54\x4b\x2c\x34\x67\x3e\x7b\x08\x95\xe0\xfb\xfd\xef\xb7\x60\x97\x95\x85\x60\x70\x46\xb0\x62\x45\x2e\x68\x51\x2e\x72\x19\xa3\x10\x9c\x21\x72\x31\xa4\xb2\x2c\x54\x4c\x7e\x94\xd1\x1b\x91\xb3\x24\x8b\x79\x35\x70\xfe\x85\x14\x19\x19\xdf\x3d\x7c\xf3\x6b\x91\xf1\x53\xa7\x2e\xd4\x77\xeb\x56\x76\xd3\x44\x92\xfc\x45\xeb\xbf\x45\x99\xf3\x3f\x46\x14\x05\x19\xfb\xdb\xe6\xab\x5b\xc2\x06\x3d\x58\x11\x67\x3a\x81\xc8\x73\xbd\xb6\x35\x3a\xd6\x0e\xb3\x0b\x17\x8b\x42\x2c\x64\x2e\x79\x83\xf5\x36\x08\x6c\x19\x67\x10\x16\xbe\xc2\x77\xda\xac\x85\x49\xdc\x7d\x97\x34\x89\x04\x3a\xad\xd6\x8f\xb9\x14\x79\x85\x18\x4f\x2e\x8d\xd9\x24\xac\x71\x34\xc5\xf3\x64\x02\x00\x39\x31\xd2\xba\xa9\x3e\xe1\xdb\x66\xd9\x0b\xec\x3e\x5f\x7e\x7a\x6e\x91\x65\x56\xc3\x7f\xb9\xde\xc5\xa9\x5b\x3f\x2e\x0e\x80\x26\x54\x50\xa6\x6f\x94\x5e\x00\x9f\xba\xa8\x3a\x0b\x3e\x57\x90\x0a\x43\x85\x30\x14\x59\xb9\x54\x64\x2e\x70\x53\x72\x76\x53\x91\xa4\x81\xed\xae\xf9\x1c\xb7\x19\xc5\x8f\x90\x75\xd1\x2a\x22\x89\xdc\x90\x48\x36\xc8\x84\x63\xaa\xe7\x90\x07\xd4\x4c\x94\x29\xaa\xd8\xb3\x85\x36\x46\xaf\x2f\x3f\x35\xb2\x98\xf9\x91\xd7\x91\xd3\xc2\x05\xe6\x96\xb5\x11\x4b\x9a\xb7\x2b\x3c\xc5\xd5\x15\x94\xcc\xf1\xdc\x84\xdc\xe6\xf3\x67\x0a\xa5\xf9\x1c\xb1\x21\x27\x0e\x01\x45\xeb\x20\x03\x18\xb2\xba\x34\x31\x79\x52\x17\x25\x43\x32\xa4\x62\x8d\xed\x42\xad\x78\xdb\x1c\xad\x78\xa2\xe8\xf2\x97\x9d\x94\x67\x55\xf4\x3f\x56\x05\x6f\x7c\xd8\xc8\x33\xe4\x61\x53\xd0\x05\xdc\xdf\xcb\x5f\x5f\xe1\x99\x4e\xcf\xc1\xba\x1b\x51\xb3\xf0\x4b\x67\x79\x4d\xad\x97\x80\xd7\xd2\x22\x97\xea\x91\x12\x78\xe1\x93\xa7\xe2\x6e\xa4\x53\x56\x58\xf5\x9f\xb6\x90\x96\xc4\xbd\x18\x15\xd5\xa2\x6d\xb2\xad\x9f\x4d\x5b\x95\x7a\xe7\x35\x8b\x1d\x4e\xaf\xa9\xbd\x7e\xca\x14\x92\x7f\xb6\x7b\x4d\xdd\x5a\x4e\x50\x07\xd6\x3b\xf4\xbe\x19\xa0\x1f\x85\xf6\x76\xb2\x1f\xd2\x8d\x4b\xc8\x3d\x64\xa4\xa5\xaa\x3d\xd3\xe8\x72\x99\xf9\x87\x5d\xd5\x70\x44\x21\x93\x8a\xf8\x4d\x96\x94\xca\x35\xa2\x6f\xc1\xb6\x93\xdc\x94\x51\xe5\x3f\xc7\xb8\xfa\xb3\x30\x4b\xe2\x41\x34\xb4\x94\xa7\xb3\x2e\x87\xc3\x15\x4e\x48\xa9\x81\xce\xe2\x7f\x94\x8e\x3a\x4b\xed\xa9\x6d\x67\xd9\xbb\x7d\x5f\x95\xc3\xfd\xc2\x0c\x34\x97\x5d\x12\xef\x33\x97\x26\x9f\x1e\xe6\xb2\x0f\xc9\x99\xcb\x48\x3d\x3a\x4f\x3a\x50\x8b\x53\xd9\x92\xaf\xd2\xc9\x6c\x69\x08\xd6\x68\x0f\x5d\x1d\xe5\x6b\xb9\xf0\x08\x4f\xe6\x3d\x1e\xe2\x87\x7a\xcf\x11\xa4\x63\x0c\xe8\x70\xc8\x51\xac\xab\x2d\x68\x18\xeb\x2a\x17\xea\xd8\x1f\x8d\x70\xa1\xbe\xb5\x1a\x68\x49\xe1\x1b\x42\x6d\x07\x87\xcc\xa9\xc7\x9e\xec\x38\xdb\x6b\x4b\xeb\x0c\x36\xda\xdc\xde\x82\x33\xca\xdd\xba\x52\xab\x56\x0b\xee\x44\x43\xad\xcc\x1b\x58\x1f\xe4\xa7\xb2\xb2\x61\x2e\xd6\x81\xa5\x5f\xeb\xc7\x1a\x60\xd4\x19\x3c\xe0\x79\x2e\xe3\xd3\x1a\x60\x48\x96\x8f\x72\xc0\x01\xb8\xbb\xed\xf0\x5d\xad\x89\xfa\xb3\x77\x40\xb6\xe7\xbd\xa3\x36\xf6\x7a\x22\x4d\x04\x53\xab\x74\xbc\xfe\x53\x7e\x43\x2c\xee\x2d\x5f\x18\xda\xe9\x65\xb2\xd7\xf8\xf0\xdd\x3d\x38\x36\x38\xbe\x15\x68\x46\x8c\xe8\x4d\xc7\xa0\x0a\xcc\x39\x3a\xfa\xd8\xb7\xde\xd7\xe3\x39\xf7\xce\xeb\xbf\xd5\xad\x3f\x0e\x7a\xad\xcf\x83\xc5\x7d\xf1\x54\x71\x93\xf6\xa3\x1d\x17\xb9\x1d\xa3\xf2\x3e\xea\x6e\x3d\xf8\xdf\xd1\xa9\xbe\x0e\xd0\xea\x83\x4c\xe1\x0b\x31\x04\x0c\xa5\x64\xc8\x1f\xee\xe9\x7d\x49\xb7\xf7\x6a\xed\x03\xa8\xdd\x0e\xed\xb4\x5b\x9f\xe6\x1a\xb4\x07\x3a\x1a\xf6\xf3\x67\x14\x42\xc9\x38\x3a\xbb\xf5\xe7\xa8\x4a\x33\xaa\xc4\xdb\x15\x08\x40\x9e\x6d\x5f\x5f\x5f\xaa\x7f\xf4\x83\xe2\x92\x29\x10\xe7\x7c\x8e\x9b\xa4\x92\xc3\x6b\x0d\x86\xce\x58\x7a\x01\x06\x27\xa0\xdb\x73\xce\x43\xf5\x9d\x05\xc3\xa3\x38\x38\x38\x3c\xf8\xf6\x3e\x7d\x47\xc8\x8e\xad\xf8\xb4\x2e\xc2\xcb\x04\xff\x06\x00\x00\xff\xff\x8d\x9e\x81\x4b\x6d\x17\x00\x00"

func switchboardSetup_royalty_accountCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardSetup_royalty_accountCdc,
		"switchboard/setup_royalty_account.cdc",
	)
}

func switchboardSetup_royalty_accountCdc() (*asset, error) {
	bytes, err := switchboardSetup_royalty_accountCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/setup_royalty_account.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x8f, 0x95, 0xf0, 0xf7, 0xbc, 0xd, 0x72, 0x44, 0xa2, 0x64, 0xc5, 0x86, 0xa6, 0x7, 0xa3, 0x6f, 0xfa, 0x38, 0xdd, 0x22, 0x66, 0x4a, 0x76, 0xfa, 0x84, 0xf3, 0x30, 0x62, 0x32, 0x5, 0x49, 0xca}}
	return a, nil
}

var _switchboardSetup_royalty_account_by_pathsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x58\xcd\x6e\xe3\x36\x10\xbe\xfb\x29\xa6\x39\xa4\x32\xe0\xda\x77\x23\xc9\x36\x4d\x9b\x45\x2f\x45\xb0\xc9\xb6\x87\x45\x0e\x63\x69\x64\x11\x91\x49\x81\x1c\xc5\x6b\x04\x79\xf7\x82\xa4\x7e\x6d\x2b\x96\x15\xb7\x59\x5d\x6c\x89\x33\xc3\xf9\xfb\x3e\x51\x23\x56\x99\xd2\x0c\xb7\xb9\x5c\x8a\x45\x4a\x0f\xea\x89\x24\xc4\x5a\xad\xe0\xac\xf5\xec\x6c\xb4\x4f\xf2\x7e\x2d\x38\x4c\x16\x0a\x75\xb4\x4f\xa9\xb1\x5c\xeb\xa7\x6a\xdd\xda\xa5\xbc\xaf\x25\x04\x72\x4b\xa2\xbc\x3f\x1b\x8d\x46\xb3\x19\x3c\x24\xc2\x00\x6b\x94\x06\x43\x16\x4a\x82\x30\x80\xc0\xb4\xca\x52\x64\x82\x58\x69\x7b\xdb\x58\xe7\x04\x19\x42\x95\xa7\x11\x2c\x08\x72\x43\x11\x2c\x36\x60\x4d\xa1\xdc\x28\x49\x10\xe7\x69\xba\x01\x43\x9c\x67\x80\x12\x30\x0c\x55\x2e\xd9\x59\xd2\x14\x92\x78\x16\x72\x09\x0b\xc5\x89\xf3\x1e\x50\x46\xf0\xf5\xfe\xf7\x1b\x60\xeb\x95\x01\x64\xe0\x84\xc0\xe0\x8a\xac\xd1\x2c\x5f\xa4\x22\x84\x0c\x39\x81\xc0\xda\x10\xd2\x30\xca\x90\x9c\x94\x56\x1b\x4c\x59\x90\x81\x99\x17\x9c\x7d\x26\x49\x5a\x84\xb7\x0f\x5f\xdc\x5e\xa4\x9d\xea\xd8\x9a\xfa\x6a\xec\xce\x56\x0d\xa3\xe8\x2f\x5a\xff\x8d\x79\xca\xff\x68\xcc\x32\xd2\xe6\xb7\xcd\x9d\xdd\xc2\x34\x6a\xb0\x22\x4e\x54\x04\x98\xa6\x6a\x6d\xca\xe8\x58\xd9\x98\xad\xb9\x10\x33\x5c\x88\x54\xf0\x06\xd6\x85\x11\x30\x79\x98\x00\x1a\x70\x19\xbe\x55\x7a\x8d\x3a\xb2\xcf\xad\xd3\x84\x11\xa8\xd8\xef\x1f\x72\x8e\xa9\x8f\x18\x9e\xad\x1b\xd3\x51\x33\xc7\x01\x46\x91\x26\x63\xe6\x70\xed\xff\x8c\xe1\x65\x34\x02\x00\x48\x89\xbd\x82\xf5\xd6\xcc\xe1\xdb\x9d\x0b\xdb\xde\x3d\xb6\x05\x1e\x36\x19\x59\x01\xfb\xfb\x68\x57\xaa\xe5\x46\x8c\x5f\x28\x9e\x03\x9c\x77\xf5\xd9\xb4\xf1\xdf\xef\x9f\x69\xca\x50\x53\x60\xc4\x52\x92\x9e\xc3\x75\xce\xc9\xb5\xaf\x70\xe5\xa3\xbd\x66\x33\xb8\xf3\xa2\x2e\x60\x5b\x03\xe3\x4a\xcd\xd6\x2d\x40\xad\x71\x63\x60\x2d\x38\x71\xeb\x7b\x3b\x21\x42\xc6\xca\xa0\xa1\x34\x9e\xd6\x91\xc3\x25\x7c\x7b\xec\x5a\x9c\xda\x6a\xc8\x28\x28\x7b\x22\x2e\x51\x51\xf6\xc4\xf8\x90\x66\x85\x92\xa9\x6b\x92\x52\xef\x2e\x5f\xdc\xb9\x6e\xda\x55\x77\xe9\xee\xf2\xca\x2d\x96\xb6\xed\xcd\xc5\xaf\x15\x52\xfd\x0e\x57\xc1\xb8\xd3\xea\x96\x62\xdb\x35\xa7\xd8\x4c\xfb\x4d\x42\xe1\x13\x88\xb2\xd1\x3c\xf8\x30\xd5\x84\xd1\x06\x12\xb4\xe8\x76\xd9\x76\xda\x95\xa2\x88\xc1\x97\x74\xba\x50\x5a\xab\xf5\xc5\xf9\x8e\x83\x96\x3f\xe6\x30\x33\xac\x34\x2e\xa9\x4e\xaa\x5b\x1e\xc3\xe5\x25\x48\x91\xc2\x4b\x65\xb2\xf0\xe7\xcf\x18\xa4\xe2\x09\x84\x9a\x2c\xa1\x20\x48\x5a\x37\x3c\x00\x4d\x46\xe5\x3a\x24\x57\xfe\x2c\x67\x10\x0c\x42\xb2\x82\x62\xa3\x96\xbd\xc2\x47\x83\xcf\x14\x5c\xfc\x52\xd3\xdf\xd4\x5b\xff\x63\x95\xf1\xc6\x99\x0d\xaa\xf4\xcd\xa1\x33\xe1\x13\x60\xd5\x1d\x51\xb5\xf1\x6b\x67\x7a\x75\xc9\x31\x0d\x2e\x10\x06\x52\x21\x9f\x28\x02\x47\x96\x04\xd6\x6c\x2d\x69\x91\xd0\xcc\xfa\x4f\x45\x48\x4b\xe2\x9b\xca\xc8\xc5\xf9\x4b\x0b\x92\xd3\xb2\x01\x5f\xaf\xfa\x34\xf5\x09\xae\x69\x68\xe3\x0c\xc6\xbb\xf5\x14\x31\x08\xfe\xd9\x6c\x15\xb5\xa0\xe9\x46\x1e\x58\xd5\xd1\xbb\x62\x00\x7d\xcf\x94\xa3\xe0\x6d\x93\x56\x2e\x22\xbb\xc8\x10\xe7\xb2\x7c\xcf\x68\x95\x2f\x3d\x3d\x74\x65\xc3\x36\x0a\xe9\x18\xc3\xbd\x5d\x92\x4b\x5b\x88\xbe\x09\x2b\x94\xac\xca\xa0\xf4\x4f\x60\x58\xfe\x19\xf5\x92\xb8\x57\x1b\x1e\x09\x73\xc7\xa5\x07\x61\xbe\x4d\x27\x1e\xe6\x5b\x8f\xef\xbd\x6f\x8e\xfc\x8e\x43\x7a\xed\xc4\xfb\x90\x5e\xf9\xd3\x03\xe9\xbb\x0c\x39\xb4\x38\x8e\x20\xde\xc8\xc5\xa9\x38\xc2\x65\xe9\x64\x1c\x71\x4c\xac\x87\x5e\x75\x27\x23\x02\x17\xe2\x87\x12\x41\xdf\x97\x3a\xf4\x67\x83\xb7\x4d\x0e\xea\xba\x92\x0f\xfa\x75\xdd\x91\x94\xd0\xfc\xc4\x28\xe1\xf8\x16\x39\xf4\x38\x17\x1e\xee\xb6\x92\x52\x3a\x8d\x0d\x26\x97\x7d\xe1\x0c\x62\x97\x2e\xd7\xfc\x6e\x8d\x27\xc1\xb1\x54\xe2\x08\xa4\x4f\xe4\xa7\xa2\x92\xe3\x58\xa4\x23\x96\x7e\xa5\x1f\x4a\x40\x41\xa7\xf1\x06\x80\x8a\xaf\x9a\xd3\x11\x50\xb3\x59\x3e\x8a\x81\x8e\x88\xbb\x9b\x8e\xde\x55\x9a\xa0\x7f\xf7\x1e\xe1\xed\xa4\xb7\xd5\x8a\xde\x4e\x84\x89\x86\xaa\x77\xc7\xe1\x3f\xe6\x3d\x60\x11\xee\xc3\x93\x6a\xbc\x8c\xb6\x0a\xdf\xfc\xf8\x6f\xcc\x1d\x0e\xbf\x8a\x2b\x89\x01\xb5\xe9\x10\xf2\xc1\x4c\xa0\xa3\x8e\x7d\xf3\x7d\x35\xbc\xe7\xde\x79\xfd\xbf\xb8\x75\xf3\xa4\x5d\x7c\xbe\x99\xdc\x57\x3f\x90\x48\x68\xc7\xda\x61\x90\x9b\x21\x28\xef\x83\xee\xd6\xc2\x0f\xd7\x4e\xe5\xf5\x46\x5b\x7d\x10\x29\x7c\x26\x06\x04\x4d\x31\x69\x72\xd3\x41\xb5\x0d\xe9\xf6\x78\xa5\x3d\x04\x83\xcb\xff\xe6\xe8\x53\x5d\x47\x9d\x81\x0e\x9a\xfd\xf4\x09\x32\x94\x22\x0c\xce\x6e\xdc\x20\x56\x2a\x06\xef\x78\x3b\x03\x8d\x20\xcf\x8a\x29\x51\x71\x64\xa4\xef\x14\xe6\x4c\xf5\xc8\x6e\x36\x83\xeb\xc8\xa3\xa1\x45\x98\xbb\x79\x84\xdc\x21\xb0\x73\x86\x3a\xea\xcc\xf2\xb4\x53\x27\xc8\xfc\x38\x73\x6b\x1c\x77\xec\x59\xcb\x8f\x3c\xb7\xc6\x67\x13\xa8\xa6\xa9\xc5\x9f\x3a\x15\xaf\x23\xf8\x37\x00\x00\xff\xff\x29\xb5\xc5\x68\xb4\x17\x00\x00"

func switchboardSetup_royalty_account_by_pathsCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardSetup_royalty_account_by_pathsCdc,
		"switchboard/setup_royalty_account_by_paths.cdc",
	)
}

func switchboardSetup_royalty_account_by_pathsCdc() (*asset, error) {
	bytes, err := switchboardSetup_royalty_account_by_pathsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/setup_royalty_account_by_paths.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xaf, 0x6d, 0x53, 0x1a, 0x41, 0xf5, 0x1b, 0x3f, 0x2c, 0x78, 0x91, 0x9d, 0x16, 0x25, 0xc1, 0xec, 0x1d, 0x60, 0x9b, 0xc, 0x51, 0xf3, 0x85, 0xaa, 0x1c, 0x57, 0x8a, 0x67, 0x68, 0xe4, 0xdd, 0x4c}}
	return a, nil
}

var _switchboardTransfer_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\x41\x6f\xdb\x3a\x0c\x3e\x37\xbf\x82\xcd\xa1\x75\x80\x3c\xe7\xf2\xf0\x0e\x41\xd3\xa2\xaf\x5d\x76\x1a\x50\x14\x59\x76\xa6\x65\xc6\xd6\xe6\x48\x82\x44\xc7\x0d\x8a\xfe\xf7\x41\xb2\xec\xd8\x69\x87\x6d\x3d\xd4\x31\xfd\x91\x1f\x3f\xf2\x93\xe4\xde\x68\xcb\xb0\xae\x55\x21\xb3\x8a\x36\xfa\x07\x29\xd8\x59\xbd\x87\xe9\x28\x36\x9d\x44\xe4\xa7\x17\xdc\x9b\x31\x70\x18\xea\x71\xa3\xec\x2f\xc4\x98\x23\xe3\x56\x52\xe3\x3e\x2a\x3f\x02\x4c\x27\x93\xc5\x62\x01\x9b\x52\x3a\x60\x8b\xca\xa1\x60\xa9\x15\x48\x07\x08\x4c\x7b\x53\x21\x13\xec\xb4\xf5\xaf\x83\xef\x5c\x22\x83\xd0\x75\x95\x43\x46\x50\x3b\xca\x21\x3b\x02\xaa\xa3\x56\x04\xac\xc1\x91\xca\x81\x3d\x9d\xf3\xaf\xa8\x34\x97\x64\x01\x85\xd0\xb5\xe2\xc0\xc9\xa5\xd5\x75\x51\x02\x82\x6b\x24\x8b\x32\xd3\x68\xf3\x39\xa0\x83\x4a\xab\xc2\x3f\xb9\xa4\x23\x94\x78\x20\x70\xc4\x50\x1b\x1f\x90\x76\x08\x07\x54\x79\x8b\xc0\x3c\xf7\x9f\xc1\x58\x6d\xc8\x82\x40\x83\x99\xac\x24\x1f\x3d\xbd\x0c\x8c\x51\x69\xc0\x5a\x72\x0e\xf4\x2e\xa4\x58\x12\x24\x0f\xa7\xee\xe6\x21\x8a\x7b\xff\xdb\x67\x07\xdd\x3b\xff\x5d\xb5\x1c\x4f\x75\x56\x49\xf1\x84\x5c\x86\xc9\xf8\x50\x41\x8a\xac\x14\xb0\xde\x9c\xca\x35\xb2\xaa\x20\xa3\x28\x96\xc0\xa0\xc5\x3d\x31\x59\x17\xba\x19\x8c\x33\x61\xbd\x84\xfb\xb6\xab\x79\x64\x5e\xc2\xd7\xb5\x7c\xf9\xef\xdf\x79\x5f\xd0\x13\x2e\x07\xe4\x33\x78\x9d\x4c\x00\x00\xa2\x2c\x27\x0b\x45\xf6\xda\xc1\x01\xeb\x2a\x74\xde\x48\x2e\x73\x8b\x4d\xb0\x41\x80\x56\xc4\xe0\x74\x6d\x05\x6d\x3d\x68\x09\x58\x73\x99\x8c\xfc\x91\x7e\x8b\x59\x33\xb8\x1a\xda\x2d\x0d\x19\x2d\xa3\xb1\x64\xd0\x52\xd2\x52\xc6\x2a\xff\x6b\x6b\x75\xb3\xc5\xaa\xa6\x19\x5c\xdd\xb7\xc3\xec\x9b\xec\xd8\x43\x73\x8f\xc8\x08\xab\x91\xc1\x53\x4b\x4e\x57\x07\x7a\xd0\x8a\x2d\x0a\xf6\xf6\x4c\x7c\xcc\x37\xbb\x39\x1a\x5a\x82\x92\xd5\x1c\x0e\x92\x9a\xf6\xd5\xff\xbf\xf9\xb5\xb5\xd3\xf5\x66\xdb\x71\xdd\x26\xb3\x59\xdf\x85\xff\xbb\xbb\x03\x83\x4a\x8a\x64\xfa\x10\x4c\xac\x34\x43\xd1\x75\x07\xbe\x46\x20\xea\xf7\x2b\x62\x57\xd3\xd9\x49\xcd\x62\x01\x9f\x89\x01\xc1\xd2\x8e\x2c\x29\x11\x9c\xcf\xc3\x4d\x38\xd6\x96\xf2\xb6\x6a\x9f\xe7\xa8\xda\xa5\x83\x25\xc0\x2a\x26\xa4\x1e\x8e\x05\xa5\x59\x98\xe4\xcd\xdf\xee\xe6\x36\xf1\x7b\x5e\x9e\x46\xdc\x15\x0c\x6e\x99\x5c\x5c\x5c\x7c\x24\xbb\x25\x7b\x2f\x42\x37\xad\x86\x50\xfa\xb2\x13\xfe\xd6\x3e\xe8\x85\x44\xcd\x34\x5c\x6e\x1c\x47\x3c\x51\xd2\x48\x52\x7c\xed\xc0\x04\xbf\x76\x67\x0b\x74\xf6\x9d\x04\x8f\x1c\xd1\xa3\x61\xe5\x77\x10\x8d\x93\xb0\xfe\xa3\x59\x0f\xb9\x9e\xe3\x49\x39\x2f\x1f\x82\xcf\xb4\x83\xd5\x09\x9e\xf6\x57\x84\x24\xd7\x4d\xfc\xea\x75\x3c\xee\xae\xe0\xdb\x6d\x32\x3c\x85\xbf\x9f\x65\xbc\x02\x46\xdd\x0e\xee\xad\xcb\x33\x1f\x3d\x92\xd1\x4e\xb6\xc3\xeb\x0e\xad\xea\xee\x4f\xa9\xde\x09\xb5\xe7\x42\x07\x22\xd3\xbc\x2d\x16\xcd\x70\xf3\xcf\xb9\xdf\xd2\x8e\x21\xe9\x6e\x9a\xf6\x39\x3b\xad\xf8\x6d\xf2\x33\x00\x00\xff\xff\xa9\xac\xce\x6f\xad\x06\x00\x00"

func switchboardTransfer_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardTransfer_tokensCdc,
		"switchboard/transfer_tokens.cdc",
	)
}

func switchboardTransfer_tokensCdc() (*asset, error) {
	bytes, err := switchboardTransfer_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/transfer_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x0, 0xf8, 0xeb, 0x9c, 0x8a, 0xce, 0xe0, 0xae, 0xb0, 0x25, 0x6c, 0xdb, 0x92, 0x95, 0x3, 0xf5, 0x6a, 0x9f, 0x9, 0x2c, 0x21, 0x4, 0x15, 0xa3, 0x3a, 0x61, 0xf, 0xc, 0x65, 0x97, 0xd7, 0x49}}
	return a, nil
}

var _transfer_many_accountsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x55\x4d\x4f\xe3\x48\x10\x3d\xe3\x5f\x51\xe4\x00\xb6\xb4\x38\x97\xd5\x1e\xac\x00\x62\x61\xd9\x13\xd2\x28\xca\x30\x87\xd1\x48\x54\xec\x72\xdc\x83\xd3\x6d\x75\x97\x13\x10\xca\x7f\x1f\xf5\x87\x8d\x9d\x44\x0c\xd3\x87\x44\x69\x57\xd5\x7b\xf5\xea\x95\x23\xd6\x8d\xd2\x0c\xf7\xad\x5c\x89\x65\x4d\x0b\xf5\x4c\x12\x4a\xad\xd6\x30\x19\xdd\x4d\xa2\x10\xf9\xdf\x0b\xae\x9b\x71\xe0\xf0\xaa\x8f\x1b\x65\x3f\x10\x63\x81\x8c\x8f\x82\xb6\xe6\x58\xf9\x51\xc0\x24\x8a\xa6\xd3\x29\x2c\x34\x4a\x53\x92\x36\xc0\x36\xc4\x7e\x01\x42\x2d\x0c\x83\x2a\x01\x8b\x42\x93\x31\x64\xc0\x34\x94\x8b\x52\x50\x01\x42\x02\x57\x04\x4f\xe1\xd9\xcd\x5a\xb5\x92\x1f\xb0\x79\x82\x06\x35\xae\x89\x49\x47\x11\xdb\xb2\x98\xb3\x50\x32\xde\x0f\xcc\xe0\xed\xc6\x5f\x65\xf0\xf5\x5e\xbc\xfc\xf3\xf7\x2e\x81\xb7\x28\x02\x00\xb0\x94\xee\x17\x8f\xd8\xd6\x7c\x87\x8c\xb0\x0e\x94\x61\x23\x68\x0b\xa5\xd2\x0e\xdb\x51\x85\x25\x09\xb9\x82\xd6\x50\xe1\x52\x6b\x62\xd8\x74\x89\xd9\x07\xd2\xa4\x03\x80\x77\xd4\x45\x45\xe0\xae\x41\x93\x51\xad\xce\x09\xb8\x42\x86\x4a\xd5\x85\x79\x47\x35\xfe\x16\x35\x05\x7c\x0e\x02\xea\x7d\x1a\x73\x2a\x33\xc0\x96\xab\x78\x44\x25\xfd\x26\xb8\x2a\x34\x6e\x13\x38\x1b\xce\x34\x75\xe0\x9e\x4f\xa3\xa9\x41\x4d\xb1\x11\x2b\x49\x3a\x54\xf9\x57\x69\xad\xb6\x8f\x58\xb7\x94\xc0\xd9\x4d\x9e\x5b\x39\xad\x70\x10\x8e\xa1\xba\x4c\x7b\x05\xe0\x72\xe4\xa2\xd4\x76\x55\x6f\xe8\x56\x49\xd6\x98\xb3\x55\x22\xee\x3a\x5d\xbc\x36\x94\x81\x14\xf5\x5f\x4e\x67\xff\xd3\x7e\xce\x3e\xa7\xe2\x55\x9c\x24\x80\xe6\xf4\x93\xa2\x5f\xf7\x94\xed\xb9\xbe\x86\x06\xa5\xc8\xe3\x89\x0d\x9c\x7b\x9a\x1a\x0a\x45\x06\xa4\xf2\xe3\xa8\x37\x34\xb2\x85\x65\x39\x49\xa2\xbe\xce\x74\x0a\xff\x13\x03\x82\xa6\x92\x34\x49\x3b\x3c\xe5\x86\xe6\x25\x3c\x37\x60\x58\x69\x2a\xfc\x68\x8e\x48\x36\xa7\x12\x2e\x43\x74\x6a\x63\x71\x45\xe9\xd2\x49\x3e\xfb\xd3\x21\x5e\xc5\x76\xf9\xb2\xbd\x81\x74\x55\xbf\x20\x57\x49\x74\x72\x72\xf2\xde\xf8\xad\x6a\xeb\xc2\x35\xeb\x11\x0f\xdb\x50\x5b\xdf\x85\xab\x7f\x3a\x49\x5c\x07\x3b\x2f\x00\xbd\x50\xde\x32\x75\x2b\x64\x8f\x5d\x94\xb0\x76\x76\x5f\xf7\x37\x30\x7d\xa6\x57\x33\x8c\x0f\x1a\x76\x5d\x75\x56\x77\xef\x90\xdf\xab\xd8\xd9\xde\x90\x64\xbf\x42\xb3\x8b\xb1\xb4\xe9\x36\x54\x8e\xd1\x71\xc8\x0e\x28\x7d\x0f\x17\x3f\x4e\x93\x03\x5a\x76\xb4\x96\x85\xa6\x5c\x34\x82\x24\x9f\x1b\x68\xda\x65\x2d\x72\x40\xbf\x06\xa0\x96\x3f\x29\x3f\x64\xd4\x67\xc0\x25\xac\x88\xc3\xd2\x74\x6f\xa4\xe3\x48\x47\x4c\x34\x04\x9e\x53\x4e\x62\x43\xfa\x18\x96\x7b\xe0\x9d\xd4\xa7\xa4\x39\x36\xb8\x14\xb5\x60\x41\xa6\x73\xd4\xd9\xdb\xd8\x4e\x5d\xd1\xdd\x55\xbc\x67\x9a\xae\xaa\x77\x0d\xec\x9d\x0f\x2d\xe4\x13\x3f\xee\xc6\x8d\x6b\x72\x28\xc4\x1d\x35\xca\x08\x2f\x7b\x37\x3b\xd9\xd9\x22\xfc\x03\x0c\xeb\xe8\x63\xaa\x0c\x14\x49\x0b\x5f\x30\x6c\xc6\xec\xa2\xf7\xca\x00\x7b\x17\x5c\xbd\x8b\x7e\x05\x00\x00\xff\xff\x5a\x95\x28\x10\x31\x07\x00\x00"

func transfer_many_accountsCdcBytes() ([]byte, error) {
	return bindataRead(
		_transfer_many_accountsCdc,
		"transfer_many_accounts.cdc",
	)
}

func transfer_many_accountsCdc() (*asset, error) {
	bytes, err := transfer_many_accountsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transfer_many_accounts.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x79, 0x52, 0xbc, 0xa, 0x35, 0xc4, 0x27, 0x38, 0x88, 0x1c, 0xc2, 0x1e, 0xeb, 0x35, 0x82, 0x5f, 0xde, 0x8a, 0x3e, 0xa2, 0x2c, 0xc2, 0x72, 0xaf, 0x37, 0x6e, 0xc4, 0x5e, 0x4, 0x90, 0xf0, 0x4c}}
	return a, nil
}

var _transfer_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\x41\x4f\xdb\x4a\x10\xbe\xfb\x57\x0c\x39\x80\x23\x81\x7d\x79\x7a\x87\x28\xc0\xe3\x41\xe9\xa9\x52\x85\x52\x7a\x1e\xdb\x93\x78\x5b\x67\xd7\x9a\x1d\x27\x20\xc4\x7f\xaf\x76\xd7\x6b\xec\x40\x29\xf5\x01\xb4\x93\xd9\x6f\xbe\xf9\xbe\x99\xcd\x73\x58\xd5\xca\x82\x30\x6a\x8b\xa5\x28\xa3\x41\x59\x40\x10\xda\xb6\x0d\x0a\xc1\xda\xb0\x3b\x8e\x7e\x97\x1a\x25\xc9\x73\x28\x4d\xd7\x54\x50\x10\x74\x96\x2a\x28\x1e\x01\xf5\xa3\xd1\x04\x62\xc0\x92\xae\x40\xcc\x4f\xd2\xd6\x1d\x51\x1b\xa9\x89\x01\xcb\xd2\x74\xda\x5f\x76\x20\x50\xa3\x85\x82\x48\x83\x25\x81\xae\x75\xa9\x4c\x25\xa9\x1d\xf5\x97\xb3\x24\xcf\x13\xcf\x91\x60\xaf\xa4\xae\x18\xf7\x80\x5b\x07\x02\xe8\x4a\xd4\x14\x41\x61\xcd\x66\x0b\x1b\x92\xab\x97\x22\xfb\xc8\xd0\xe5\xb5\xc8\xb8\x25\x21\xf6\x94\x5c\x64\xd4\x54\x92\xa8\x6d\x6b\x58\xe0\xb6\xd3\x1b\x55\x34\xb4\x72\xf5\x03\xe6\x6c\x12\x9b\xc5\xcc\x4f\x0f\xb8\x6d\xa7\x89\xe3\xd0\xec\x4d\xc4\x2f\x24\x58\xa1\xe0\xbd\xa2\xbd\x7d\x0b\x7e\x92\x30\x4b\x92\x11\xc7\x34\x34\xbe\x80\x6f\xb7\xea\xe1\xdf\x7f\x4e\x41\xcc\x02\xae\xaa\x8a\xc9\xda\x39\x3c\x25\x09\x00\x40\x9e\xe7\x70\xbb\xba\xc7\xae\x91\x1b\x14\x84\x6d\x8f\x07\x3b\x45\x7b\x6f\xa6\xef\xdc\x93\x2e\x48\xe9\x8d\x77\xcf\x5f\x6d\x48\x60\x17\x2f\x2e\xde\xe1\x9d\x8d\x0a\xc4\xaa\xde\x22\x1f\x05\x26\x6b\x3a\x2e\xa9\xf7\xd8\x34\x95\x7d\x29\x6a\x43\x14\x99\xfa\xf2\xbe\xc1\x35\x31\x8f\x58\x58\xd2\xe2\xb1\x16\xf0\xdf\xd3\x84\x47\xe6\xc3\xcf\xa1\x6a\xcb\xd4\x22\x53\x6a\xd5\x46\x13\x2f\x00\x3b\xa9\xd3\xff\x0d\xb3\xd9\xdf\x63\xd3\xd1\x1c\x8e\xfb\x61\x18\xe4\x71\x9f\xa5\x66\x9d\x0d\x8d\xc2\xf9\xc4\xc9\xcc\xb1\x6f\x76\x74\x6d\xb4\x30\x96\xe2\x1a\x4e\x63\x47\xab\xc7\x96\x16\xa0\x55\x73\xea\xe5\x0c\x47\xf7\x77\xf9\x31\xb1\x2e\xd2\xf9\x1c\xd0\x1e\x7d\x50\xdb\xcb\x81\xb2\xfb\x2e\x2f\xa1\x45\xad\xca\x74\xe6\x12\xef\x02\x4d\x86\xca\x90\x05\x6d\x82\xec\xcd\x8e\x26\xee\x3b\x96\xb3\xf9\x4b\xeb\x79\x0e\x9f\x49\x00\x81\x69\x4d\x4c\xba\xa4\xb8\x0b\x41\xc3\x13\x0b\x56\x0c\x53\x15\x06\x61\xb8\x37\x8c\xc6\x1d\xad\xe1\xbc\x4f\xce\x5c\x2a\x6e\x28\x2b\xbc\xe4\x4b\x2f\xff\xd4\xad\xef\xfd\xce\xce\xe1\x78\x22\xb2\x67\x78\x91\xba\xf9\x5f\x1c\xf8\x11\x51\xbf\xa2\xd4\xf3\xdf\x08\x70\xed\xf7\xda\x35\x1d\x4a\xbf\x6e\xc7\xec\x43\x37\xbe\xd0\xd1\x81\x04\x91\x55\x9c\x48\xbf\x86\x7f\x16\xc1\xf3\x1c\x46\x13\x96\x67\x83\x24\x59\x7c\x9b\x86\x15\x0d\xff\x03\xff\x7e\x5a\xe9\x81\xca\x4e\x68\x3c\x89\xbd\x1d\xae\x34\x53\xa9\x5a\x45\x5a\x4e\x2c\xb4\x5d\xd1\xa8\x72\x78\xd8\x4c\xf1\x83\xca\xa9\x17\x43\x36\x9c\x8f\x9e\xbc\x54\xcc\x87\xbc\x1e\xd7\xba\x0b\xef\x2d\x1f\xc2\xfb\x60\x70\x7b\x48\xcf\x4a\x6c\xb1\x50\x8d\x12\x45\x36\xba\x7e\x7c\xb0\xa0\x11\xf0\xf9\x22\x3d\x30\x36\xa2\xfe\xa5\xb3\xe1\xd2\xfb\x5d\x78\x47\x0e\x5c\xbe\xa1\xd6\x58\x15\xd4\x8d\xfe\xe8\x68\xb9\xd2\xaf\x30\xf8\x50\x89\x91\x0a\x59\x15\xc0\xfa\x89\x5d\x9e\x4d\x67\x21\xfa\xfc\x9c\xfc\x0a\x00\x00\xff\xff\xa8\x88\xdd\xc4\x50\x07\x00\x00"

func transfer_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_transfer_tokensCdc,
		"transfer_tokens.cdc",
	)
}

func transfer_tokensCdc() (*asset, error) {
	bytes, err := transfer_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transfer_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x23, 0xeb, 0xf5, 0xbd, 0xdf, 0x36, 0xbe, 0xbe, 0xd7, 0x5d, 0xac, 0xb9, 0x29, 0xc9, 0xcb, 0x71, 0x9f, 0x4a, 0x0, 0x79, 0x61, 0x75, 0x2c, 0xff, 0x5a, 0x8d, 0x3d, 0x7d, 0x7d, 0xda, 0x14, 0xef}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"burn_tokens.cdc":                                           burn_tokensCdc,
	"create_forwarder.cdc":                                      create_forwarderCdc,
	"generic_transfer.cdc":                                      generic_transferCdc,
	"metadata/setup_account_from_vault_reference.cdc":           metadataSetup_account_from_vault_referenceCdc,
	"mint_tokens.cdc":                                           mint_tokensCdc,
	"privateForwarder/create_account_private_forwarder.cdc":     privateforwarderCreate_account_private_forwarderCdc,
	"privateForwarder/create_private_forwarder.cdc":             privateforwarderCreate_private_forwarderCdc,
	"privateForwarder/deploy_forwarder_contract.cdc":            privateforwarderDeploy_forwarder_contractCdc,
	"privateForwarder/setup_and_create_forwarder.cdc":           privateforwarderSetup_and_create_forwarderCdc,
	"privateForwarder/transfer_private_many_accounts.cdc":       privateforwarderTransfer_private_many_accountsCdc,
	"safe_generic_transfer.cdc":                                 safe_generic_transferCdc,
	"scripts/get_balance.cdc":                                   scriptsGet_balanceCdc,
	"scripts/get_supply.cdc":                                    scriptsGet_supplyCdc,
	"scripts/get_supported_vault_types.cdc":                     scriptsGet_supported_vault_typesCdc,
	"scripts/metadata/get_token_metadata.cdc":                   scriptsMetadataGet_token_metadataCdc,
	"scripts/metadata/get_vault_data.cdc":                       scriptsMetadataGet_vault_dataCdc,
	"scripts/metadata/get_vault_display.cdc":                    scriptsMetadataGet_vault_displayCdc,
	"scripts/metadata/get_vault_supply_view.cdc":                scriptsMetadataGet_vault_supply_viewCdc,
	"scripts/switchboard/check_receiver_by_type.cdc":            scriptsSwitchboardCheck_receiver_by_typeCdc,
	"scripts/switchboard/get_vault_types.cdc":                   scriptsSwitchboardGet_vault_typesCdc,
	"scripts/switchboard/get_vault_types_and_address.cdc":       scriptsSwitchboardGet_vault_types_and_addressCdc,
	"scripts/test/example_token_vault_display_strict_equal.cdc": scriptsTestExample_token_vault_display_strict_equalCdc,
	"scripts/tokenForwarder/is_recipient_valid.cdc":             scriptsTokenforwarderIs_recipient_validCdc,
	"setup_account.cdc":                                         setup_accountCdc,
	"switchboard/add_vault_capability.cdc":                      switchboardAdd_vault_capabilityCdc,
	"switchboard/add_vault_wrapper_capability.cdc":              switchboardAdd_vault_wrapper_capabilityCdc,
	"switchboard/batch_add_vault_capabilities.cdc":              switchboardBatch_add_vault_capabilitiesCdc,
	"switchboard/batch_add_vault_wrapper_capabilities.cdc":      switchboardBatch_add_vault_wrapper_capabilitiesCdc,
	"switchboard/remove_vault_capability.cdc":                   switchboardRemove_vault_capabilityCdc,
	"switchboard/safe_transfer_tokens.cdc":                      switchboardSafe_transfer_tokensCdc,
	"switchboard/safe_transfer_tokens_v2.cdc":                   switchboardSafe_transfer_tokens_v2Cdc,
	"switchboard/setup_account.cdc":                             switchboardSetup_accountCdc,
	"switchboard/setup_royalty_account.cdc":                     switchboardSetup_royalty_accountCdc,
	"switchboard/setup_royalty_account_by_paths.cdc":            switchboardSetup_royalty_account_by_pathsCdc,
	"switchboard/transfer_tokens.cdc":                           switchboardTransfer_tokensCdc,
	"transfer_many_accounts.cdc":                                transfer_many_accountsCdc,
	"transfer_tokens.cdc":                                       transfer_tokensCdc,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"burn_tokens.cdc": {burn_tokensCdc, map[string]*bintree{}},
	"create_forwarder.cdc": {create_forwarderCdc, map[string]*bintree{}},
	"generic_transfer.cdc": {generic_transferCdc, map[string]*bintree{}},
	"metadata": {nil, map[string]*bintree{
		"setup_account_from_vault_reference.cdc": {metadataSetup_account_from_vault_referenceCdc, map[string]*bintree{}},
	}},
	"mint_tokens.cdc": {mint_tokensCdc, map[string]*bintree{}},
	"privateForwarder": {nil, map[string]*bintree{
		"create_account_private_forwarder.cdc": {privateforwarderCreate_account_private_forwarderCdc, map[string]*bintree{}},
		"create_private_forwarder.cdc": {privateforwarderCreate_private_forwarderCdc, map[string]*bintree{}},
		"deploy_forwarder_contract.cdc": {privateforwarderDeploy_forwarder_contractCdc, map[string]*bintree{}},
		"setup_and_create_forwarder.cdc": {privateforwarderSetup_and_create_forwarderCdc, map[string]*bintree{}},
		"transfer_private_many_accounts.cdc": {privateforwarderTransfer_private_many_accountsCdc, map[string]*bintree{}},
	}},
	"safe_generic_transfer.cdc": {safe_generic_transferCdc, map[string]*bintree{}},
	"scripts": {nil, map[string]*bintree{
		"get_balance.cdc": {scriptsGet_balanceCdc, map[string]*bintree{}},
		"get_supply.cdc": {scriptsGet_supplyCdc, map[string]*bintree{}},
		"get_supported_vault_types.cdc": {scriptsGet_supported_vault_typesCdc, map[string]*bintree{}},
		"metadata": {nil, map[string]*bintree{
			"get_token_metadata.cdc": {scriptsMetadataGet_token_metadataCdc, map[string]*bintree{}},
			"get_vault_data.cdc": {scriptsMetadataGet_vault_dataCdc, map[string]*bintree{}},
			"get_vault_display.cdc": {scriptsMetadataGet_vault_displayCdc, map[string]*bintree{}},
			"get_vault_supply_view.cdc": {scriptsMetadataGet_vault_supply_viewCdc, map[string]*bintree{}},
		}},
		"switchboard": {nil, map[string]*bintree{
			"check_receiver_by_type.cdc": {scriptsSwitchboardCheck_receiver_by_typeCdc, map[string]*bintree{}},
			"get_vault_types.cdc": {scriptsSwitchboardGet_vault_typesCdc, map[string]*bintree{}},
			"get_vault_types_and_address.cdc": {scriptsSwitchboardGet_vault_types_and_addressCdc, map[string]*bintree{}},
		}},
		"test": {nil, map[string]*bintree{
			"example_token_vault_display_strict_equal.cdc": {scriptsTestExample_token_vault_display_strict_equalCdc, map[string]*bintree{}},
		}},
		"tokenForwarder": {nil, map[string]*bintree{
			"is_recipient_valid.cdc": {scriptsTokenforwarderIs_recipient_validCdc, map[string]*bintree{}},
		}},
	}},
	"setup_account.cdc": {setup_accountCdc, map[string]*bintree{}},
	"switchboard": {nil, map[string]*bintree{
		"add_vault_capability.cdc": {switchboardAdd_vault_capabilityCdc, map[string]*bintree{}},
		"add_vault_wrapper_capability.cdc": {switchboardAdd_vault_wrapper_capabilityCdc, map[string]*bintree{}},
		"batch_add_vault_capabilities.cdc": {switchboardBatch_add_vault_capabilitiesCdc, map[string]*bintree{}},
		"batch_add_vault_wrapper_capabilities.cdc": {switchboardBatch_add_vault_wrapper_capabilitiesCdc, map[string]*bintree{}},
		"remove_vault_capability.cdc": {switchboardRemove_vault_capabilityCdc, map[string]*bintree{}},
		"safe_transfer_tokens.cdc": {switchboardSafe_transfer_tokensCdc, map[string]*bintree{}},
		"safe_transfer_tokens_v2.cdc": {switchboardSafe_transfer_tokens_v2Cdc, map[string]*bintree{}},
		"setup_account.cdc": {switchboardSetup_accountCdc, map[string]*bintree{}},
		"setup_royalty_account.cdc": {switchboardSetup_royalty_accountCdc, map[string]*bintree{}},
		"setup_royalty_account_by_paths.cdc": {switchboardSetup_royalty_account_by_pathsCdc, map[string]*bintree{}},
		"transfer_tokens.cdc": {switchboardTransfer_tokensCdc, map[string]*bintree{}},
	}},
	"transfer_many_accounts.cdc": {transfer_many_accountsCdc, map[string]*bintree{}},
	"transfer_tokens.cdc": {transfer_tokensCdc, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
