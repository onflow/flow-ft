// Code generated by go-bindata. DO NOT EDIT.
// sources:
// burn_tokens.cdc (1.637kB)
// create_forwarder.cdc (2.94kB)
// generic_transfer_with_address.cdc (2.083kB)
// generic_transfer_with_paths.cdc (1.678kB)
// metadata/setup_account_from_address.cdc (1.857kB)
// metadata/setup_account_from_vault_reference.cdc (1.84kB)
// mint_tokens.cdc (1.758kB)
// privateForwarder/create_account_private_forwarder.cdc (1.926kB)
// privateForwarder/create_private_forwarder.cdc (1.604kB)
// privateForwarder/deploy_forwarder_contract.cdc (418B)
// privateForwarder/setup_and_create_forwarder.cdc (2.454kB)
// privateForwarder/transfer_private_many_accounts.cdc (1.444kB)
// safe_generic_transfer.cdc (1.869kB)
// scripts/get_balance.cdc (655B)
// scripts/get_supply.cdc (177B)
// scripts/get_supported_vault_types.cdc (902B)
// scripts/metadata/get_token_metadata.cdc (724B)
// scripts/metadata/get_vault_data.cdc (788B)
// scripts/metadata/get_vault_display.cdc (782B)
// scripts/metadata/get_vault_supply_view.cdc (865B)
// scripts/switchboard/check_receiver_by_type.cdc (522B)
// scripts/switchboard/get_vault_types.cdc (649B)
// scripts/switchboard/get_vault_types_and_address.cdc (627B)
// scripts/test/example_token_vault_display_strict_equal.cdc (2.158kB)
// scripts/tokenForwarder/is_recipient_valid.cdc (444B)
// setup_account.cdc (1.63kB)
// switchboard/add_vault_capability.cdc (4.247kB)
// switchboard/add_vault_wrapper_capability.cdc (1.657kB)
// switchboard/batch_add_vault_capabilities.cdc (1.527kB)
// switchboard/batch_add_vault_wrapper_capabilities.cdc (1.804kB)
// switchboard/remove_vault_capability.cdc (1.174kB)
// switchboard/safe_transfer_tokens.cdc (2.127kB)
// switchboard/safe_transfer_tokens_v2.cdc (2.074kB)
// switchboard/setup_account.cdc (2.042kB)
// switchboard/setup_royalty_account.cdc (5.716kB)
// switchboard/setup_royalty_account_by_paths.cdc (5.787kB)
// switchboard/transfer_tokens.cdc (1.684kB)
// transfer_many_accounts.cdc (1.772kB)
// transfer_tokens.cdc (1.803kB)

package assets

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	clErr := gz.Close()
	if clErr != nil {
		return nil, clErr
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _burn_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\xcd\x6e\x9b\x40\x10\xbe\xf3\x14\x53\x0e\x29\x48\x0d\xbe\x54\x3d\x58\x76\xd2\x24\x4d\x6e\x95\x2a\xc5\x75\xcf\x03\x0c\x66\x55\xd8\x45\xbb\x43\xec\x28\xcd\xbb\x57\xbb\xcb\x62\x88\xe3\xaa\x1c\x12\xb1\xcc\x7c\x3f\x33\xdf\x5a\xb4\x9d\xd2\x0c\xf1\x43\x2f\x77\x22\x6f\x68\xa3\x7e\x93\x8c\xa3\x70\x7c\x7f\xc0\xb6\x3b\x39\x9d\x15\x7f\x27\xc6\x12\x19\xb7\x82\xf6\xe6\x58\x73\xdb\x6b\x49\x3a\x8e\xa2\xc5\x62\x01\x9b\x5a\x18\x60\x8d\xd2\x60\xc1\x42\x49\x10\x06\x10\x98\xda\xae\x41\x26\xa8\x94\xb6\xaf\x93\xef\x5c\x23\x43\xa1\xfa\xa6\x84\x9c\xa0\x37\x54\x42\xfe\x0c\x5c\x13\x60\xd9\x0a\x09\x58\x14\xaa\x97\x0c\xac\x20\xef\xb5\x04\xb6\x4a\x0c\x54\x5a\xb5\xb6\x4a\x68\x47\x6b\x58\x69\x2a\x61\x8b\x7d\xc3\xf6\x60\xd0\x42\xae\x47\xc8\x1d\x60\xeb\x50\xf6\x81\x08\xa1\x43\x8d\x2d\x31\x69\x0b\x6d\xf9\x26\xaa\x1c\xc4\xe4\x3d\xf1\xed\x4b\xf8\xf9\x20\x0e\x5f\x3e\xa7\xf0\x12\x45\x00\x00\x81\x85\x15\x63\x03\xa6\xef\xba\xe6\x19\x54\x15\x44\xe6\x54\x29\x4d\x0e\xdc\xea\x70\x2d\x0d\xf1\x50\x78\xeb\xbe\x06\xcc\x23\xa0\x33\x01\x9a\x8c\xea\x75\x41\x7e\x40\xb5\x6a\x4a\xe3\x55\x7a\x68\x77\x8a\x9a\x20\x27\x6b\xcf\xc2\x53\x39\x12\xd8\x57\x07\xb3\x84\xaf\xd3\xc5\x66\x7e\x40\xae\xae\xd3\xd4\xa1\xa6\xc4\x88\x9d\x24\xbd\x04\xec\xb9\x4e\x6e\x95\xd6\x6a\xbf\xc5\xa6\xa7\x14\x2e\x6e\xfc\xec\x47\xbb\xf6\x31\xd4\x54\xd9\xd4\x00\xac\x61\x46\xe1\x66\xf1\xe8\x0a\x8e\x5d\x56\xd4\x93\xe5\xfe\x86\x8c\x6f\x3b\xac\xd5\xe6\x89\xee\x94\x64\x8d\x05\xdb\x78\x25\xc1\xfe\xe6\xb9\xa3\x25\x48\xd1\x7c\x82\x27\x41\x7b\xff\x6a\xff\xae\xce\x47\x33\x7b\xd8\x6c\x03\xd7\x55\x92\xa6\x80\xe6\x03\xfc\x5f\xf9\xf5\xa8\xd8\x3e\xd7\xd7\xd0\xa1\x14\x45\x12\xdf\xb9\xdc\x48\xc5\xb0\x0b\x4e\xc0\x02\x38\x51\x2e\xd5\x76\x37\xc5\xe0\x20\x4e\x8f\xce\x17\x0b\xf8\x25\xb8\x2e\x35\xee\xdf\x66\x17\xfc\xe8\x3f\x9a\x01\x50\x48\x97\x63\xdc\xd1\x6c\x6e\x7e\x10\x3e\x15\xeb\xa1\x27\x1b\x0a\xb3\xdc\x2d\x6c\xe5\x96\x37\xb3\x98\x05\xd6\x14\x2e\x4e\x23\x70\x95\xcc\x8c\xda\xc7\xaa\x5a\x1e\x97\x14\x18\x7e\x20\xd7\xb3\xda\xf4\xdd\xb1\x78\x1d\x80\xa0\xa9\x22\x4d\xd2\x06\x57\xcd\x4d\x4e\x55\x78\x9e\x38\x9d\xc7\x6a\x8c\x2d\xac\x2e\xa7\xb6\xb3\xfd\xe0\x65\xbc\x87\xfe\xbf\xdf\xec\x7b\x09\xb7\x90\xaf\x7e\x09\x74\xa0\xa2\x67\x9a\x66\xd8\xff\x62\x39\xba\x64\x75\x39\xa7\x1e\x56\x37\x34\x77\xca\x30\xbc\x8c\x8d\xe7\x82\x0e\xeb\x35\x24\xa7\x37\xe3\x32\xe8\x5c\xce\x26\x18\x87\x9b\x1f\x67\x85\x92\x05\xf2\x69\x6b\xc6\xea\x91\xb5\x90\xbb\x24\x4d\x67\xbd\xa1\x23\x86\x3f\x70\x53\xb1\xbd\xb8\x23\xca\x39\x75\x53\xb0\xf3\x68\xf7\x87\x8e\x0a\xa6\x72\x02\xf8\x2f\x4b\xa7\xa0\xaf\xd1\x6b\xf4\x37\x00\x00\xff\xff\x87\x35\xe9\x7a\x65\x06\x00\x00"

func burn_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_burn_tokensCdc,
		"burn_tokens.cdc",
	)
}

func burn_tokensCdc() (*asset, error) {
	bytes, err := burn_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "burn_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xcd, 0x3a, 0x71, 0x8e, 0xc0, 0xcf, 0x7, 0x23, 0xb1, 0x43, 0xfd, 0x39, 0xec, 0xdf, 0x21, 0xe7, 0x92, 0x6d, 0xba, 0x52, 0x22, 0x80, 0x25, 0xdb, 0x62, 0xe9, 0xeb, 0x93, 0x24, 0x5, 0xda, 0xad}}
	return a, nil
}

var _create_forwarderCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x55\x5f\x6f\xdb\x36\x10\x7f\xe7\xa7\xb8\xf9\x21\xb3\x03\x47\xc6\xfe\xbd\x18\x49\x83\xd6\x5d\x86\x02\xdb\x50\x34\x69\x5e\xd7\x33\x75\x36\xb9\xd2\xa4\x40\x9e\xac\x1a\x45\xbe\xfb\x40\x52\x92\x25\xa7\xc9\xb2\x97\xf9\x21\x88\x44\xf2\xee\xf7\x8f\xa7\xc5\xf9\xb9\x10\x77\x4a\x07\x60\x8f\x36\xa0\x64\xed\x2c\xe8\x00\x08\x4c\xbb\xca\x20\x13\x6c\x9c\x8f\x8f\x83\x75\x56\xc8\x20\x5d\x6d\x4a\x58\x13\xd4\x81\x4a\xc1\x0e\x02\x31\xd4\x15\xa0\x05\x94\xd2\xd5\x96\x81\x5d\x3c\xdc\xa0\x2f\xa1\xa4\xca\x05\xcd\x54\x02\xbb\xcf\x64\x43\x5c\x43\xeb\x58\x91\x07\x4f\x92\xf4\x9e\x7c\x21\xc4\xbb\x0d\xa0\x3d\x38\x4b\x10\xc8\x96\x61\xb8\x39\xf6\xf1\xdf\x07\xb8\xc9\x15\xc9\xc3\x87\xf6\xdc\x5c\xb0\xa2\xfe\x09\x1a\x6d\x0c\xfc\x5d\x07\xee\x9b\xb3\x72\x81\x06\xb5\xe2\xf6\x7b\xac\x0d\x67\x26\x0a\x03\xac\x89\xac\x88\x0c\x30\xa4\x65\x4f\x52\x57\x9a\x2c\x03\xda\x12\x68\xa7\xe3\x3f\x40\xfb\xf8\x26\x1d\xd2\xb6\xd4\x12\x99\x82\x68\x94\x96\x2a\xa1\xeb\x1a\x46\x96\xaa\x6b\x58\xb4\x02\x37\x78\x98\x83\x8e\xfc\xc0\x6d\x36\x17\x52\xa1\xb6\x10\xc8\xef\xb5\x24\x68\xd0\x72\x82\xb6\x73\x56\xb3\xf3\xd0\x28\x17\x6d\x68\x0b\x6a\xbb\x15\x47\xf8\x9a\xe7\xa0\x19\x24\x5a\x68\x90\xa5\xca\xb0\xd2\x52\x20\x82\x46\x91\xa7\x01\x00\x90\xb8\x23\xd8\x78\xb7\x2b\x84\xb8\x65\xaa\xda\x9d\xd9\xad\x6c\x55\x80\x46\xb3\xca\x07\x7a\x16\x7e\x29\xc4\x0f\x05\xdc\x29\x82\x9b\xda\x6e\xf5\xda\x10\xdc\xa5\x1d\xd2\x59\xf6\x28\xa3\x0a\x4c\x7e\x83\x92\x20\xa8\x94\x07\x34\x9e\xb0\x3c\xc4\x5c\x94\x54\x19\x77\xa0\x12\x82\xdb\x51\x02\x25\x7e\xcc\xd5\xb0\xaa\x8c\x96\x18\xeb\xf1\xb8\x5e\x5b\x65\x70\xba\x10\x3f\xe5\x43\x03\x47\xda\x78\xb5\x9b\x15\xee\x09\xb0\x35\x34\x86\x95\x53\x9e\x73\x61\x4f\xc8\x54\x0a\x00\x48\x46\x06\x76\x9e\x4a\xd0\x16\x34\x87\xf4\x84\x5b\xca\xdc\x11\xaa\x7a\x6d\x74\x50\x54\xf6\x59\x12\x3f\x17\xf0\x36\x01\x49\x7a\x7e\x4a\xec\x6f\x7a\x4f\x0a\x59\xca\x4f\x47\xf0\x29\xa5\xa5\xde\x6c\xc8\x0f\x60\x8a\x5f\x8a\x98\x59\x40\xb0\xd4\xc0\xeb\xfc\x72\x09\xab\x84\x2c\x95\xed\xf8\x58\xe7\x77\x68\xcc\x61\x9e\xe0\xb2\x22\x0b\xbe\xb6\xb9\x73\x26\xf2\x57\x6f\x4d\x6e\x3d\xb8\x94\xf9\xd0\x96\x98\xb5\xdd\xc2\xe8\x42\x44\xeb\x47\x8d\x72\x80\x4f\x82\x5e\x88\xf3\x85\x10\x7a\x57\x39\xcf\x30\xe9\x0c\x4f\x8c\x27\xfd\xeb\x5f\xbf\xe0\xae\x7a\xf4\xf6\x44\x96\xc9\xb7\xab\xfc\x41\x8c\x25\x32\xde\x6b\x6a\xc2\x44\x88\x01\xf8\x69\x37\x02\x96\xf0\xba\x2c\x3d\x85\x30\x83\xaf\x22\x31\xaa\x3c\x55\xe8\x69\x1a\xf4\xd6\xc6\x75\xac\x59\x4d\xdf\x38\xef\x5d\x73\x8f\xa6\xa6\x39\xbc\x0b\xa1\xa6\xdb\x6c\xe5\x0a\x2b\x5c\x6b\xa3\xf9\xb0\x8a\xae\x38\x63\xc8\xcf\xe1\x7d\x36\xf6\xb8\x38\x87\x5b\xdc\x53\x7b\xfe\xa3\xad\x4e\xd7\x67\x70\xd6\x1a\xd5\xe3\x88\x3f\x43\x0c\xfb\x18\xb3\xb7\xc8\x08\x57\x30\x54\xa3\xf0\x14\x9c\xd9\xd3\xaa\x4d\x43\x64\x39\x8d\xef\x6a\x2f\xe9\xee\x50\xd1\x12\xac\x36\x73\xd8\x6b\x6a\xf2\x63\xfc\x7b\xf9\xb4\x42\xc5\xcd\xdd\x7d\xd7\xeb\xd5\x74\x36\x03\x0c\xdf\xc1\xcb\xb6\x5f\xf7\x88\xe3\xef\xfa\x1a\x2a\xb4\x5a\x4e\x27\xab\x74\x5f\xac\xe3\x98\x93\xcc\x04\x62\x81\x04\xaa\xbd\x3a\xd4\xe7\x79\x32\x4b\x65\x1e\xb3\xff\x40\x1b\xb8\x82\x6c\x48\x21\x3b\xd1\x34\x85\x62\x9d\x7c\xb9\x3c\x1b\x09\x93\x60\xbd\x9a\xf6\xc2\x15\xbb\x16\xf7\x7b\x64\x35\xfb\x57\xa8\xb9\x26\xbc\x41\x83\x56\xc6\xbc\xa6\xeb\x25\x69\x34\xc8\x27\xb3\xa3\x4b\x8b\x05\xfc\x46\xdc\x85\x3b\x5f\x81\x1e\xe5\xa1\xa7\xd9\x5d\x86\x35\xc5\x0b\x33\x98\xdc\x6e\xc4\xf8\x38\x76\xae\xa2\x6a\x6d\x2c\xfa\xc0\xce\xc6\x02\x6c\x89\x2f\xcf\xbe\x8e\x5c\x2a\xba\x7b\xf8\x30\xd4\xa0\x3b\xff\x32\x0d\xb6\x4f\xf3\x39\x61\x3e\x18\x2b\xfd\xac\xc8\x93\x2f\x4e\x49\xcd\x9d\x6a\xa7\xa3\xa0\x74\xdd\xd8\x18\x7c\x72\x1e\x39\x0f\x97\x17\xf0\x68\x06\xa6\x8e\x7f\x52\xd3\x7f\x98\xa7\xbd\x66\xcb\xa3\x7c\x47\x92\x6d\x70\xda\xe1\x5b\x44\x60\xd3\xcb\x8b\x54\x7f\x0e\xec\x96\xb0\x68\x97\x16\x34\x88\x51\x5f\x7d\xcc\xf7\xa3\x35\xda\x7e\x4e\xc0\xe9\x8b\x0e\x69\xf8\x1d\xc5\x39\xed\x39\xf2\xaa\xee\xee\xfd\x93\xb6\x0c\x1b\xfd\xde\xb5\xb1\xf9\xaa\xb4\xf4\xbf\x65\xc9\x48\xb7\xf4\x1d\xea\x22\xb0\xc2\xea\x89\x9b\xd3\xa9\xa1\xe3\x30\x7b\x2e\x42\xa3\xac\x24\x6c\xcf\xaa\x35\xda\xfe\xc8\x83\x11\x84\x4e\x8d\x53\xc4\x73\x40\x5e\xc2\x7f\xd6\xa8\x87\x90\xa6\xaf\x7c\x56\x9f\x7e\xef\xcb\x05\x3a\x8d\xe1\x49\xbb\xff\x4f\xa9\x21\xf6\x2c\xd5\x22\xad\xcb\xa7\xe2\x1b\xab\x3e\x88\x07\xf1\x4f\x00\x00\x00\xff\xff\x5d\xea\x35\xcc\x7c\x0b\x00\x00"

func create_forwarderCdcBytes() ([]byte, error) {
	return bindataRead(
		_create_forwarderCdc,
		"create_forwarder.cdc",
	)
}

func create_forwarderCdc() (*asset, error) {
	bytes, err := create_forwarderCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "create_forwarder.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x30, 0x86, 0x62, 0x2f, 0x7c, 0xc2, 0xfc, 0xc7, 0xe3, 0xef, 0x15, 0xb0, 0x9e, 0x95, 0x95, 0x4f, 0x55, 0x6f, 0xc5, 0xc, 0x33, 0x95, 0xbd, 0x3f, 0x89, 0xd9, 0xc3, 0x85, 0x28, 0x1, 0xb4, 0xba}}
	return a, nil
}

var _generic_transfer_with_addressCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x55\x4d\x6f\xdb\x46\x10\x3d\x5b\xbf\xe2\x59\x87\x84\x04\x1c\xfa\x52\xf4\x20\x38\x76\x5d\x17\xee\xa9\x45\x90\x2a\xee\x79\x44\x8e\xc4\x85\xa9\x5d\x62\x77\x28\xc5\x30\xf4\xdf\x8b\xfd\xe0\x56\x54\x6c\xc7\x3e\x58\xd2\x70\xe7\xcd\xcc\x7b\x6f\x96\x6a\xdb\x1b\x2b\x98\xdf\x0f\x7a\xa3\x56\x1d\x2f\xcd\x23\xeb\xf9\x2c\x85\x27\xd1\xbf\x58\xa8\x21\xa1\x07\xc5\x7b\x87\xb5\x35\xdb\x93\xb4\xc9\x81\xf9\x6c\x76\x79\x79\x89\x3b\xd2\xe8\xc9\x39\x28\x0d\xd2\x4f\xa8\x8d\x16\x4b\xb5\x80\x9a\xc6\xb2\x73\x20\xdd\x40\xd3\x96\x21\x06\x62\x49\xbb\x35\x5b\x10\xc4\x03\xc6\x22\xd2\x92\xe4\xbc\x00\xba\x6c\x95\x43\xc7\xe2\xf0\x64\x06\xd4\xad\x31\x8e\x21\x2d\xa7\x2c\x1f\xdc\x93\x16\x0f\xe9\x58\x37\x3e\x27\xe4\xdd\x1e\x37\x50\x93\xc6\x8a\x7d\xb6\x63\x8d\x96\x2d\x5f\xc0\x19\xec\xa9\x0b\xc8\xae\x35\x43\xd7\xa0\x6e\xb9\x7e\x04\xd9\xcd\xb0\x65\x2d\xd8\x51\x37\xb0\x0b\x60\x62\xb0\xa5\x47\x86\x1b\x6c\x2c\xae\xb4\xb0\x6e\xb8\x49\x5d\xf4\x24\x2d\x94\x0b\xd3\x73\x03\xa5\x43\x1b\x61\x44\xaa\x45\x19\x5d\xd0\xd6\x0c\x5a\x16\xf8\x76\xaf\xbe\xff\xfa\xcb\x05\xc4\x2c\x70\x1b\x69\xb9\xc8\x7d\xa6\xc0\x0b\x4f\xfe\xa6\x2d\x2f\xf0\x8f\x58\xa5\x37\x25\x9e\x67\x33\x00\x08\xec\x30\x1e\x68\xe8\x04\x96\x9d\x19\x6c\xcd\x91\xc2\xd6\x74\x8d\xfb\x9f\x26\x17\xa3\x64\x19\x2b\x56\x7a\x93\xd9\xb7\xdc\x04\xa8\x8e\x05\xc2\xdb\x3e\x60\x2d\xf0\xdb\xf3\x44\xec\x2a\x84\x0f\xb9\xea\xfd\x32\x04\xfe\x20\x21\x38\xb1\x43\x1d\xe8\xdf\xb0\x04\x22\xa2\x5f\x32\xec\x6e\x3c\xba\x78\xc3\x62\xd5\x11\x64\x2c\xd3\x5b\xee\xc9\x72\xe1\xd4\x46\xb3\x5d\x80\x06\x69\x8b\xdf\x8d\xb5\x66\xff\xe0\x85\x29\xf1\xe1\xb6\xae\x3d\xa9\x99\x8f\xd4\x5d\x3c\x04\x82\xe5\x35\x5b\xd6\x75\xf4\x5b\xcb\xb1\x15\x38\x31\x96\x1b\x18\x1d\x62\x49\x32\x8a\x58\x20\x39\x8e\xf6\xc3\xaa\x53\xf5\x17\x92\x36\x17\xf0\x23\x79\xae\xbb\x1d\xdb\xaf\xbc\xc6\x67\x3f\x77\xea\xa4\x38\x11\xb2\xcc\x59\xfe\xaf\x1a\x9f\xba\x6a\x15\x5a\xbc\xfa\x30\xa5\xf9\x70\x5d\xe8\xa0\xf3\xb1\xea\x53\x8c\x9b\x1b\xf4\xa4\x55\x5d\xcc\xef\x82\x65\xb5\x11\xac\x5e\x9d\x77\x9d\xd0\x93\x4b\x47\xd8\x79\x39\xe1\xeb\x9b\x4b\xa6\x99\xe4\x5b\x16\xab\x78\x17\xed\x7e\xbf\xf4\x2a\x21\x67\x39\xee\xd6\x55\x16\x16\x9f\x8f\x19\xa9\xd2\xf7\xbb\x54\xcd\x67\x16\xa3\x3b\x97\x4f\x3d\x2f\xa0\x55\x77\x81\x9d\xe2\x7d\xfc\xe9\xff\x5f\xbd\xcf\x1b\xd7\x45\x59\x82\xdc\xf9\x3b\xad\x74\xf3\x53\xf2\x52\xb3\xe3\x94\x79\x24\xdf\x1d\xd6\xc6\x86\x07\x1b\xb5\x63\x9d\x4b\xbe\xcd\xe6\x9f\x2c\x2f\x49\x11\x6d\xfc\xd1\x8d\xee\x0b\xe4\x4d\x4c\x15\x22\xd1\x51\xf1\x70\xe5\x8f\xd2\x86\x47\xb7\x84\x0d\x98\xee\xe5\xbf\x4a\xda\xc6\xd2\xbe\xc4\x89\x95\xaa\x2f\xd6\xec\x54\xc3\xf6\x70\x5d\xf8\x6d\x5c\x9c\x48\x36\x62\x7b\x6b\x97\xb3\xb3\xb3\xb3\x37\x8c\xf5\xc3\x2c\x66\x1f\x47\x09\x6c\x9d\x1f\xcf\x1f\x8a\xe4\x7b\x04\x57\x9f\xf2\x54\xd5\x3e\xb5\x9a\x6f\xc2\xf8\x19\xed\x9d\xae\x16\xfe\xce\xf5\x20\x8c\xe7\x93\x6d\xab\x55\xaf\xfc\x8d\x3c\xd9\x35\x31\xe5\xe9\x31\x56\x79\x29\x73\x52\x55\x53\x4f\x2b\xd5\x29\x51\xfc\xda\xe2\x55\x5f\x53\xee\xe1\xba\x38\xe1\x69\x44\x8d\x44\xbd\x73\x15\x7f\x60\x2c\x77\xf3\xd1\x61\xac\x75\x7e\x62\x9c\xe5\xf8\x42\x4c\x37\x76\x7a\x1f\xbe\x62\x9d\x23\xe4\x80\x86\x3c\xe6\x53\x06\x3d\x62\xa4\x6a\xb8\x37\x4e\x49\x32\xc3\xd5\xa7\xa9\x52\xa3\x0a\x87\xff\x02\x00\x00\xff\xff\x2b\x19\x34\xc7\x23\x08\x00\x00"

func generic_transfer_with_addressCdcBytes() ([]byte, error) {
	return bindataRead(
		_generic_transfer_with_addressCdc,
		"generic_transfer_with_address.cdc",
	)
}

func generic_transfer_with_addressCdc() (*asset, error) {
	bytes, err := generic_transfer_with_addressCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generic_transfer_with_address.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x4e, 0x70, 0x6a, 0x10, 0xc2, 0x53, 0x67, 0xc4, 0x96, 0x67, 0x8, 0x8a, 0x2f, 0xec, 0xe2, 0x1e, 0xfb, 0x60, 0x5d, 0xb, 0xbb, 0xa1, 0xcb, 0x7, 0x78, 0xd9, 0x9, 0xf9, 0x12, 0x3b, 0x3b, 0xe}}
	return a, nil
}

var _generic_transfer_with_pathsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x55\x4b\x4f\xeb\x38\x14\x5e\xd3\x5f\xf1\xd1\x05\xa4\x52\x49\x37\xa3\x59\x54\x3c\x86\x41\x62\x34\x3b\x04\x0c\xb3\x76\xed\x93\xc6\x97\xd4\x8e\x7c\x4e\x5a\x2a\xd4\xff\x7e\x65\x27\x4d\x1f\xf4\xea\xea\x5e\x36\x24\xae\x7d\xbe\x67\x5d\xbb\xa8\x7d\x10\x0c\x1f\x1b\x37\xb7\xb3\x8a\x5e\xfd\x3b\xb9\xe1\x60\x30\x99\x4c\xf0\xa0\x1c\x6a\xc5\x0c\xeb\xa0\xdc\x1a\x2c\x3e\xa8\x39\xa1\x56\x52\x42\x39\x83\x40\x9a\xec\x92\x42\xbb\x62\x0d\x39\xb1\x85\xa5\x00\xeb\x58\x48\x19\xf8\x02\xdf\x1a\x16\x48\x49\x30\x54\xa8\xa6\x92\x3c\x8d\x7e\x2d\x2d\xa3\x22\x61\xac\x7d\x03\x5d\x7a\xcf\x94\x76\x49\xc4\x4f\x8b\x2b\xe5\x04\xe2\xc1\xe4\x0c\x14\x63\x45\x55\x95\xb6\x68\x55\xab\x99\xad\xac\xac\xbf\xee\xb3\xf1\x31\x41\x24\x98\x7b\xb7\xee\x26\x26\x86\x5a\x39\xcc\x28\x69\xa2\x34\x53\x39\xa8\x30\x6f\x16\xe4\x04\x25\x05\x1a\x83\x3d\x56\xaa\x4a\xcc\xb8\xf4\x4d\x65\xd2\x9c\xf6\x11\xba\x24\xfd\xbe\x3b\xb1\x54\x55\x43\x1c\xb1\x17\xea\x9d\xc0\x4d\x68\x35\x58\x27\xe4\x0c\x99\x7d\x68\xcb\x5b\x58\xeb\x12\x3d\x09\xca\xb1\xd2\x62\xbd\xcb\xd4\xc2\x37\x4e\xa6\xf8\xef\xd1\x7e\xfc\xf9\xc7\x18\xe2\xa7\xb8\x37\x26\x10\xf3\x38\xe9\xa2\xf0\xa4\xa4\xfc\xb7\x37\x78\x8a\x17\x09\xd6\xcd\xc7\x7d\x04\xa7\x3f\x1f\xe1\x73\x30\x00\x80\x64\x39\xe1\x2d\x26\x80\x40\xec\x9b\xa0\x23\x59\x25\x28\x7d\x65\x78\xe7\x3d\xb7\xab\x2a\x10\x66\x64\xdd\x1c\x89\x68\x41\x21\x90\x49\xa3\x2a\x12\x08\x2d\xea\x34\x6b\x8a\xbf\x3e\x0f\xaa\x93\xa7\xe5\x4d\x8b\x5a\x07\xaa\x55\xa0\x8c\xed\xdc\x45\x52\xaa\x91\x32\xfb\xdb\x87\xe0\x57\x6f\xd1\xbb\x11\x2e\xee\xb5\x8e\xda\x7b\xa2\x5b\x84\xae\x6b\x51\x16\x6e\xf0\xb2\x7b\xcb\xec\x9e\xca\x53\xde\x8c\xfa\x39\xf1\xef\xee\x0e\xb5\x72\x56\x67\xc3\x87\x14\xa1\xf3\x02\xed\x1d\x4b\x68\xb4\x40\x1d\x76\xba\x08\x7e\x91\x9c\xa8\x83\x5f\xda\x98\xe0\x71\xb1\x39\xd9\x3a\x1c\xed\xc8\x4e\x26\xf8\x87\xe2\xa4\x40\x05\x05\x72\xd1\x56\x9f\x86\xb4\xaa\x2f\x39\x61\x90\xc1\x32\x3a\x73\x20\x32\xad\x3c\x53\x81\x9b\x6e\x73\xde\xd1\xc9\x67\xc9\xa4\xeb\x64\xd8\xa1\xbf\xff\x5b\x29\x4d\x50\xab\x11\x2e\x8e\x9c\x7f\x6a\x49\x87\xcd\x6d\x16\x85\x4c\xf7\x3d\x1c\x0d\xce\xce\xce\x4e\x79\xd1\x02\x7d\x25\xef\x57\x2d\xf7\x14\xe7\xf9\xbe\x60\xa6\xaa\xc8\xfb\x02\xe0\xfa\xaa\x97\x91\xaf\x3a\x6e\x7d\xa1\xdb\xff\x6d\x22\x5d\x27\xe8\x83\x74\x23\x84\xcf\x03\x27\xea\x66\x56\x59\xdd\xa5\xfd\xd4\xbf\x1c\x84\x7d\xba\xea\xbf\x16\x77\x8b\xf3\xfb\x69\x47\xae\x81\xb4\xad\x6d\xbc\x00\x6e\x30\x27\xe9\x1a\x9c\x89\x1f\x1d\x6f\x4b\x74\xdb\x7c\xfb\x43\x79\x7f\x7d\x59\xe2\x6d\xce\xc7\x51\x3e\x77\x67\x37\xb7\xd9\xce\x99\x9f\x2b\xfd\x51\x98\x3d\xf8\x25\x63\x3b\xfa\xfc\xa8\xc4\xaf\xdd\xd7\x7c\x7b\x0b\xf4\xee\x9c\xac\xf1\xde\xe4\xf6\x17\x60\x77\x29\xf7\x43\xf7\x0c\xc8\x0d\xd5\x9e\xad\x74\xc5\xbc\xbe\x3a\x2c\xd1\xb6\x20\x9b\xef\x01\x00\x00\xff\xff\xa3\xb6\x2f\xc4\x8e\x06\x00\x00"

func generic_transfer_with_pathsCdcBytes() ([]byte, error) {
	return bindataRead(
		_generic_transfer_with_pathsCdc,
		"generic_transfer_with_paths.cdc",
	)
}

func generic_transfer_with_pathsCdc() (*asset, error) {
	bytes, err := generic_transfer_with_pathsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generic_transfer_with_paths.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x76, 0xb6, 0xe6, 0xe, 0x4f, 0x9f, 0xd0, 0x1, 0xaa, 0xaf, 0xa9, 0xcf, 0x67, 0x93, 0xb0, 0x92, 0x46, 0x35, 0xe5, 0xf0, 0xa6, 0xb6, 0x1, 0x1b, 0xa, 0x2a, 0x9c, 0x94, 0xcc, 0xac, 0x94, 0xd5}}
	return a, nil
}

var _metadataSetup_account_from_addressCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x54\x4b\x6f\xdb\x3c\x10\xbc\xeb\x57\xec\xe7\x43\x20\x03\x8e\x7c\x37\x9c\x04\xf9\xdc\xe6\xd6\xa2\x48\xdc\xdc\xd7\xd4\xca\x22\x22\x93\x02\x77\x69\x35\x08\xfc\xdf\x0b\x52\x8f\x48\x79\x34\x45\xaa\x83\x21\x73\x9f\x33\x9c\x91\x3e\xd4\xd6\x09\xcc\x6e\xbc\xd9\xeb\x5d\x45\x5b\xfb\x40\x66\x96\xbc\x79\xfc\x8d\x04\x73\x14\xbc\xd7\xd4\xf0\x2c\x49\x96\xcb\x25\x6c\x4b\xcd\x20\x0e\x0d\xa3\x12\x6d\x0d\x68\x86\xa6\x44\x01\x34\x80\x4a\x59\x6f\x04\x1a\xeb\xab\x1c\x9c\x37\xb1\x42\x2c\x30\x09\x68\x61\xaa\x0a\xf0\x75\x38\x38\xa0\xc1\x3d\x41\xd1\x4d\x03\x09\xe3\x38\x6b\xbb\x17\xde\xc4\xd6\xb1\xda\x33\x31\x1c\xc3\x02\xa1\xee\xc1\xd8\x06\x9a\x92\x1c\xf5\x6d\x43\xbf\x92\xe0\x88\xbe\x92\x58\xa0\x0d\xb0\x58\x17\xda\xa3\xc9\x43\x9a\x72\x84\x42\x31\x8d\x0e\xb5\x3c\xb6\xc9\x59\x92\x8c\x60\xa4\xca\x1a\x71\xa8\xe4\x3a\xcf\x1d\x31\xaf\xa0\x7b\x59\x40\x1f\xf9\x8e\x07\x5a\xc1\x9d\x38\x6d\xf6\x73\x78\x4a\x12\x00\x80\xda\x51\x8d\x8e\x52\xd6\x7b\x43\x6e\x05\xe8\xa5\x4c\xef\xf0\x48\xf7\x58\x79\x5a\xc0\x06\x6b\xdc\xe9\x4a\x8b\x26\x9e\xc3\xd9\x75\xcb\x50\x28\x87\xee\x59\x2e\xe1\x7f\xeb\x9c\x6d\x00\xc1\x51\x41\x8e\x8c\x8a\xe8\x06\x58\x11\x0f\xe5\x60\x4d\x3c\xab\x91\x99\xf2\x81\x6c\x94\xf1\x69\xed\x77\x95\x56\x3f\x50\xca\x61\x40\x45\x02\x8e\xd8\x56\x47\x72\xb7\x54\xc0\x05\xec\x49\xba\x45\x5e\xc2\x9e\x0f\x55\xe1\xc9\xfa\x28\x67\xbb\xb8\xe2\xfa\xec\x69\x22\x90\xd3\x65\x6a\x22\x2b\x63\x8e\xa6\x3d\xae\xae\xa0\x46\xa3\x55\x3a\xdb\x44\x55\x18\x2b\xb0\x7b\x17\xef\x54\x10\x43\xdb\xd9\x3c\x19\xf3\xf5\x93\xc3\x6d\xa2\x4c\xeb\x1d\x89\xd3\x74\x6c\x2f\xfa\x66\x1b\x44\x0b\x13\x12\x0a\xb9\x0f\x74\x7e\x41\x41\xb8\x18\x53\x92\x75\xef\x9b\x6e\x5c\x28\x4d\xc3\x99\x77\x8a\xb6\x8f\x35\xad\xc0\xe8\x6a\x11\x65\xd8\xfe\x0d\xbf\xeb\xf7\xbd\x92\xdd\x6c\x87\x51\x97\xe9\x7c\x0e\xc8\xff\xc1\xdf\xa5\x5f\x7d\xc8\x5e\xb7\x6c\x0f\x73\x80\x14\xb6\x83\xc2\xba\x18\xd8\xeb\x23\x99\x61\xe4\x9f\xe9\xdc\xb4\xfe\x40\x30\xd4\x8c\x1d\x02\x9e\xb5\xd9\xc7\x76\xad\x85\xbe\x86\x58\x1c\x38\x78\x14\xb4\x61\x9d\xbf\x5a\x66\xc2\x3b\x3d\x97\xad\xcf\x47\x97\x90\xbd\xec\x9a\x4e\xf7\x0a\x36\x02\x2d\xbd\x36\x3a\xc1\x0f\x19\xad\xe5\xb2\xce\xec\x19\xe3\x91\xd2\xf5\xf9\xf3\xb0\x05\x88\x5d\x8d\x2f\xbd\x4f\x0d\xee\x78\x16\xe9\x9b\x4c\xb4\x36\x02\xd5\xbb\xf7\x71\x20\xb6\x65\xa6\x29\xb5\x2a\x41\x1b\x55\xf9\x9c\x38\x06\xb2\xdb\x4e\x50\xa0\x8d\x90\x2b\x50\xd1\x84\x85\x58\xb8\xc1\x1a\x2e\xfa\xcd\xd5\xe8\xdb\x30\xc0\xd0\xcc\x9e\x5e\xfa\x2c\x8b\x18\x4e\x97\xe9\x87\x68\xde\x6a\x1d\xc1\x70\x99\xf6\x1b\x2c\x00\x65\x4a\xcc\xa1\x53\x63\xdb\xeb\x53\x8c\xd0\xaf\xda\x0e\x72\x71\xa4\x48\xbf\x4f\x45\x1f\xfe\x2c\x1b\xb7\x5d\xfd\xbf\x12\x32\xda\xe3\x35\x27\x7d\x70\xc4\xc9\x29\x39\x25\xf0\x3b\x00\x00\xff\xff\xc6\x61\x97\x91\x41\x07\x00\x00"

func metadataSetup_account_from_addressCdcBytes() ([]byte, error) {
	return bindataRead(
		_metadataSetup_account_from_addressCdc,
		"metadata/setup_account_from_address.cdc",
	)
}

func metadataSetup_account_from_addressCdc() (*asset, error) {
	bytes, err := metadataSetup_account_from_addressCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metadata/setup_account_from_address.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x18, 0x2e, 0xb8, 0xe0, 0x29, 0x5b, 0x76, 0x7e, 0xc7, 0x7e, 0xf3, 0x51, 0xec, 0x7e, 0xad, 0x23, 0xad, 0x97, 0xd9, 0x0, 0xf4, 0x6, 0xd7, 0x49, 0x21, 0x3c, 0xc4, 0xce, 0xf6, 0x67, 0x5e, 0x4c}}
	return a, nil
}

var _metadataSetup_account_from_vault_referenceCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x53\xc1\x6e\xdb\x30\x0c\xbd\xfb\x2b\x88\x1c\x3a\x07\x48\x9d\x7b\x90\xb4\xe8\xb2\x75\xa7\x01\x45\x97\xf5\xce\xd8\x74\x2c\xd4\x91\x0c\x89\xb6\x57\x14\xf9\xf7\x41\x92\xe5\xc8\x59\x8b\x02\x9d\x0f\x81\x42\x91\xd4\x7b\x8f\x8f\xe2\xd8\x28\xcd\x30\xbb\x6f\xe5\x41\xec\x6b\xda\xa9\x67\x92\xb3\xe4\xcd\xf0\x4f\x62\x2c\x90\xf1\x49\x50\x6f\xce\x39\xf6\xef\x23\x19\x55\x77\xa4\x67\x49\xb2\x5c\x2e\x61\x57\x09\x03\xac\x51\x1a\xcc\x59\x28\x09\xc2\x40\x5f\x21\x03\x4a\xc0\x3c\x57\xad\x64\xe8\x55\x5b\x17\xa0\x5b\xe9\x2a\x58\x81\x21\x06\xc1\x86\xea\x12\xda\xc6\x06\x8e\x28\xf1\x40\x50\x0e\x18\x80\x2d\x08\x93\xf9\xee\x65\x2b\x5d\x6b\x57\xdd\x1a\x32\xd0\x59\x58\xb6\xee\x59\xaa\x1e\xfa\x8a\x34\x85\xb6\xb6\x5f\x45\xd0\x61\x5b\xb3\x2b\x10\x12\x0c\x2b\x6d\xdb\xa3\x2c\x6c\x5a\xae\x09\x99\x5c\x1a\x1d\x1b\x7e\xf1\xc9\x59\x92\x44\x34\x52\x2c\x0a\x4d\xc6\xac\xe0\xce\x1f\x16\xd0\xb4\xfb\x5a\xe4\x0f\xc8\xd5\x0a\x1e\xc6\xf3\x1c\x5e\x93\x04\x00\xa0\xd1\xd4\xa0\xa6\xd4\x88\x83\x24\xbd\x02\x6c\xb9\x4a\x7f\x61\x47\x4f\x58\xb7\xb4\x80\x2d\x36\xb8\x17\xb5\x60\x41\x66\x0e\x57\x77\x5e\x1b\x5b\x0e\xc3\xb7\x5c\xc2\x57\xa5\xb5\xea\x01\x41\x53\x49\x9a\x64\xee\x78\x8d\x84\x1c\x13\x2a\x40\x49\x17\x6b\xd0\x18\x2a\x46\x99\x91\xe3\xe8\x19\xee\xf8\x40\x4d\x0c\x7a\x18\xdf\x23\x95\xb0\x81\x03\xf1\x00\x24\x10\x9e\x8f\xd9\xf6\xcb\xf2\x08\x75\xb6\x77\xe8\xd6\x57\xaf\xb1\x0f\xb2\x70\x38\xdd\xa4\xe7\x37\xa7\x6d\x6e\x6f\xa1\x41\x29\xf2\x74\xb6\x75\x56\x90\x8a\x61\xff\x01\x55\x3b\xe3\x11\x2d\xcc\xe6\x49\xac\xd3\x6f\x63\xe7\x87\x3c\x2d\xd6\xc4\x5a\x50\xe7\x47\x7b\xbf\xb3\x28\x61\x42\xbe\x64\x17\xdb\xc0\xfb\x66\xcf\x0e\xc4\xbe\x34\xed\x22\x96\xab\x58\xb8\x29\x96\x1f\xc4\xe1\x41\x0b\xfc\x1b\x32\x7a\xf0\xa5\x56\x47\xff\x73\xc6\x73\x09\x67\xac\xd8\x0c\xe0\xb2\x38\x18\x74\x83\x74\xb6\xab\x28\x4c\xdf\xeb\x53\x88\x42\x7e\x61\x10\xc7\xa6\xa6\x23\x49\x8e\xa4\x2b\x02\x84\x0b\xd5\xb6\xde\xf8\x08\x92\xfa\xd8\xfa\xd0\x1a\x21\x0f\xae\x81\xdf\x8d\xef\xf6\xce\xc1\x18\x97\x0f\x84\x34\xa2\xa0\x4b\xa6\x13\x3e\x74\x2e\x5b\x5f\x47\x3c\xb2\xcb\xae\xe9\x14\x97\xdd\x12\x10\x1c\xe6\x3f\xf8\x79\xcc\xf0\x1b\x95\x0d\x5b\x9c\x19\xec\x28\x5d\x5f\x9f\x1f\x5b\x00\xab\x55\x2c\x66\x48\x9d\x1a\xf1\x4d\x25\xbc\x63\x61\xb4\xf9\x0b\x94\x4a\x47\x52\xf6\x95\xc8\x2b\x10\x32\xaf\xdb\x82\x8c\xbb\x18\x0d\x0f\x42\x32\xe9\x12\x73\x9a\xa8\xe0\x0a\xb7\xd8\xc0\x26\x20\x9f\x2c\x51\xa0\x21\x8c\x69\x69\x7d\xf5\x3a\xb1\x62\xe6\x38\x9c\x6e\xd2\x0f\xd9\xbc\xd5\xda\x91\x31\x55\x1a\x10\x2c\x00\x79\x2a\xcc\x71\xb0\xba\xef\xf5\x29\x45\xe8\x4f\xa3\x46\xbb\x68\xca\x49\xbc\x2f\x45\xb8\xfe\xac\x1a\x8f\x43\xfd\xff\x0a\x12\xe1\xf8\x57\x93\x70\x19\x69\x72\x4a\x4e\x09\xfc\x0d\x00\x00\xff\xff\xb9\xe0\xf8\xc0\x30\x07\x00\x00"

func metadataSetup_account_from_vault_referenceCdcBytes() ([]byte, error) {
	return bindataRead(
		_metadataSetup_account_from_vault_referenceCdc,
		"metadata/setup_account_from_vault_reference.cdc",
	)
}

func metadataSetup_account_from_vault_referenceCdc() (*asset, error) {
	bytes, err := metadataSetup_account_from_vault_referenceCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metadata/setup_account_from_vault_reference.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf6, 0xf7, 0xf3, 0x7, 0x11, 0xf1, 0x3e, 0x5, 0x7, 0xcb, 0xee, 0xf9, 0x81, 0x4d, 0xb5, 0x12, 0x22, 0x58, 0x73, 0x23, 0x35, 0x9, 0xea, 0xb9, 0xb8, 0xaf, 0x71, 0x41, 0x9e, 0xd, 0x5, 0x70}}
	return a, nil
}

var _mint_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\xcd\x6e\xdb\x4c\x0c\xbc\xeb\x29\xf8\xe9\x10\x48\xf8\x12\xf9\x52\xf4\x60\xd8\x09\xf2\xd3\xdc\x02\x14\x89\x9b\x3b\x25\x51\xf6\xb6\xd2\xae\xc0\x5d\xd9\x31\x82\xbc\x7b\xb1\x3f\x92\xa5\x38\x36\xaa\x43\x02\xef\x92\x33\xc3\x21\xb9\xa2\x69\x15\x1b\x88\x1f\x3b\xb9\x16\x79\x4d\x2b\xf5\x87\x64\x1c\xf5\xc7\x3f\xde\xb0\x69\x8f\x4e\x27\xc1\x4f\x64\xb0\x44\x83\xaf\x82\x76\x3a\x8e\xa2\xd9\x6c\x06\xab\x8d\xd0\x60\x18\xa5\xc6\xc2\x08\x25\x41\x68\xd8\x6d\xd0\x80\xd9\x10\x34\x42\x1a\x62\xb8\x2d\x0a\xd5\x49\x03\x9d\x26\x0d\x46\xb9\x63\x90\xb4\x03\x63\x51\x75\xc0\xa1\x3d\xb4\xac\xb6\xa2\x24\x97\xcb\x54\x88\x56\x90\x34\x80\x65\xc9\xa4\x35\xa0\x2c\x01\x1b\x87\x14\x40\x2e\xdd\x99\x8d\x1e\x21\x21\x93\x17\x54\x11\x33\x95\x36\xd6\x46\x0c\x28\x95\x95\x64\xb3\x85\x5c\x47\xd1\x48\x7a\x32\x50\xce\xe1\xd6\x47\x5f\x06\xc2\x39\xfc\x7a\x14\x6f\xdf\xbf\xa5\xf0\x1e\x45\x00\x00\x96\xe8\x99\x2a\x62\x92\x05\xf5\x14\xc1\x42\x70\x66\xc1\x93\x2f\xfe\x99\xb4\xea\xb8\x20\x50\xf9\x6f\x2a\x8c\xcb\xae\xc9\x78\xc5\x3e\x66\x0e\x17\x63\xf7\x33\x7f\x7a\x86\xa8\xef\x4a\x60\x7a\xa6\x82\xc4\x96\x18\x54\x35\xb5\x6e\x4a\xd6\x87\xcd\xe1\xe2\x7d\xd2\xd7\xac\xbf\xf9\x38\x70\xae\x9c\xa9\x06\x6b\xd0\x5d\xdb\xd6\x7b\x87\xed\x4c\x86\x9c\x2a\xc5\xbe\x49\x79\xc7\x72\x20\xf1\x81\x77\xee\xb6\x37\xcc\x03\xb6\x4c\x2d\x32\x25\x5a\xac\xa5\xe5\xc7\xce\x6c\x92\x3b\xc5\xac\x76\xaf\x58\x77\x94\xc2\x45\x98\x11\x6b\x30\x84\x4f\x53\x5d\x65\x63\x50\x58\xc2\xc4\x27\xa7\xef\xc5\x05\x44\x43\xd6\x6c\x06\x1e\x19\x10\xf8\xb3\x71\x58\x36\x42\x8e\x3b\x31\xf0\x8c\xda\x01\x4b\xf0\x42\x33\x6d\x14\xe3\x9a\xb2\xdc\x01\x2e\xbe\xea\xd2\x75\x52\xb1\x6a\xe6\x53\x61\xb7\x96\xe6\xc5\x27\xff\x44\xb3\x49\x07\x2e\xfb\xdd\xdc\x40\x8b\x52\x14\x49\xfc\xe2\x68\xec\xca\x48\x65\x0e\x73\xec\x65\xc6\xe9\xa1\x28\x6b\xef\x16\xbb\xda\x3c\xa0\xc1\xcf\x36\x30\x69\x55\x6f\xe9\x5e\x49\xc3\x58\x18\xbb\x9d\x09\x87\xa9\x5b\xed\x5b\x9a\x83\x14\xf5\x25\x6c\x05\xed\xfc\x4f\xfb\x77\x71\x7a\xb3\xb3\xc7\xd5\x6b\xcf\x75\x9d\xa4\x29\xa0\xfe\x0f\xfe\x2d\xfc\xe6\x44\xa1\xf7\xaa\xab\x4b\x57\xe4\xba\xaf\x04\x2c\x80\x13\x05\x95\x62\x57\x7c\x11\x2a\x88\xbd\x5f\x5f\x34\x68\x98\xf4\xa5\x05\x0a\x33\x73\xd8\xdb\x34\x2b\xb0\xc5\x5c\xd4\xc2\x08\xd2\x43\xdb\x4e\x4d\xfb\x75\x32\x78\x9a\x71\x38\x3c\xd7\xae\x43\x15\x1e\x19\xfa\xa4\xe3\x41\x73\x8e\x84\x3a\xc2\x56\xd1\x1b\x15\x9d\xa1\xfe\x05\x09\xb3\x7a\xcf\x84\xc6\xbf\x94\xfd\x23\x36\x6e\xba\x7b\x41\x4b\x87\x06\x8b\xab\xa3\x51\xcd\xec\xbd\xab\x4a\x27\xfd\x4b\xe5\xff\xa7\x13\x96\x07\x6a\x95\x16\x6e\xc4\x9a\x5e\xa2\x13\x4f\x5b\xe2\x33\x3e\x67\xa5\x4f\x0c\x43\xbe\xb8\x1a\xe9\x99\x14\xd7\x2a\x6d\x46\xab\x7b\x6a\x4d\x61\xb9\xfc\x62\xad\xff\x1f\x5e\xd9\xf8\xe8\xd9\x69\x3a\x6d\x20\x27\x10\xb2\x60\x42\x4d\x25\xe4\x7b\xbf\xca\x2e\x25\x0e\x22\x3e\xfe\x06\x00\x00\xff\xff\x0d\x2e\x19\xab\xde\x06\x00\x00"

func mint_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_mint_tokensCdc,
		"mint_tokens.cdc",
	)
}

func mint_tokensCdc() (*asset, error) {
	bytes, err := mint_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "mint_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd0, 0x3d, 0x6c, 0x6f, 0x34, 0x31, 0xf6, 0x60, 0x31, 0xf, 0x89, 0x21, 0xb3, 0x7, 0xc0, 0x7d, 0x62, 0x7a, 0x5d, 0xa9, 0xc, 0xd3, 0xee, 0x4a, 0xcf, 0x22, 0x4b, 0x2a, 0xea, 0x2a, 0xa4, 0x84}}
	return a, nil
}

var _privateforwarderCreate_account_private_forwarderCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x54\x4f\x4f\xdb\x4e\x10\xbd\xfb\x53\xcc\x2f\x07\x7e\x8e\x64\x92\x3b\x0a\xd0\x36\x25\x12\xaa\x8a\x50\x49\xb9\x4f\x9c\xc1\x5e\x75\xd9\xb5\x76\xc7\x36\x11\xca\x77\xaf\x76\xed\xf5\x1f\x92\xb4\x50\x1f\x10\x19\xcf\xbc\x79\x6f\xe6\x8d\xc5\x73\xa1\x0d\xc3\x64\x55\xaa\x4c\x6c\x24\xad\xf5\x2f\x52\x93\x28\x84\x6f\x5e\xf0\xb9\x38\x88\xde\x1b\x51\x21\xd3\x0f\x4a\x49\x54\x64\x56\xda\xd4\x68\xb6\x64\xfa\x8c\x11\xdc\x77\x62\xdc\x22\xe3\xa3\xa0\xda\x4e\xa2\x68\x3e\x9f\xc3\x3a\x17\x16\xd8\xa0\xb2\x98\xb2\xd0\x0a\x84\x85\xd2\xd2\x16\x58\x43\x6a\x08\x99\x00\x5d\xc0\xfc\x6f\x61\x25\x75\x0d\x98\xa6\xba\x54\x0c\xb5\xe0\x1c\x10\x8a\x86\x02\x3c\x85\xde\x51\x34\x44\x7b\x8d\x22\x00\x00\xd7\xe9\x8e\x6a\xf8\xdc\x16\x73\x8e\x0e\x41\x4a\xc8\xb5\xdc\x02\xe7\x43\x00\x57\x20\x89\x41\x51\xdd\xe6\x5f\x00\x96\x9c\xc7\x0f\xac\x0d\x66\x94\xc0\x52\x2b\x36\x98\xb2\x4d\xe0\x1b\xed\x6c\x02\xb7\x6a\xa3\x5f\x12\x58\x62\x81\x1b\x21\x05\x0b\xb2\x53\x38\x6b\xab\x1b\x0a\x85\xa1\x02\x0d\xc5\x56\x64\x8a\x4c\x8b\xf8\x45\x1b\xa3\xeb\x47\x94\x25\xf5\xf9\x53\x78\xf5\x15\xee\xb1\x24\x9f\x66\x3d\x11\xb8\x0c\x12\xe2\x02\x77\x0e\xa6\x81\x9b\xfa\x82\x7d\xd3\x89\x5e\x28\x2d\x99\x82\xf6\x20\xa7\xc2\x52\xf2\x57\x64\x84\x4b\x18\xae\x73\x66\xc8\x6a\x59\x51\x10\xe5\xb6\x13\xbb\x58\x69\x52\x5a\xef\x0a\xba\x00\x25\x64\x02\x95\xa0\xba\xf9\xe9\xfe\x2e\x4e\x6f\x76\xb6\x5a\x3f\x86\x5e\x57\xf1\x74\x0a\x68\xff\x83\xf7\xa5\x5f\x77\x8c\xdd\x73\x7d\x0d\x05\x2a\x91\xc6\x93\xa5\x2e\xe5\x16\x94\x66\xc8\x82\x12\x70\x00\x9e\x94\x5b\x9d\x5f\x61\xda\x2a\x98\x4c\x7b\xe5\xf3\x39\x3c\x60\xe5\x4c\x64\x28\x2b\x25\x9a\xb6\x9a\xb5\x2f\x51\xd4\x39\xea\xd4\xcc\x67\xb6\x59\xfb\xcc\x62\x45\xf1\xe2\x7c\x34\xbb\xc6\xa2\x37\xcf\x05\xef\xbc\x88\xd8\xa3\x0f\xc6\xf4\x69\x94\xee\x73\xdc\x4c\x12\x60\x7d\xd1\xaf\x24\xf4\xb8\x47\xce\xc7\xe4\x6f\xad\x2d\x1d\xfb\x70\x63\xbd\xc7\x76\xc0\x68\x32\x62\x16\x2a\xf3\x5a\x86\x9d\xc0\x77\x1a\xed\xdf\xb4\x08\x03\x80\xcb\x03\xad\xe9\xc0\xc1\x9d\x70\xe1\x38\x2c\xce\x5e\x47\x3b\x9c\x05\x46\xfb\xab\x78\xb4\xb5\xa3\xa2\xba\x8c\xb1\xba\x9f\x96\x3c\xf5\x70\xc5\x81\xe3\xe8\xfa\x0f\x4f\x7c\x28\xab\x8b\xc2\xe2\x1c\x4e\x7d\x90\xda\x3d\xdd\x51\xdd\x85\x62\x43\xa9\x28\x04\xb9\xeb\x3e\x1c\xcd\x11\x07\x0d\x79\xf6\x4d\x59\x77\x5f\xa4\x56\xee\x7b\x7d\xd4\x61\x34\x5e\x38\x49\xfd\xcd\x8b\x87\xbf\x39\x65\x68\x90\xc6\xe4\x1d\x16\x84\xb3\x3e\x3e\xc1\x25\x16\x1f\xb4\xc4\x49\xd2\xdd\x7f\x6f\xcc\xe1\x9e\x7f\x50\x3a\xc2\x98\x0e\x55\xdf\x97\x1b\x29\x6c\xee\x75\x7e\x48\xf9\x1f\x65\x16\x0d\xea\x98\xfb\x70\x4e\xc9\xe8\x0d\xf2\xfb\xf7\xe7\x09\xa7\xc7\x6e\x62\x1f\xed\x7f\x07\x00\x00\xff\xff\xf5\x1b\x9e\xbf\x86\x07\x00\x00"

func privateforwarderCreate_account_private_forwarderCdcBytes() ([]byte, error) {
	return bindataRead(
		_privateforwarderCreate_account_private_forwarderCdc,
		"privateForwarder/create_account_private_forwarder.cdc",
	)
}

func privateforwarderCreate_account_private_forwarderCdc() (*asset, error) {
	bytes, err := privateforwarderCreate_account_private_forwarderCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "privateForwarder/create_account_private_forwarder.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc6, 0xe5, 0xb, 0x42, 0xd1, 0x1d, 0x59, 0x77, 0x2, 0x91, 0xe3, 0xb5, 0x15, 0x41, 0xd8, 0x35, 0x45, 0xf5, 0x8c, 0xf2, 0x8b, 0x98, 0x2f, 0x5e, 0xc0, 0x2, 0x91, 0x4a, 0x37, 0x9d, 0xf9, 0x81}}
	return a, nil
}

var _privateforwarderCreate_private_forwarderCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x54\x4f\x6f\xe2\x3e\x10\xbd\xe7\x53\xbc\x1f\x87\xfe\x12\x89\x86\x3b\xa2\xad\x56\xec\x56\xda\xc3\xae\xaa\x2d\xe2\x3e\x98\x29\xb1\xd6\xb5\x23\x7b\x12\xb6\xaa\xfa\xdd\x57\x4e\x48\x48\x5a\x90\xe8\xfa\x80\x60\xc6\x7e\xf3\xfe\xd8\xe8\xe7\xd2\x79\xc1\xe4\xbe\xb2\x3b\xbd\x31\xbc\x72\xbf\xd9\x4e\x92\xae\xfc\xed\x0f\x3d\x97\x1f\xaa\x0f\x5e\xd7\x24\xfc\x8b\x15\xeb\x9a\xfd\xbd\xf3\x7b\xf2\x5b\xf6\xc7\x1d\x23\xb8\x1f\x2c\xb4\x25\xa1\xb5\xe6\x7d\x98\x24\xc9\x6c\x86\x55\xa1\x03\xc4\x93\x0d\xa4\x44\x3b\x0b\xe5\x99\x84\x03\x08\x96\xf7\x28\xdb\x01\xf0\x87\x09\xd0\x16\x64\x41\x4a\xb9\xca\x0a\xa4\x20\x41\x84\xd9\x3a\x0e\xf6\x7f\x01\x19\xcf\xb4\x7d\x41\x41\x35\x83\x3e\x1e\x77\x3e\x56\xab\x8d\xd1\x0a\x12\x29\xf5\xad\x88\xb2\xa9\xa4\x41\x7a\x0f\xb3\xa6\xca\x48\x92\x0c\x69\xbe\x26\x09\x00\x94\x9e\x4b\xf2\x9c\x06\xbd\xb3\xec\xe7\xa0\x4a\x8a\xf4\x7b\x08\x15\x3f\x8a\xf3\xb4\xe3\x25\x95\xb4\xd1\x46\xcb\xcb\xd2\x59\xf1\xce\x18\xf6\x53\x3c\x44\x06\xa1\x38\x36\xa7\x78\xa4\x9a\xd7\x64\x2a\xce\x70\xf5\xa5\x95\x97\x75\x53\xe2\x32\x2c\xa8\x23\x8f\xaf\x24\x84\x1b\x0c\x03\xc9\x3d\x07\x67\x6a\x6e\x46\x90\x92\xe8\x6f\x1a\x6b\x95\x57\xbc\x7a\x29\x79\x0e\xab\xcd\x14\xb5\xe6\x7d\xfb\x33\x7e\x2e\xce\x67\x93\xdf\xaf\xd6\xdd\xac\xdb\x34\xcb\x40\xe1\x3f\x5c\xb6\xfd\xae\x67\x1c\xd7\xdd\x1d\x4a\xb2\x5a\xa5\x93\xa5\xab\xcc\x16\xd6\x09\x76\x9d\x12\x44\x80\x86\x14\x9e\x9c\x87\x14\x0c\x75\x50\x30\xc9\x8e\xca\x67\x33\x34\x8e\x82\xd0\x5d\x34\x1c\x9d\x83\x90\xdf\xb1\x88\xb6\xbb\x06\x61\xe8\xcb\x21\xb8\xa1\x85\x5d\xdc\x03\x80\x1b\xb4\xe9\xe5\xaa\xab\x69\x0e\x79\x68\xf3\xcb\x75\x1c\xbd\xb8\x7a\x1d\xa9\xcf\x3b\x22\x6f\xb7\xe9\x48\x6f\x9f\x50\x77\xfe\x81\xa4\xe8\x77\x64\x43\x4d\xcb\xe6\xa2\x37\x9c\xfb\x77\x83\x2e\xb4\x11\xe7\xa7\xbe\xbd\xb8\xc6\xb9\x27\x97\xb7\x0f\xe7\x27\xef\xfb\x52\xea\x59\xe9\x52\xb3\x95\xf9\x09\xdd\x23\x32\xf1\xf6\x9d\xa1\x02\x71\x38\x88\xe9\x4f\x1c\x0c\xeb\x3c\x0a\x54\x73\xba\xb8\xee\x79\x4e\x21\x6e\x7e\x9e\xe9\xbb\xc6\xe3\xd1\xa9\xec\x54\xe8\xc3\xac\xdd\xa7\xfc\x5a\x52\x79\x59\xba\x67\xa9\xf6\xdf\xde\xe5\x1c\xd7\x3f\xe8\x1b\x61\x8c\xc4\x1e\xfe\x11\x1a\x79\x9f\x12\x7c\x4a\x5d\xd9\x82\x8d\x29\x0f\x5d\x99\x8e\x3a\x24\x97\x87\xd5\xf0\x54\x27\x6e\xf5\x5b\xf2\x96\xfc\x0d\x00\x00\xff\xff\xfa\xff\xed\x29\x44\x06\x00\x00"

func privateforwarderCreate_private_forwarderCdcBytes() ([]byte, error) {
	return bindataRead(
		_privateforwarderCreate_private_forwarderCdc,
		"privateForwarder/create_private_forwarder.cdc",
	)
}

func privateforwarderCreate_private_forwarderCdc() (*asset, error) {
	bytes, err := privateforwarderCreate_private_forwarderCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "privateForwarder/create_private_forwarder.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x26, 0x48, 0x67, 0xa0, 0x21, 0xff, 0x4a, 0x17, 0x0, 0xac, 0xe9, 0xbd, 0x40, 0xab, 0xae, 0x68, 0xc0, 0x8a, 0xb3, 0x89, 0xf9, 0x1c, 0x88, 0x82, 0xff, 0xe5, 0xff, 0x76, 0x8a, 0xc6, 0x2e, 0xce}}
	return a, nil
}

var _privateforwarderDeploy_forwarder_contractCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\xc1\x4a\x03\x31\x10\x86\xef\x79\x8a\x39\xc9\x2e\x84\xee\x55\xf6\x56\x14\xc1\x8b\x14\xaa\x27\xf1\x30\x26\xe3\xee\x60\x3b\x09\x93\x59\x8a\x48\xdf\x5d\xb6\xdd\x2e\xab\x5e\x9a\x43\x48\xc8\xf7\x67\xfe\xaf\x69\x1a\xb8\xa7\xbc\x4b\x5f\x05\xac\x27\x78\x4e\x9f\x24\x0f\x49\x0f\xa8\x91\xa5\x83\x90\xc4\x14\x83\xc1\x81\xad\x3f\x11\x25\x53\xe0\x0f\xa6\x08\x2c\x6c\x90\x51\x71\x4f\x46\x5a\x9c\x33\x45\x29\x18\x8c\x93\x54\x97\xe0\x13\xee\xa9\x85\xad\x29\x4b\xe7\x1d\x2c\x56\x48\x91\x5a\x78\x7d\x79\x14\xbb\x7d\xfb\xfd\x54\x48\x22\xe9\xd6\x92\x62\x47\x1b\xb4\x7e\xfc\x61\xbe\xfc\x61\xaf\xa2\xf2\xf0\xbe\xe3\x70\x86\x36\xf3\xb9\x86\x6f\xe7\x00\xb2\x52\x46\xa5\xaa\x70\x27\xa4\x2d\xe0\x60\x7d\xb5\x8e\xf1\x6e\x72\xa8\xe1\x66\x1d\x42\x1a\xc4\xa6\x00\xc0\x19\x5d\x5d\x2c\xcb\x0a\x63\xac\xe4\xe4\xba\x34\xf7\x93\xe5\xb8\xfb\xff\x5a\x7e\xd9\xde\x2f\x4a\xd6\xe3\x94\xa3\x3b\x3a\x70\x3f\x01\x00\x00\xff\xff\xb6\x45\x50\xb4\xa2\x01\x00\x00"

func privateforwarderDeploy_forwarder_contractCdcBytes() ([]byte, error) {
	return bindataRead(
		_privateforwarderDeploy_forwarder_contractCdc,
		"privateForwarder/deploy_forwarder_contract.cdc",
	)
}

func privateforwarderDeploy_forwarder_contractCdc() (*asset, error) {
	bytes, err := privateforwarderDeploy_forwarder_contractCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "privateForwarder/deploy_forwarder_contract.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x16, 0x7f, 0x10, 0x12, 0xa4, 0xc2, 0xb6, 0x67, 0x4e, 0x42, 0xbd, 0x4e, 0xe5, 0x57, 0xd4, 0x8, 0xc8, 0x9d, 0x79, 0xd0, 0x13, 0x4e, 0x7e, 0x14, 0xe3, 0x37, 0x17, 0x7a, 0x3a, 0xb, 0x3b, 0x67}}
	return a, nil
}

var _privateforwarderSetup_and_create_forwarderCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x55\xcd\x6e\xfa\x38\x10\xbf\xe7\x29\xa6\x1c\x50\x22\xa5\x70\x47\x40\x77\x97\x6d\xa5\x3d\xec\xaa\xda\x22\xee\x83\x33\x80\xd5\x60\x47\xf6\x04\x16\x55\xbc\xfb\xca\x09\x09\x76\x13\xfe\xa5\xf5\xa1\x2a\x8e\x3d\xbf\x8f\xf9\x70\x24\xf7\x85\x36\x0c\x83\x97\x52\x6d\xe5\x3a\xa7\xa5\x7e\x27\x35\x68\xb7\x9f\xff\xc3\x7d\xd1\xd9\x7d\x35\xf2\x80\x4c\xff\x92\x20\x79\x20\xf3\xa2\xcd\x11\x4d\x46\x66\xd0\x1f\xee\x6f\x62\xcc\x90\x71\x25\xe9\x68\x07\x51\x34\x1e\x8f\x61\xb9\x93\x16\xd8\xa0\xb2\x28\x58\x6a\x05\x98\x65\x16\x10\x56\x58\xe6\x9c\x02\x42\x51\x63\x80\xb9\x80\xc0\xa6\x41\xa9\xee\x23\xac\x31\x47\x25\x08\x04\x16\xb8\x96\xb9\xe4\x53\x0a\xa8\x32\x77\xb5\x5c\xe7\x52\x78\x1f\xdc\x5d\xe0\xdd\x35\x58\x14\xf9\xd0\x1f\x51\x04\x00\x50\x18\x2a\xd0\x50\x6c\xe5\x56\x91\x99\x00\x96\xbc\x8b\xff\xb2\xb6\xa4\x37\xd6\x06\xb7\xb4\x68\x03\x2e\xb4\x62\xa3\xf3\x9c\x4c\x0a\xaf\x0e\xcd\xee\x16\x1e\x8d\x37\x3c\xd0\x0a\xf3\x92\x12\x18\xfe\x2e\x84\x2e\x15\x27\xf0\x51\x81\xb8\x95\x13\xc3\xc1\xe9\xfc\x13\x19\x61\x06\xbe\xc9\x23\x43\x56\xe7\x07\xaa\x10\x50\xb0\xf3\x2c\x76\x7b\xa5\x11\xb4\x3c\x15\x34\x01\x25\xf3\x14\x0e\x92\x8e\xf5\x4f\xf7\x77\x7a\xdb\xef\xd1\xcb\x72\xd5\x60\xcd\xe3\x24\x01\xb4\x0f\x70\xdf\xf1\xa7\x96\xb1\x5b\x4f\x4f\x50\xa0\x92\x22\x1e\x2c\x74\x99\x67\xa0\x34\xc3\xb6\x51\x02\x2e\x40\x45\xaa\xf5\x5a\x5c\x14\x0c\x92\xa8\x8d\x23\x37\x50\xbb\x3b\x6a\x93\x23\xc9\x8e\xb6\xc4\xd3\xe1\xad\xa2\x1a\xb5\xff\xcd\xe3\x9b\x67\x3e\x7d\xa8\x72\x22\x5e\x91\x77\x09\x3c\xcc\x9c\x63\x9e\xfd\x6e\x8d\xc7\x6d\x81\xb5\x75\x05\x47\xb4\x80\xb9\x21\xcc\x4e\x60\x89\xa1\x2c\x82\x3b\x86\xb8\x34\xaa\xdd\x3a\xf7\xc9\xb2\x75\xa5\x8c\xc4\x8e\xc4\xfb\x74\x18\x64\xb6\xf2\x75\x1e\x6f\x8c\xde\x4f\xae\xf9\x6f\xae\xd4\x64\x67\x33\xd8\x60\x6e\xa9\x4b\x77\x61\xc8\xb1\x45\x50\x74\x0c\x2a\xa6\x6e\x99\xaa\xf4\x8b\x92\x41\x32\x48\x05\x97\xa0\x41\x90\x4f\x14\x2d\x1e\x28\x0e\x0e\xb8\x35\x7d\x0c\x38\x8b\x0a\xf5\x79\x5f\xf0\xa9\x82\x89\x2b\xde\x5e\xe1\xfd\xd6\x27\x31\x49\xd2\x4e\x60\xd6\x37\x44\x07\x27\x93\x3e\x7b\x7d\xf5\x97\xde\xae\x35\x5f\x7b\xce\xa5\x40\x11\x65\x94\x7d\x55\x6b\x6b\x6d\x8c\x3e\x4e\x87\x1f\x41\x0f\xd4\xcc\xcf\xf3\xf8\x4a\x71\x7f\x69\x8b\x36\x31\xdd\x2a\x6a\x1b\x79\x81\x05\xcc\x7a\xe1\x1a\xb7\xa5\x9b\x23\x1d\xd4\x3f\xea\x19\x96\x42\x3f\x99\x8e\x89\x6e\x7d\x6d\x62\x68\xa4\x97\xfa\x80\x59\x51\xcf\xad\xb8\x11\x90\x02\xb2\x9f\xa2\x40\xff\x8d\xb4\x54\xd3\x11\x10\x9a\xbe\xf3\x33\xc2\x68\xb6\xc4\x2c\xd5\xb6\x1a\x07\xdd\x92\x0d\xe6\x61\x33\x99\xbd\x00\x3f\x31\xb4\x21\xd2\x67\xde\x3d\xd5\x17\x70\xba\x4e\x86\xe9\x23\xdc\x1c\x3d\x75\x8b\xfc\x43\xc7\x76\x2b\x36\x24\x64\x21\x49\xf1\xa4\x47\x97\x07\xd2\xd7\x91\xd3\xc7\x16\x36\xad\x9a\xe6\xde\x99\xf7\xe6\xcd\x91\xde\x24\xf9\xb9\xd1\x55\x4e\xda\x58\xd0\xbc\x30\xfd\xfa\xef\x2e\xef\x7b\x66\x78\x27\x2f\x3f\x10\x78\x63\x66\x8c\xc7\xcd\x6b\x5c\xc9\xfb\x96\xe0\x5f\xb5\x48\x00\xe7\xbb\x12\x8e\x39\xd7\x3f\xdf\x7f\xa1\xa2\x50\xc7\x39\x3a\x47\xff\x07\x00\x00\xff\xff\x81\xac\x56\xd3\x96\x09\x00\x00"

func privateforwarderSetup_and_create_forwarderCdcBytes() ([]byte, error) {
	return bindataRead(
		_privateforwarderSetup_and_create_forwarderCdc,
		"privateForwarder/setup_and_create_forwarder.cdc",
	)
}

func privateforwarderSetup_and_create_forwarderCdc() (*asset, error) {
	bytes, err := privateforwarderSetup_and_create_forwarderCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "privateForwarder/setup_and_create_forwarder.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x85, 0x8d, 0x93, 0xdb, 0xc7, 0xd4, 0x6f, 0x9f, 0xe, 0x9f, 0x56, 0x7b, 0xbc, 0x3c, 0x70, 0xb0, 0x4d, 0x81, 0x25, 0xc6, 0xd2, 0xd9, 0x15, 0x92, 0x4c, 0xab, 0x2d, 0x7a, 0x8b, 0x54, 0xd, 0xab}}
	return a, nil
}

var _privateforwarderTransfer_private_many_accountsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\xcd\x6e\x9b\x40\x10\x3e\x87\xa7\x98\xf8\x90\x82\x94\xe2\x4b\xd5\x03\xca\x8f\xd2\xb4\xee\x29\x52\x94\xb8\xee\xa1\xea\x61\x02\x63\x58\x05\xef\xa2\xd9\xc1\x24\x8a\xfc\xee\xd5\xb2\x8b\x83\x9b\x5a\x6e\xa5\xfa\x60\x60\x34\xfb\xcd\xf7\x33\x5a\xb5\x6a\x0c\x0b\x4c\x66\xad\x2e\xd5\x43\x4d\x73\xf3\x48\x7a\x12\x0d\xe5\x2f\x4f\xb8\x6a\xde\x54\x6f\x59\xad\x51\xe8\x8e\x72\x52\x6b\xe2\x99\xe1\x0e\xb9\x20\x7e\xed\xd8\x81\xbb\x21\xc1\x02\x05\x17\x8a\x3a\x3b\x89\xa2\xe9\x74\x0a\xf3\x4a\x59\x10\x46\x6d\x31\x17\x65\xb4\x7f\x5f\x12\x5b\x10\x03\x2b\xd4\xcf\x80\x45\xc1\x64\x2d\x59\x90\x8a\x4d\x5b\x56\x20\x15\x29\x86\xc6\x4f\x07\x0e\xe3\x6d\x14\x8d\x80\xe2\x70\xec\x6a\x65\x5a\x2d\x37\xd8\x64\xf0\x72\xe5\x4b\x19\x7c\x9b\xa9\xa7\x8f\x1f\x36\x09\xbc\x44\x11\x00\x40\x4f\x84\x60\x81\x6d\x2d\xc0\x64\x4d\xcb\x39\x81\x54\x28\x50\x99\xba\x70\x93\x09\xc4\x69\xb0\xbe\x8a\x4c\xf0\x40\x4a\x97\x5b\xbe\x4c\x45\x0f\x55\x93\xc0\xda\xe1\xdc\xd1\x32\x03\x6c\xa5\x8a\x77\x4c\x48\xbf\x2b\xa9\x0a\xc6\x2e\x81\x93\xb1\xab\x69\x3f\x3c\xda\x62\x04\x75\xc1\x53\xa5\xcb\x7b\xd2\x05\x71\x06\x27\xfb\x5c\x4f\x7d\x87\x87\x68\x98\x1a\x64\x8a\xad\x2a\xb5\x3b\xd5\x13\xf9\x64\x98\x4d\xb7\xc0\xba\xa5\x04\x4e\xae\xf2\xdc\x59\xb3\x35\x61\x87\xfd\x67\x14\x84\x73\xd8\x61\xe8\x8c\xa9\xd7\x74\x6d\xb4\x30\xe6\xe2\x62\x8c\x07\xb3\xe6\xcf\x0d\x65\xa0\x55\x7d\x0a\x6b\x45\x9d\xff\x74\xff\x67\xfb\x57\x20\x9d\xcd\x17\xc3\xac\x8b\x38\x49\x00\xed\x31\xfc\x5d\xfb\xe5\x96\xb1\xfb\x5d\x5e\x42\x83\x5a\xe5\xf1\xe4\xda\xb4\x75\x01\xda\x08\x94\x83\x12\x70\x00\x3d\x29\x58\x1a\xee\x93\xcc\x83\x82\x49\xf2\xaa\x7c\x3a\x85\xaf\x24\x80\xc0\xb4\x24\x26\xed\xf2\x37\x7d\xb7\xb7\xf0\x9d\x05\x2b\x86\xa9\xf0\xa8\xdb\x73\x96\xea\x65\x3a\x04\x0e\xe7\xa1\x3b\x75\xbd\x58\x52\xfa\xd0\x5b\x7e\xf6\xaf\x7b\x70\x11\x2f\xd9\xac\xb2\xd7\x2c\x06\xc0\x5b\x94\x2a\x89\x8e\x8e\x8e\xfe\xa4\xd9\x0f\x7b\xab\xc0\x74\x5e\x40\x0f\x7d\x3c\x56\xdd\xb3\xdf\xb3\x6a\x7b\xc5\x1c\xda\xc0\x81\xfc\x81\xb6\xfb\xff\xae\x68\xe3\x1f\xf4\x44\x79\x2b\x34\xde\x6b\x97\x7c\xb8\x10\x40\x69\xf8\xfd\x6e\x48\x1f\xe9\xd9\x8e\xfb\x0f\x79\x93\x5a\xd2\x45\xd0\xd7\xc7\x66\x87\xfb\xe6\x34\xdc\x13\x19\x9c\xbd\xdf\xd9\x8d\xb4\x0b\x81\xc7\xd8\x8f\xcd\xde\xb0\xf8\x11\x0a\x3f\x8f\x93\x51\x44\x9b\x20\x6d\x13\xfd\x0a\x00\x00\xff\xff\xfe\x05\x59\x4b\xa4\x05\x00\x00"

func privateforwarderTransfer_private_many_accountsCdcBytes() ([]byte, error) {
	return bindataRead(
		_privateforwarderTransfer_private_many_accountsCdc,
		"privateForwarder/transfer_private_many_accounts.cdc",
	)
}

func privateforwarderTransfer_private_many_accountsCdc() (*asset, error) {
	bytes, err := privateforwarderTransfer_private_many_accountsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "privateForwarder/transfer_private_many_accounts.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x8d, 0xde, 0xed, 0x59, 0xfa, 0x7b, 0x94, 0xe8, 0xfa, 0x8b, 0xe5, 0xca, 0xbb, 0x8f, 0xf8, 0x15, 0x7f, 0xfd, 0xf9, 0xfc, 0x8f, 0x43, 0x7b, 0x71, 0xc2, 0x7f, 0x53, 0xb5, 0xf6, 0xfa, 0xc8, 0x53}}
	return a, nil
}

var _safe_generic_transferCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x94\xc1\x6e\xe3\x36\x10\x86\xcf\xf1\x53\xcc\xe6\x90\x95\x80\xac\x72\x29\x7a\x30\xb2\xdd\xa6\x0b\xa4\x87\x1e\x1a\x64\xd3\xed\x79\x2c\x8e\x24\x36\x34\x29\x70\x46\xd1\x1a\x81\xdf\xbd\x20\x29\xd1\x56\x9c\x00\xd9\x93\xe9\x11\x39\xff\x37\x3f\x67\xa8\xb7\xbd\xf3\x02\xe7\xb7\x83\x6d\xf5\xc6\xd0\x83\x7b\x24\x7b\xbe\x5a\x5d\x5d\x5d\xc1\x57\xb4\xd0\x23\x33\x68\x0b\x68\x77\xc0\xe2\x3c\xb6\x04\x3d\x4a\x07\x68\x15\x78\xaa\x49\x3f\x91\x4f\x11\x6d\x59\x08\x15\xb8\x06\xfe\x1b\x58\x40\x3a\x02\x45\x0d\x0e\x46\xaa\x98\xef\xa1\xd3\x0c\x86\x84\x61\xe7\x06\xa8\x3b\xe7\x98\xe2\x2e\x09\xa2\x31\x38\xa2\x15\x10\x07\x4c\x56\x01\x32\x8c\x64\x4c\xdc\x52\x63\x8f\x1b\x6d\xb4\xec\x4e\xf7\xe9\xb0\x8c\x12\x51\xe6\xc6\xee\xa6\x8c\x11\xab\x46\x0b\x1b\x8a\x85\x50\xcc\x89\x16\xd0\xb7\xc3\x96\xac\x40\x47\x9e\x2e\x81\x1d\x8c\x68\x22\x19\x77\x6e\x30\x2a\xe6\x49\x4b\xa8\x3b\xaa\x1f\x0f\x27\x9e\xd0\x0c\xc4\x41\x7b\x8b\x8f\x04\x3c\xf8\x54\x83\xb6\x42\x56\x91\x3a\x96\xd6\x3c\xcb\x6a\x1b\xf1\xc4\xa3\x65\xac\x45\x3b\x5b\xe0\xd6\x0d\x56\xd6\xf0\xcf\xad\xfe\xf1\xeb\x2f\x97\x20\x6e\x0d\x37\x4a\x79\x62\xbe\x8c\x75\x91\xbf\x43\xe9\xd6\xf0\x2d\xd9\x1e\xfe\x5c\x66\xcb\xd3\xa7\xbb\x61\x63\x74\x1d\xd6\x25\x3c\xaf\x56\x00\x00\xd1\x67\x82\xef\xc1\x76\xf0\xc4\x6e\xf0\x75\x20\x44\x81\xce\x19\xc5\x07\xc3\x39\x45\xd1\x13\x6c\x48\xdb\x16\x22\x5d\x43\xde\x93\x8a\xa9\x0c\x09\x08\x6d\xfb\x98\x6b\x0d\xbf\x2f\x7a\xa4\x8a\xd1\xac\xf9\x87\xf3\xde\x8d\xa1\x7c\x6a\xc8\x93\xad\x69\x46\x9d\xc5\x74\x33\x45\x82\x14\xd6\x75\xa8\x1e\x94\x23\xb6\x1f\x05\x78\xe8\x63\x1f\x06\xb8\x50\x7b\xc4\x09\xe7\x32\x48\x72\xe4\x7e\x2a\xff\x9e\x9a\x35\x5c\x3c\x27\x92\x39\xb8\x4f\x34\xbd\xa7\x1e\x3d\x15\xac\x5b\x4b\x7e\x0d\x38\x48\x57\x24\xbe\xef\xe1\xf2\x4a\xb8\xb8\x49\xf2\xd9\xb4\xa9\x88\x3f\x49\x00\xc1\xe7\x0a\xc4\x25\xa0\x98\xe8\x23\xc7\x01\x20\x05\x4f\xb1\xf2\xf9\x5c\x80\x8b\x91\x7b\x6a\xe0\xf3\xb4\xb9\x9a\x66\xa5\xda\x44\xdd\xeb\xc8\xb0\xf4\xef\x5f\x2d\x9d\xf2\x38\x96\x70\xf1\xbc\xfc\x72\xe7\xdd\x93\x56\xe4\xf7\xbf\x15\x8d\x77\xdb\xf5\x51\x37\x94\xab\xb3\xb3\xb3\x2f\x5f\xa0\x47\xab\xeb\xe2\xfc\x6b\xec\x50\xeb\x04\x92\xce\x29\xbb\x1b\x13\x7a\xbc\xad\x0f\xe7\x65\xc6\xce\x0b\x26\xd3\x54\x27\xee\xbe\x59\xc9\x4b\xd8\x6c\xfe\xcf\xc3\xbe\x95\xe9\x1d\x55\x2c\xe9\x73\x93\xc2\xf5\xa7\x7c\x17\xd5\x38\x19\x9c\x27\x2d\xfd\x26\x0b\xa6\x5e\xa1\x1f\x54\x0f\x42\xf0\xbc\xb8\x4e\xbf\xf0\xa1\x25\x99\xfa\xa5\x10\x57\x56\xf9\x25\xd2\xc4\xef\x30\xe5\x78\x60\xcb\x0f\x0b\x99\xa9\xe9\x49\x45\xf6\x87\x5d\x4f\x0c\x9f\x8f\xc5\xab\x96\xe4\xdb\xe9\xa6\xa2\x3c\x6e\xda\xbf\xad\xd9\xe5\xd1\x9d\x87\x6d\xec\xc8\x46\xe7\xf2\x13\xad\x19\x46\x6d\x4c\x1a\xac\xc3\x6c\x86\xc7\x00\x7d\x4b\x42\x0a\x6e\x1f\xaa\x9c\x58\x37\xaf\xe1\x55\xb5\xb3\x82\xda\xf2\x5f\xb4\x2b\x96\xd6\x07\xd6\xb0\xa7\x28\xcb\x23\x37\xe7\x17\xe9\x05\x5e\xe8\x94\xb7\x47\x6b\xbe\xf5\xcc\x7e\x78\xfc\x17\x89\x8f\x9d\x52\xd4\x3b\xd6\x32\xf5\xe0\xf5\xa7\x25\xdc\xc1\xb0\x3d\x90\x61\x7a\x41\xf8\xfa\x08\xbc\x3f\xe7\xd4\x51\xfb\xff\x03\x00\x00\xff\xff\x9a\x18\x8b\x27\x4d\x07\x00\x00"

func safe_generic_transferCdcBytes() ([]byte, error) {
	return bindataRead(
		_safe_generic_transferCdc,
		"safe_generic_transfer.cdc",
	)
}

func safe_generic_transferCdc() (*asset, error) {
	bytes, err := safe_generic_transferCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "safe_generic_transfer.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x16, 0x8d, 0x46, 0x21, 0xb0, 0x65, 0x20, 0xf1, 0x62, 0x4d, 0xa3, 0x39, 0x31, 0xa, 0xe8, 0x61, 0x55, 0xfd, 0xbc, 0x95, 0xf3, 0xf9, 0x3c, 0x7e, 0x40, 0x8a, 0x4d, 0x32, 0x5e, 0xa0, 0x0, 0x47}}
	return a, nil
}

var _scriptsGet_balanceCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x52\x4d\x8f\xd4\x30\x0c\xbd\xe7\x57\x3c\x7a\x80\x46\x42\x9d\x0b\xe2\x30\x5a\x76\xb4\x2c\xcc\x0d\x89\x43\xd9\xbb\x9b\xba\x3b\x11\x69\x52\x25\xee\xcc\xa2\xd5\xfe\x77\x94\x7e\x89\x91\x00\xad\x0f\x91\xe3\x3c\xc7\xef\xd9\xde\xed\x50\x9f\x6c\x42\x32\xd1\x0e\x82\xc8\xd4\x26\xc8\x89\xd1\x90\x23\x6f\x18\x9d\x65\xd7\xaa\xdd\x0e\xa1\x03\x79\x90\x31\x61\xf4\xf2\x2e\xe1\xeb\x13\xf5\x83\xe3\x3a\xfc\x64\x8f\xcf\x33\x5a\x29\xdb\x0f\x21\x0a\x8a\xe3\xe8\x1f\x6d\xb3\x3c\x17\x5b\xf8\xcf\xa4\xe2\xef\xe0\x6f\x2c\xd4\x92\xd0\x83\xe5\x4b\x2a\x94\x22\x63\x38\xa5\x92\x9c\xd3\xe8\x46\x8f\x9e\xac\x2f\xa9\x6d\x23\xa7\xb4\xc7\xdd\xec\xe8\x3d\x7e\x1c\xed\xd3\xc7\x0f\x78\x56\x00\xe0\x58\x70\xa6\xd1\xc9\x17\x12\xc2\xa7\x2b\xb2\x55\xe4\x14\xdc\x99\xef\x83\x97\x48\x46\x72\xa1\x32\xc7\xc6\x68\xb8\xfe\x35\xf0\x1e\xde\xba\xf7\x38\x5b\xbe\xcc\xd7\x7c\xde\xfc\x9b\x64\x75\xac\x1f\xd6\x5a\xb7\xa5\xd6\xa0\xf4\x06\xaf\x83\x1f\x26\xb6\xd9\x0e\x07\x0c\xe4\xad\x29\x8b\xfb\x30\xba\x16\x3e\x08\x1e\x57\x15\xc8\xc9\x13\x21\x74\x21\x4e\xf3\x31\x0b\xfb\x42\xab\xe9\x8f\xc8\x32\x46\x9f\x53\xee\xe6\x11\xad\x3d\xd2\x95\xa1\x81\x1a\xeb\xac\x58\x4e\x55\x13\x62\x0c\x97\x9b\xb7\xcf\x57\x04\xab\x65\x80\x2f\xb7\xe5\xc6\x28\xdb\xd6\xc3\xaa\x5f\x24\x7c\x27\x39\x6d\x10\x7d\xa8\x96\x3d\xf9\xaf\x8e\xb9\xe6\xba\x24\x88\xdc\x71\xe4\xec\x49\x98\xb4\x4c\xed\x28\xb4\x7a\x51\xbf\x03\x00\x00\xff\xff\xa7\x99\xe9\xa6\x8f\x02\x00\x00"

func scriptsGet_balanceCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_balanceCdc,
		"scripts/get_balance.cdc",
	)
}

func scriptsGet_balanceCdc() (*asset, error) {
	bytes, err := scriptsGet_balanceCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_balance.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x74, 0xb1, 0xe6, 0x91, 0x19, 0xf, 0xfc, 0xd5, 0xd0, 0x29, 0x4e, 0x6d, 0x98, 0x41, 0x6f, 0x26, 0x51, 0x25, 0x3a, 0x95, 0xff, 0xe1, 0x7c, 0xc4, 0x2d, 0xfe, 0x9a, 0x6, 0x79, 0x82, 0x55, 0x8}}
	return a, nil
}

var _scriptsGet_supplyCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xce\x3d\x6a\xc3\x40\x10\xc5\xf1\x7e\x4e\xf1\x50\x25\x35\xd9\x26\xa4\x48\x9f\x5c\xc0\xf2\x01\x86\xd5\x08\x2d\xde\x2f\x66\x46\x20\x63\x7c\x77\x83\x2a\xbb\x7e\x8f\x3f\xbf\x10\x30\x6f\xc9\x60\x51\x53\x77\xa8\xf0\x62\xf0\x4d\xe0\xcd\x39\xc3\xf6\xde\xf3\x1d\x6b\x92\xbc\x50\x08\x68\xeb\x39\xfe\x1d\x5c\x7a\x96\xb9\xdd\xa4\xc2\x0a\xab\x23\xb6\xea\xca\xd1\x89\x52\xe9\x4d\x1d\xc3\xfb\x69\x20\xe2\x18\xc5\x6c\xe4\x9c\x27\xac\x7b\x45\xe1\x54\xc7\xe9\x17\xd7\xff\x74\xfc\x7c\xe3\x41\x00\xa0\xe2\xbb\xd6\x8f\xfe\xd7\x29\xb9\x9c\x10\x7a\xd2\x2b\x00\x00\xff\xff\xd2\xfd\xa1\x6d\xb1\x00\x00\x00"

func scriptsGet_supplyCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_supplyCdc,
		"scripts/get_supply.cdc",
	)
}

func scriptsGet_supplyCdc() (*asset, error) {
	bytes, err := scriptsGet_supplyCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_supply.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xdd, 0x3c, 0xc, 0x52, 0x8e, 0x74, 0x2e, 0x22, 0x44, 0xf5, 0xa0, 0x5, 0xc1, 0x1c, 0xd1, 0x7c, 0x1f, 0x2c, 0xff, 0x1, 0x86, 0x2b, 0xa5, 0xab, 0x70, 0xa3, 0x21, 0x31, 0xd1, 0x71, 0x8a, 0x8b}}
	return a, nil
}

var _scriptsGet_supported_vault_typesCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x93\x4f\x6f\x9b\x40\x10\xc5\xef\x7c\x8a\x27\x1f\x1a\x90\x2a\x7c\xb7\xda\x46\xe9\xa1\xea\x31\x4a\xd2\x9e\x59\x96\xc1\xbb\xca\xc2\xa2\x99\xc1\xc8\xb2\xfc\xdd\xab\x05\xbb\x31\x56\xeb\x93\xb5\x9a\xf7\x7e\x8f\xf9\xe3\xbb\x21\xb2\x62\xf3\x63\xec\xf7\xbe\x0e\xf4\x16\xdf\xa9\xdf\x64\xd9\x76\xbb\xc5\x9b\xf3\x02\xb1\xec\x07\x15\x30\xe9\xc8\xbd\x40\x1d\x41\xc6\x21\xa9\xa8\xc1\x4a\xf6\x20\xd0\xe3\x40\xa8\x8f\x73\xd5\xc0\xf1\xe0\x1b\x6a\x50\xa9\xe1\x3d\x69\x05\xd3\x34\x4c\x22\xe5\xec\x7e\xff\x0a\x71\x71\x0c\x0d\x5c\x0c\xcd\xac\xb7\x66\x30\xb5\x0f\x5e\x8f\x98\x9c\xb7\x0e\x36\xf6\x6d\xe4\x4e\x30\x79\x75\x6b\x74\xf9\x42\x96\xfc\x81\x18\x4c\xa2\xec\x6d\x0a\x97\xc2\xcc\xa8\xc9\xf9\x40\xf0\x8a\x26\x92\xf4\x0f\x8a\xce\xa8\x12\x63\x72\xa4\x8e\xf8\x96\xc4\xd4\x12\x0b\x34\xa2\xbd\xf8\x43\x13\x00\x91\x61\x60\x47\xd1\xd8\x81\xaf\xb0\xe0\xdf\x09\xcb\xd7\xac\xe2\xbc\x4e\x5e\xad\xab\xa3\xe1\xa6\x4a\xca\x6a\x7e\xbd\x66\xac\x4a\xfc\x8c\x13\x25\x83\x4b\x13\x9e\x8d\xba\x0a\x4a\x21\x48\x0a\xc5\x74\xdf\x00\xd1\xc8\x24\x99\xb1\x96\x44\x72\x13\x42\x91\xf2\xa1\x33\xbe\xcf\x17\x8b\x1d\x9e\x96\x3e\x7e\xc6\x87\xe7\x0e\xcf\x63\x1d\xbc\x4d\xff\x8b\x1d\x4e\x6f\xc7\x81\x76\xf8\x1e\x63\x38\xe3\x94\x65\x00\xb0\xdd\xe2\x69\x76\xbd\x47\xb6\x91\xd7\x63\x5c\x6c\xaf\xe3\x9a\xc5\x81\xf4\x46\xf2\x42\x2d\xbe\x62\x4f\xfa\x64\x6d\x1c\x7b\xbd\x24\x2b\xca\xbf\x25\x9e\xa4\xac\x23\x73\x9c\xbe\x7c\x3a\xfd\x7b\x80\xe7\x6f\xf9\x47\xfe\x62\xa6\xa4\xdf\xe3\x23\x06\xd3\x7b\x9b\x6f\x7e\xf5\x66\x99\x0a\x16\xa7\xd5\x9e\xa4\xc5\xb8\xd9\x00\x19\xeb\x65\x25\xff\x07\x43\xcb\xb1\xc3\x60\xd4\x6d\x4a\x1b\x7b\x6b\xf4\x86\x5e\x6a\x7c\x55\xf6\xfd\x3e\x2f\x8a\xe2\xda\xac\x97\xf9\x0e\xee\xce\xe0\x60\xc6\xa0\x33\x49\xca\xb9\x70\xb9\x96\x75\x6f\xca\x3d\xe9\xeb\x55\xf2\x3b\x29\xd2\x38\x24\x2f\xb2\xf3\x9f\x00\x00\x00\xff\xff\x42\x4f\xb5\xad\x86\x03\x00\x00"

func scriptsGet_supported_vault_typesCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_supported_vault_typesCdc,
		"scripts/get_supported_vault_types.cdc",
	)
}

func scriptsGet_supported_vault_typesCdc() (*asset, error) {
	bytes, err := scriptsGet_supported_vault_typesCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_supported_vault_types.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc6, 0x86, 0x77, 0x5e, 0x9a, 0x4b, 0xc9, 0x1f, 0x99, 0xc1, 0x61, 0x13, 0x81, 0xe, 0xc9, 0x79, 0xa0, 0x5, 0xf7, 0x5d, 0x1e, 0xb4, 0xf2, 0x48, 0x90, 0x75, 0x45, 0x8c, 0xc2, 0xac, 0x4, 0x5b}}
	return a, nil
}

var _scriptsMetadataGet_token_metadataCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x92\x51\x6b\xab\x40\x10\x85\xdf\xfd\x15\x73\x7d\xb8\x28\x5c\xfc\x01\x12\x13\x42\x6e\xf3\x56\x28\x21\xf4\x7d\xb2\x8e\xc9\xd2\x75\x57\x66\x47\xd3\x52\xfa\xdf\xcb\xba\x9a\xa6\x85\xa4\x3e\xa8\x3b\x1c\xcf\x7e\xe7\xb8\xba\xed\x1c\x0b\xa4\x0f\xaf\xd8\x76\x86\xf6\xee\x85\x6c\x9a\xcc\xd3\x6d\x6f\x8f\xfa\x30\x8d\x1f\x49\xb0\x46\xc1\x67\x4d\x67\x7f\x43\xf3\x35\x0e\xaa\x1d\x79\x67\x06\xe2\x34\x49\x50\x29\xf2\x3e\x43\x63\x72\x68\x7a\x0b\x2d\x6a\x9b\x61\x5d\x33\x79\x5f\xc2\x3a\xbe\xe4\x25\xdc\xde\xb1\xd8\xee\xc3\x13\xde\x13\x00\x00\x43\x02\xa8\x94\xeb\xad\x40\x05\x47\x92\x75\x5c\xcc\x9e\x79\x72\x91\x0d\xd8\x1b\xf9\x8f\x82\x50\xc1\x75\xcc\x82\x23\xde\xc6\x59\x61\x54\x12\xdc\xb3\x30\xeb\x59\xd1\xfe\xad\xa3\x12\xac\x36\xff\x60\xd0\x74\x8e\xcb\x70\x5f\xdc\x27\x9c\xf7\x5a\x66\x79\x0e\xe8\xff\xfc\x12\x68\x96\xaf\x46\xda\x70\xad\x56\xd0\xa1\xd5\x2a\x4b\x37\xae\x37\x35\x58\x27\x21\x5e\x4c\x01\xe1\xe3\x11\x08\x1a\xc7\x20\x27\x02\x35\xd1\xa7\x3f\x13\xef\xa8\x81\x6a\xee\xa8\x50\xd8\xe1\x41\x1b\x2d\x9a\x7c\x71\x70\xcc\xee\xbc\xf8\xfb\xad\x8d\x91\x65\x99\x5d\xda\x2a\xda\x09\xf6\x09\xe5\x94\xdf\xe5\x8b\x7e\x80\xc0\xd4\x10\x93\x55\x04\xe2\x46\xba\x48\xcd\xf3\x39\xb8\x62\x6c\xc6\xbe\xa1\xba\x57\xd0\x91\x24\xfe\xf4\x6c\xb8\x3a\x4d\xe5\x25\xdf\x64\xc7\x24\x3d\xdb\xc9\x31\xf9\x48\x3e\x03\x00\x00\xff\xff\xc9\x37\x5b\x08\xd4\x02\x00\x00"

func scriptsMetadataGet_token_metadataCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsMetadataGet_token_metadataCdc,
		"scripts/metadata/get_token_metadata.cdc",
	)
}

func scriptsMetadataGet_token_metadataCdc() (*asset, error) {
	bytes, err := scriptsMetadataGet_token_metadataCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/metadata/get_token_metadata.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xdc, 0xfc, 0x4e, 0xb4, 0x47, 0xb8, 0x1e, 0xb9, 0x13, 0x51, 0x56, 0xbe, 0x7c, 0x8b, 0x10, 0x98, 0x7c, 0xa, 0xb3, 0x49, 0x78, 0x0, 0x61, 0x80, 0xd6, 0x16, 0x9d, 0x83, 0x3f, 0xf7, 0xcd, 0xdb}}
	return a, nil
}

var _scriptsMetadataGet_vault_dataCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x5f\x6b\xea\x40\x10\xc5\xdf\xf3\x29\xce\xcd\xc3\x25\x81\x4b\x3e\x80\xf8\x07\xf1\xd6\xb7\x42\x11\xf1\x7d\xdc\x4c\x74\xe9\x66\x37\xec\x4e\xb4\xa5\xf4\xbb\x97\x4d\x8c\xda\x52\xc5\x3c\x84\xec\x61\x66\xe7\x77\x4e\x46\xd7\x8d\xf3\x82\xf4\xe9\x8d\xea\xc6\xf0\xda\xbd\xb2\x4d\x93\x41\x5d\xb6\x76\xa7\xb7\x27\xf9\x99\x85\x4a\x12\xda\x68\x3e\x86\x1b\x35\x17\x39\x56\xad\x38\x38\x73\x60\x9f\x26\x09\x29\xc5\x21\x64\x64\x4c\x8e\xaa\xb5\xa8\x49\xdb\x8c\xca\xd2\x73\x08\x23\xcc\xfb\x8f\x7c\x84\xdb\x13\x8b\xe5\x7a\x43\xad\x91\xff\x24\x84\x8f\x04\x00\x0c\x0b\x48\x29\xd7\x5a\xc1\x04\x3b\x96\x79\x7f\x18\x2e\xce\x93\x73\xd9\xe1\xdc\x3a\xc1\xb5\xd7\xc2\xf7\x8c\x0b\x67\xc5\x93\x92\x38\x2a\x8b\x5a\xeb\x15\xaf\xdf\x1b\x1e\xc1\x6a\xf3\x0f\x07\xcd\xc7\xfe\x18\xdf\xe3\xc7\x30\xa7\x59\x9e\x83\xc2\x9f\x07\x5d\xcd\x3a\xda\xf8\xcc\x66\x68\xc8\x6a\x95\xa5\x0b\xd7\x9a\x12\xd6\x49\xb4\xd7\xbb\x40\x6c\xee\x80\x50\x39\x0f\xd9\x33\xd4\x89\x3e\xfd\xe9\x78\xc5\x15\x26\x43\x46\x85\xa2\x86\xb6\xda\x68\xd1\x1c\x8a\xad\xf3\xde\x1d\xc7\x7f\xbf\xa5\xd1\xb1\x4c\xb3\x73\x5a\x45\x7d\x82\x7d\x21\xd9\xe7\x77\xf9\xfa\xfb\x40\xf0\x5c\xb1\x67\xab\x18\xe2\x3a\xba\x9e\xda\x0f\xcb\x70\xe3\xaf\xdc\xc9\x68\xc7\x72\x15\x53\x36\x38\xfb\x8d\xa7\xeb\x46\xe9\x38\x74\x50\x3a\x5a\xab\xd9\x0a\xae\xb7\x27\x66\x37\x60\x78\x96\xd6\xdb\x0b\x49\xf2\x99\x7c\x05\x00\x00\xff\xff\x3b\x31\x07\x10\x14\x03\x00\x00"

func scriptsMetadataGet_vault_dataCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsMetadataGet_vault_dataCdc,
		"scripts/metadata/get_vault_data.cdc",
	)
}

func scriptsMetadataGet_vault_dataCdc() (*asset, error) {
	bytes, err := scriptsMetadataGet_vault_dataCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/metadata/get_vault_data.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xac, 0x3d, 0xd, 0xf, 0x6f, 0x5f, 0xca, 0x47, 0x3d, 0x78, 0x5f, 0xb, 0xa, 0x53, 0x78, 0xe, 0x43, 0x6b, 0x95, 0xa2, 0x5a, 0x6d, 0x68, 0xae, 0xde, 0x44, 0x79, 0x1, 0xf1, 0xc0, 0x85, 0x5e}}
	return a, nil
}

var _scriptsMetadataGet_vault_displayCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\x51\x6b\xc2\x30\x10\xc7\xdf\xfb\x29\x6e\x7d\x18\x2d\x8c\x7e\x00\xb1\x8a\xe8\x7c\x1b\x0c\x11\xdf\xcf\xf4\xaa\x61\x69\x52\x92\xab\x4e\xc6\xbe\xfb\x48\x63\xaa\x1b\xb3\x7d\x28\xc9\xf1\x4f\xee\xf7\xff\xe7\x64\xd3\x1a\xcb\x90\xbe\x7e\x62\xd3\x2a\xda\x9a\x0f\xd2\x69\x12\xab\xeb\x4e\x1f\xe4\xfe\x5a\x7e\x23\xc6\x0a\x19\x77\x92\xce\xee\x81\xe6\x56\xf6\xaa\x0d\x39\xa3\x4e\x64\xd3\x24\x41\x21\xc8\xb9\x0c\x95\xca\xa1\xee\x34\x34\x28\x75\x86\x55\x65\xc9\xb9\x09\x2c\xc2\x22\x9f\xc0\xe3\x8e\xc5\x7a\xbb\x92\xae\x55\x78\x81\xaf\x04\x00\x40\x11\x03\x0a\x61\x3a\xcd\x50\xc2\x81\x78\x11\x36\xf1\xda\x3c\x19\x64\x27\xec\x14\xaf\x90\x11\x4a\xb8\x77\x5a\xd8\x40\xb8\x34\x9a\x2d\x0a\xf6\x8d\x32\x5f\xeb\xac\xa0\xed\xa5\xa5\x09\x68\xa9\x5e\xe0\x24\xe9\x1c\xb6\xfe\x3f\x1d\x85\xdc\xc5\x5e\xb3\x2c\xcf\x01\xdd\xd3\xb8\xa7\x41\x3e\xef\x69\xfd\x37\x9f\x43\x8b\x5a\x8a\x2c\x5d\x9a\x4e\x55\xa0\x0d\x7b\x7b\xc1\x05\xf8\xc3\x3d\x10\xd4\xc6\x02\x1f\x09\xc4\x95\x3e\xfd\xeb\x78\x43\x35\x94\x31\xa3\x42\x60\x8b\x7b\xa9\x24\x4b\x72\xc5\xde\x58\x6b\xce\xd3\xe7\x5f\x69\xf4\x2c\xb3\x6c\x48\xab\x68\xae\xb0\xef\xc8\xc7\x7c\x94\x2f\xdc\x07\x08\x96\x6a\xb2\xa4\x05\x01\x9b\x9e\x2e\x50\xdb\x38\x0a\x77\x8c\x35\xc7\x07\x2d\xc7\x32\x3a\x10\x0f\x4f\x9f\x45\x5f\xff\xd1\xf4\x67\xa1\x32\xe4\x7a\x24\xe9\x8d\x35\xa4\x19\x6e\x93\xe3\x73\x8b\x08\x96\xb8\xb3\xfa\x46\x91\x7c\x27\x3f\x01\x00\x00\xff\xff\xbd\x1a\x99\xeb\x0e\x03\x00\x00"

func scriptsMetadataGet_vault_displayCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsMetadataGet_vault_displayCdc,
		"scripts/metadata/get_vault_display.cdc",
	)
}

func scriptsMetadataGet_vault_displayCdc() (*asset, error) {
	bytes, err := scriptsMetadataGet_vault_displayCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/metadata/get_vault_display.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x78, 0x95, 0x2f, 0x6d, 0x3e, 0x77, 0x8, 0x66, 0x9b, 0x5d, 0x2d, 0xd3, 0x7e, 0xb4, 0xb0, 0x7b, 0xa4, 0xd4, 0x2c, 0x68, 0xc3, 0x3d, 0x31, 0xea, 0x37, 0x8c, 0xaf, 0x8a, 0x30, 0xd6, 0xc3, 0x8b}}
	return a, nil
}

var _scriptsMetadataGet_vault_supply_viewCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x52\xc1\x8e\xd3\x30\x10\xbd\xfb\x2b\xde\xf6\x00\x89\x84\xd2\x0b\xe2\x50\x6d\xb6\x5a\x2d\x94\x13\x12\x5a\xca\xde\xa7\xce\x64\xd7\xc2\xb1\x23\x7b\xd2\x6e\x85\xf8\x77\xe4\xb8\x69\x0a\xd2\xb2\xf4\x50\xd9\x93\xf1\x9b\xf7\xde\x3c\xd3\xf5\x3e\x08\x16\x9f\x9e\xa9\xeb\x2d\x6f\xfd\x0f\x76\x0b\x35\x55\x37\x83\x7b\x34\xbb\x53\xf9\x0b\x0b\x35\x24\xf4\x60\xf8\x10\x5f\xe8\x99\xcb\xa9\xeb\x9e\xa3\xb7\x7b\x0e\x0b\xa5\x96\xcb\x25\x3e\xb3\x44\xc8\x13\x43\xbc\x90\x45\x1c\xfa\xde\x1e\xe1\xdb\xb1\xb6\xa7\xc1\xca\xdb\x08\x49\x30\x68\x4c\x60\x2d\xf6\x88\x36\xf8\x6e\xfe\xae\x14\x69\xcd\x31\x16\x64\x6d\x89\x76\x70\xe8\xc8\xb8\x82\x9a\x26\x70\x8c\x2b\xdc\xe6\x43\xb9\xc2\xf7\x8d\x79\xfe\xf0\x1e\x3f\x15\x00\x58\x16\x90\xd6\x7e\x70\x82\x1a\x8f\x2c\xb7\xf9\x32\x3d\x2c\xd5\xb9\x6d\x1c\xf3\x91\x84\x50\xe3\xd2\x93\x2a\x64\x2d\x77\xde\x49\x20\x2d\x49\x5e\x91\x6a\x43\xd0\xbc\x3d\xf6\xbc\x82\x33\xf6\x1d\xf6\x86\x0f\xf9\x9a\xfe\xaf\x5f\x36\xb0\xda\x6c\x1f\xa6\x59\x37\x45\x59\x82\xe2\x15\xfe\xaf\x7d\x3d\xb2\x4d\xbf\xf5\x1a\x3d\x39\xa3\x8b\xc5\x9d\x1f\x6c\x03\xe7\x25\xc9\xcb\x2a\x90\x1e\x8f\x84\xd0\xfa\x30\x9a\xa8\x4f\xec\x17\x7f\x2b\xbe\xe7\x16\xf5\xe4\x51\xa5\xa9\xa7\x9d\xb1\x46\x0c\xc7\x6a\xe7\x43\xf0\x87\xeb\x37\x7f\xb8\x31\x72\xb9\x29\xce\x6e\x55\xdd\x89\xec\x57\x92\xa7\xf2\x9f\xfc\x32\x1e\x08\x81\x5b\x0e\xec\x74\xca\xc3\xbc\x62\x84\x29\x34\x17\x1c\x5b\xf9\x96\xc3\x52\x9f\xe9\x4e\x0b\x19\x17\xf1\x9a\xd7\xdb\x14\xb8\x0c\x91\xbc\xbe\x9a\x91\x73\x08\x53\x17\xea\x79\xcc\x2b\xbb\xb8\x80\xcb\x48\x81\x65\x08\xee\x02\xac\xca\x47\xf5\x4b\xfd\x0e\x00\x00\xff\xff\x3c\x7c\x95\xe9\x61\x03\x00\x00"

func scriptsMetadataGet_vault_supply_viewCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsMetadataGet_vault_supply_viewCdc,
		"scripts/metadata/get_vault_supply_view.cdc",
	)
}

func scriptsMetadataGet_vault_supply_viewCdc() (*asset, error) {
	bytes, err := scriptsMetadataGet_vault_supply_viewCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/metadata/get_vault_supply_view.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd4, 0x58, 0x26, 0x46, 0x13, 0x4a, 0x14, 0x30, 0x81, 0x47, 0x51, 0x27, 0xa, 0x1b, 0xb8, 0xda, 0x1a, 0x8e, 0x71, 0x73, 0x2, 0xb6, 0x49, 0x3e, 0x82, 0x6b, 0x6b, 0xe7, 0x57, 0x52, 0xd6, 0x81}}
	return a, nil
}

var _scriptsSwitchboardCheck_receiver_by_typeCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x91\xc1\x6e\xea\x30\x10\x45\xf7\xf9\x8a\xab\x2c\x9e\xec\x4d\x3e\x00\xf1\xa0\x50\xb5\x6b\x04\xb4\x7b\x67\x32\x49\x2c\x1c\x3b\x72\x26\xa5\x11\xe2\xdf\x2b\x1a\x68\xd3\x4a\x2c\xba\x1b\xcb\xe7\xca\xc7\x77\x6c\xd3\x86\x28\x48\x9f\x7b\x5f\xd9\xdc\xf1\x3e\x1c\xd8\xef\x8e\x56\xa8\xce\x83\x89\x45\x9a\xdc\x88\xa7\x77\xd3\xb4\x57\x20\x4d\x12\x43\xc4\x5d\xa7\x8c\x73\x1a\x65\xef\xd1\x18\xeb\x55\xf7\x1d\x9c\x61\x55\x14\x91\xbb\x4e\xcf\xb0\x0e\xc1\xe1\x94\x38\x16\x4c\x88\x2d\x97\xf8\x8f\x8a\x65\x45\x14\x7a\x2f\xd3\xb4\x4e\x00\x20\xab\x58\x1e\x4d\x6b\x72\xeb\xac\x0c\xf3\x7f\xa7\x7b\x96\xd9\x64\xde\xf4\xb9\xb3\x74\x5e\xa8\xbb\xf0\x48\x6c\x8c\xd4\xd7\x67\xf2\x10\x63\x38\x2a\x8d\xcf\xe3\x72\x89\xd6\x78\x4b\x2a\x7d\xf1\x26\x77\x0c\x09\x18\x09\xd0\x97\x0c\x8e\x56\x6a\x44\xee\x24\x5a\x12\x2e\x20\x43\xcb\x08\x25\xfe\xe2\x88\x32\x86\x06\x69\x46\xc1\x93\xf9\xf1\xff\x4c\xc2\x4e\xa2\xf5\x95\xd2\xfa\x76\x8d\xd4\x8c\x45\xa5\x7a\xf4\x8e\x2c\x7d\xf4\xbf\x2a\xcd\xa8\x66\x3a\x6c\x99\xd8\xbe\x71\x5c\x0f\xfb\xa1\x65\x75\x91\x9b\xe1\x32\xce\x1f\xa6\x7b\xcc\x5e\x4d\xef\x64\xa1\xb4\x4e\xce\x1f\x01\x00\x00\xff\xff\x42\x49\x50\xe3\x0a\x02\x00\x00"

func scriptsSwitchboardCheck_receiver_by_typeCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsSwitchboardCheck_receiver_by_typeCdc,
		"scripts/switchboard/check_receiver_by_type.cdc",
	)
}

func scriptsSwitchboardCheck_receiver_by_typeCdc() (*asset, error) {
	bytes, err := scriptsSwitchboardCheck_receiver_by_typeCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/switchboard/check_receiver_by_type.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x28, 0xbd, 0x17, 0x97, 0x36, 0x67, 0x9d, 0x1d, 0x71, 0xf7, 0xf1, 0x0, 0x2c, 0x7c, 0xa2, 0x2a, 0xde, 0xb2, 0x26, 0x85, 0xa2, 0x40, 0xc, 0xb, 0x9c, 0x93, 0x79, 0xea, 0xb6, 0xf1, 0xa8, 0xca}}
	return a, nil
}

var _scriptsSwitchboardGet_vault_typesCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x51\x4d\x6b\xe3\x30\x10\xbd\xeb\x57\x3c\x7c\x58\xec\x8b\x7d\x0f\x9b\x0d\x21\xb0\x7b\x0d\xd9\xd0\x4b\x29\x44\x96\xc7\xb6\xa8\x2c\x19\x69\xdc\x10\x42\xfe\x7b\x91\xdd\x34\x4e\x69\xa0\x3e\x19\xcd\xfb\x98\x79\x4f\x77\xbd\xf3\x8c\xe4\xef\x60\x1b\x5d\x1a\xda\xbb\x57\xb2\x89\xf8\xf6\xf9\xff\x51\xb3\x6a\x4b\x27\x7d\x95\x08\x51\x14\xd8\xb7\x3a\x20\x28\xaf\x7b\x86\x27\x59\x05\x70\x4b\x08\xec\x3c\x55\x78\x93\x83\x61\x28\xd9\xcb\x52\x1b\xcd\x9a\x02\x6a\xef\x3a\x48\x84\x9b\x0e\x9c\x8d\x9c\x28\xd6\xcb\x10\xa8\x82\x54\xca\x0d\x96\x85\x54\x8a\x42\x48\xa5\x31\x19\xea\xc1\xa2\x93\xda\xa6\x1f\xc3\x05\xd6\x55\xe5\x29\x84\x6c\x81\xe7\xfd\xa9\xa7\x17\x9c\x85\x00\x00\x43\x1c\x15\x18\x4b\x34\xc4\xeb\x09\x7e\xa5\x65\x13\xa6\x28\xf0\x2f\xc2\xe0\xa9\x26\x4f\x56\x11\xd8\x4d\x9b\xcf\x16\x53\xce\xd6\xce\x77\xda\x36\x71\x3a\x3b\x7d\x3b\x94\x46\xab\x4f\xb7\x19\x67\x47\x35\x96\xa3\x7d\xde\x10\x6f\xae\x97\x9f\xd2\x47\x29\xe6\x93\xd6\x56\x72\x9b\x8d\x82\xf1\xcb\x4b\xe7\xbd\x3b\xfe\xfe\xf5\x90\x35\xfb\x3f\xff\x04\x34\xb9\x5c\xfe\xa4\x37\x93\xd5\x0a\xbd\xb4\x5a\xa5\xc9\xc6\x0d\xa6\x82\x75\x8c\xc9\xf7\x3e\x95\xd9\x75\xc9\x2d\xbe\x1d\xf1\xe0\xc7\xe2\xe0\x29\xc4\x9a\x5d\x8d\x43\x43\xfc\x14\x3b\x8f\x85\x84\x34\x3b\x8c\x68\x3f\x41\xef\x53\xca\xbf\x40\x85\xb8\x88\xf7\x00\x00\x00\xff\xff\x34\x76\xa3\x3d\x89\x02\x00\x00"

func scriptsSwitchboardGet_vault_typesCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsSwitchboardGet_vault_typesCdc,
		"scripts/switchboard/get_vault_types.cdc",
	)
}

func scriptsSwitchboardGet_vault_typesCdc() (*asset, error) {
	bytes, err := scriptsSwitchboardGet_vault_typesCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/switchboard/get_vault_types.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x5b, 0x3a, 0x34, 0x84, 0xf0, 0x9c, 0x3d, 0xf2, 0x3, 0xc9, 0x31, 0xb0, 0xa9, 0x89, 0x21, 0xb5, 0xd3, 0x99, 0xef, 0xa1, 0x62, 0x13, 0x4e, 0x29, 0x51, 0xba, 0x55, 0xcb, 0x65, 0x30, 0xc3, 0x48}}
	return a, nil
}

var _scriptsSwitchboardGet_vault_types_and_addressCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\x41\x6f\xa3\x30\x10\x85\xef\xfe\x15\x4f\x1c\x56\x70\x81\x7b\xb4\xbb\x51\xb4\xd2\xf6\x1a\xa5\x51\x7b\x8d\x31\x03\x58\x35\x36\x1a\x0f\x8d\xaa\x28\xff\xbd\x02\x92\x94\xa8\x8d\x8f\xe3\x79\x33\x6f\xbe\x67\xbb\x3e\xb0\x20\xf9\x3f\xf8\xc6\x96\x8e\xf6\xe1\x8d\x7c\xa2\x7e\x2c\x3f\x1f\xad\x98\xb6\x0c\x9a\xab\x44\xa9\xa2\x28\xb0\x6f\x6d\x44\x34\x6c\x7b\x01\x93\xae\x22\xa4\x25\x44\x09\x4c\x15\xde\xf5\xe0\x04\x46\xf7\xba\xb4\xce\x8a\xa5\x88\x9a\x43\x07\x8d\xf8\x35\x08\xc1\x4f\x9a\x5e\xc7\x48\x15\xb4\x31\x61\xf0\x32\x0e\x57\xda\x18\x8a\x31\xd5\xce\x65\xa8\x07\x8f\x4e\x5b\x9f\x5e\x1a\x56\xd8\x54\x15\x53\x8c\xd9\x0a\xa7\xfd\x47\x4f\xb7\xc2\x19\x27\xa5\x00\xa0\x28\xf0\x44\x02\x0d\xa6\x9a\x98\xbc\x21\x48\x98\xfd\x2d\xd6\x9b\xe0\xeb\xc0\x9d\xf5\xcd\xf8\xbb\xb8\x70\x3b\x94\xce\x9a\x69\x92\x23\x59\x6a\x76\x54\xe3\x0f\x1a\x92\xcd\xec\xe5\xea\x29\xcb\x97\xb7\xe6\x65\x60\x0e\xc7\xdf\xbf\x4e\x8f\x18\xe6\xdf\xb6\x9d\xff\xa6\xd3\xc2\xeb\x7b\xa8\x9c\xdb\xb7\x5a\xda\x5b\x7f\x86\xf5\x1a\xbd\xf6\xd6\xa4\xc9\xbf\x30\xb8\x0a\x3e\x08\x66\x13\xf7\x08\x16\xa7\x24\xd9\x8d\xd5\x8e\x64\xe0\x39\x0b\xa6\x38\x26\x17\x6a\x1c\x1a\x92\x97\x31\xc6\x11\x71\x7c\xb5\xd2\x5e\x28\xa7\xd9\x61\x12\xf2\xac\xba\xa7\x93\x3f\x56\x29\x75\x56\x9f\x01\x00\x00\xff\xff\xec\x44\x7e\xc2\x73\x02\x00\x00"

func scriptsSwitchboardGet_vault_types_and_addressCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsSwitchboardGet_vault_types_and_addressCdc,
		"scripts/switchboard/get_vault_types_and_address.cdc",
	)
}

func scriptsSwitchboardGet_vault_types_and_addressCdc() (*asset, error) {
	bytes, err := scriptsSwitchboardGet_vault_types_and_addressCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/switchboard/get_vault_types_and_address.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xaf, 0x94, 0x76, 0x20, 0xbc, 0xb8, 0xf5, 0x3c, 0xf5, 0x75, 0x8d, 0x73, 0x44, 0x5, 0x28, 0x62, 0xe4, 0x3, 0xba, 0xf3, 0x2a, 0x1f, 0x15, 0x71, 0xde, 0x9a, 0xd8, 0xe3, 0x7d, 0x48, 0xd3, 0xdc}}
	return a, nil
}

var _scriptsTestExample_token_vault_display_strict_equalCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x4d\x6f\xdb\x38\x10\xbd\xeb\x57\xcc\x6a\x01\x43\xc2\xa6\x72\xfa\x91\x6c\x6b\xd4\x0d\xba\x6d\x8d\x3d\xb4\x40\x11\x68\xbb\x87\xa2\x08\xc6\xd4\x58\x26\x42\x91\x02\x39\xb2\x1d\x2c\xfa\xdf\x17\xd4\x97\x65\x45\x31\xca\x83\x61\x72\x66\xde\xbc\x79\xf6\x3c\x59\x94\xc6\x32\x84\xab\x4a\xe7\x72\xad\x28\x35\xf7\xa4\xbf\x10\x63\x86\x8c\xdf\x24\xed\x5d\x18\x74\x39\x4f\x3c\xfb\xeb\x2d\x39\xa3\x76\x64\x8f\xaf\x9f\x0e\x58\x94\x2d\x5e\x18\x04\xf3\xf9\x1c\x52\x72\x0c\x5b\x52\x25\x59\x70\xc2\xca\x92\x81\x0d\xec\x50\xc9\x0c\x99\x60\x58\x01\x8e\xec\x8e\x1c\xac\xd2\x8f\xd2\x95\x0a\x1f\x00\x1d\xd0\xa1\x24\xc1\x94\x79\xb0\x00\x85\x20\xe7\x22\x54\x2a\x86\x4d\xa5\xa1\x40\xa9\x23\xcc\x32\x4b\xce\x2d\xe0\x7d\xf3\x25\x5e\xc0\x5f\xc6\x28\xf8\x2f\x00\x00\x50\xc4\x80\x42\x98\x4a\x33\x2c\x21\x27\x7e\xdf\x5c\xba\xb2\x38\xe8\xd3\xba\x56\xb0\x84\xa7\x95\x49\x7a\x76\x51\x5d\xd8\x1d\x8d\x05\x2d\x7a\x05\x7a\x00\x68\xb4\xb8\x38\xc9\x75\x0f\xc5\xda\x28\x9f\xbd\x4a\x47\xa1\x8c\x1a\x91\xa4\xd1\x0b\x08\xd3\xad\x74\x7e\xd0\x06\x8a\x6b\x91\xa4\x83\xca\x51\xe6\xb5\x41\x0d\xd4\xf6\x63\x53\x8b\x0c\x0f\xa6\x82\x8c\x76\xa4\x4c\xfd\xdd\x82\xa6\x03\xc3\x2a\x85\xdf\x8d\x5e\x29\xb3\x4f\x46\xfd\xe8\xc0\x64\x35\xaa\x7f\x6e\x3f\x2f\xe0\x74\xd0\x4f\xc7\x50\x14\x6e\x99\x4b\xb7\x98\xcf\xdb\x7e\xcf\x36\x9c\x18\xbd\xf1\x80\xc6\xe6\x61\x7c\x0a\xaa\x4c\x6e\xdc\x18\xee\x0b\x65\x12\x5d\xf4\xfd\x24\xd3\x9f\x89\xb4\xe8\x51\x92\x3f\x1b\xa9\x68\x8c\xfa\x77\x9a\x7e\x5d\x49\x45\xd3\x15\xfe\x54\xd6\x2b\xdd\xf1\x47\xe7\x88\x5d\xb2\xa7\xb5\x93\x4c\xcf\x3c\xa4\x4b\x84\x29\xe6\x57\x9b\xeb\x17\x6f\x5e\x89\x4b\xf1\x27\xbe\x16\x59\x76\xfd\xea\xe5\xfa\xb9\x78\xfd\xe2\x72\x14\xc0\xab\x2b\xb1\x7e\x2e\xde\xbc\xbc\xbe\xf3\x72\xde\xfd\x6b\x6c\x56\xa0\xbd\x4f\xdc\x2e\x0f\x27\x39\x8c\xb4\xe9\x4e\xe1\xe7\x4c\x1f\x4a\xff\xa7\x91\x05\xe6\x34\x77\xbb\xfc\x8f\x43\xa1\x1e\xa3\xc4\x3f\x82\x33\x80\xce\x08\x89\xca\x2d\xda\xff\xfb\xf0\x84\xbc\x97\xcc\x64\xc3\x5f\xfa\x69\xdb\xe4\x5a\x0d\xff\xcb\xde\xad\x95\x11\xf7\x62\x8b\x52\x87\xf1\x09\xf6\xcf\xfe\x36\xd8\x9e\x1d\x56\x8a\x3f\x22\x23\x2c\x4f\xb6\x3a\xb1\x8d\x4d\x7c\x30\x9a\x2d\x0a\xf6\x0c\x22\xff\x56\x59\x41\x8d\x00\x5a\xaa\x0b\xd8\x49\xda\x37\x57\xff\xf9\xf6\xec\x06\x7e\xeb\x7a\xbd\x8b\xe2\x18\xd0\xfd\x76\x7e\x61\xfb\xf4\x9b\x9e\xf8\xcd\x0d\x94\xa8\xa5\x88\xc2\x0f\xa6\x52\x19\x68\xc3\xde\x1c\x9a\x29\xc0\x17\xd7\x84\x60\x63\x2c\xf0\x96\x40\xb4\xec\xc3\xf1\xc4\xb7\xb4\x81\x65\xe7\x30\x89\xc0\x12\xd7\x52\x49\x96\xe4\x92\xb5\xb1\xd6\xec\xdf\xce\x4e\xd4\xa8\xb9\xbc\x8b\x7a\xb5\x92\xa2\x25\xfb\x15\x79\x1b\x9f\xe5\xd7\xe0\x01\x82\xa5\x0d\x59\xd2\xa2\x5e\x7b\xcf\xae\x61\x6d\x3b\x3f\x1e\x70\x44\xc1\x15\xaa\xf3\x8e\x96\x13\x1f\x4d\xad\x1b\x6a\x8a\x4a\xe3\xd2\x99\x21\x57\xf3\x91\x7e\xaa\x82\x34\x0f\x1c\xdb\x8b\xd6\xf5\xf7\xbb\x66\x39\x6a\x28\x24\xb5\x29\x24\x92\xa9\x70\x89\x22\x9d\xf3\x16\x96\xcb\xde\x73\x27\xc2\x17\x50\x90\x73\x98\xfb\x0d\x69\xcc\x03\xda\xba\x42\xba\x02\x59\x6c\xc3\x09\xf3\xfe\x6c\x72\x53\x67\xc3\x34\xf8\xf7\xcb\x1f\x23\x71\x86\x15\x8f\xb9\x76\xf9\x96\xb8\xb2\xfa\x08\xe9\xfd\xde\x0f\xd0\x56\xd4\xd7\xd9\xec\x18\x6f\x3c\x7e\x90\xd1\x3e\xcc\x66\xbd\xb0\x7d\xee\xc0\xf4\x07\x05\xc3\xd7\x21\xf2\xc0\xb2\x93\xca\x0e\x5b\x8c\x23\xb3\x19\x3c\x6a\xd6\x4f\x9b\x78\xef\x4b\x2a\x2b\xa3\xf8\x08\x31\x19\x1d\x34\x3f\xc6\x7b\xff\x9a\x2a\xee\x83\xc1\xcf\x20\xf8\x3f\x00\x00\xff\xff\x82\xa8\x93\x68\x6e\x08\x00\x00"

func scriptsTestExample_token_vault_display_strict_equalCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsTestExample_token_vault_display_strict_equalCdc,
		"scripts/test/example_token_vault_display_strict_equal.cdc",
	)
}

func scriptsTestExample_token_vault_display_strict_equalCdc() (*asset, error) {
	bytes, err := scriptsTestExample_token_vault_display_strict_equalCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/test/example_token_vault_display_strict_equal.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x33, 0x52, 0xb1, 0x7d, 0xac, 0xec, 0x6e, 0xd7, 0xe6, 0xce, 0x43, 0x69, 0xe2, 0xb0, 0x8f, 0x7e, 0x1b, 0xd5, 0x9c, 0x7a, 0x80, 0xaa, 0x36, 0x19, 0x63, 0xb5, 0x83, 0x2f, 0xac, 0x34, 0xf0, 0x53}}
	return a, nil
}

var _scriptsTokenforwarderIs_recipient_validCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x50\x4b\x6a\xc3\x40\x0c\xdd\xfb\x14\x0f\x2f\xca\x18\x8a\x0f\x60\xda\x86\xb4\x90\x75\x28\xed\x01\xe4\xb1\xec\x0c\x19\x8f\x8c\x2c\x13\x42\xc8\xdd\x4b\x6d\x5a\x48\x48\x88\x56\x42\xbc\x9f\x5e\xe8\x07\x51\xc3\x97\xec\x39\x6d\x44\x0f\xa4\x4d\x48\x1d\x5a\x95\x1e\xf9\xd5\x35\xcf\x32\xf2\x9e\xc7\xd1\x51\x8c\x05\xda\x29\xa1\xa7\x90\x1c\x35\x8d\x56\x58\x37\x8d\xf2\x38\x3e\xc3\x2e\x59\x5b\xb2\x5d\x85\xed\x54\xc7\xe0\x7f\xf7\xa2\xc2\xbb\x48\xc4\x29\x03\x80\xc8\x86\x76\xc1\xb2\x7e\x72\x8b\x57\x74\x6c\x6b\xef\x65\x4a\x36\x2b\x17\x33\xee\xc6\x94\x1d\xdb\x07\x0d\x54\x87\x18\xec\xf8\xf2\x74\xba\x8a\x5b\x6e\xfe\x74\x17\xf3\xf3\x9b\xbb\x11\xed\xbe\x7c\x2d\xaa\x72\x70\x77\x01\xab\x15\x06\x4a\xc1\xbb\xfc\x3b\x51\x1d\x19\x26\x58\x38\x78\x18\x05\xca\xa3\x69\xf0\x06\x3b\x0e\xbc\xd4\x4d\xf0\xff\xdf\xe4\x45\x36\xdb\x2a\xdb\xa4\xe9\xa2\xa1\xd2\xef\xd8\xef\x5d\x91\x9d\x7f\x02\x00\x00\xff\xff\x1c\x3c\x53\x68\xbc\x01\x00\x00"

func scriptsTokenforwarderIs_recipient_validCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsTokenforwarderIs_recipient_validCdc,
		"scripts/tokenForwarder/is_recipient_valid.cdc",
	)
}

func scriptsTokenforwarderIs_recipient_validCdc() (*asset, error) {
	bytes, err := scriptsTokenforwarderIs_recipient_validCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/tokenForwarder/is_recipient_valid.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x7a, 0x23, 0x4d, 0x2, 0xff, 0x47, 0x5f, 0xfa, 0x75, 0xc3, 0x97, 0xa7, 0xe, 0x25, 0x75, 0xe4, 0xab, 0xb9, 0x6d, 0xd0, 0x4a, 0x83, 0x54, 0x49, 0x43, 0x4e, 0x6f, 0xf8, 0x6a, 0xd6, 0x3b, 0xf9}}
	return a, nil
}

var _setup_accountCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x94\x41\x6f\xdb\x3c\x0c\x86\xef\xfe\x15\x6f\x73\xe8\x67\x03\x69\x72\x2f\xd2\xf6\xdb\xb2\x16\xd8\x61\x40\xd1\x06\xb9\x33\x0e\xd3\x08\x53\x24\x41\xa2\x93\x06\x45\xff\xfb\x20\x39\x76\xec\xce\xc5\x76\x9c\x0f\x01\x44\x51\xe4\xcb\x87\x64\xa6\x53\x2c\xb6\x2a\x40\x3c\x99\x40\xa5\x28\x6b\xa0\x02\x08\xc2\x3b\xa7\x49\x18\x1b\xeb\xe3\xb1\x73\x2f\x16\xa4\xb5\x3d\x64\xd3\x29\xc8\x1c\xad\xe1\x64\x5a\xaf\x41\x58\x52\xa5\x05\x9e\x83\xad\x7c\x99\xec\xb2\x65\xe5\x41\x65\x69\x2b\x23\x08\xd1\x40\x12\x9f\xca\x96\x8f\x28\xc9\xa0\x0a\x1c\x0f\xe0\x57\xda\x39\xcd\x0b\xfb\x93\x4d\x96\xa9\x9d\xb3\x5e\x30\x7a\xa8\xcc\x8b\x5a\x9d\xcc\xa3\xd6\x7c\xdf\x71\x3e\x5b\x97\x8a\x0f\x4f\x1c\xac\xde\xb3\x1f\x0d\x87\xf8\xc1\x42\x6b\x12\x8a\xae\x61\x94\x65\xdd\xca\xf2\x02\x6f\x59\x06\x00\xce\xb3\x23\xcf\x79\x50\x2f\x86\xfd\x35\xa8\x92\x6d\xfe\xd5\x7a\x6f\x0f\x4b\xd2\x15\x8f\xf1\x3d\x84\x8a\x9f\xc5\x7a\x7a\xe1\x39\x39\x5a\x29\xad\xe4\x38\xb7\x46\xbc\xd5\x9a\xfd\x18\x8f\xd5\x4a\xab\xb0\x3d\x5f\x8e\xf1\x4c\x7b\x4e\xef\x0b\x5c\x7e\xa9\x91\xb4\x29\xe3\xa7\x59\xb0\x8f\x08\xbf\x91\x10\x6e\xd0\xad\x72\xe2\xeb\xc2\x52\x0a\x2a\x25\x16\x90\x37\xa4\x17\x47\xc7\xd7\x30\x4a\x8f\xb1\x57\x7c\xa8\x8f\xf1\x77\xf6\x79\xf1\x93\x87\xc5\xb2\xc9\x75\x9b\x17\x05\x28\x5c\xe0\xef\xdc\xef\x5a\xc5\xf1\xbb\xbb\x83\x23\xa3\xca\xbc\xc7\x1f\x6b\xcb\x01\xc6\xd6\xe3\xa0\xf7\x8c\x4e\x80\xa4\x72\x54\x9c\x2b\x9f\x4e\xf1\xc4\x52\x79\x03\x26\xaf\x8f\x50\x9b\x34\x13\xcd\xdc\x90\xf6\x4c\xeb\x23\x82\x58\xcf\x71\x3e\xbb\x64\xea\xa9\x6b\x43\xa9\x0d\xea\xb6\x4d\x42\xdd\x9e\xc9\x2a\x35\x6e\x76\xd9\xc3\x99\x1e\xdd\xe6\x1b\x6f\x77\xd7\x67\xe8\xcd\x9b\x47\x92\x6d\x81\x8b\x9b\xc8\x14\x6f\xbd\x72\x7d\xd2\xd9\x9a\xde\x07\xda\x87\xd9\x55\xbf\x77\xa5\x67\x12\xbe\xdf\x39\x39\xa6\xbc\x79\x72\xeb\xb4\xe9\xff\x21\x6d\x45\x1f\xd0\x3c\x05\x01\xc1\xf0\x61\x00\x00\xc8\xac\xe1\x2a\x81\x12\x28\x83\x53\x21\x6d\x80\x0f\x4c\x02\xed\x39\x9f\x5d\x25\x1d\x63\x88\xfd\x8c\xc1\xb0\x02\x17\x67\xbb\x44\xd9\xce\xf6\x69\xd5\x4f\x4a\xe2\x8e\x83\x5f\x9d\x0d\x1c\x3a\x66\x65\x84\xfd\x86\x4a\x0e\xbf\x23\x9b\x93\xc3\x4d\x23\xb2\x8d\xab\x38\xb4\x8a\x55\xdc\xb8\xe1\x26\xf6\xfa\x33\x58\x47\xeb\x51\x7c\x04\xd2\xcb\xe5\xea\x9d\xcd\x1b\x49\x63\x90\x74\xc9\xec\x4e\x1b\xf1\x67\x34\xf3\x61\x34\xff\x05\x3c\x71\xc9\x2a\x2e\xc8\xa6\x32\xe9\x7f\x87\xa2\x57\x8f\x88\x3f\xb9\xfc\x5b\x50\x3a\xaa\x3e\x72\x69\xae\x6a\x2e\xf5\x5a\xbc\x67\xbf\x02\x00\x00\xff\xff\xfa\xdc\x38\x5a\x5e\x06\x00\x00"

func setup_accountCdcBytes() ([]byte, error) {
	return bindataRead(
		_setup_accountCdc,
		"setup_account.cdc",
	)
}

func setup_accountCdc() (*asset, error) {
	bytes, err := setup_accountCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "setup_account.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb3, 0x82, 0x3c, 0xc7, 0xdc, 0x85, 0xf8, 0xad, 0xef, 0xa0, 0x18, 0x66, 0xb, 0x3, 0xc9, 0x2a, 0xa4, 0xeb, 0x9e, 0xc0, 0x4, 0x3d, 0xa, 0xfe, 0x31, 0xb1, 0xdd, 0x76, 0x84, 0xbe, 0x13, 0x5c}}
	return a, nil
}

var _switchboardAdd_vault_capabilityCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x57\x4d\x6f\xe3\x36\x10\xbd\xfb\x57\x4c\x7d\x70\xa5\xc0\x95\xef\x46\x3e\xba\xeb\xee\x16\x3d\xb4\x58\x6c\xd2\xdc\xc7\xd4\xd8\x22\x56\x26\x05\x92\xb2\x63\x04\xfe\xef\x05\xa9\x2f\xd2\x96\x1c\xc7\x5d\x44\x87\x44\x96\xc8\x99\xf7\x66\xc8\xf7\x44\xbe\x29\xa4\x32\x30\xfe\x5a\x8a\x35\x5f\xe6\xf4\x24\x7f\x90\x18\x8f\x7a\x1f\x3f\xee\xb8\x61\xd9\x52\xa2\x4a\xbb\x11\x5f\x5e\x70\x53\x9c\x9f\xf7\x37\x19\x4c\xd1\xe0\x33\xa7\x9d\x1e\x8f\x46\xb3\xd9\x0c\x9e\x32\xae\xc1\x28\x14\x1a\x99\xe1\x52\x00\xd7\x80\x60\x68\x53\xe4\x68\x08\x56\x52\xd9\x9f\xde\x7b\x93\xa1\x01\x26\xcb\x3c\x85\x25\x41\xa9\x29\x85\xe5\x1e\x50\xec\xa5\x20\x30\x12\x30\x4d\x01\x41\xd0\x0e\x56\x75\x6e\x30\x36\x39\x6c\xb1\xcc\x8d\xcb\xc9\xb0\xc0\x25\xcf\xb9\xd9\xdb\x09\x26\x23\xae\x40\x77\x9c\x40\x91\x96\xa5\x62\x64\x07\x8f\xfc\xdc\xaf\xa3\x11\x00\x40\x4e\x06\xc8\xa3\xfb\x6c\x23\x2f\xda\xa0\x73\xe8\xee\x6f\x27\xaf\x41\x09\x92\xef\xc4\x88\x6f\x49\x1d\xee\xdb\x50\x5e\xea\xef\xb4\x9a\x03\x4c\x86\xaa\x9d\x78\xf7\x15\x94\x42\x51\x81\x8a\x22\xcd\xd7\x82\xd4\x1c\xb0\x34\x59\xf4\x59\x2a\x25\x77\xcf\x98\x97\x34\x85\xbf\xb4\x2e\xe9\xd1\x48\x85\x6b\xea\x70\x2d\xa4\x30\x4a\xe6\x39\xa9\x29\x7c\x2b\x97\x39\xd7\x59\xf7\x72\x0a\x8f\xb8\xa5\x7a\xfe\xbf\xa2\x38\x7e\x1f\xc3\xe4\x13\x63\xb2\x14\x26\x6e\x4a\xd2\x70\x71\x45\xfe\x03\x0d\xc2\x1d\xf8\x2b\x22\xb1\x35\xcd\xb7\xe4\xf2\x22\x33\x76\x09\x44\x4d\x9d\x9f\xf6\x05\xcd\x41\xf0\x7c\x0a\x5b\x4e\xbb\xea\xa7\xfd\x7b\x3b\xbc\x7c\x92\xaf\x4f\xcf\x4d\xae\xfb\x28\x8e\x01\xf5\x2f\x70\xd9\xf0\x87\x16\xb1\xbd\x1e\x1e\xa0\x40\xc1\x59\x34\x5e\xb8\x45\x25\xa4\x81\x75\xc3\x04\x6c\x00\x07\xca\xad\x44\x93\x11\xb0\x9a\xc1\x38\xee\x98\xcf\x6e\x02\xb2\xe0\x52\xd9\x91\x2b\xbe\x2e\x15\xba\xb5\x73\x33\xeb\x86\xfb\xb7\xb0\xa8\x87\x11\xa0\xe8\x0b\xc3\x57\x20\x88\x52\x4a\xdb\x49\x7c\x05\x55\xbf\x13\x5d\xf5\x35\x59\xba\x8e\xdf\x4e\x82\x92\xbb\xe9\xf7\xd1\x4a\xc9\xcd\xbc\x6b\x4c\x33\xe7\x1b\x9a\x2c\x86\xbb\x3b\x5b\x77\x78\x0d\x4a\x62\x41\x29\xb2\xdb\xaf\xda\x48\x3d\xa0\x50\xa4\xa0\x71\x4b\xc0\x0d\x70\x01\x75\xcc\x20\xca\x11\x44\x3b\x3a\xba\xfd\x2d\x40\xc8\x5c\x96\x2f\x9b\xc2\xec\x5d\xd8\xc8\xa1\xf4\xfa\xff\x7b\x1f\xa1\x38\x9e\x82\x91\x43\x94\x4e\x98\xe4\x84\x0a\xe8\x85\x6b\xc3\xc5\xba\xdb\x9a\x9c\x34\x58\x25\x41\x21\x05\x67\x98\x43\x81\x26\xd3\x7d\x0c\x98\x37\x25\x29\x9b\xed\x10\x75\xe9\x37\xf5\x4a\x3b\xcd\x7f\x69\x04\x55\xab\x42\x2f\x03\xb7\x83\xeb\xba\x4f\xa0\x11\x90\x80\x49\x30\xa5\xdd\x87\x0b\x2c\xe0\xae\x17\x43\xd3\x14\x6e\x43\x9f\x68\xd4\x67\xcc\x51\x30\x9a\x86\xfb\xa9\x2a\xff\xe1\x3e\xba\xa0\xee\x16\x42\xc3\xe9\x5a\x14\x9d\x52\x5e\x92\x71\x36\x6b\x74\x6c\xb8\x30\x7d\x18\x82\x5e\x2c\xb0\x98\x02\x1a\x7f\x69\xbd\xaf\xb7\x4d\x34\x8f\xfb\x71\xc0\xfe\x56\x1f\xda\x3b\x5f\x1a\xfe\x24\xe3\x34\xa7\x36\x1b\xdf\xc8\x7c\x13\xb3\x3b\xdc\x8d\xab\x20\xfd\xaa\x01\x2b\x79\x6e\x63\x69\xca\x57\xc9\x19\xcb\x1a\x68\xd0\x9a\xcc\xb9\xb6\x04\xe5\xb0\x57\x3f\xcb\x60\x58\xec\x09\xee\xa3\x4b\x09\xa9\x24\xed\x64\x37\xb3\x82\x82\x8d\xdc\x40\xa5\x37\x4d\x24\x8f\xf0\x38\xee\xad\xd6\x22\x23\xf6\xc3\x8a\xa3\x2d\x45\xcf\xb4\x4a\x04\xba\x25\x81\x5a\x93\x32\x21\x8b\xb7\x0a\x95\x30\x9b\x24\x8a\xa7\x10\x4c\xdb\x90\xd6\xb8\xa6\x39\x5c\xcf\xa9\x8d\xd7\x47\xee\x06\x3c\xe7\x07\x4d\xa6\x2c\x2e\x31\x14\xff\x7b\xe1\x5d\x3e\x72\xc9\x07\x48\xe3\x2c\xc3\x63\xdf\x6d\x34\x3e\xdc\xab\x1d\x66\x10\x4f\xe5\x36\xde\x93\xa8\x36\x92\x8b\x18\x7c\x98\xaf\x0c\xa2\x69\x76\x9e\xd3\x39\xf6\x5e\xb3\x19\x0c\x3b\x14\xae\x75\x9e\xd6\x71\x26\x41\x83\xce\xfa\xcf\x4f\x14\xff\x13\x95\xb1\xd7\x25\x2d\x3b\x99\x78\xea\x51\xde\xa7\x77\x55\x86\x2b\xf1\x0e\x6c\x91\x2a\xe6\xb1\x8f\x7e\x00\xb7\xff\xeb\x86\x27\xfe\xf5\x53\x17\x65\x93\xa5\xaf\xfa\x6f\xa4\xeb\x4b\x73\x38\xb6\x4c\x04\x45\x2b\x52\x24\x18\xd5\x07\xbc\x1a\x86\xf6\x1b\x1e\x9a\x63\x78\x08\xeb\xd6\xc0\x75\xca\x78\xd2\x9e\xcb\xa5\x72\xd0\x2d\xbb\xe3\x49\x85\x25\x24\xe9\xe1\xaf\xed\x71\x54\xd5\xc6\xfd\xa3\x17\x62\xa5\x21\xff\xb4\x36\x9b\xc1\xa7\x34\xad\x8e\x34\xc7\xe7\xe1\xe0\x34\x5c\x6a\xab\x6f\x98\xa6\xff\xd0\xae\xfa\x08\xdd\x90\xc9\xe4\xd9\xfa\x25\xde\xf0\x88\x79\x27\xe3\xb7\xfc\x35\x84\x7e\x18\xfd\x17\x00\x00\xff\xff\xa1\x32\x94\x0f\x97\x10\x00\x00"

func switchboardAdd_vault_capabilityCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardAdd_vault_capabilityCdc,
		"switchboard/add_vault_capability.cdc",
	)
}

func switchboardAdd_vault_capabilityCdc() (*asset, error) {
	bytes, err := switchboardAdd_vault_capabilityCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/add_vault_capability.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x7e, 0x38, 0xd4, 0x9a, 0xb3, 0xee, 0x32, 0x59, 0xf2, 0x18, 0x1c, 0x9b, 0x60, 0x0, 0xd4, 0xc, 0xeb, 0x97, 0x69, 0x2d, 0x37, 0x92, 0x20, 0xdd, 0x92, 0x2e, 0xa, 0xb1, 0x32, 0x87, 0x1d, 0xfd}}
	return a, nil
}

var _switchboardAdd_vault_wrapper_capabilityCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x4d\x6f\xdb\x30\x0c\xbd\xfb\x57\x10\x3e\x74\x36\x50\xd8\xf7\xa0\x1f\xeb\xb2\x75\xa7\x0d\x43\x1b\x74\x67\x46\xa6\x6d\xa1\x8e\x64\x48\x74\x9c\xa0\xc8\x7f\x1f\xe4\x4f\x79\x4b\x82\xf9\x90\x58\x09\xa9\xc7\xf7\x1e\x49\xb9\xab\xb5\x61\x08\x9f\x1b\x55\xc8\x6d\x45\x1b\xfd\x4e\x2a\x0c\xce\xfe\xfc\xda\x4a\x16\xe5\x56\xa3\xc9\xe6\x88\x6f\x07\xdc\xd5\xd7\xf3\x7e\x10\x63\x86\x8c\x6f\x92\x5a\x1b\x06\x41\x9a\xa6\xb0\x29\xa5\x05\x36\xa8\x2c\x0a\x96\x5a\x81\xb4\x80\xc0\xb4\xab\x2b\x64\x82\x5c\x1b\x77\xf4\xfe\xe7\x12\x19\x84\x6e\xaa\x0c\xb6\x04\x8d\xa5\x0c\xb6\x47\x40\x75\xd4\x8a\x80\x35\x60\x96\x01\x82\xa2\x16\xf6\xd8\x54\x0c\xad\xc1\xba\x26\x03\x02\x6b\xdc\xca\x4a\xf2\xb1\xc3\x65\x0d\x5c\x92\x34\x60\x67\x32\x60\xc8\xea\xc6\x08\x72\x11\x81\x0f\xfa\x11\x04\x00\x00\x15\x31\xb0\x63\xf2\xac\x4d\x8b\x26\x23\xb3\x9e\x6e\x5d\xc1\xfc\x7e\x77\xf3\xb1\x20\x9e\xbc\x90\x20\xb9\x27\x73\x7a\x98\xee\xf1\x70\x5f\x28\x5f\x01\xdc\x5c\xd2\x38\xf1\xde\xfb\x3a\x6a\x43\x35\x1a\x8a\xac\x2c\x14\x99\x15\x60\xc3\x65\xf4\x45\x1b\xa3\xdb\x37\xac\x1a\x8a\xe1\xe6\x49\x08\xdd\x28\x8e\xc7\xd2\x47\xd8\x4e\x94\xaf\xc8\x08\xf7\xe0\x5b\x96\x38\xee\xd5\x9e\xd6\x5a\xb1\x41\xc1\xce\xa3\x68\xd4\x63\x73\xac\x69\x05\x4a\x56\xb7\xb0\x97\xd4\xf6\x47\xf7\x79\x77\xd9\xdf\xe4\x79\xf3\x36\x62\x3d\x44\x71\x3c\x55\xe1\x9e\xc7\x47\xa8\x51\x49\x11\x85\xeb\xce\x49\xa5\x19\x8a\xb1\x3a\x70\x77\x74\x40\x9d\xfd\x5c\x12\x88\xa1\xaa\x30\x9e\xd9\xa4\x29\x7c\x77\x7e\x94\xd4\x7b\xe2\x82\x7b\x53\x3c\xaf\x21\x37\x7a\xd7\xc5\xf4\x5a\x7d\xb2\x80\xbd\x32\xd3\x3d\x96\xaa\x3c\xb9\xe4\x2a\xdc\x0f\x89\xc9\x74\xa7\x24\x9b\x14\xc4\x57\x3c\x8e\x16\x5c\xdd\x33\xa9\x9e\x98\x21\xea\x17\x72\xb9\x08\x5b\x32\x5b\x97\x24\xde\x41\xe6\x5d\xe9\x63\x8e\xcf\x8b\x0e\xd2\xb2\x9d\x52\xd0\x5a\x32\xbc\x04\xbe\x4a\x2c\x11\x0e\x21\x8a\x6f\x17\x29\x3b\xb2\x16\x0b\x5a\x41\xf8\xda\xb1\x86\x4c\x93\xed\xdc\x29\x71\x4f\x80\xd0\x6a\xf3\x2e\x55\x01\xf9\x40\x7d\x90\xfe\x4c\x85\x61\x70\x9e\x99\xf3\x0c\xc1\x50\x4e\x86\x94\xa0\x61\x10\x07\x95\xad\x3f\x16\x4b\x87\x96\xf3\x32\xfb\x62\x59\x1b\x2c\x28\xd9\x76\xed\x7f\xf7\x5f\x53\x74\xc6\x21\xd7\x27\x2b\xb8\x9c\xdc\xa3\xfc\xeb\xda\xd9\x56\xee\x6b\x59\x92\xf4\xea\x1f\xbb\xf8\xd4\x7f\xd1\x81\x44\xc3\xe4\x4f\x6a\x9a\xc2\x53\x96\xf5\xad\x3f\x7b\x3e\x4a\xe5\x6d\xac\xc6\x3a\x37\x30\xcb\x7e\x52\xdb\x8d\x1b\xec\x88\x4b\x7d\x55\xbb\xc4\x0b\xff\xdd\x6f\xc7\xa5\x1e\xc2\x5b\x6a\x57\x9b\x68\xd9\x3c\x3c\xaf\x85\xcf\x8b\xd5\xd2\x21\x3d\x44\xf1\xdf\x1d\x71\x0a\x82\x53\xf0\x27\x00\x00\xff\xff\x77\x92\x43\x58\x79\x06\x00\x00"

func switchboardAdd_vault_wrapper_capabilityCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardAdd_vault_wrapper_capabilityCdc,
		"switchboard/add_vault_wrapper_capability.cdc",
	)
}

func switchboardAdd_vault_wrapper_capabilityCdc() (*asset, error) {
	bytes, err := switchboardAdd_vault_wrapper_capabilityCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/add_vault_wrapper_capability.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x6d, 0xce, 0x5, 0x41, 0x8, 0x23, 0xfc, 0x9a, 0xe6, 0xd1, 0x1e, 0xbb, 0x18, 0xb9, 0xa0, 0xe0, 0xbd, 0x4c, 0xb2, 0xcc, 0xd3, 0x28, 0xa5, 0x18, 0x4d, 0x7b, 0x68, 0xee, 0x92, 0xc3, 0xe3, 0xf4}}
	return a, nil
}

var _switchboardBatch_add_vault_capabilitiesCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x5d\x6b\xc3\x36\x14\x7d\xf7\xaf\x38\xe4\xa1\x38\x50\x9c\xf7\xd0\xb4\xb4\xdd\xba\xa7\x8d\xb2\x85\xbc\x94\x42\xaf\xad\x9b\x58\x4c\x91\x8c\x74\x9d\x34\x8c\xfe\xf7\x21\xdb\x71\xe4\x91\xc0\xf4\x60\x64\xeb\x7e\x9c\x7b\xce\xb1\xf4\xbe\x71\x5e\x30\x7b\x6b\xed\x4e\x97\x86\xd7\xee\x6f\xb6\x7f\x1d\xb5\x54\x75\xe9\xc8\xab\x59\x76\x8e\xf8\xf5\x9b\xf6\xcd\x10\x70\xf9\x3a\xc9\xfb\x9d\x85\x14\x09\x6d\x34\x1f\xc3\x2c\xcb\x16\x8b\x05\xd6\xb5\x0e\x10\x4f\x36\x50\x25\xda\x59\xe8\x00\x82\xf0\xbe\x31\x24\x8c\xad\xf3\xf1\x35\x39\x97\x9a\x04\x95\x6b\x8d\x42\xc9\x68\x03\x2b\x94\x27\x90\x3d\x39\xcb\x10\x07\x52\x0a\x81\x0f\xec\xc9\xc0\xf2\x11\xdb\x01\x01\x24\x42\xe8\x7a\x1e\xa8\x35\x12\xee\x51\xb2\x71\x76\xa7\xed\xae\xcb\x43\xc5\x5e\x48\x5b\x7c\x3d\x2b\xe5\x39\x84\xaf\xf8\x59\x6a\xd6\x1e\xe1\x32\x31\x3c\x07\xd7\xfa\x8a\x8b\x58\x2b\x4b\xa1\xe5\xd4\x27\x2e\x31\x54\x98\xe3\x9f\x2c\x03\x00\xc3\x02\x4e\x08\xda\x44\x04\xef\x24\xf5\x12\xef\x6d\x69\x74\x15\xf7\x63\xe4\xe1\x7c\x1a\x96\xf8\xb8\x9c\x7f\x8e\x01\x09\x9c\x3f\x79\xbb\x04\xee\x6e\xe9\x53\x24\xfb\x1e\x4a\xe3\xb9\x21\xcf\x79\xd0\x3b\xcb\x7e\x09\x6a\xa5\xce\x5f\x9c\xf7\xee\xb8\x21\xd3\xf2\x1c\x77\xcf\x55\xe5\x5a\x2b\x23\xfa\x09\xae\x5f\x48\x08\x2b\xa4\x72\x17\x91\x12\x73\xe0\x57\x67\xc5\x53\x25\x51\xdf\xfc\x4c\xd3\xfa\xd4\xf0\x12\x56\x9b\x7b\x1c\x34\x1f\xfb\xd7\xf8\x7c\xb8\xed\x8d\xe2\x6d\xbd\x39\xf7\x7a\xcc\xe7\xf3\x11\x45\x5c\x4f\x4f\x68\xc8\xea\x2a\x9f\xbd\x76\x2e\xb0\x4e\xb0\x3b\xa3\x43\xac\xd1\x35\xea\xac\x23\x35\xa3\x1a\x50\xcd\xe6\x97\x69\x16\x0b\xfc\xc6\xd2\x1d\x0f\xb2\xf4\xf6\x18\x8a\x34\x24\x35\xb6\xde\xed\x27\x05\xc6\xec\xc0\x66\x5b\x5c\x95\x13\xab\x0b\x49\x85\xe7\x8a\xf5\x81\xfd\xa8\x2d\x90\x02\x78\xb6\x0a\x41\x9c\x67\x68\x81\xb6\x5d\x2b\xf2\x9e\x4e\x70\x5b\x34\x9d\xea\x1d\x90\xd0\x5b\xfe\xa8\x8d\x89\x8e\x6f\x28\x44\xcf\xf7\xd6\x4c\xeb\xa5\x1e\xdd\xb3\xd4\x4e\x4d\x01\x5f\x5c\x85\x15\x3e\x3e\x6f\x1d\x16\xd4\x34\x6c\x55\x7e\x7b\xc8\xf9\x95\x61\x22\x9b\x04\xcf\x5b\xf6\x6c\x2b\x1e\xe0\xa1\x37\x59\x48\xb1\x4d\xfb\x4e\x9d\x8c\xd5\x90\x51\x44\x62\x68\xc7\x45\xd9\x19\xf3\xe1\x7f\xf9\xfb\x31\x9f\xf8\x24\xae\xa8\xe1\x12\xb7\x93\xfb\x2e\x89\x40\xfd\x9a\x5f\x35\x59\x8f\x65\x3a\x64\x82\x7f\xd6\xf3\xd2\x3d\x7e\x7a\xab\xf1\x37\x57\xad\x70\xfa\x1f\x45\xe1\x95\xea\x7d\x45\x0d\x95\xda\x68\x39\x8d\x74\x25\x12\xb6\x21\x5e\x4c\xa4\xd4\x1f\x7c\xec\xa8\xbf\x2a\xea\x94\xbf\x22\x09\x0f\x2f\xa7\xce\x91\x79\xd3\x5f\x24\xff\x91\xf9\x1e\xe3\x65\x35\x6c\x86\xdf\xe3\x27\xcb\x7e\xb2\x7f\x03\x00\x00\xff\xff\xeb\x06\x40\x63\xf7\x05\x00\x00"

func switchboardBatch_add_vault_capabilitiesCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardBatch_add_vault_capabilitiesCdc,
		"switchboard/batch_add_vault_capabilities.cdc",
	)
}

func switchboardBatch_add_vault_capabilitiesCdc() (*asset, error) {
	bytes, err := switchboardBatch_add_vault_capabilitiesCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/batch_add_vault_capabilities.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd6, 0xda, 0x9e, 0x7a, 0x33, 0xe5, 0xbe, 0x33, 0x81, 0xd7, 0x14, 0x9a, 0xba, 0x9f, 0x46, 0x8c, 0x5f, 0xa6, 0x38, 0xdc, 0x47, 0xf1, 0x1a, 0x87, 0xce, 0x23, 0xaf, 0xc9, 0x12, 0x74, 0xb3, 0x5d}}
	return a, nil
}

var _switchboardBatch_add_vault_wrapper_capabilitiesCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\x4d\x6f\xe3\x38\x0c\xbd\xfb\x57\xbc\xcd\xa1\x75\x80\xc0\xb9\x07\xfd\xd8\xb6\xbb\xdd\xd3\x2e\x8a\x6d\xd0\x39\x14\x05\xc2\xd8\x74\x2c\x8c\x23\x09\x12\x9d\x34\x18\xf4\xbf\x0f\x24\x3b\x89\xdd\x49\x80\x4e\x0e\x8e\x2d\x92\xe2\x7b\xe4\x23\xd5\xda\x1a\x27\x18\x3d\x36\x7a\xa5\x96\x35\xcf\xcd\x77\xd6\xcf\x5b\x25\x79\xb5\x34\xe4\x8a\x51\xb2\xf7\xf8\xfb\x9d\xd6\xb6\x73\x38\x9e\x0e\xe2\xfe\x65\xa1\x82\x84\x5e\x14\x6f\xfd\x28\x49\xa6\xd3\x29\xe6\x95\xf2\x10\x47\xda\x53\x2e\xca\x68\x28\x0f\x82\xf0\xda\xd6\x24\x8c\xd2\xb8\xf0\xd9\xb3\x4b\x45\x82\xdc\x34\x75\x81\x25\xa3\xf1\x5c\x60\xb9\x03\xe9\x9d\xd1\x0c\x31\xa0\xa2\x80\xe7\x0d\x3b\xaa\x91\x93\xa5\xa5\xaa\x95\x28\xf6\x6d\xa0\x35\x4a\x4b\x4c\x2c\x06\x65\x07\x0e\x12\xd0\x61\x43\x4d\x2d\x1e\xa6\x04\xa1\x50\x65\xc9\x8e\xb5\x60\x31\xdf\x59\x5e\x80\x74\xc8\x57\x1b\xbd\x8a\x49\x90\xb3\x13\x52\x1a\x8b\xbb\xa2\x70\xec\xfd\x62\x12\xce\xa5\x62\xe5\xe0\x8f\xf5\x81\x63\x6f\x1a\x97\x73\x16\x92\x26\x7d\x22\x29\xb5\x91\x33\x74\x57\x8c\xf1\x23\x49\x00\xa0\x66\x69\xc1\x3c\x91\x54\x7e\x86\xd7\xa7\x66\x59\xab\x3c\x7c\xbd\x0d\x1d\x02\xb6\xe0\x10\xfe\x8f\xa6\x5e\xfe\xff\xb9\x9c\x01\x17\xe7\xda\x97\xf5\xde\xdb\xdc\xd6\xb1\x25\xc7\xa9\x57\x2b\xcd\x6e\x06\x6a\xa4\x4a\xef\x8d\x73\x66\xfb\x42\x75\xc3\x63\x5c\xdc\xe5\xb9\x69\xb4\x1c\xe0\x0e\x10\xfd\x45\x42\xb8\x46\x5f\x0d\x59\xa8\x41\xbd\xe1\x07\xa3\xc5\x51\x2e\xa1\xfd\xe9\xbe\x2e\x01\xf9\x0c\x5a\xd5\x13\x6c\x14\x6f\xdb\xcf\xf0\xbc\x3a\x2f\x9d\xec\x71\xfe\xb2\xcf\x75\x93\x8e\xc7\x20\xff\x07\xbe\xe6\x7e\x7b\x40\x1c\x7e\xb7\xb7\xb0\xa4\x55\x9e\x8e\x1e\xa2\xa0\xb4\x11\xac\xf6\x4c\x10\x2e\x88\xa0\xa2\x0a\xa5\x62\xe4\x1d\x83\xd1\xf8\xc8\x7c\x3a\xc5\xb3\x18\xc7\xd1\xa1\xa3\x8d\x08\x02\x8e\x73\x56\x1b\x76\x97\x1e\x36\x76\x10\x96\xa4\x82\xd2\xd1\x97\x9c\xa3\x5d\x50\x5b\x67\xeb\xdf\x18\xfc\x3a\xc5\x6e\x55\x5d\x07\xa5\x5b\xf2\x41\xeb\xad\xc8\x06\x12\x5b\xb3\x54\xa6\x38\x84\x7b\xae\xcb\xec\x28\x1f\x5c\xe3\xf5\xed\x9c\x31\x23\x6b\x59\x17\xe9\xa1\x75\xd9\x1e\x73\x30\x7f\x89\xe5\xa5\x87\xec\x2c\xff\xc2\x2a\x1c\x9e\xa6\xd0\xbf\xf4\x77\xe8\x44\xb1\x9f\xa3\x13\x8d\x7b\x3a\x51\x3f\x7f\x0e\x34\x18\x15\x10\xc4\xd2\xc5\xf6\x41\xfc\xc3\x02\x82\xe3\x38\xf1\x39\x1f\x40\xc5\x11\xf0\x7d\x70\xc3\xc4\xc3\x39\xc3\x75\x17\x91\x79\x31\x8e\x56\x9c\x2d\xe3\xd8\x5c\x7d\x69\xfa\x6e\xd2\x81\x32\xc3\xaf\x74\x66\x3d\xc3\xf9\xe0\x36\x4b\x68\xd4\x20\x74\x7c\x52\xd6\x2d\x96\x21\xc9\x1e\xfe\x51\x5b\x97\xf8\xf8\x68\xdb\xce\xef\x9c\x37\xc2\xfd\x29\x9f\x4e\xc3\xae\x6a\x47\x61\xbf\x5a\x77\xa9\x62\x3f\x3e\xd5\xc8\xc6\x2b\xbd\x0a\xfb\xf8\x3f\xde\xc6\xf2\x7f\x73\xa1\x3f\xce\xdf\xef\x06\xa0\x4f\xd4\x32\x3b\x1b\x35\x2c\x93\x6d\x17\xe4\x27\x55\x4f\x30\x70\x92\x76\x49\x7e\xd2\xca\x64\xe0\x73\xd8\xc5\xdd\xcb\xc1\xd8\xcd\xc0\x47\x92\x7c\xfc\x0c\x00\x00\xff\xff\x54\xf1\x3b\x37\x0c\x07\x00\x00"

func switchboardBatch_add_vault_wrapper_capabilitiesCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardBatch_add_vault_wrapper_capabilitiesCdc,
		"switchboard/batch_add_vault_wrapper_capabilities.cdc",
	)
}

func switchboardBatch_add_vault_wrapper_capabilitiesCdc() (*asset, error) {
	bytes, err := switchboardBatch_add_vault_wrapper_capabilitiesCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/batch_add_vault_wrapper_capabilities.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x80, 0xd, 0xb9, 0x60, 0x6c, 0x4f, 0x3a, 0xbb, 0x97, 0x52, 0x37, 0x84, 0x7e, 0x37, 0xf9, 0x95, 0xc, 0x40, 0x74, 0x9f, 0x33, 0xe6, 0x1b, 0x6e, 0xe9, 0xd9, 0x93, 0xec, 0x6c, 0x94, 0x72, 0x5c}}
	return a, nil
}

var _switchboardRemove_vault_capabilityCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x93\x4f\x6f\x9b\x40\x10\xc5\xef\x7c\x8a\x27\x1f\x5c\xb8\xc0\x1d\xa5\x89\x5a\xab\xed\x35\x72\xa2\xdc\x87\xf5\x00\xab\xc2\x2e\xda\x1d\x9c\x58\x91\xbf\x7b\xb5\x10\xf3\x47\xb5\xdb\xec\xc5\x36\xde\x99\xf7\xde\x8f\x19\xdd\x76\xd6\x09\x36\x3f\x7b\x53\xe9\xa2\xe1\x67\xfb\x9b\xcd\x26\xba\xfa\xf8\xe9\x55\x8b\xaa\x0b\x4b\xee\x30\xdf\xf8\xf1\x46\x6d\x37\xd5\x45\x59\x96\xe1\xb9\xd6\x1e\xe2\xc8\x78\x52\xa2\xad\x81\xf6\x20\x08\xb7\x5d\x43\xc2\x28\xad\x0b\x3f\x17\xff\x4b\x4d\x02\x65\xfb\xe6\x80\x82\xd1\x7b\x3e\xa0\x38\x81\xcc\xc9\x1a\x86\x58\x38\x6e\xed\x91\x51\x7e\x98\x81\x04\x31\x1c\xa9\x6f\x64\x10\x54\xd4\x51\xa1\x1b\x2d\x27\x94\xce\xb6\x90\x9a\xb5\x83\x9f\xed\xc2\xb1\xb7\xbd\x53\x1c\xae\x47\x0b\xe9\xb8\x23\xa9\x73\x3c\xf6\x45\xa3\xd5\x23\x49\x9d\xe0\x3d\x8a\x00\xa0\x61\x01\x2f\xb2\xbd\x04\xb5\xdd\x28\x24\xa7\x1c\xbb\x49\xf3\x6e\xfb\xbe\xc2\x94\xee\x59\xb1\x3e\xb2\x3b\xdf\x4f\x9d\x16\x5e\xf6\x5c\xe6\xc0\xf6\x16\xd9\x74\xf1\x7d\x74\xd2\x39\xee\xc8\x71\xec\x75\x65\xd8\xe5\xa0\x5e\xea\xf8\xbb\x75\xce\xbe\xbe\x50\xd3\x73\x82\xed\x37\xa5\x6c\x6f\x64\x32\x1f\x4e\x96\xe1\x17\x4b\x60\x71\x8d\x0f\xc6\x6e\x5f\x3c\x68\xac\x9d\xea\x3c\x37\x65\x7a\x3b\x39\xbe\x7e\x94\xa6\x53\x57\xcd\x3e\xad\x58\xfe\xc1\x61\xc0\x9c\x4c\x12\xe1\x3c\x3c\xa0\x23\xa3\x55\xbc\x79\x1a\xda\xe1\x60\xd9\xc3\x58\x41\x4d\x47\xc6\xa5\x76\xc1\x19\x24\xa8\xf4\x91\x0d\x42\xb7\x4d\xf2\x57\x54\x82\xe3\x92\x1d\x1b\x35\x4c\xcd\x9c\xd2\x2f\xf9\xaf\x83\xae\x5f\xcc\x1c\xce\x8b\x75\x54\x71\x5a\x0c\x9c\xef\x3e\xf5\xba\xee\xe3\x55\xc2\x70\x02\xee\x1c\xb7\x8b\x47\x95\x30\x78\xab\xd2\x64\x81\x67\x37\xec\x45\x00\x33\x7a\x59\x87\x5c\xf8\xbf\x10\x39\x8f\x1f\xfc\xc6\xaa\x17\x9e\x47\x22\xcb\xb0\x1f\x17\xe9\xe6\x4c\x2c\x36\xa6\xf7\xda\x54\xc3\xd3\x74\x5c\xbf\x61\x0c\xe2\x04\x2d\x4b\x6d\x2f\x14\xaf\x30\x5c\x5d\x9f\x55\xf2\xff\x0d\xd6\xec\xfe\x1c\xfd\x09\x00\x00\xff\xff\xeb\x2f\x91\x93\x96\x04\x00\x00"

func switchboardRemove_vault_capabilityCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardRemove_vault_capabilityCdc,
		"switchboard/remove_vault_capability.cdc",
	)
}

func switchboardRemove_vault_capabilityCdc() (*asset, error) {
	bytes, err := switchboardRemove_vault_capabilityCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/remove_vault_capability.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x3a, 0x27, 0x93, 0x3e, 0xb, 0xd6, 0xca, 0x79, 0x7d, 0x92, 0x6d, 0x5a, 0x17, 0xc2, 0x32, 0x74, 0x84, 0x14, 0x4f, 0x19, 0x6b, 0x5, 0x19, 0x2, 0xfc, 0x15, 0x7b, 0x32, 0x84, 0x68, 0x42, 0x48}}
	return a, nil
}

var _switchboardSafe_transfer_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x55\x4d\x6f\xe3\x46\x0c\x3d\xc7\xbf\x82\xeb\x43\x22\x01\xae\x72\x29\x7a\x30\x92\x2c\xb6\x49\xd3\x53\x81\xc5\xd6\x4d\xcf\xb4\x86\x92\xa6\x2b\x0f\x85\x19\xca\x8a\x11\xe4\xbf\x17\x33\xa3\xcf\xcd\xba\xcd\xe6\x10\x7b\x24\x0e\xf9\xde\xe3\x23\xad\x0f\x0d\x5b\x81\xf5\x63\x6b\x4a\xbd\xaf\x69\xc7\x5f\xc9\xac\x57\xdf\x7d\xfc\x67\xa7\x25\xaf\xf6\x8c\x56\x4d\x11\xbf\x3d\xe3\xa1\xf9\xef\x7b\x7f\x90\xa0\x42\xc1\x27\x4d\x9d\x5b\xaf\x56\xd7\xd7\xb0\xab\xb4\x03\xb1\x68\x1c\xe6\xa2\xd9\x80\x76\x80\x20\x74\x68\x6a\x14\x82\x82\xad\x3f\xce\xde\x4b\x85\x02\x39\xb7\xb5\x82\x3d\x41\xeb\x48\xc1\xfe\x04\x68\x4e\x6c\x08\x7c\x46\x61\x70\x64\x14\x88\xaf\xe8\xfc\x11\x0d\x4b\x45\x16\x30\xcf\xb9\x35\x02\x52\x59\x6e\xcb\x0a\x10\xdc\x44\x04\x5a\xa7\x4d\x09\x52\x11\x38\x2c\xe8\x81\x1a\x76\x5a\x7c\xc2\x03\x49\xc5\x2a\x8b\x50\xe3\x01\x3a\x5d\xd7\x60\x58\xa0\x41\xa3\x73\xd0\x45\xbc\x38\x4b\xa7\x98\x5c\x88\xa8\xf0\x48\xfe\xad\x4f\x95\x63\x83\x7b\x5d\x6b\x39\x05\x98\xc2\x36\xbc\x02\x45\x4e\x5b\x52\xf0\xb8\xdb\x80\x25\x69\xad\x19\xb0\xa8\x88\x83\x14\x1c\xb1\xad\x05\xb4\x71\x42\xa8\xb2\xa8\x1d\x41\xa7\xa5\x52\x16\x3b\xc0\x43\xe0\x86\x9e\x79\x45\x23\xd7\xc2\xf2\x01\x4a\x92\x4f\xfd\xb9\x1b\x94\xf3\x41\x0d\x5a\x3c\x90\x90\x75\x83\x72\xfe\xe9\x4c\xed\x6c\x35\x3b\x24\xc2\x5b\xf8\xa4\x94\x25\xe7\x36\x7d\xbd\x2d\xfc\xf5\xa8\x9f\x7f\xf9\x39\x85\x97\xd5\x0a\x00\xa0\x87\x65\xa9\x20\x4b\x26\xa7\x21\x69\x44\x1f\xd0\xc4\xca\x27\xb2\x57\x6e\x80\x19\xae\xd6\x24\x31\xec\x0b\x15\x5b\xc0\x56\xaa\x64\xe1\x9e\xec\xef\x9e\x6b\x0a\x97\x73\xb3\x65\x4f\xfe\x52\x2c\xdf\x58\x6a\xd0\x52\xe2\x74\x69\xc8\xf6\x59\x7e\x65\x6b\xb9\x7b\xc2\xba\xa5\x14\x2e\x7b\x25\x46\xc4\x8b\xd2\x0f\x28\x08\xb7\xb0\x48\x6f\xc9\x71\x7d\xa4\x7b\x36\x62\x31\x17\x6f\xde\xc4\x3f\x6b\x6d\x4e\xbb\x53\x43\x5b\x30\xba\xde\xc0\x51\x53\x17\x8f\xfe\xff\xcd\x79\xe3\x67\x8f\xbb\xa7\xa1\xd6\x5d\x92\xa6\x23\x0a\xff\xf7\xf1\x63\xb4\x54\xb2\xbe\x0f\x9d\xf2\x0e\x2a\x07\x74\xe0\x73\x84\x42\x61\x30\xbc\x90\x79\x8f\x6a\x9d\x4e\x6c\xae\xaf\xe1\x77\x12\xc0\xb7\x5d\x88\xb2\x5c\xb9\x68\xbd\xde\x53\xe3\x3d\x47\x75\x91\x0d\x1d\x80\xdb\x3e\x3a\xf3\xb1\x58\x52\xb6\x0f\x32\xde\xfc\x68\x63\xee\x12\xdf\xf5\xed\xa4\xef\x90\xf0\x33\x4a\x95\xae\x2e\x2e\x2e\xbe\xc7\x39\x16\x7b\xcb\x80\xbb\x48\x20\xa4\xfe\x30\xb0\x7e\x8d\x1f\xf4\x4c\x79\x2b\x34\xef\x6c\xaf\x85\x04\x4f\xe6\xba\xd1\x64\xe4\xca\x41\xd3\xee\x6b\x9d\x8f\x53\xc2\xfb\x7f\x28\x97\x85\x1d\xc6\x68\xb8\x9d\xcd\x4f\x22\x9c\x2e\x6d\xe3\xc8\x48\x00\x03\x37\x3f\x2d\x15\xcc\x86\xd9\x4c\x86\x59\x89\x9f\xef\xea\xd4\x1c\xec\x6c\xdd\xc2\x17\xca\x49\x1f\xc9\x2e\x31\x4c\x01\xb1\x73\xe3\xed\xac\x24\xb9\x1f\x97\x4e\x72\x6e\x8b\x67\x9f\x83\x1e\xb1\x23\x73\x3b\x0e\x4d\xbf\x3c\x7b\x73\xf6\xfd\xe5\x3d\x41\xb1\xd2\xeb\x5d\xf2\xff\xad\x8f\x4c\x97\xda\xcc\xa8\x7e\x58\xa7\x1e\xe2\x42\xcd\x7e\x6d\x07\x09\x8b\xd6\x28\x07\xe1\x27\x63\xb1\x9a\x37\xc3\xba\xee\x77\xeb\xb4\xaa\x73\xf6\xde\x95\xb8\x1c\xe7\x9b\x3e\xee\xe4\x29\xeb\xbc\x64\xbf\x91\x81\x8b\x48\xe5\xab\x36\xe5\x06\x1c\x43\x47\xfd\xee\x67\xcf\x85\x3d\x15\xa9\xd8\x7d\x9b\x42\x17\xa1\x87\x86\xe5\x61\xd8\xf5\x93\x9f\x16\x8d\xcd\x66\x3f\x4c\xfd\x50\x05\xcf\xf5\x06\x3c\xeb\xb7\xf4\x65\xd1\xd3\xa5\x49\xd5\x37\xf9\xde\xe0\x98\x0c\xf1\x3a\x49\xad\xc8\x89\xe5\x53\xcc\x35\x22\x18\x87\xf1\x75\xf5\x6f\x00\x00\x00\xff\xff\x41\xd1\x76\x1e\x4f\x08\x00\x00"

func switchboardSafe_transfer_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardSafe_transfer_tokensCdc,
		"switchboard/safe_transfer_tokens.cdc",
	)
}

func switchboardSafe_transfer_tokensCdc() (*asset, error) {
	bytes, err := switchboardSafe_transfer_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/safe_transfer_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xce, 0x35, 0x81, 0x26, 0xa2, 0xb8, 0x6b, 0x6, 0x4, 0xfc, 0xee, 0xa, 0xcb, 0x26, 0x20, 0xfe, 0x28, 0x6e, 0x3b, 0xb5, 0x8c, 0xee, 0x19, 0x73, 0x5d, 0x7a, 0xd8, 0x24, 0x74, 0x75, 0xcd, 0x59}}
	return a, nil
}

var _switchboardSafe_transfer_tokens_v2Cdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x55\x4b\x6f\xe4\x36\x0c\x3e\x67\x7e\x05\x33\x87\xc4\x06\x76\x3d\x97\xa2\x87\x41\x1e\xdd\xdd\x36\x3d\x15\x58\x6c\xd3\xe9\x99\x96\xe9\x31\xbb\x1a\xc9\x90\xe8\x38\xc6\x22\xff\xbd\x90\xe5\x67\x1e\x45\xea\xc3\x18\xb2\xc8\x8f\x8f\xef\x23\x87\x4f\xb5\x75\x02\xdb\xbb\xc6\x1c\x39\xd7\x74\x6f\xbf\x93\xd9\x6e\x5e\xfd\xfc\x67\xcb\xa2\xaa\xdc\xa2\x2b\x66\x8b\xdf\x1e\xf1\x54\xff\xb7\xdf\x1f\x24\x58\xa0\xe0\x81\xa9\xf5\xdb\xcd\x66\xb7\xdb\xc1\x7d\xc5\x1e\xc4\xa1\xf1\xa8\x84\xad\x01\xf6\x80\x20\x74\xaa\x35\x0a\x41\x69\x5d\x38\x2e\xee\xa5\x42\x01\x65\x1b\x5d\x40\x4e\xd0\x78\x2a\x20\xef\x00\x4d\x67\x0d\x81\x58\xf0\x64\x0a\x90\x10\xce\x87\x23\x1a\x2b\x15\x39\x40\xa5\x6c\x63\xa4\x8f\x29\x95\xb3\xcd\xb1\x02\x04\x3f\x57\x02\x8d\x67\x73\x04\xa9\x08\x0a\xaa\xad\x67\x81\x13\x49\x65\x0b\xc8\x1b\x81\x9c\x4a\xeb\xa6\x9b\x60\xd8\x12\xb4\xac\x35\xd0\x63\xad\x59\xb1\xe8\x0e\x54\x45\xea\x3b\xb4\x15\xf5\x11\x1d\x29\xe2\x07\x36\xc7\x3e\xa6\xc2\x1a\x73\xd6\x2c\x5d\xa8\x30\xb7\xce\xd9\x16\x73\x4d\x60\x1d\x18\x2b\x80\xa6\x00\x2e\xa1\x23\x1f\x52\x30\xc0\x12\xe1\xc7\x5c\x42\x5e\x0f\xd8\x68\x09\x45\x85\x43\x84\x27\xb7\x40\xce\x42\xa4\xcd\xa2\x59\x89\xd8\x3d\x7c\x2a\x0a\x47\xde\x7f\x00\x3c\x85\x0e\xec\xe1\xaf\x3b\x7e\xfc\xf9\xa7\x14\x7e\x6c\x36\x00\x00\x3d\x09\x01\xaf\x24\x47\x46\xd1\x18\x20\x46\x2b\x9d\x3d\xf5\xc7\x1a\x3b\x72\x97\x7e\x6a\x64\x70\xd5\x24\xd1\xec\x1b\x95\x7b\xc0\x46\xaa\x64\x45\x78\xf6\x37\x4b\x55\x38\x6c\x53\xb8\x58\xea\x23\x3b\x04\xa7\x18\xbe\x76\x54\xa3\xa3\xc4\xf3\xd1\x90\x1b\x50\x3e\xf7\xfd\x39\xa0\x6e\x28\x85\x8b\x4f\x31\xe4\x94\xf1\x2a\xf4\xaf\x28\x08\xd7\xb0\x82\x77\xe4\xad\x7e\xa0\x2f\xd6\x88\x43\x25\x41\x6f\x49\xf8\xd6\x38\x45\xf7\x5d\x4d\x7b\x30\xac\x3f\xc0\x03\x53\x1b\x8f\xe1\xf7\xea\x6d\xad\x66\x77\xf7\x87\x31\xd6\x4d\x92\xa6\x80\xfe\x1c\xde\x67\x7e\x3b\x65\x1c\x9e\xdb\x5b\xa8\xd1\xb0\x4a\xb6\x5f\x7a\x05\x07\xe6\x8f\x63\x25\x10\x00\xfa\xa4\x7a\xd9\x87\xa6\xab\xa1\x82\x6d\x3a\x57\xbe\xdb\xc1\xef\x24\x80\x2f\x19\x8b\x2d\xbc\xf4\xe0\xc5\x3a\x2a\x22\xea\xe4\xe7\x49\x97\xd9\xc8\x16\x5c\x0f\xd6\x59\xb0\xc5\x23\x65\x51\x92\x57\xff\x97\xc4\x9b\x24\x28\x64\x3f\x73\x31\x02\x7e\x45\xa9\xd2\xcd\xd9\xd9\xd9\x6b\x35\xc7\x60\x2f\x2b\xb0\x6d\x2c\xa0\x87\x3e\x1f\xab\x7e\x8a\x2f\x7a\x24\xd5\x08\x2d\x55\x30\xf4\x62\x98\x07\xae\x99\x8c\x5c\x7a\xa8\x9b\x5c\xb3\x1a\xa5\x0a\x36\xff\x87\x94\xac\xa4\x33\x59\xc3\x75\x20\x60\x50\x58\x22\x36\x5d\x4b\xcc\x93\x91\x3e\x19\xb8\xfa\xb8\xee\x60\xd6\x0e\x6d\x49\xc6\xb9\x8a\xef\x77\x31\xb5\x4c\x76\xb1\x4d\xbf\xf6\x79\xaf\x13\x98\x6f\x23\x6d\x93\x6b\x36\x0d\x3e\x93\x1f\xe9\xbb\xf8\xf1\xd6\xa6\xce\x5e\xc4\x79\xba\x49\x56\xe2\x0c\xcf\x9b\xde\xd1\x25\x90\xba\xf2\x49\x5f\x95\xf4\x44\xef\xb0\xa2\x56\xf5\x2f\x2a\x3a\xdf\xa6\x01\x64\xd5\xb1\x03\x6a\x2e\xc2\xea\x9f\x97\x5c\x58\xb7\x8b\xfd\x99\x77\xc3\xae\xf6\x58\x52\xdc\x14\x9f\xbb\x30\xc1\x13\x0c\x97\x23\xc9\xd1\x7b\x10\xfc\xaa\x95\xd9\x73\xef\x44\xe6\x55\xf0\xcb\x6b\x42\x4f\xc3\x02\x5a\x16\xff\x0c\x70\x58\xd5\xc3\x40\x5c\x7d\x9c\xb4\x93\x4e\x5e\x4f\x40\xda\xd3\x33\x98\xdd\x0e\xbe\x91\x34\xce\x40\xd9\x98\xa2\xff\xd7\x9a\x26\x79\x94\x30\x97\x73\x37\xd9\xf7\x4d\x56\xd6\x94\x7c\x6c\xc2\xa0\x8b\x1d\x6f\xfb\xae\xf5\x30\xeb\x4c\x57\xca\x7d\x4f\xa2\xe3\xe0\x3d\x6d\xfe\x0d\x00\x00\xff\xff\x1e\xee\x83\xe0\x1a\x08\x00\x00"

func switchboardSafe_transfer_tokens_v2CdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardSafe_transfer_tokens_v2Cdc,
		"switchboard/safe_transfer_tokens_v2.cdc",
	)
}

func switchboardSafe_transfer_tokens_v2Cdc() (*asset, error) {
	bytes, err := switchboardSafe_transfer_tokens_v2CdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/safe_transfer_tokens_v2.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x59, 0x85, 0x2e, 0x4, 0xcf, 0xf2, 0xab, 0xdc, 0xdd, 0x31, 0x4d, 0x67, 0xa9, 0x3f, 0x85, 0xcc, 0x24, 0xa0, 0x6c, 0xf1, 0xb9, 0xa9, 0x62, 0xd3, 0xc9, 0xae, 0x74, 0xfb, 0x3a, 0xdb, 0x10, 0xa2}}
	return a, nil
}

var _switchboardSetup_accountCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x54\x5d\x6b\xe3\x38\x14\x7d\xf7\xaf\x38\xdb\x87\x92\x40\x36\x79\x2f\x6d\x61\x37\xb0\xb0\x6f\x65\xda\x99\xf7\x6b\xf9\x26\x16\x55\x24\x23\x5d\xb5\x35\x21\xff\x7d\x90\x1d\xbb\x76\x26\xce\x74\x3e\x60\x44\xa1\x91\x25\x1d\x9d\x73\xcf\xb9\xd2\xbb\xca\x79\xc1\xd5\x7f\xd1\x6e\x75\x6e\xf8\xc9\x3d\xb3\x7d\x7c\xd5\xa2\xca\xdc\x91\x2f\xae\xb2\xb3\x3b\xae\xb2\x6c\xb5\xc2\x53\xa9\x03\xc4\x93\x0d\xa4\x44\x3b\x0b\x1d\x40\x10\xde\x55\x86\x84\xb1\x71\x3e\x4d\x07\xeb\x52\x92\x40\xb9\x68\x0a\xe4\x8c\x18\xb8\x40\x5e\x23\x41\x91\xad\x9d\x65\x88\x4b\x7f\x54\x14\x20\x0c\x58\xc0\x73\x70\xd1\xab\x76\x43\xc9\xda\x83\x94\x72\xd1\x0a\x82\x6b\x51\xa5\xe4\x1a\x8a\x6c\x02\xf3\xac\x58\xbf\x30\x76\xd1\x88\xae\x0c\x63\x73\xe4\x0e\x49\xe4\x03\x62\xd0\x76\x0b\x42\xfa\x67\x18\xfb\x91\xb6\xe5\xa7\xf6\xb8\x3f\x64\x43\xee\xfb\x2c\x03\x80\xca\x73\x45\x9e\x67\x41\x6f\x2d\xfb\x1b\x50\x94\x72\xf6\xaf\xf3\xde\xbd\x7e\x21\x13\x79\x81\xff\x43\x88\xfc\x28\xce\xd3\x96\xd7\x54\x51\xae\x8d\x96\x7a\xed\xac\x78\x67\x0c\xfb\x05\x1e\x62\x6e\x74\x28\xdf\x17\x17\x78\xa4\x17\x3e\x9e\xff\x6c\xab\xd3\xf5\x39\xae\xff\x69\xf5\xce\x3b\x1e\x69\xac\x56\x58\x97\xac\x9e\xa1\x37\x49\x7f\x5f\x13\x32\x9e\xa9\xa8\x51\x52\x98\xa8\xe3\x02\x9e\x25\x7a\x0b\x26\x6f\xea\x74\x3e\xb8\x1e\x36\xcd\x1a\x75\xcb\xd0\xaa\x58\xe6\x8d\xbe\xdb\xeb\xa9\x94\x2c\x07\xbf\xef\x67\x1b\xef\x76\x37\x98\xde\xdb\x82\x3e\x90\x94\x73\xfc\x75\x07\xab\x0d\xf6\xfd\xe5\x69\xb4\xdc\xfa\x4f\x87\xd1\xe2\x48\xbd\xe7\x14\x34\x82\xe5\xd7\xf3\x79\x21\x5b\xa0\x8a\x02\x2d\xd0\x56\x1c\x8e\x8a\x7a\x90\x13\xa1\x81\x5e\x78\x36\xba\xee\xf6\xef\x69\x25\xaa\xb9\x7e\xf0\x65\x36\x5f\x8c\x0e\x8b\xfb\x58\x1d\xfa\x43\xf3\xb1\xb9\x86\xc9\x83\xdf\x74\x90\x94\xd7\x3e\x0f\x9a\x03\x52\x23\x91\x75\x56\x2b\x32\xa8\x48\xca\x70\xaa\x49\x0d\xb6\x2f\x63\x17\xaa\xd9\x24\x9f\x2e\xf6\x4d\x3a\x55\x63\xcf\xaf\x42\x0e\xa1\xce\xfa\xd6\x20\x28\xf4\xb8\xf5\xb1\xc1\x47\x66\xf2\x5b\xe5\x9a\x86\x4d\x0b\x05\xa7\x89\x0c\xd1\x36\xd1\x76\xcf\x8b\x77\x71\x5b\x36\xfb\xa6\x7a\x3a\xc5\x80\xfd\x86\xd4\x7b\x06\x0c\x4b\xf7\x64\xf8\x35\x55\xb8\x3b\x2b\xb7\x8b\x88\x4e\xed\x7d\x7b\x3d\x85\x7f\x3f\x8e\x4f\x1a\x3f\x94\x80\x36\x05\x97\xea\xde\x55\x7d\x40\x79\x01\x92\x0b\x49\xbb\xe4\xec\x6f\xb0\x25\x77\xd2\xd4\x7c\x08\xb5\xff\xc8\x53\xd1\xf2\x39\x34\x4d\x9a\xd0\xa7\x01\xce\xf9\x17\x46\x06\x86\x53\xd8\x9f\x74\xf2\x22\xd5\x05\xfe\xb8\xeb\xe7\x74\x7e\xc7\xfe\x6f\xba\xf0\x90\x65\x87\xec\x6b\x00\x00\x00\xff\xff\x0c\x98\xe2\x14\xfa\x07\x00\x00"

func switchboardSetup_accountCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardSetup_accountCdc,
		"switchboard/setup_account.cdc",
	)
}

func switchboardSetup_accountCdc() (*asset, error) {
	bytes, err := switchboardSetup_accountCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/setup_account.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa6, 0xad, 0xd5, 0x2a, 0x2a, 0xca, 0x5c, 0xb4, 0x7e, 0xa8, 0xbf, 0x89, 0x5e, 0x54, 0xfc, 0x30, 0xbe, 0xa4, 0xb4, 0xb7, 0x82, 0xf2, 0xcd, 0x40, 0x3d, 0xaa, 0x5b, 0x47, 0xe1, 0xf0, 0xe2, 0x2f}}
	return a, nil
}

var _switchboardSetup_royalty_accountCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x58\x41\x6f\xe3\x36\x13\xbd\xfb\x57\xbc\x2f\x87\x7c\x32\x90\xda\xf7\x20\xc9\x36\x4d\x9b\x45\x2f\xc5\x62\x93\x6d\xcf\x34\x35\xb2\x88\xc8\xa4\x40\x8e\xe2\x35\x82\xfc\xf7\x82\x94\x25\xd3\x4e\x64\x4b\x8e\xd1\xe8\xb0\xeb\x88\xe4\xe3\xbc\xe1\x9b\x27\x92\x6a\x51\x1a\xcb\x38\xbb\xaf\xf4\x5c\xcd\x0a\x7a\x34\x4f\xa4\xcf\x46\xef\xbe\x7e\x58\x2a\x96\xf9\xcc\x08\x9b\x46\x3d\x0a\xb3\xdc\x1d\xa4\x04\xaf\x5f\x8d\x46\xd3\x29\x1e\x73\xe5\xc0\x56\x68\x27\x24\x2b\xa3\xa1\x1c\x04\x98\x16\x65\x21\x98\x90\x19\xeb\xff\x8c\xda\x39\x17\x0c\x69\xaa\x22\xc5\x8c\x50\x39\x4a\x31\x5b\xc1\x43\x09\xbd\x32\x9a\x90\x55\x45\xb1\x82\x23\xae\x4a\x08\x0d\x21\xa5\xa9\x34\x07\x24\x4b\x92\xd4\xb3\xd2\x73\xcc\x0c\xe7\xf0\xe1\x41\xe8\x14\x3f\x1e\x7e\xbf\x03\xfb\xa8\x1c\x04\x83\x73\x82\x13\x0b\xf2\xa0\x65\x35\x2b\x94\x44\x29\x38\x47\xe2\x31\x94\x76\x2c\xb4\xa4\xd0\xcb\x9a\x95\x28\x58\x91\xc3\xb4\xee\x38\xfd\x4a\x9a\xac\x92\xf7\x8f\xdf\xc3\x5c\x64\xc3\xd0\xb1\x87\xfa\xe1\xfc\xcc\x7e\x98\x48\xd3\xbf\x68\xf9\xb7\xa8\x0a\xfe\xc7\x8a\xb2\x24\xeb\x7e\x5b\x7d\xf3\x53\xb8\x4d\x1a\xb1\x20\xce\x4d\x0a\x51\x14\x66\xe9\x1a\x76\x6c\x3c\x67\x0f\x27\x45\x29\x66\xaa\x50\xbc\xc2\x72\x0d\x02\x57\xc9\x1c\xc2\x21\x64\xf8\xde\xd8\xa5\xb0\xa9\x7f\xef\x83\x26\x91\xc2\x64\xf5\xfc\x92\x2b\x51\xd4\x8c\xf1\xec\xc3\x98\x8c\xe2\x1c\x27\x63\xbc\x8c\x46\x00\x50\x10\x23\x6b\x56\x31\x04\x7c\xd7\x4e\x7b\x89\xcd\xef\xab\xf3\x97\x2d\x39\x4c\x1a\xfa\xaf\x37\x1b\x9c\x66\xe9\x8f\xc3\x01\xd0\x42\x45\x69\xfa\x4e\xd9\x25\x70\xde\x25\xc6\x49\xf4\xbb\xa6\x54\x5a\x2a\x85\xa5\xc4\xa9\xb9\x26\x7b\x89\xdb\x8a\xf3\xdb\x5a\x24\x2d\x6d\xff\x4c\xa7\xb8\xcb\x49\x3e\x41\x35\x49\xab\x85\x24\x0a\x4b\x22\x5d\x21\x17\x5e\xa9\x41\x43\x81\x50\x3b\x50\x65\xa8\xb1\x27\x33\x63\xad\x59\x5e\x9d\xb7\x75\x30\x09\x3d\x6f\x92\xcc\x9a\xc5\x25\xa6\x8e\x8d\x15\x73\x9a\x6e\x67\x78\x8c\xeb\x6b\x68\x55\xe0\xa5\x85\x5c\xc7\xf3\x67\x06\x6d\xf8\x02\xd2\x92\x2f\x0e\x01\x4d\xcb\x28\x02\x58\x72\xa6\xb2\x92\x82\xa8\xcb\x8a\xa1\x18\x4a\xb3\xc1\x7a\xa2\x2d\xbc\x75\x8c\x4e\x3c\x53\x72\xf5\x0b\x36\x31\xd6\xe8\x7f\x2c\x4a\x5e\x05\xd8\x24\x28\xe4\x71\x55\xd2\x25\xfc\xbf\x57\xbf\xbe\xe1\x33\x1e\x5f\x80\x4d\x37\xa3\x76\xe2\xd7\xce\xf4\xda\xa6\x5e\x22\x5d\x2b\x87\x42\xe9\x27\x4a\x11\x0a\x9f\x82\x14\x37\x3d\x7d\x65\xc5\x59\xff\xdf\x9a\xd2\x9c\xb8\x97\xa2\x92\xa6\x68\xdb\x68\x9b\xb6\xf1\x56\xa6\x3e\xf8\x4c\xa4\xe7\x19\x6a\x6a\x67\x3d\x55\x06\xc5\xff\x77\x3b\x8b\xba\xb6\x9c\x28\x0f\x6c\x36\xec\xc3\x62\x80\x7e\x96\x26\xd8\xc9\x2e\xa4\xef\x97\x92\x6f\x64\x64\x95\x6e\x3c\xd3\x9a\x6a\x9e\x87\xc6\xae\x6c\x78\xa1\x90\xcd\x84\x7c\x57\x25\x95\xf6\x0b\xd1\x37\x61\xeb\x41\x7e\xc8\x3b\xe2\xef\x04\xb9\xc0\x71\x69\x67\x61\xe7\xc4\x83\xd4\xe7\xa8\xc8\x26\x5d\xc6\x86\x6b\x9c\x50\x49\x03\x0d\x25\x7c\x8b\x0e\x1a\x4a\x63\xa5\xdb\x86\xb2\xf3\xfa\xa1\x4e\x87\xff\xb0\x0c\xf4\x94\x4d\x10\x1f\xf3\x94\x36\x9e\x1e\x9e\xb2\x4b\xc9\x7b\xca\x91\x65\xe8\xad\x68\x4f\x2e\x4e\xe5\x46\x21\x4b\x27\x73\xa3\x21\x5c\x93\x1d\x76\x0d\xca\xb7\x6a\x16\x18\x9e\xcc\x72\x02\xc5\x4f\xb5\x9c\x03\x4c\xf7\xf8\xce\xae\xa0\xf6\x23\x1d\x25\xb6\xc6\x79\x86\x89\xad\x36\x9f\x8e\xdd\xd0\x11\xe6\xd3\x37\x45\x03\x9d\x28\xda\x39\xb5\x2e\xb0\xcf\x93\x7a\xec\xc0\x0e\x8b\xbc\x71\xb2\x4e\xb0\xa3\x3d\xed\x3d\x3a\x47\x99\x5a\x57\x68\xf5\x6c\xd1\x9b\x64\xa8\x83\x05\xdf\xea\xc3\xfc\x54\x0e\x36\xcc\xbc\x3a\xb8\x9c\x66\xe9\x93\x4e\x90\x48\xcf\x85\x92\xa7\xf5\xb7\x58\x14\x9f\x65\x70\x03\x78\xef\x71\xbb\x3e\x4b\x90\xf4\x57\xe3\x80\xa8\x2e\x7a\xa3\xb6\x76\x79\x22\x8d\x47\x43\xeb\x70\x42\x3d\x67\xfc\x8e\xf8\xfd\x19\x5d\x58\xda\xe8\x7f\xb4\xb3\xc0\xf1\xc9\x3b\x3a\xf4\x1f\xfe\xa2\xb7\x3d\xfa\x9d\x41\x7b\xa6\xea\xe6\x78\x5d\x7c\xf0\xf9\x6f\x6b\x2b\x5c\xc4\xbc\xad\xa1\x8e\xec\xd5\x94\x5f\xc3\x32\xfb\x41\xbb\x68\x87\x0b\xd1\x1d\x53\x89\x7d\x2a\x70\xab\xe1\xa4\x52\x68\x9e\x3d\x92\xf8\xa4\x62\xfc\x4a\x0c\x01\x4b\x19\x59\x0a\x57\x62\x66\xb7\x94\xb6\xf7\x3c\xdb\xd7\x36\x9b\x9d\xce\x69\xb7\x10\xed\x33\x68\x2f\x71\x10\xf6\xcb\x17\x94\x42\x2b\x99\x9c\xdd\x85\xdb\x47\x6d\x18\x75\xe0\xdb\x19\x88\x48\x9e\xad\x4f\x7f\xaf\xf5\x7f\xf4\x93\x64\xc5\x14\x15\xd6\x74\x8a\xdb\xb4\x96\xf2\xdb\xfa\x89\x1d\xa9\x0a\xc5\x13\xdd\x1b\xae\x6f\x07\xf7\xe5\x77\x12\x75\x4f\x64\x74\xdd\xb6\xf7\xf0\x3b\xfe\x00\x64\xc7\x96\x76\xdc\x24\xe1\x75\x84\x7f\x03\x00\x00\xff\xff\xb2\x5b\x9f\xd4\x54\x16\x00\x00"

func switchboardSetup_royalty_accountCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardSetup_royalty_accountCdc,
		"switchboard/setup_royalty_account.cdc",
	)
}

func switchboardSetup_royalty_accountCdc() (*asset, error) {
	bytes, err := switchboardSetup_royalty_accountCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/setup_royalty_account.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd2, 0x9, 0xe, 0x8a, 0xe9, 0x2d, 0x8e, 0x9a, 0xf8, 0xf0, 0x94, 0xfe, 0x75, 0xce, 0xf9, 0xd5, 0xde, 0x78, 0x41, 0xdc, 0x69, 0x46, 0xd5, 0xaf, 0xa, 0x87, 0x60, 0x4a, 0xa1, 0xc4, 0x18, 0xf2}}
	return a, nil
}

var _switchboardSetup_royalty_account_by_pathsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x58\x4d\x6f\xe3\x36\x10\xbd\xfb\x57\xbc\xe6\x90\xca\x40\x6a\xdf\x8d\x24\xdb\x34\x6d\x16\xbd\x14\xc1\x26\xdb\x1e\x16\x39\xd0\xd2\xc8\x22\x22\x93\x02\x39\x8a\xd7\x08\xf2\xdf\x0b\x92\x92\x2c\x7f\x28\x96\xbd\x6e\xa3\x4b\x62\x91\x33\x9c\x8f\xf7\x9e\xa4\x91\xf3\x42\x1b\xc6\xd9\x5d\xa9\x66\x72\x9a\xd3\xa3\x7e\x26\x75\x36\xd8\x79\xfb\x61\x21\x39\xce\xa6\x5a\x98\xa4\xb5\x23\xd7\x8b\x4d\x23\x29\xb8\xba\x35\x18\x8c\xc7\x78\xcc\xa4\x05\x1b\xa1\xac\x88\x59\x6a\x05\x69\x21\xc0\x34\x2f\x72\xc1\x84\x54\x1b\xf7\xb3\xb5\xce\x99\x60\xc4\xba\xcc\x13\x4c\x09\xa5\xa5\x04\xd3\x25\x9c\x2b\xa1\x96\x5a\x11\xd2\x32\xcf\x97\xb0\xc4\x65\x01\xa1\x20\xe2\x58\x97\x8a\xbd\x27\x43\x31\xc9\x17\xa9\x66\x98\x6a\xce\xe0\xc2\x83\x50\x09\xbe\x3e\xfc\x7e\x0b\x76\x51\x59\x08\x06\x67\x04\x2b\xe6\xe4\x9c\x16\xe5\x34\x97\x31\x0a\xc1\x19\x22\xe7\x43\x2a\xcb\x42\xc5\xe4\x77\x19\xbd\x14\x39\x4b\xb2\x18\x87\x8d\xe3\xcf\xa4\xc8\xc8\xf8\xee\xf1\x8b\x3f\x8b\x8c\x37\x1d\x3a\x57\x5f\xad\x3b\xd9\x99\x89\x24\xf9\x8b\x16\x7f\x8b\x32\xe7\x7f\x8c\x28\x0a\x32\xf6\xb7\xe5\xbd\x3b\xc2\xae\xca\x88\x39\x71\xa6\x13\x88\x3c\xd7\x0b\x5b\x67\xc7\xda\xe5\xec\xdc\xc5\xa2\x10\x53\x99\x4b\x5e\x62\x51\x39\x81\x2d\xe3\x0c\xc2\xc2\x57\xf8\x4e\x9b\x85\x30\x89\xbb\xef\x82\x26\x91\x40\xa7\xe1\xfc\x98\x4b\x91\x87\x8c\xf1\xe2\xc2\x18\x0d\xda\x35\x8e\x44\x92\x18\xb2\x76\x82\x9b\xf0\xcf\x10\xaf\x83\x01\x00\xe4\xc4\xc1\xc0\x45\x6b\x27\xf8\x76\xef\xd3\x76\xbf\x9e\xd6\x37\x3c\x2e\x0b\x72\x1b\xdc\xdf\x27\xb7\xd2\x2c\xb7\x72\xfc\x42\xe9\x04\x38\xef\x42\xd2\xa8\xf5\x7f\x38\xbf\x30\x54\x08\x43\x91\x95\x33\x45\x66\x82\x9b\x92\xb3\x9b\xd0\xe1\x26\x46\x77\x8d\xc7\xb8\x0f\x5b\x7d\xc2\xae\x07\xd6\xb7\x9a\x5d\x58\x10\xc6\x88\xa5\xc5\x42\x72\xe6\xd7\x77\x22\x21\x11\x2c\x1a\x87\x96\xf2\x74\xb4\xca\x1c\x57\xf8\xf6\xd4\xb5\x38\x72\xdd\x50\x49\x54\x63\x22\xad\x69\x50\x63\x62\xb8\xcf\xb2\x61\xc9\xc8\x83\xa4\xb6\xbb\x2f\xa7\xf7\x1e\x4d\xdb\xe6\xbe\xdc\x5d\x51\xf9\xc5\xda\xb7\xfb\x71\xf9\x6b\x43\xcd\x70\xc2\x75\x34\xec\xf4\xba\x61\xb8\x1e\x9a\x37\x6c\x97\xfd\x36\xa3\xf8\x19\xb2\x06\x5a\x20\x9f\xc8\x0d\x89\x64\x89\x4c\x38\x76\xfb\x6a\x7b\xeb\xc6\x50\xa6\x08\x2d\x1d\x4d\xb5\x31\x7a\x71\x79\xbe\x15\x60\x6a\xf4\x7c\x82\xb1\x65\x6d\xc4\x8c\x56\x45\xf5\xcb\x43\x5c\x5d\x41\xc9\x1c\xaf\x8d\xcb\x2a\x9e\x3f\x53\x28\xcd\x17\x88\x0d\x39\x41\x11\x50\xb4\x68\x45\x00\x43\x56\x97\x26\x26\xdf\xfe\xa2\x64\x48\x86\x54\xac\x51\x1d\xb4\xe6\xaf\x8a\xd1\x8a\x17\x8a\x2e\x7f\xc1\x2a\xc6\xe0\xfd\x8f\x79\xc1\x4b\xef\x36\x6a\xca\x37\x41\x67\xc1\x2f\xc0\xba\x3b\xa3\xe6\xe0\xb7\xce\xf2\x9a\x5a\x63\x5a\x5a\x20\x2d\x72\xa9\x9e\x29\x81\x17\x4b\x82\x73\xbb\xda\xe9\x98\xd0\xae\xfa\x4f\x55\x4a\x33\xe2\xdb\xc6\xc9\xe5\xf9\xeb\x1a\x25\x47\x35\x00\xdf\xae\xfb\x80\xfa\x04\xd7\x28\x76\x79\x46\xc3\xed\x7e\xca\x14\x92\x7f\xb6\x1b\x4d\xad\x64\xba\x55\x07\xd6\xab\xec\x7d\x33\x40\xdf\x0b\xed\x25\x78\xd3\xa5\xdb\x97\x90\x5b\x64\xa4\xa5\xaa\x9f\x33\x46\x97\xb3\x20\x0f\x5d\xd5\x70\x40\x21\x93\x8a\x78\x27\x4a\x4a\xe5\x1a\xd1\xb7\x60\x95\x91\x33\xd9\x01\xfe\x4e\x27\x17\x38\xae\xec\x2c\xcc\x8c\xb8\x17\xfa\x0e\x64\xb7\x97\xd0\xbd\xec\xde\x54\x91\xc0\xee\x8d\xdb\x0f\x21\x36\xaf\x79\x87\x11\x7c\x15\xc4\x8f\x11\xbc\x89\xa7\x07\xc1\xb7\x85\xf1\xd8\xe6\x78\x5d\x78\xa7\x16\xa7\x92\x06\x5f\xa5\x93\x49\xc3\x21\xb9\xee\x7b\xc2\x9d\x8c\xff\x3e\xc5\x0f\xe5\x7f\xdf\x67\x39\xb6\x44\x60\x13\x50\xef\x7b\x3a\x0a\x6c\xb5\x0c\xf4\x03\xdb\x81\x4a\xd0\x7a\x7b\x6b\x58\xf8\x9e\x26\xf4\x78\x0b\xdc\x0f\xb2\x5a\x49\x3a\x9d\x1d\xad\x29\xbb\xd2\x39\x4a\x54\xba\x42\x0b\xa7\xb5\xee\x44\x87\x2a\x88\xd7\x8d\x3e\x99\x9f\x4a\x41\x0e\x13\x8f\x8e\x5c\x4e\xd3\xfa\xa8\xd3\x49\x8b\x28\xd5\xb7\xca\xe9\xf4\xa5\x0d\x8a\x8f\x12\x98\x03\xf2\x7e\x47\x6d\xfa\xb4\x20\xea\x8f\xc6\x03\xa2\xba\xe8\xed\xb5\x91\xab\x13\x61\xbc\x65\x1a\xc2\xf1\x7c\x4e\x79\x07\xf8\xa5\xff\x6c\xa4\x15\xfe\x07\x1b\x0d\x6e\x7f\xba\xb7\xa6\x06\xfb\x9f\xa8\xcd\x8e\x7e\xdf\xc1\x3d\x4b\x75\x7d\x3c\x2e\x7e\xf0\xfa\x7f\xb9\xe5\x27\x39\xdb\x1c\xea\xa8\x5e\x48\xf9\x2d\x8c\x02\x32\xda\xf2\xb6\x9f\x88\xf6\x18\x26\xf6\x61\xe0\xda\xc2\x49\xa1\x50\x5f\xef\x40\xe2\x83\xc8\xf8\x99\x18\x02\x86\x52\x32\xe4\x67\x6a\x7a\x93\x4a\xeb\x43\x89\xf5\xd1\x11\xae\xfe\x9b\x57\x88\xe6\x3a\xe8\x5d\x62\xaf\xdb\x4f\x9f\x50\x08\x25\xe3\xe8\xec\xd6\x8f\x2f\x95\x66\x84\xc0\xd7\x2b\xd0\x4a\xf2\xac\x9a\xad\x54\xaf\x5e\xf4\x9d\xe2\x92\x69\x35\xe8\x1a\x8f\x71\x93\x04\x24\xaf\x09\xd5\x76\x1d\x51\x7a\xf6\x74\x4e\x1e\x07\x9d\x55\x1e\x75\xda\x44\x45\x18\x02\x6e\x0c\xb1\x0e\x7d\x67\x09\x83\xc2\x8d\xa1\xd3\x05\x9a\x19\x64\xf5\xcf\xaa\x14\x6f\x03\xfc\x1b\x00\x00\xff\xff\x52\xa1\x56\xee\x9b\x16\x00\x00"

func switchboardSetup_royalty_account_by_pathsCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardSetup_royalty_account_by_pathsCdc,
		"switchboard/setup_royalty_account_by_paths.cdc",
	)
}

func switchboardSetup_royalty_account_by_pathsCdc() (*asset, error) {
	bytes, err := switchboardSetup_royalty_account_by_pathsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/setup_royalty_account_by_paths.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa1, 0x53, 0x31, 0x0, 0x3f, 0xea, 0x51, 0x37, 0x84, 0x1a, 0x32, 0x24, 0x0, 0x4, 0x77, 0x73, 0xaa, 0x14, 0x27, 0xf4, 0x47, 0x50, 0x73, 0x22, 0xe9, 0x7f, 0x78, 0xb7, 0xc9, 0x1b, 0xc, 0x1b}}
	return a, nil
}

var _switchboardTransfer_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\x41\x6f\xeb\x36\x0c\x3e\x37\xbf\xe2\x6b\x0e\xad\x03\x64\xce\x65\xd8\x21\x68\x5a\x74\xed\xb2\xd3\x80\xa2\xc8\xb2\x33\x2d\x33\xb1\x36\x47\x32\x24\x3a\x6e\x50\xf4\xbf\x0f\x92\xed\xc4\x49\xdf\xc3\xeb\xeb\xa1\x8e\x28\x92\x1f\x3f\xf2\xa3\xf4\xae\xb2\x4e\x30\x5e\xd6\x66\xab\xb3\x92\x57\xf6\x3f\x36\xe3\x51\x6f\xfe\xe3\x8d\x76\xd5\x27\xeb\x99\xf3\x5f\x2c\x94\x93\xd0\x5a\x73\xe3\xc7\xa3\xd1\x6c\x36\xc3\xaa\xd0\x1e\xe2\xc8\x78\x52\xa2\xad\x81\xf6\x20\x08\xef\xaa\x92\x84\xb1\xb1\x2e\x1c\x07\xf7\x52\x90\x40\xd9\xba\xcc\x91\x31\x6a\xcf\x39\xb2\x03\xc8\x1c\xac\x61\x88\x85\x67\x93\x43\x02\x9c\x0f\x47\x32\x56\x0a\x76\x20\xa5\x6c\x6d\x24\x62\x4a\xe1\x6c\xbd\x2d\x40\xf0\x8d\x16\x55\x64\x96\x5c\x3e\x05\x79\x94\xd6\x6c\xc3\x57\x0a\x3e\xa0\xa0\x3d\xc3\xb3\xa0\xae\x82\x41\xbb\xa1\x3b\xc8\xe4\xad\x07\xe5\x79\xb8\x46\xe5\x6c\xc5\x0e\x8a\x2a\xca\x74\xa9\xe5\x10\xe0\x75\x44\xec\x98\x46\x5f\xc7\xde\xc3\x6e\x62\x88\x63\xc5\x7a\x7f\xaa\x6e\x1a\xad\xb4\x0b\xbf\x43\x74\xe4\xbd\x09\xf7\xa6\xc5\x78\xa9\xb3\x52\xab\x17\x92\x22\x76\x26\x98\xb6\x6c\xd8\x69\x85\xe5\xea\x94\xae\xd1\x65\x89\x8c\x3b\xb2\x8c\x8a\x1c\xed\x58\xd8\xf9\x58\xcd\xa0\x9d\x89\xd8\x39\x1e\xdb\xaa\xa6\x1d\xf2\x1c\x7f\x2f\xf5\xdb\x6f\xbf\x4e\x8f\x09\x03\xe0\x7c\x00\x3e\xc1\xfb\x68\x04\x00\x1d\x2d\xaf\xb7\x86\xdd\xad\xc7\x9e\xea\x32\x56\xde\x68\x29\x72\x47\x0d\x36\xce\xee\xa2\x6b\xc9\x02\x6f\x6b\xa7\x78\x1d\x9c\xe6\xa0\x5a\x8a\xe4\x4c\x1f\xe9\x3f\x5d\xd4\x04\x37\x43\x39\xa5\x31\xa2\x45\xac\x1c\x57\xe4\x38\x69\x21\xbb\x2c\xbf\x5b\xe7\x6c\xb3\xa6\xb2\xe6\x09\x6e\x1e\xdb\x66\x1e\x8b\xec\xd1\x63\x71\xcf\x24\x84\x05\xce\xd2\x3b\xf6\xb6\xdc\xf3\x93\x35\xe2\x48\x49\x90\x67\x12\x6c\xa1\xd8\xd5\xa1\xe2\x39\x8c\x2e\xa7\xd8\x6b\x6e\xda\x63\xf8\x7f\xf7\x7d\x69\xa7\xcb\xd5\xba\xc7\xba\x4f\x26\x13\x90\xbf\xc6\xd7\xdc\x1f\x8e\x15\x87\xbf\x87\x07\x54\x64\xb4\x4a\xc6\x4f\x51\xf0\xc6\x0a\xb6\x3d\x13\x84\x04\xb1\xa8\xa3\x16\x54\xc7\x60\x3c\x39\x31\x9f\xcd\xf0\x27\x0b\x08\x8e\x37\xec\xd8\xa8\xb8\x25\x32\x9c\x9a\x17\xeb\x38\x6f\xb3\x1e\xe3\x3c\x97\x9b\x74\x30\x30\x2c\xba\x80\x34\xb8\xd3\x96\xd3\x2c\x76\xfd\xee\x67\xe7\x78\x9f\x04\x4d\xcc\x4f\xe3\xe8\x13\x46\x65\x8d\xae\xae\xae\xbe\x45\xbb\x05\xfb\x4c\xc2\x36\x2d\x87\x98\xfa\xba\x27\xfe\xd1\x7e\xf8\x8d\x55\x2d\x3c\x14\x42\xd7\x8e\x6e\xfb\x74\xa5\xd9\xc8\xad\x47\x15\xb5\xdd\xef\x21\x6c\xf6\x2f\x2b\x39\x53\xcf\xd1\x1b\x8b\x30\x83\x4e\x64\x89\xd8\x2f\xf5\x7a\x88\xf5\xda\x6d\xd5\x65\xfa\x68\x7c\xe5\x0d\x16\x27\xf7\xf4\xf8\x9c\x68\xf6\x7d\xc7\x6f\xde\xcf\xdb\xdd\x27\xfc\xb8\x4f\x86\x1b\xfb\xe3\x5e\x76\xcf\xc5\x59\xb5\x83\x37\xee\xfa\x42\x47\xcf\x5c\x59\xaf\xdb\xe6\xf5\x0b\x6e\xfa\xb7\x56\x9b\x4f\x44\xdd\x25\xd1\x01\xc9\x34\x6f\x93\x75\x62\xb8\xfb\xe5\x52\x6f\x69\x8f\x90\xf4\xaf\x52\xfb\x9d\x9c\x46\xfc\x31\xfa\x3f\x00\x00\xff\xff\x0c\x28\x2d\xa4\x94\x06\x00\x00"

func switchboardTransfer_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_switchboardTransfer_tokensCdc,
		"switchboard/transfer_tokens.cdc",
	)
}

func switchboardTransfer_tokensCdc() (*asset, error) {
	bytes, err := switchboardTransfer_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "switchboard/transfer_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x15, 0xf, 0xbc, 0x92, 0xd5, 0x70, 0x8, 0x33, 0xb2, 0xec, 0xf7, 0x37, 0xf9, 0x9d, 0x78, 0xbf, 0x5c, 0x5, 0x1a, 0xff, 0xe5, 0x94, 0x16, 0xd6, 0xdf, 0x0, 0xed, 0x36, 0xbb, 0xe8, 0x89, 0x83}}
	return a, nil
}

var _transfer_many_accountsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x55\x4d\x4f\xe3\x48\x10\x3d\xe3\x5f\x51\xe4\x00\xb6\xb4\x38\x97\xd5\x1e\xac\x00\x62\x61\xd9\x13\xd2\x28\xca\x30\x87\xd1\x48\x54\xec\x72\xdc\x83\xd3\x6d\x75\x97\x13\x10\xca\x7f\x1f\xf5\x57\x70\x3e\x06\x31\x7d\x48\x94\x72\x75\xd5\x7b\xaf\x5e\xc5\x62\xd9\x29\xcd\x30\xba\xef\xe5\x42\xcc\x5b\x9a\xa9\x67\x92\xa3\x24\x86\xff\x7b\xc1\x65\x77\x10\xdd\x49\x7e\x20\xc6\x0a\x19\x1f\x05\xad\xcd\x28\x49\xc6\xe3\x31\xcc\x34\x4a\x53\x93\x36\xc0\x36\xc5\x7e\x01\x42\x2b\x0c\x83\xaa\x01\xab\x4a\x93\x31\x64\xc0\x74\x54\x8a\x5a\x50\x05\x42\x02\x37\x04\x4f\xe1\xd9\xcd\x52\xf5\x92\x1f\xb0\x7b\x82\x0e\x35\x2e\x89\x49\x27\x09\xdb\xb2\x58\xb2\x50\x32\xdd\x4f\x2c\xe0\xed\xc6\x87\x0a\xf8\x7a\x2f\x5e\xfe\xf9\x7b\x93\xc1\x5b\x92\x00\x00\x58\x48\xf7\xb3\x47\xec\x5b\xbe\x43\x46\x58\x06\xc8\xb0\x12\xb4\x86\x5a\x69\xd7\xdb\x41\x85\x39\x09\xb9\x80\xde\x50\xe5\xae\xb6\xc4\xb0\x8a\x17\x0b\xf8\x3d\xf3\x7c\xd0\xe0\xbd\xeb\xac\x21\x70\x61\xd0\x64\x54\xaf\x4b\x02\x6e\x90\xa1\x51\x6d\x65\xde\xbb\x1a\x1f\x45\x4d\xa1\x3f\x07\x01\xf5\x3e\x8c\x29\xd5\x05\x60\xcf\x4d\xba\x03\x25\xff\x26\xb8\xa9\x34\xae\x33\x38\x1b\xce\x2c\x77\xcd\x3d\x9e\x4e\x53\x87\x9a\x52\x23\x16\x92\x74\xa8\xf2\xaf\xd2\x5a\xad\x1f\xb1\xed\x29\x83\xb3\x9b\xb2\xb4\x72\x5a\xe1\x20\x1c\x43\x6d\x9d\x6f\x15\x80\x4b\xd8\x29\x6f\x59\xb5\x2b\xba\x55\x92\x35\x96\x6c\x95\x48\x23\xd3\xd9\x6b\x47\x05\x48\xd1\xfe\xe5\x74\xf6\x3f\xed\xe7\xe4\x73\x2a\x5e\xa5\x59\x06\x68\x4e\x3f\x29\xfa\xf5\x16\xb2\x3d\xd7\xd7\xd0\xa1\x14\x65\x3a\xb2\x89\x53\x0f\x53\x43\xa5\xc8\x80\x54\x7e\x1c\xed\x8a\x76\x6c\x61\x51\x8e\xb2\x64\x5b\x67\x3c\x86\xff\x89\x01\x41\x53\x4d\x9a\xa4\x1d\x9e\x72\x43\xf3\x12\x9e\x1b\x30\xac\x34\x55\x7e\x34\x47\x24\x9b\x52\x0d\x97\x21\x3b\xb7\xb9\xb8\xa0\x7c\xee\x24\x9f\xfc\xe9\x10\xaf\xd2\x5a\xab\x65\xb1\x37\x90\x58\xf5\x0b\x72\x93\x25\x27\x27\x27\xef\xc4\x6f\x55\xdf\x56\x8e\xac\xef\x78\x48\x43\xad\x3d\x0b\x57\xff\x74\x94\x39\x06\x1b\x2f\x00\xbd\x50\xd9\x33\xc5\x15\xb2\xc7\x2e\x4a\x58\x3b\xbb\xaf\xfb\x1b\x98\x3f\xd3\xab\x19\xe6\x07\x0d\x23\xab\x68\x75\x4b\xe3\x13\x2a\x46\xdb\x1b\x92\xec\x57\x68\x72\xb1\x2b\x6d\xbe\x0e\x95\x53\x74\x18\x8a\x03\x48\xdf\x43\xe0\xc7\x69\x76\x00\xcb\x8e\xd6\xa2\xd0\x54\x8a\x4e\x90\xe4\x73\x03\x5d\x3f\x6f\x45\x09\xe8\xd7\x00\xd4\xfc\x27\x95\x87\x88\xb6\x37\xe0\x12\x16\xc4\x61\x69\xe2\x3f\xd2\xf1\x4e\x47\x4c\x34\x6c\x3c\xa5\x92\xc4\x8a\xf4\xb1\x5e\xee\x81\x77\xd2\xf6\x4a\x5e\x62\x87\x73\xd1\x0a\x16\x64\xa2\xa3\xce\xde\x76\xed\x14\x8b\x6e\xae\xd2\x3d\xd3\xc4\xaa\xde\x35\xb0\x77\x3e\xb4\x90\xbf\xf8\x31\x1b\x37\xae\xd1\xa1\x10\x77\xd4\x29\x23\xbc\xec\x71\x76\x32\xda\x22\xbc\x01\x86\x75\xf4\x31\x55\x06\x8a\xe4\x95\x2f\x18\x36\x63\x72\xb1\xf5\xca\xa0\xf7\x26\xb8\x7a\x93\xfc\x0a\x00\x00\xff\xff\xab\x22\xcc\xb5\xec\x06\x00\x00"

func transfer_many_accountsCdcBytes() ([]byte, error) {
	return bindataRead(
		_transfer_many_accountsCdc,
		"transfer_many_accounts.cdc",
	)
}

func transfer_many_accountsCdc() (*asset, error) {
	bytes, err := transfer_many_accountsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transfer_many_accounts.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x1d, 0x55, 0x99, 0x5b, 0x8, 0xa8, 0x39, 0xe2, 0x24, 0x45, 0x26, 0xaa, 0x87, 0xf6, 0x8, 0x46, 0xc, 0x81, 0x61, 0x1a, 0x9c, 0x6, 0x7e, 0xbe, 0x37, 0x6b, 0x4, 0x9, 0x55, 0x71, 0xd8, 0xc5}}
	return a, nil
}

var _transfer_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\xc1\x6e\xeb\x36\x10\xbc\xeb\x2b\xe6\xf9\x90\x27\x03\xef\x49\x97\xa2\x07\xc3\x49\x9a\x26\x4d\x4f\x05\x8a\xc0\x4d\xcf\x2b\x69\x6d\xb1\x95\x49\x81\x5c\xd9\x09\x82\xfc\x7b\x41\x52\x54\x64\x07\x69\x53\x1d\x12\x70\xbd\xdc\x99\x9d\xd9\x65\x59\x62\xd3\x2a\x07\xb1\xa4\x1d\xd5\xa2\x8c\x86\x72\x20\x08\xef\xfb\x8e\x84\xb1\x35\xd6\x1f\x67\xbf\x4b\x4b\x92\x95\x25\x6a\x33\x74\x0d\x2a\xc6\xe0\xb8\x41\xf5\x0c\xd2\xcf\x46\x33\xc4\xc0\xb1\x6e\x20\xe6\x6f\xd6\xce\x1f\x49\x1b\x69\xd9\x82\xea\xda\x0c\x3a\x5c\xf6\x45\xd0\x92\x43\xc5\xac\xe1\x58\x30\xf4\x3e\xd5\x72\xcd\xea\xc0\xe3\xe5\x22\x2b\xcb\x2c\x70\x64\x1c\x95\xb4\x8d\xa5\x23\x68\xef\x8b\x80\x3c\x44\xcb\xa9\x28\xb6\xd6\xec\xb1\x63\xb9\x79\x03\x39\x26\x86\x3e\xaf\x27\x4b\x7b\x16\xb6\x81\x92\x8f\xcc\x9a\xca\x32\xb5\xef\x8d\x15\x2c\xee\x07\xbd\x53\x55\xc7\x1b\x4f\x60\x31\x85\x7f\x79\xa2\x7d\xff\x2e\x7a\x92\xfc\x1b\x0b\x35\x24\xf4\xa8\xf8\xe8\x16\x59\x36\x2b\x9f\x47\xce\x2b\xfc\x71\xaf\x9e\x7e\xfc\xe1\x1b\xc4\xac\x70\xd3\x34\x96\x9d\x5b\xe2\x25\xcb\x00\xa0\x2c\x4b\xdc\x6f\x1e\x69\xe8\xe4\x8e\x84\xb0\x1f\xeb\xe1\xa0\xf8\x18\x7c\x08\xa4\x3d\x14\x2a\x56\x7a\x17\x84\x0f\x57\x3b\x16\x1c\xd2\xc5\x15\x3e\xa6\x55\xcc\x00\x12\x6a\x50\x37\x44\x61\xd9\x99\xc1\xd6\x3c\xda\x63\xba\xc6\xbd\x81\xba\x18\x25\xcb\x23\x7c\x68\x70\xcb\xd6\xce\x58\x38\xd6\x12\x6a\xad\xf0\xd3\xcb\x09\x8f\x22\x84\x5f\x23\x6a\x6f\xb9\x27\xcb\xb9\x53\x3b\xcd\x76\x05\x1a\xa4\xcd\x7f\x36\xd6\x9a\xe3\x23\x75\x03\x2f\x71\x31\xfa\x38\xc9\xe3\x3f\xc7\xdd\xb6\x98\x1a\xc5\x25\xe6\xb6\x14\x9e\x7d\x77\xe0\x5b\xa3\xc5\x52\x2d\xbe\xe1\x3c\x75\xb4\x79\xee\x79\x05\xad\xba\x6f\x41\xce\x78\xf4\x7f\xd7\x9f\x13\xeb\x2a\x5f\x2e\x41\xee\xcb\x27\xb5\xbd\x9e\x28\xfb\xef\xfa\x1a\x3d\x69\x55\xe7\x0b\x9f\xf8\x10\x69\x5a\x34\x86\x1d\xb4\x89\xb2\x77\x07\x3e\x71\xdf\xb3\x5c\x2c\xdf\x5a\x2f\x4b\xfc\xca\x02\x82\xe5\x2d\x5b\xd6\x35\xa7\x31\x8e\x1a\x7e\x75\x70\x62\x2c\x37\x71\x10\xa6\x7b\xd3\x68\x3c\xf0\x16\x97\x63\x72\xe1\x53\x69\xc7\x45\x15\x24\x5f\x07\xf9\x4f\xdd\xfa\x73\x5c\xb7\x25\x2e\x4e\x44\x0e\x0c\xaf\x72\xbf\x6d\xab\x33\x3f\x52\xd5\xdf\x49\xda\xe5\x07\x02\xdc\x86\x95\xf4\x4d\x47\xe8\xf7\xed\x98\x63\xec\x26\x00\x7d\x39\x93\x20\xb1\x4a\x13\x19\x96\xfe\xbf\x45\x08\x3c\xa7\xd1\xc4\xfa\xfb\x24\x49\x91\x9e\x95\x69\x45\xe3\xff\xc8\x7f\x9c\x56\x7e\xe2\x7a\x10\x9e\x4f\xe2\x68\x87\x87\xb6\x5c\xab\x5e\xb1\x96\xaf\x0e\xfd\x50\x75\xaa\x9e\xde\x24\x53\xfd\xc5\xf5\xa9\x17\x53\x36\x2e\x67\xaf\x55\x2e\xe6\x53\x5e\xcf\xb1\x1e\xe2\x53\x69\xcf\xcb\x87\x60\x74\x7b\x4a\x2f\x6a\xea\xa9\x52\x9d\x12\xc5\x2e\xb9\x7e\x71\xb6\xa0\xa9\xe0\xeb\x55\x7e\x66\x6c\xaa\xfa\x3f\x9d\x8d\x97\xfe\xbd\x8b\xe0\xc8\x99\xcb\x77\xdc\x1b\xa7\xa2\xba\xc9\x1f\x9d\x2c\x57\xfa\x5d\x0d\x7b\xae\xc4\x4c\x85\xa2\x89\xc5\xc6\x89\x5d\x7f\x3f\x9d\x85\xe4\xf3\x6b\xf6\x4f\x00\x00\x00\xff\xff\xdb\x83\x07\xed\x0b\x07\x00\x00"

func transfer_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_transfer_tokensCdc,
		"transfer_tokens.cdc",
	)
}

func transfer_tokensCdc() (*asset, error) {
	bytes, err := transfer_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transfer_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf5, 0x3d, 0x51, 0xbf, 0x1a, 0xd8, 0x34, 0xf, 0x15, 0x63, 0x6a, 0xf2, 0x48, 0x2b, 0x2f, 0xc8, 0x77, 0x7, 0x72, 0x38, 0xf1, 0x0, 0x4b, 0xc9, 0x48, 0xe0, 0x8a, 0x1a, 0x18, 0xd8, 0xb, 0x6c}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"burn_tokens.cdc":                                           burn_tokensCdc,
	"create_forwarder.cdc":                                      create_forwarderCdc,
	"generic_transfer_with_address.cdc":                         generic_transfer_with_addressCdc,
	"generic_transfer_with_paths.cdc":                           generic_transfer_with_pathsCdc,
	"metadata/setup_account_from_address.cdc":                   metadataSetup_account_from_addressCdc,
	"metadata/setup_account_from_vault_reference.cdc":           metadataSetup_account_from_vault_referenceCdc,
	"mint_tokens.cdc":                                           mint_tokensCdc,
	"privateForwarder/create_account_private_forwarder.cdc":     privateforwarderCreate_account_private_forwarderCdc,
	"privateForwarder/create_private_forwarder.cdc":             privateforwarderCreate_private_forwarderCdc,
	"privateForwarder/deploy_forwarder_contract.cdc":            privateforwarderDeploy_forwarder_contractCdc,
	"privateForwarder/setup_and_create_forwarder.cdc":           privateforwarderSetup_and_create_forwarderCdc,
	"privateForwarder/transfer_private_many_accounts.cdc":       privateforwarderTransfer_private_many_accountsCdc,
	"safe_generic_transfer.cdc":                                 safe_generic_transferCdc,
	"scripts/get_balance.cdc":                                   scriptsGet_balanceCdc,
	"scripts/get_supply.cdc":                                    scriptsGet_supplyCdc,
	"scripts/get_supported_vault_types.cdc":                     scriptsGet_supported_vault_typesCdc,
	"scripts/metadata/get_token_metadata.cdc":                   scriptsMetadataGet_token_metadataCdc,
	"scripts/metadata/get_vault_data.cdc":                       scriptsMetadataGet_vault_dataCdc,
	"scripts/metadata/get_vault_display.cdc":                    scriptsMetadataGet_vault_displayCdc,
	"scripts/metadata/get_vault_supply_view.cdc":                scriptsMetadataGet_vault_supply_viewCdc,
	"scripts/switchboard/check_receiver_by_type.cdc":            scriptsSwitchboardCheck_receiver_by_typeCdc,
	"scripts/switchboard/get_vault_types.cdc":                   scriptsSwitchboardGet_vault_typesCdc,
	"scripts/switchboard/get_vault_types_and_address.cdc":       scriptsSwitchboardGet_vault_types_and_addressCdc,
	"scripts/test/example_token_vault_display_strict_equal.cdc": scriptsTestExample_token_vault_display_strict_equalCdc,
	"scripts/tokenForwarder/is_recipient_valid.cdc":             scriptsTokenforwarderIs_recipient_validCdc,
	"setup_account.cdc":                                         setup_accountCdc,
	"switchboard/add_vault_capability.cdc":                      switchboardAdd_vault_capabilityCdc,
	"switchboard/add_vault_wrapper_capability.cdc":              switchboardAdd_vault_wrapper_capabilityCdc,
	"switchboard/batch_add_vault_capabilities.cdc":              switchboardBatch_add_vault_capabilitiesCdc,
	"switchboard/batch_add_vault_wrapper_capabilities.cdc":      switchboardBatch_add_vault_wrapper_capabilitiesCdc,
	"switchboard/remove_vault_capability.cdc":                   switchboardRemove_vault_capabilityCdc,
	"switchboard/safe_transfer_tokens.cdc":                      switchboardSafe_transfer_tokensCdc,
	"switchboard/safe_transfer_tokens_v2.cdc":                   switchboardSafe_transfer_tokens_v2Cdc,
	"switchboard/setup_account.cdc":                             switchboardSetup_accountCdc,
	"switchboard/setup_royalty_account.cdc":                     switchboardSetup_royalty_accountCdc,
	"switchboard/setup_royalty_account_by_paths.cdc":            switchboardSetup_royalty_account_by_pathsCdc,
	"switchboard/transfer_tokens.cdc":                           switchboardTransfer_tokensCdc,
	"transfer_many_accounts.cdc":                                transfer_many_accountsCdc,
	"transfer_tokens.cdc":                                       transfer_tokensCdc,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"burn_tokens.cdc": {burn_tokensCdc, map[string]*bintree{}},
	"create_forwarder.cdc": {create_forwarderCdc, map[string]*bintree{}},
	"generic_transfer_with_address.cdc": {generic_transfer_with_addressCdc, map[string]*bintree{}},
	"generic_transfer_with_paths.cdc": {generic_transfer_with_pathsCdc, map[string]*bintree{}},
	"metadata": {nil, map[string]*bintree{
		"setup_account_from_address.cdc": {metadataSetup_account_from_addressCdc, map[string]*bintree{}},
		"setup_account_from_vault_reference.cdc": {metadataSetup_account_from_vault_referenceCdc, map[string]*bintree{}},
	}},
	"mint_tokens.cdc": {mint_tokensCdc, map[string]*bintree{}},
	"privateForwarder": {nil, map[string]*bintree{
		"create_account_private_forwarder.cdc": {privateforwarderCreate_account_private_forwarderCdc, map[string]*bintree{}},
		"create_private_forwarder.cdc": {privateforwarderCreate_private_forwarderCdc, map[string]*bintree{}},
		"deploy_forwarder_contract.cdc": {privateforwarderDeploy_forwarder_contractCdc, map[string]*bintree{}},
		"setup_and_create_forwarder.cdc": {privateforwarderSetup_and_create_forwarderCdc, map[string]*bintree{}},
		"transfer_private_many_accounts.cdc": {privateforwarderTransfer_private_many_accountsCdc, map[string]*bintree{}},
	}},
	"safe_generic_transfer.cdc": {safe_generic_transferCdc, map[string]*bintree{}},
	"scripts": {nil, map[string]*bintree{
		"get_balance.cdc": {scriptsGet_balanceCdc, map[string]*bintree{}},
		"get_supply.cdc": {scriptsGet_supplyCdc, map[string]*bintree{}},
		"get_supported_vault_types.cdc": {scriptsGet_supported_vault_typesCdc, map[string]*bintree{}},
		"metadata": {nil, map[string]*bintree{
			"get_token_metadata.cdc": {scriptsMetadataGet_token_metadataCdc, map[string]*bintree{}},
			"get_vault_data.cdc": {scriptsMetadataGet_vault_dataCdc, map[string]*bintree{}},
			"get_vault_display.cdc": {scriptsMetadataGet_vault_displayCdc, map[string]*bintree{}},
			"get_vault_supply_view.cdc": {scriptsMetadataGet_vault_supply_viewCdc, map[string]*bintree{}},
		}},
		"switchboard": {nil, map[string]*bintree{
			"check_receiver_by_type.cdc": {scriptsSwitchboardCheck_receiver_by_typeCdc, map[string]*bintree{}},
			"get_vault_types.cdc": {scriptsSwitchboardGet_vault_typesCdc, map[string]*bintree{}},
			"get_vault_types_and_address.cdc": {scriptsSwitchboardGet_vault_types_and_addressCdc, map[string]*bintree{}},
		}},
		"test": {nil, map[string]*bintree{
			"example_token_vault_display_strict_equal.cdc": {scriptsTestExample_token_vault_display_strict_equalCdc, map[string]*bintree{}},
		}},
		"tokenForwarder": {nil, map[string]*bintree{
			"is_recipient_valid.cdc": {scriptsTokenforwarderIs_recipient_validCdc, map[string]*bintree{}},
		}},
	}},
	"setup_account.cdc": {setup_accountCdc, map[string]*bintree{}},
	"switchboard": {nil, map[string]*bintree{
		"add_vault_capability.cdc": {switchboardAdd_vault_capabilityCdc, map[string]*bintree{}},
		"add_vault_wrapper_capability.cdc": {switchboardAdd_vault_wrapper_capabilityCdc, map[string]*bintree{}},
		"batch_add_vault_capabilities.cdc": {switchboardBatch_add_vault_capabilitiesCdc, map[string]*bintree{}},
		"batch_add_vault_wrapper_capabilities.cdc": {switchboardBatch_add_vault_wrapper_capabilitiesCdc, map[string]*bintree{}},
		"remove_vault_capability.cdc": {switchboardRemove_vault_capabilityCdc, map[string]*bintree{}},
		"safe_transfer_tokens.cdc": {switchboardSafe_transfer_tokensCdc, map[string]*bintree{}},
		"safe_transfer_tokens_v2.cdc": {switchboardSafe_transfer_tokens_v2Cdc, map[string]*bintree{}},
		"setup_account.cdc": {switchboardSetup_accountCdc, map[string]*bintree{}},
		"setup_royalty_account.cdc": {switchboardSetup_royalty_accountCdc, map[string]*bintree{}},
		"setup_royalty_account_by_paths.cdc": {switchboardSetup_royalty_account_by_pathsCdc, map[string]*bintree{}},
		"transfer_tokens.cdc": {switchboardTransfer_tokensCdc, map[string]*bintree{}},
	}},
	"transfer_many_accounts.cdc": {transfer_many_accountsCdc, map[string]*bintree{}},
	"transfer_tokens.cdc": {transfer_tokensCdc, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
